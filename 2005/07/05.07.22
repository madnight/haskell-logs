00:19:02 --- topic: '["logs: http://meme.b9.com/cview.html?channel=haskell&date=today","http://www.haskell.org/learning.html","http://www.haskell.org/tmrwiki/IssueFour","We put the Funk in Funktion"]'
00:19:02 --- topic: set by shapr on [Fri Jul 15 13:30:52 2005]
00:19:02 --- names: list (clog Thu18118 Enveigler iblechbot ex_nor Cale sbeyer bloves ski masm dblhelix Korollary Lunar^ hyrax42 seidan SamB cognominal metaperl ozone ikegami-- Nioate wilx rafl_ Raziel Joachim ape jwp perspectival astrolabe dmiles_afk _metaperl qbert batdog|gone vivek Philippa mauke Khisanth _shawn ^buggler1 megaman neilc stefanw noj calvin_ tic shapr zamez cventers_ aheller lambdabot dons Nomius thingie24 skylan mr_ank Lemmih dudley chucky liyang)
00:19:02 --- names: list (sjanssen mornfall themaximus juhp ibid yosemite KrispyKringle kosmikus kaol borism vegai cpage eno-away Number17 isomer_ reffie xerox cmeme isomer lisppaste2 integral gdsx resiak keverets smott tsiar Matt-W spinclad vincenz djw cathper ingy asmodai edwinb earthy autrijus kpk seafood lament emu tromp gzl creichen jp-autark chaven jesse99 pejo geoffb jiing Spark Igloo tuomov mattam norpan musasabi mflux_ scw_ wagle thedward kolmodin johs)
00:19:02 --- names: list (shrimpx djlogan frederik jlouis ksandstr dcoutts_ sorje michaelw)
01:32:36 <Thu18118> hmm to which paper/work should i refer for lattice theory? im not going to explain that myself
01:37:06 <ibid> Thu18118: which lattice theory?  if you mean scott domains, scott's papers are a good starting point.  i think i also saw a tutorial paper on it somewhere, go search google scholar :)
01:38:05 <Thu18118> which lattice theory...hmm....in the analysis framework i use the analysis values are values in a lattice...not sure what kind though
01:39:20 <Thu18118> i think its a join semi lattice
01:46:39 <ibid> ok, can't give you a reference then
01:46:59 <Thu18118> hmm complete lattices with ascending chain conditions i mean
01:47:00 <Thu18118> hehe
01:50:19 <ibid> but the google scholar advice holds :)
01:50:31 <ibid> it sometimes finds interesting papers
02:07:17 <jyp> @seen dons
02:07:19 <lambdabot> dons is in #haskell. Last spoke 1 hour, 45 minutes and 59 seconds
02:07:19 <lambdabot> ago.
02:11:28 <Oeje1> Thu18118: Are you reading the Nielson program analysis book?
02:15:07 <Thu18118> Oeje1, ive read it before for a class on my university, but now im actually implementing embellished monotone frameworks to do program analysis
02:16:33 <Oeje1> Thu18118: We have that class too, with Nielson as the teacher. :-)  What are you implementing the framework in and how is it coming along?
02:18:09 <Thu18118> well the current implementation is pretty naive i think because i just have a datatype for monotone frameworks, lattices and then some convenience functions that will build frameworks for you and a worklist algorithm ofcourse.
02:18:22 <Thu18118> functions to lift a complete monotone framework to an embellished one
02:18:24 <Thu18118> that kind of things
02:18:44 <Thu18118> i have it working for live variable analysis and some more specific analysis for my project.
02:19:13 <Thu18118> i use UUAG to derive the transfer functions
02:20:06 <Thu18118> so new analysis is a new attribute holding the transfer functions
02:22:34 <Thu18118> i can image it may have been more beautifull to try to fit both a lattice and a monotoneframework into a class, but hey... :D
02:41:26 <earthy> damn, there I was almost lured into the delightful illusion that it is but thursday and I still have some time...
02:45:46 <Thu18118> hehehe
02:46:15 <Thu18118> yeah, sorry i moved to ion so normally i would start a script that would start xchat with a random name pasted onto the day.....
02:46:20 <Thu18118> well not today :)
02:49:44 <earthy> :P
02:51:29 <Thu18118> boy did i find the perfect radio station
02:51:37 <Thu18118> it plays 100% music i like
03:07:53 <earthy> Thu18118: I shudder to ask. what radiostation? :)
03:55:01 <Thu18118> earthy, playing arists from psychopathic records + kottonmout kings 24/7 :D
03:55:21 <Thu18118> wtf, again in london :S
03:57:43 <tomdavie> indeed
03:58:07 <tomdavie> the BBC had an eyewitness saying that the man who was shot had tried to set off a bomb
03:58:23 <Thu18118> shot 5 times from upclose
03:58:36 <Thu18118> bet its crawling of undercovers at those stations
03:58:43 <tomdavie> probably
03:58:52 <Thu18118> not taking any risk
03:59:08 <tomdavie> well... it would have gone off if it had worked
03:59:20 <tomdavie> the bomb was evidently set off while the train was moving
03:59:25 <tomdavie> and failed to go off
04:00:46 <tomdavie> I don't get why they shot him
04:01:00 <tomdavie> by all reports he was already on the ground with them on top of him
04:02:04 <Philippa_> possibly concerned he could still set it off?
04:02:21 <Thu18118> in that kind of stressful situation, people underestimate the danger. This undercover agent might have gotten the impression this guy was still trying to set a bomb off
04:02:41 <Thu18118> taking no risk for all those people in that station
04:02:54 <tomdavie> he already had set it off
04:03:02 <tomdavie> he didn't have it with him any more
04:03:13 <tomdavie> true
04:03:23 <Thu18118> tomdavie, maybe he had multiple? maybe he tried to set it off again? no way this copper could have known that
04:03:31 <Thu18118> im glad he took no risk
04:03:56 <tomdavie> hmm... tbh, I would rather they had a bomber in custody who could answer questions
04:06:41 <Thu18118> like someone prepared to die and doesn't have to think twice to blow himself up is going to say something
04:06:55 <Thu18118> forget it
04:07:14 <vegai> or perhaps the london police shoots people rather easily these days
04:07:32 <Thu18118> thats a bs statement vegai.
04:07:39 <Thu18118> you tell me you would have taken the risk?
04:07:53 <vegai> what the...
04:07:58 <vegai> "One of them was carrying a black handgun - it looked like an automatic - they pushed him to the floor, bundled on top of him and unloaded five shots into him."
04:08:14 <wilx> That would be nice to have him but I think whoever shot him had to make a choice in a splits of second and just chose to shoot. I cannot blame him/them for making their own safety priority.
04:08:25 <wilx> Heh.
04:08:27 <Thu18118> my point exactly
04:08:27 <wilx> Really?
04:08:45 <vegai> Thu18118: oh, you think it's bullshit that the London police shoots people easier now than e.g. a month ago?
04:08:56 <vegai> it most certainly is not
04:09:36 <Thu18118> i thought you were accusing the police of shooting to easy
04:09:40 <Thu18118> that is in my opinion bs
04:09:52 <vegai> well, I wasn't really
04:10:07 <Thu18118> then i misunderstood your statement
04:10:20 <Thu18118> i think its more than reasonable that they shoot easier in these situations
04:10:22 <vegai> but it *is* a dangerous thing if the situation lasts long enough
04:10:53 <vegai> will the shooting be investigated, do you think?
04:11:14 <Thu18118> currently, i dont give a flying ....
04:11:29 <vegai> I guess you live in that general area?
04:11:39 <Thu18118> i do now some people there yeah
04:11:42 <Thu18118> know
04:11:46 <vegai> oh, ok
04:12:04 <Thu18118> clearly this guy was a terrorist, let god sort them out
04:12:25 <vegai> well, if God sorts everything out, why not just kill everybody :)
04:12:25 <wilx> Huh.
04:12:36 <Thu18118> he'd be too busy
04:12:43 <Thu18118> we have to be a bit of a filter you know
04:12:52 <Thu18118> :)
04:13:30 <tomdavie> thu: Yes I do think it's bullshit that the police shoot people easier now
04:13:46 <tomdavie> because the terrorists are trying to make us change our culture
04:13:53 <tomdavie> and we should be doing the reverse
04:13:59 <vegai> indeed
04:14:06 <vegai> they have already 'won' is many senses
04:14:22 <vegai> (ignoring all the conspiracy theories)
04:14:27 <tomdavie> brb
04:15:31 <vegai> that shooting sounds to me like an execution, still
04:16:38 <tuomov> indeed
04:16:51 <Thu18118> tomdavie, pretending that it doesnt affect us is not realistic
04:16:53 <Thu18118> it does
04:16:58 <vegai> the dangerous thing, I think, is that it might be too easy to deal with many kind of trouble with just shooting everybody and say that 'they were terrorists'
04:17:03 <Thu18118> if it doesnt affect you, you're too far away from it
04:17:23 <tuomov> terrorism is an excuse to get all kinds of big brother laws passed
04:17:24 <Thu18118> vegai, that is not a realistic scheme
04:17:43 <Thu18118> that big brother argument is so 80s
04:17:50 <tuomov> and still relevant
04:18:19 <Thu18118> its an excuse to immobilize so these terrorists can do as they like
04:18:30 <tuomov> they're trying to get eu-wide data retention laws passed on so on, tracking everywhere your cell phone has been, storing all your emails and web sites you visit and so on
04:18:37 <tuomov> like that's gonna catch any "terrorists"
04:18:57 <tuomov> the biggest terrorists are the US government and their cronies anyway
04:18:59 <Philippa_> and there's a lengthy history of intelligence services doing dirty things with whatever info comes to hand
04:19:00 <Thu18118> giving them flowers and screaming peace sure aint
04:19:36 <Philippa_> Thu18118: follow london's example. Have a cuppa to recover then get the hell on with life. Because really, they're not doing anything worse than, say, the accident rate on the tube anyway
04:20:34 <grimace_> I feel very uncomfortable about today's shooting but I wasn't present and can't give informed comment
04:20:41 <Thu18118> have a cuppa to recover....will you say that when they blow your bf to the ceiling?
04:20:52 <Thu18118> i dont think so
04:21:06 <tuomov> of course not, but you can't think straight then
04:21:13 <tuomov> can't see the big picture
04:21:20 <Philippa_> in the extremely unlikely situation that my b/f's hit, no. Not at first. But honestly? In the long run, yes
04:21:28 <Thu18118> well not me
04:21:56 <Thu18118> staring at the big picture doesnt get you anywhere anyway
04:22:06 <tomdavie> thu: my sister was about 100m from two of the bombings two weeks ago
04:22:07 <Philippa_> then you're a far greater enemy to me than they are
04:22:10 <tomdavie> is that close enough?
04:23:04 <Thu18118> tomdavie, the fact that *you* react this way doesnt mean thats the way to go for me
04:23:26 <vegai> so, perhaps we need some kind of monad transformer
04:23:31 <Philippa_> doesn't mean you're in a position to say our reactions are unrealistic
04:23:40 <vegai> Monad m => m Terrorist -> m PeaceDove
04:23:53 <vegai> hmm, that's not quite right, but you get the idea
04:24:09 <Thu18118> just saying its unrealistic that big brother will take over the world if we give them a bit more power to do something about this all
04:24:19 * Philippa_ sighs
04:24:22 <Philippa_> it's not unrealistic
04:24:29 <Philippa_> there's historical precedant
04:24:31 <tuomov> it's happening all the time
04:24:32 <vegai> it's unrealistic to think that we have any control over it
04:24:36 <Lemmih> vegai: That's hard to implement when 'compare Profit People == GT'.
04:24:41 <Thu18118> there also not going to be a new hitler
04:24:49 <Philippa_> prove it
04:24:57 <Thu18118> prove it otherwise
04:24:57 <tuomov> in Finland the police just got a few days ago the right to pay informers, buy drugs and so on
04:25:04 <Philippa_> because there's a hell of a lot of evidence that there will, even if they only stay in their own nation
04:25:05 <vegai> well, Hitler is a very unpopular last name
04:25:14 <tomdavie> anyway, my argument is not that the laws are necessarily bad (even though I'm against ID cards etc) it's the fact that they're using terrorism as an excuse
04:25:15 <vegai> it's unlikely that another Hitler will rise up, at least in Europe
04:25:25 * vegai whistles innocently.
04:25:31 <Thu18118> Philippa_, seems to has proof its very likely
04:25:35 <Thu18118> have
04:25:36 <tomdavie> because these cards would in *no* way stop terrorism
04:25:37 <tuomov> yeah, right...
04:26:01 <Philippa_> Thu18118: all it takes is an economic crisis
04:26:09 <Thu18118> ow sure
04:26:24 <tuomov> there's some world championships in Finland next month too and they're watching the borders more carefully during them... like any terrorists wouldn't have got here months in advance
04:26:35 <tuomov> the fascist pigs are stupid!
04:26:46 <Thu18118> knowing what happened back then...i think its realllly likely that it will happen again....*not*
04:26:49 <tuomov> or have another agenda
04:26:56 <vegai> it's more general than that. Everyone is stupid!
04:27:06 <Philippa_> Thu18118: look more widely
04:27:31 <Thu18118> doesnt change things for me how wide i look
04:27:32 <Philippa_> much of the language is creeping into UK political discussion again already
04:28:11 <vegai> Thu18118: most people don't know or care about history enough for it to save us
04:28:17 <Philippa_> yeah, we have some more widespread rights in some places. This time it'll be the kids with ASBOs who go first, and then the not-completely-clear benefit claims
04:29:31 <Thu18118> i think enough people know about hitler/etc for it not to happen again
04:29:48 <tuomov> yeah, right
04:29:58 <Philippa_> wait another generation, they sure as hell won't then
04:30:04 <vegai> why is neo-nazism on the rise, then?
04:30:08 <tuomov> they know about hitler, they do not know how he got into power
04:30:17 <Philippa_> tuomov: too damn right
04:30:45 <Thu18118> ofcourse people know
04:30:56 <Philippa_> really? They didn't cover it in my history classes
04:31:06 <Thu18118> vegai, like a hurd of bald-headed nazi-wannabe's are going to be unnoticed......
04:31:15 <Thu18118> Philippa_, shame on your school then
04:31:15 <Philippa_> I'm more inquisitive than most, do you really think most folks my age went and looked it up?
04:31:17 <vegai> Thu18118: the more dangerous ones ore not so visible
04:31:28 <Philippa_> Thu18118: shame on every school in the country
04:31:34 <Thu18118> thats just seeing ghosts
04:31:50 <Philippa_> it's just not on most folks' curriculums
04:31:59 <Thu18118> Philippa_, surely your school is an exception
04:32:05 <tuomov> people don't remember much from school anyway
04:32:10 <Philippa_> no, it's not
04:32:40 <Thu18118> i dont know a school which didnt teach it
04:32:56 <Philippa_> oh, and teachers avoid the cold war like the plague too. They don't touch communist-era russia on a serious level
04:33:08 <tuomov> "communist"
04:33:09 <tomdavie> heh
04:33:12 <Philippa_> oh, we all got "this was WW2, this was Hitler"
04:33:13 <Thu18118> tuomov, if people are that bad of memory, then we're doomed anyway
04:33:30 <Philippa_> we did Anne Frank in english and all that
04:33:31 <tuomov> history lessons interest like 1% of the pupils?
04:33:40 <tuomov> I know I wasn't interested in history back in school
04:33:46 <Thu18118> Philippa_, then this is probably due to where you live and that that subject may be a bit hard to talk about...but where i live they teach it all
04:33:48 <Philippa_> nothing about how it all really happened - at best we were told about the inflation in germany
04:33:54 <tuomov> if you're not interested, you don't remember it after the test
04:34:09 <Philippa_> Thu18118: and you live where, exactly?
04:34:15 <Thu18118> netherlands
04:34:33 <Philippa_> right. The UK doesn't touch on this. The entire generation's pretty much unaware of it
04:35:02 <tuomov> didn't churchill support hitler in the beginning even?
04:35:04 <Philippa_> I think we've a right to be a little bit concerned when our government starts introducing so much enabling legislation we can barely keep track
04:35:18 <Philippa_> Fuck, I'm detainable already
04:35:57 * Philippa_ is amazed there wasn't outrage when the old PoTA became a permanent Act instead
04:36:02 <Philippa_> the thing is, there wasn't
04:36:12 <tuomov> PoTA?
04:36:14 <Philippa_> we already have all the legal mechanisms required to run a police state
04:36:18 <Philippa_> Prevention of Terrorism Act
04:36:27 <Philippa_> temporary legislation passed during the IRA campaign
04:36:50 <Philippa_> used to amaze americans when they heard about it due to the powers it gave the police
04:36:54 <Thu18118> Philippa_, its good people like you give some opposition to the government, that is exactly what will prevent them from getting out of line
04:36:57 <Philippa_> doesn't post-PATRIOT, of course
04:37:05 <Philippa_> Thu18118: it isn't. Because there're bugger all of us
04:37:10 <tuomov> like the government listens..
04:37:15 <Philippa_> exactly
04:37:25 <Thu18118> government cant do anything without people
04:37:29 <tuomov> LOL
04:37:30 <Philippa_> Labour took a dent this election, but they /still/ have a sufficient majority to push most stuff through
04:37:43 <tuomov> peole don't even remember the shit the government did when the next elections are
04:37:44 <Philippa_> yeah - and they /have/ the people, because most of them don't know what they're watching happen
04:37:54 <tomdavie> tbh... what scares me most is the home secretary being allowed to order people under house-arrest with no trial
04:38:02 <tuomov> because they always try to do "good things" before them, and only the top politicians have the backing for big campaings
04:38:11 <Philippa_> you can actually implement that with ASBOs too in practice
04:38:21 <tomdavie> indeed
04:38:36 <Philippa_> one civil order by a magistrate and bang, no right of appeal
04:38:55 <tomdavie> so... he can lock you up for "being a terrorist" or for "being antisocial" with no right of trial, let alone of appeal
04:39:44 <Philippa_> "but it's all okay because we won't abuse these powers, really"
04:39:51 <Philippa_> they might, but sooner or later somebody will
04:39:55 <Thu18118> you guys sound like you watched too much michael moore movies
04:39:59 * tuomov thinks any sort of "policy" should have _no_ special rights
04:40:03 <tuomov> s/cy/ce/
04:40:14 <Philippa_> Thu18118: these laws are genuine
04:40:16 <tomdavie> thu: that's nothing to do with mr moore - it's what the law says
04:40:30 <Thu18118> tuomov, police without special rights are not really going to be helpfull
04:40:46 <Philippa_> sure they can. Let anybody make an arrest, but the police are /organised/
04:41:05 <tomdavie> yeh... I can arrest anyone I like
04:41:11 <tuomov> and arrest can only be made violently if the persons being arrested is violent
04:41:22 <tomdavie> ... I might later get arrested for wrongfully arresting someone, but hef
04:41:23 <Philippa_> or if the cop can claim they were afterwards, of course
04:41:24 <tomdavie> hey*
04:41:49 <Philippa_> just gotta do it somewhere there's no CCTV
04:41:51 <tuomov> and if I don't want to tell the copper my name and am not violent.. tough
04:41:59 <tromp> here's a special power i'd like to give police:
04:42:05 <tuomov> currently they can detain you for not telling your name at least in .fi
04:42:13 <tromp> wear body camera's to record all they're doing
04:42:30 <Philippa_> tuomov: they can't in the UK. Yet.
04:42:35 <Thu18118> tromp, that is not going to help them doing their jobs
04:42:41 <tuomov> if they really want to find out why I am, try to keep me from moving where I am and tire me, or start tracking me
04:42:47 <tuomov> s/why/who/
04:42:48 <Philippa_> it won't be long before they can request an ID card at this rate
04:42:50 <Thu18118> its going to be a burden and prevent them from doing their job
04:42:59 <vegai> Thu18118: sure it will. They can always prove that what they did was right
04:43:08 <vegai> it can't be very heavy, of course
04:43:17 <Philippa_> and insofar as it's a burden, it's one they should damn well have
04:43:22 <Philippa_> the tech's light, no worry there
04:43:32 <Thu18118> the tech is not the issue Philippa_
04:43:37 <Philippa_> cams're tiny these days, as is a coupla gigs of compact flash
04:43:44 <Thu18118> its the constant media on their neck trying to prove they did something wrong
04:43:44 <tromp> it will only bother the cops that are crossing the line
04:43:51 <Thu18118> asif these guys havent got enough pressure on them
04:44:00 <Philippa_> Thu18118: over here, they rather frequently /have/ done something wrong
04:44:01 <vegai> Thu18118: but with the cameras, they can prove they did nothing wrong!
04:44:06 <Philippa_> vegai: bingo
04:44:19 <Thu18118> it doesnt work like that however
04:44:25 <vegai> also, they wouldn't have to think about how bad some course of action will look later
04:44:59 <Philippa_> Thu18118: it does in practice because those responsible for dealing with it when they really have done something wrong will be more aware of when they can cheerfully ignore the media
04:45:23 <Philippa_> of course, when they /have/ been naughty boys that's different
04:45:39 <Philippa_> you film a police response to a riot and they'll try to destroy the evidence. Wonder why?
04:45:54 <Thu18118> i think the assumption that they are wrong is wrong to begin with
04:46:00 <vegai> afaik, it is not generally the brightest minds that choose a career in law enforcement
04:46:03 <tromp> trust, but verify
04:46:05 <Philippa_> (and I know somebody who was trampled by a police horse in response to this)
04:46:07 <Philippa_> tromp: bingo
04:46:18 <Thu18118> Philippa_, all those hippy methods talking bad youth etc doesnt always work you know
04:46:37 <Philippa_> the police aren't supposed to do the punishing
04:46:40 <Thu18118> trust but verify is not rigging every cop to bust them
04:46:57 <Philippa_> Thu18118: did it occur to you that on occasion the cam works to the cop's benefit too?
04:47:04 <vegai> perhaps we should implant the cameras on every officer, so they don't know about it
04:47:06 <Philippa_> like every single time someone resists arrest?
04:47:14 <Thu18118> no, because the media are not interested in a cop doing his work well
04:47:21 <Philippa_> fuck the media
04:47:28 <Philippa_> they don't have any direct say in this
04:47:33 <Thu18118> ow boy
04:47:36 <vegai> Thu18118: blame the public, not the media
04:47:37 <Philippa_> never have done and I hope never will
04:47:41 <Thu18118> dont deny the power of the media Philippa_
04:47:43 <vegai> the media spews out whatever the public wants
04:47:52 <Thu18118> vegai, other way around
04:47:56 <wilx> Heh.
04:47:59 <tuomov> the media spews out whatever it can make the public want
04:48:00 <Philippa_> oh, they have it. But only when those who have actual power in the relevant arena believe them or believe they're having an effect
04:48:02 <Thu18118> media decideds what the public think they want
04:48:11 <wilx> Here you have to have your ID always at hand.
04:48:12 <vegai> well, to some extent perhaps
04:48:15 <wilx> Otherwise you can get fined.
04:48:21 <wilx> Nobody has problems with it.
04:48:23 <Thu18118> here too wilx
04:48:28 <Philippa_> wilx: the UK ID is also going to be tied to a silly big database
04:48:29 <Thu18118> but thats for everyone
04:48:31 <Thu18118> not just cops
04:48:45 <tomdavie> see... I wouldn't mind ID cards... if they weren't going to cost me £300
04:48:50 <Philippa_> which is almost certainly going to get cracked
04:48:51 <wilx> Err, what do you mean, Thu18118?
04:48:52 <Philippa_> I mind ID cards
04:48:54 <tomdavie> and amount to a poll tax
04:49:03 <Philippa_> this country theoretically has a right to maintain multiple identities
04:49:07 <Philippa_> there're people that matters to
04:49:35 <tomdavie> the cards are "optional" though *g*
04:49:43 * tomdavie stirs hornets nest
04:49:44 <Philippa_> hah, yeah. For about five minutes
04:50:02 <vegai> the public isn't *completely* moldable by the media, imho
04:50:16 <Thu18118> the largest part of the public is
04:50:16 <tuomov> here in .fi they're trying to make a database for police from all the fingerprints collected for new bigbrother bio-passports
04:50:23 <Thu18118> they believe everything they see on the news
04:50:28 * tomdavie is gonna go read harry potter...
04:50:30 * earthy thinks of .se
04:50:30 <tomdavie> bbl
04:50:34 <Philippa_> tuomov: it'll be considerably worse than that here
04:50:37 <earthy> where the entire ID database is *public*
04:50:47 <earthy> you can get a copy of any citizen's ID
04:50:52 <Philippa_> amongst other things they'll use the cards as entitlement to things like the NHS
04:51:10 <vegai> what do you think... if 'terrorism' will be won, will these big-brother -things be abolished?
04:51:10 <Philippa_> all of this in one big centralised DB which they're planning on selling various services based upon
04:51:12 <earthy> Philippa: this sounds like what they're doing her in .nl
04:51:13 <Thu18118> that painting doomscenarios Philippa_ , not being realistic again
04:51:17 <Philippa_> vegai: no
04:51:26 <Philippa_> Thu18118: am I? These are the government's open plans here
04:51:31 <tuomov> not that I wouldn't expect the fingerprints for the biopassports be stored anyway, or be accessible to the world the first time the passport is used anyway
04:51:39 <earthy> there was a social security number. then that got turned into the government service number
04:51:43 <Philippa_> this is the stuff /they/ are discussing in parliament
04:51:53 <wilx> lol
04:51:54 <earthy> and it is in your ID card/passport these days
04:51:59 <earthy> oh, and carrying ID is mandatory
04:52:14 <Thu18118> damn right
04:52:16 <Philippa_> earthy: I'm wondering just what else they're going to tie in. This government has been appalling when it comes to data protection
04:52:19 <tuomov> in .fi social service number is an universal service number
04:52:23 <tuomov> s/service/security/
04:52:33 <tuomov> almost everybody wants it
04:52:34 <earthy> philippa: anything they can
04:52:43 <earthy> tuomov: almost the same here
04:52:56 <earthy> it's not allowed to use it in private databases, however
04:53:02 <Philippa_> the selling DB services is what really scares me - it implies the database'll be open to the 'net (because the alternative is damned expensive), which means sooner or later the DB will get cracked
04:53:12 <Philippa_> earthy: they're not talking about any restrictions like that here
04:53:13 <tuomov> I think it is allowed.. all such databases must be registered, though
04:53:30 <earthy> philippa: actually, an entirely *open* database would not be a problem to me
04:53:30 <wilx> Odd.
04:53:44 <Philippa_> earthy: it would to me, there's all sorts of private info they're planning to keep in it
04:53:49 <wilx> Here they take the personal data security rather seriously.
04:53:53 <Philippa_> hell, stuff there're actual laws against making public
04:54:09 <Philippa_> wilx: budget concerns here
04:54:24 <Philippa_> and government IT projects have an appalling history in the UK
04:54:27 <earthy> yeah. 'quis custodiet custodes ipsos'
04:54:30 <tuomov> well, in some ways public is better than closed
04:54:37 <tuomov> it will be less usable as evidence
04:54:48 <tuomov> if everyone can fake your fingerprint, what worth is it anymore?
04:55:33 <Philippa_> the sorts of data they're looking at would turn it into a list of various vulnerable minorities amongst other things though
04:55:57 * Oeje1 thinks, there is a big red button to erase the obligatory health insurance number database in Denmark, if ze Dzermans should come again.
04:57:42 <Beelsebob> HEH
04:58:00 <Beelsebob> so is it still the world vs tue?
04:58:25 <Philippa_> I think he's butted out for the most part
04:59:35 <Thu18118> no i actually got some work done instead of you people scheming unrealstic rodney king scenarios
04:59:36 <Thu18118> lol
05:00:04 <Philippa_> All but the ID cards is law here already
05:00:13 <Thu18118> at end of the day, they shot the terrorist and im glad they did
05:00:49 <vegai> Thu18118: don't come crying to us if they shoot you by accident :)
05:00:50 <Philippa_> and we've seen enough travesties occur without them
05:00:51 <tuomov> and if it were you running with earphones on?
05:00:59 <vegai> or don't come haunting
05:01:40 <Philippa_> quite. As a friend put it, if he were carrying around a drain pipe and somebody yelled "drop the rocket launcher!" it'd take him the usual handful of seconds before they shoot just to work out they might mean him
05:01:48 <Thu18118> vegai, i wont carry a rucksack trying to set if off
05:01:56 <Thu18118> or have a machinepistol
05:01:57 <Thu18118> etc
05:02:13 <Philippa_> yes, the shooting was probably justifiable
05:02:18 <tuomov> just something that can be suspected to be such..
05:02:21 <Philippa_> OTOH, telling us there's no need to worry about big brother in the UK isn't
05:02:27 <poetix> Philippa_: signed here? -> http://www.pledgebank.org/refuse
05:02:37 <vegai> Thu18118: I don't remember either of those being mentioned in the article
05:02:47 <Philippa_> poetix: nope. I don't really have a tenner spare, if nothing else
05:03:03 <Philippa_> that, and if they do make an entitlement card of it I'm a little too reliant on the NHS to stay alive
05:03:04 <Thu18118> vegai, well the guy was trying to set something off...im sure it wasnt his watch lol
05:03:14 <Thu18118> and i read about him having a machinepistol
05:03:15 <Philippa_> it's easier to rebel when you're not dependant on the state :-(
05:03:40 <vegai> Thu18118: no, the men who shot him had a gun
05:03:57 <tuomov> did he have the gun in his hands when they shot him, or did they find it later?
05:04:05 <tromp> he not only shot him, but he had a gun too:-???
05:04:09 <tromp> shocking
05:04:28 <vegai> Thu18118: "One of them was carrying a black handgun..." 'them' being the plain-clothes police officers
05:04:56 <vegai> Thu18118: and they guy they shot was described only as "an Asian guy"
05:05:11 <Thu18118> vegai, ok. so just the bomb....enough for me
05:05:17 <tuomov> a finnish news site says the man didn't carry anything..
05:05:20 <vegai> Thu18118: was there a bomb?
05:05:33 <Oeje1> Does British plain police still carry their hand guns concieled?
05:05:35 <vegai> perhaps we'll know soon, but it certaintly is not definite yet
05:05:53 <Thu18118> he was pretending to wash his ears...that's probably why they shot him
05:06:13 <Philippa_> Oeje1: I imagine so
05:06:21 <vegai> Thu18118: perhaps you should have read that article first :)
05:06:21 <Philippa_> on account of how otherwise everybody'd assume they weren't police
05:06:35 <vegai> a little bit of R with TFA appended ...
05:06:56 <Oeje1> Philippa_: Oh, by plain I mean normal uniformed foot police with the funny hats.
05:07:05 <poetix> It isn't yet confirmed whether the suspect was packing anything lethal.
05:07:07 <Philippa_> ah. Most of them don't carry guns
05:07:15 <poetix> The chaps with guns were plainclothes, i.e. no uniforms.
05:07:22 <Oeje1> Philippa_: That's so nice.
05:07:23 <poetix> Nice to know they were there, actually.
05:07:37 <vegai> is it confirmed that they were cops? =)
05:07:53 <Philippa_> the typical "level of play" around here's knives anyway. Even in places like nottingham
05:07:55 <Thu18118> vegai, maybe it didnt happen in the first place
05:07:55 <Thu18118> lol
05:08:13 <Philippa_> these days they're armoured though, combined bullet/stab vests
05:08:23 <Oeje1> Philippa_: You have on one hand you have gunless police, and on the other you have the SAS, hehehe.
05:08:24 <Thu18118> the government probably faked it too have the people give them more power
05:08:27 <poetix> It's extremely unusual for UK police to shoot anyone in hot pursuit like that
05:08:51 <Philippa_> admittedly I sometimes wonder if they wear kneecaps too, but that's just the martial artist in me wondering what the options are if I ever really have to
05:08:57 <vegai> Thu18118: maybe you're working for the secret service, spreading misinformation!
05:09:01 <Philippa_> Oeje1: the SAS aren't enforcement though, they're military
05:09:32 <Oeje1> Philippa_: I know, that's why you don't want to piss them off.
05:09:56 * poetix does his best Michael Portillo impression
05:10:16 * Philippa_ should get whichever afper it was responsible to show her the portillo/paxman piece he wrote
05:10:25 <Thu18118> vegai, you're on to me :O
05:10:26 <Thu18118> hahah
05:10:51 <vegai> Thu18118: oh my god, that's exactly what they would say
05:10:55 <poetix> Hey, GCHQ, y'all listening?
05:11:10 <vegai> kettu kuittaa
05:11:24 <Philippa_> BOMBS KILL PRESIDENT COCAINE NUCLEAR - they are now
05:11:26 <Beelsebob> philippa: from what I've hear the police have the option of wearing bullet/stab vests
05:11:34 <Beelsebob> but most only wear stab vests
05:11:37 <poetix> Al mout li Amreeka!
05:11:41 <Beelsebob> because the combined ones weigh a ton
05:11:43 <Philippa_> Beelsebob: you're probably right
05:11:44 <ndm> Beelsebob: but it makes life far less pleastant
05:11:47 <poetix> Al mout li Ingiltra!
05:11:57 <poetix> Al mout li Tony Blair!
05:12:05 <Philippa_> I suspect the combined're slightly more popular around here just in case someone gets sent to Arnold or St.Ann's
05:12:21 * poetix is emphatically being facetious
05:13:04 <jyp> On topic someone ? :)
05:13:19 <vegai> jyp: please!
05:13:21 <poetix> Where are the Haskell crypto libraries?
05:13:21 <Beelsebob> haha
05:13:28 <Beelsebob> GHCHQ then?
05:22:07 <vegai> what would you think is the correct idiom to register Cabal packages by packaging scripts?
05:22:26 <vegai> can it only be done via pre-inst and post-remove scripts?
05:22:35 <vegai> well, post-inst
05:23:36 <vegai> I guess I have to package Setup.hs and *.cabal along with the package, so that Setup.hs can be called afterwards
05:24:30 <Igloo> You need to package enough stuff that setup register can be run
05:25:29 <vegai> yep
05:28:19 <vegai> what would be your first guess as the optimal place for installing Setup.hs and *.cabal?
05:29:32 <Igloo> Somewhere in /usr/lib is probably right
05:29:51 <vegai> hmm. I would've guessed /var/lib
05:30:01 * vegai pulls out a filesystem standard
05:30:04 <earthy> Setup.hs I'd guess /usr/lib
05:30:06 <Igloo> It's not variable
05:30:08 <earthy> *.cabal sounds like /var/lib
05:30:21 <earthy> as the set of files is variable with what libraries you have installed
05:30:25 <vegai> they can't be in separate places, can they?
05:30:33 <vegai> Setup.hs might be different for every library
05:30:47 <Igloo> earthy: IIRC the question is whether the data is modified after being installed
05:31:01 <earthy> hm.
05:31:04 <Lemmih> Why do you want to save the Setup script and the .cabal file?
05:31:19 <Igloo> Lemmih: To run setup register
05:31:25 <vegai> yep
05:32:00 <earthy> Igloo: but postinst and friends live in /var/lib/dpkg/, on Debian, don't they?
05:32:02 <Lemmih> After you've installed the package?
05:32:19 <vegai> Lemmih: how would you do it otherwise?
05:32:45 <Lemmih> Put it in /tmp and delete it afterwards.
05:32:57 <vegai> Lemmih: that would break removing the package
05:33:10 <vegai> also, I'm talking about binary packages.
05:33:31 <Lemmih> Uh, Cabal _can't_ uninstall.
05:33:55 <vegai> "Uh", it can unregister
05:34:04 <vegai> I'm packaging for a distribution.
05:34:07 <Igloo> earthy: Yeah. I suspect that's so all of dpkg's data can be in a single place
05:34:15 <Lemmih> That's just 'ghc-pkg unregister'.
05:34:28 <mattam> @def concatMap
05:34:29 <lambdabot> Maybe you meant: define definitions arr code dice dict docs ghc help
05:34:29 <lambdabot> index moo msg pl seen vera wn yow
05:34:31 <vegai> ok, that's better
05:34:38 <mattam> @define concatMap
05:34:38 <earthy> igloo: but conceptually, that stuff goes with the package, right?
05:34:39 <lambdabot> (line 1, column 1):
05:34:39 <lambdabot> unexpected end of input
05:34:39 <lambdabot> expecting white space or simple term
05:34:43 <earthy> it's just metadata for the package
05:34:58 <vegai> yeah, I'd still rather do it that way
05:35:01 <Igloo> Yes, but it's in a directory owned by dpkg, not the package
05:35:10 <vegai> it seems rather less hacky
05:35:19 <Igloo> Lemmih: Does setup not take an unregister command?
05:35:32 <vegai> it does
05:35:43 <Igloo> Then you can't assume it's just ghc-pkg unregister
05:35:54 <Igloo> (especially if installing an nhc98/hugs package  :-)  )
05:39:04 <Lemmih> So, you're also gonna save .setup-config?
05:40:31 <vegai> hmm
05:41:07 * Igloo remembers discussing with Isaac that cabal should make it easy to put the necessary files somewhere, but can't remember the outcome
05:51:12 <Lor> g'day, folks.
06:21:58 <vegai> heh
06:22:10 * vegai just realized how foolish it is to make a binary package out of lambdabot.
06:22:47 <vegai> well, at least I packaged all its dependancies
06:25:32 <Igloo> Packaged for what, OOI?
06:33:07 <vegai> Arch Linux
06:38:26 <vegai> hmm, seems like runplugs fails when /tmp is a tmpfs
06:38:43 <vegai> or rather gcc fails
06:50:29 <vegai> @paste
06:50:30 <lambdabot> http://www.haskell.org/hawiki/HaskellIrcPastePage
06:54:29 <vegai> I'm having some trouble with runplugs. Pasted there.
08:29:37 <CosmicRay> well.
08:29:48 <CosmicRay> I must say that making MissingH work on windows was a decidedly unpleasant experience.
08:30:01 <CosmicRay> fortunately I could at least find a vim implementation for windows ;-)
08:30:08 <Igloo> :-)
08:31:22 <xerox> Hi.
08:31:23 <CosmicRay> I had to write a stat(2) simulator for Windows, among other things.
08:31:32 <xerox> Do you know where can I get the happy 1.15 .deb ?
08:32:08 <CosmicRay> xerox: ftp.debian.org?
08:32:12 <CosmicRay> it's in stable, testing, and unstable
08:32:38 <Igloo> http://ftp.debian.org/debian/pool/main/h/happy/
08:32:55 <CosmicRay> you should be able to just apt-get it
08:33:23 <xerox> I'm on ubuntu, let's try.
08:33:53 <pejo> Regarding the ghc performance - is there any relevant documentation of the optimisations implemented by ghc, except a few articles by Simon^2?
08:34:42 <CosmicRay> xerox: it should work
09:11:10 <xerox> dcoutts_: ping
09:13:41 <tolik> Hi!
09:15:42 <tolik> Does anybody know how to run ghci with threaded rts?
09:17:40 <Igloo> You'll have to compile it with the threaded rts
09:17:45 <Igloo> s/compile/link/
09:18:21 <Igloo> So you'd need to tweak ghc's makefiles so that the ghc executable is linked with -threaded
09:20:11 <vegai> anyone care to guess what's amiss with my plugs?
09:20:15 <vegai> http://www.haskell.org/hawiki/HaskellIrcPastePage
09:21:53 <tolik> Igloo: So I can't go on without recompilation?
09:22:18 <Igloo> Not if going on means running ghci with a threaded RTS
09:22:38 <Igloo> AFAIK, at least
09:24:46 <Lemmih> tolik: Why do you need a threaded ghci?
09:26:41 <tolik> Mmm... Actually, I only want faster compilation
09:26:55 <tolik> But I need threaded rts
09:27:31 <Lemmih> Why?
09:28:28 <SyntaxNinja> Lemmih: why not?
09:28:43 <Lemmih> (:
09:30:55 <tolik> Reading and writing on the same handle in differnt threads works strange otherwise
09:33:07 <SyntaxNinja> <debian-devel> Rotty: yeah, haskell is nice, but i yet haven't got warm with it
09:33:09 <SyntaxNinja> hehe
09:33:19 <Igloo> Why will the threaded rts make it less strange?
09:34:00 <tolik> I am not very expirienced but I tried and it did :)
10:14:50 <basti_> ey!
10:15:00 <xerox> darcs is great.
10:15:16 <reffie> you're great
10:15:22 <xerox> you too!
10:15:42 <reffie> <3
10:15:45 * basti_ is too
10:16:14 * xerox hugs basti
10:16:46 <basti_> haskell is great. and #haskell.
10:16:53 * basti_ hugs xerox
10:16:59 <basti_> are you on coke?
10:17:24 <xerox> Nope, just some A.C.E. and darcs magic.
10:17:32 <basti_> ohh okay.
10:17:33 * basti_ nods
10:17:53 <SyntaxNinja> xerox: having fun?
10:17:55 * shapr hugs basti_ 
10:18:01 * shapr hugs SyntaxNinja 
10:18:03 <xerox> SyntaxNinja: indeed!
10:18:04 * shapr hugs xerox 
10:18:08 <reffie> http://irc.fi/reffie
10:18:10 * xerox hugs shapr 
10:18:19 * reffie hugs SyntaxNinja 
10:18:25 * reffie hugs shapr 
10:18:26 * SyntaxNinja hides on the ceiling, ninja-like
10:18:29 * reffie hugs xerox 
10:18:32 * shapr hugs reffie 
10:18:33 <basti_> just hugging is boring.
10:18:33 <reffie> etc
10:18:37 * basti_ wants to see skin
10:18:40 * xerox hush SyntaxNinja 
10:18:47 * xerox hugs reffie 
10:18:57 * basti_ has a picture online, too.
10:18:59 * reffie hugs basti_ 
10:19:18 <reffie> basti_ with google clothes?
10:19:25 <basti_> no
10:19:33 <SyntaxNinja> headline: Haskell community accused of using performance-enhancing hugs.
10:19:39 <reffie> :(
10:19:47 <basti_> http://tanzgemein.de/irc/%21WG86Mdrogen/basti
10:20:48 <reffie> hot
10:21:38 <basti_> i am, am i not? :)
10:21:53 <basti_> especially with geek add-ons.
10:21:54 <reffie> u r
10:22:11 <shapr> reffie: parlez vous français?
10:22:13 <earthy> baaaad glasses.
10:22:19 <reffie> shapr oui
10:22:19 <basti_> *g*
10:22:25 <shapr> reffie: puhutko suomea?
10:22:29 <xerox> reffie: I saw you in Google clothes, eheh.
10:22:32 <reffie> shapr kyl
10:22:39 <shapr> quel surprise
10:22:39 <shapr> !
10:22:51 <reffie> well, to be honest
10:22:52 <earthy> time to go score food
10:22:57 <shapr> Talar du svenska också?
10:22:57 <reffie> en puhu suomea
10:23:07 <reffie> or something
10:23:13 <shapr> Yeah, that's right :-)
10:23:13 <reffie> i'm just a wannabe finn :(
10:23:21 <shapr> Bor du i finland?
10:23:36 <shapr> Habitez vous en Finland?
10:23:42 <reffie> j'habite en italie
10:23:53 <shapr> Ok, that's confusing.
10:24:04 <reffie> :D
10:24:31 <shapr> Should I ask how you got there and how you learned French, etc?
10:24:34 <xerox> Yeah, he is indeed comopolitan.
10:24:44 <reffie> i was born in italy
10:24:56 <basti_> comicopolitan?
10:24:59 <reffie> i went to a french school, as my parents are french-speaking
10:25:03 <shapr> Oh, neat.
10:25:55 <xerox> Then, the US?
10:26:00 <reffie> ?
10:26:08 <reffie> yes, i was in US for 4 years
10:26:12 <shapr> reffie: Do you live near xerox ?
10:26:24 <xerox> No :-(
10:26:47 <shapr> Did you go to school in the US? Or just found a cool place to hang out?
10:27:02 <reffie> yeah i went to college in US
10:27:12 <reffie> but i think i'm going back to US for work
10:27:24 <xerox> basti_: we have more or less the same lengthy hair, eheh - but mine are dark and more wavy.
10:27:42 <xerox> reffie's dream job!
10:27:52 <reffie> my dream job indeed
10:27:53 <shapr> reffie: What sort of work do you want?
10:28:11 <reffie> software engineer
10:28:12 <basti_> xerox: mine is longer now. and i have some waves too, you just dont see them when i wear a hair-band
10:28:23 <reffie> shapr i tihnk i'll get an offer very very soon
10:28:29 <shapr> I got my hair cut for the first time in five years.
10:28:30 <xerox> basti_: do you wear it usually? :)
10:28:39 <basti_> yes
10:28:45 <basti_> at least in public
10:28:48 * xerox feels shapr 
10:28:51 <basti_> cant go out looking like a mop
10:28:56 <shapr> xerox: I'm still fluffy :-)
10:29:09 <basti_> shapr wants to go bald?
10:29:33 <shapr> Nah, I thought I would go bald years ago though.
10:29:47 <reffie> how old are you?
10:29:47 <xerox> Ah, shapr and SyntaxNinja, I publicly thanked you on http://haskell.galos.com/~paolo/.  Darcs seem to work fine, repos url to be announced soon ;-)
10:29:49 <basti_> thats the impression i had when i saw your picture
10:29:49 <basti_> ;)
10:30:02 <shapr> reffie: I'm 33 years old.
10:30:11 <basti_> :-o
10:30:11 <reffie> you're older than i thought.
10:30:16 <basti_> way older, so to say
10:30:18 * xerox agrees
10:30:18 <shapr> :-P
10:30:19 <_metaperl> shapr: what's the story on moving countries?
10:30:23 <shapr> _metaperl: not sure yet
10:30:31 <shapr> _metaperl: I'll tell ya when I know for sure.
10:30:34 * earthy 'd say that moving countries is a tough job
10:30:44 <earthy> they're like, *big*, you know. :P
10:30:56 <_metaperl> earthy: lol
10:31:08 <basti_> ouch.
10:31:15 * xerox points to http://segfaulted.com/rofl.jpg
10:31:21 * xerox hides
10:31:28 <basti_> i mean... you could start out with liechtenstein or andorra
10:32:02 <reffie> :D
10:32:25 <earthy> then try your hand at Luxemburg
10:32:32 <Oeje1> No, begin with a floating continent.
10:32:34 * CosmicRay returns from lunch
10:32:35 <reffie> vatican?
10:32:37 <basti_> yes... and russia comes last.
10:32:44 <earthy> something like that
10:32:44 <basti_> maybe you could practice with islands.
10:32:56 <shapr> Could start with very small rocks.
10:32:57 <earthy> aren't there island states such as niue?
10:33:12 <earthy> might be good training material, yes, shapr. :)
10:33:38 <xerox> .nu!
10:34:02 <Oeje1> xerox: Is that you on rofl.jpg?
10:34:06 <earthy> damn frigging damn damn damn.
10:34:18 <earthy> this substitution recorder Just Won't Work Right
10:34:22 <shapr> ?
10:34:27 <xerox> Oeje1: it's reffie, eheh.
10:34:55 <earthy> shapr: been trying to build a monadic encapsulation of substitution
10:35:05 <shapr> Sounds nifty
10:35:07 <earthy> *other* than the obvious one for expression trees
10:35:38 <earthy> so I thought I'd keep a finite map of variables mapped to terms to replace those variables with
10:36:00 <shapr> Have you looked at TaPL?
10:36:05 <earthy> nope
10:36:15 <xerox> That's autrijus start for pugs, IIRC.
10:40:05 <reffie> Oeje1 it's me!
10:40:21 <earthy> interesting bit of tekst in chapter 5
10:40:24 <earthy> text, even
10:40:37 <earthy> I don't have any bound variables yet, however
10:40:59 <earthy> so that problem doesn't apply to me
10:42:18 <earthy> oh well. I need food, for without any I won't solve this anyway
10:52:34 <xerox> Bye now :)
11:18:55 * CosmicRay wonders if anybody is noticing something a little bit odd about the announcement he just sent to -cafe
11:19:50 <Igloo> Like what?
11:21:01 <vegai> Gopher, perhaps?
11:21:07 <vegai> or that Windows is not Posix
11:21:12 <CosmicRay> vegai: the former ;-)
11:21:30 <Igloo> Given who sent it, is that really odd?
11:21:32 <ibid> everybody knows by now that you're a goperomanic :)
11:21:40 <CosmicRay> heh
11:22:03 <CosmicRay> I need to read up on simon's high-powered haskell webserver stuff
11:22:04 <ibid> +h
11:22:13 <CosmicRay> might be useful for a certain other type of server... ;-)
11:22:17 <ibid> and make a high-powered gopherd?
11:22:41 <CosmicRay> yup
11:22:58 <CosmicRay> I don't like maintaining python code anymore
11:23:03 <CosmicRay> time to port pygopherd to haskell perhaps
11:23:17 * ibid should start programming in haskell again, i need to be in shape for teaching it in october :)
11:24:54 <CosmicRay> ibid: you could start by writing a haskell interface to a curses library, so I can port offlineimap and the gopher client to haskell ;-)
11:25:03 <CosmicRay> in fact, you could port offlineimap and the gopher client to haskell
11:25:11 <CosmicRay> <-- very helpful
11:25:27 <vegai> any curses library, or ncurses...?
11:25:28 <ibid> CosmicRay: i did something like that years ago, and i thought somebody has already made a better one
11:25:33 <ibid> curses, i mean
11:25:38 <CosmicRay> vegai: a widget library, like cdk or vscreen
11:25:44 <Igloo> ibid: Well, if you're looking for exciting, new challenges, talk to me  :-)
11:26:01 <ibid> Igloo: i won't promise anything, but talk to me :)
11:26:03 <CosmicRay> vegai: something that lets you say "pop up a dialog box with these buttons on it" rather than "draw the upper-left corner character at 15,20 and make it black"
11:26:19 * CosmicRay bops igloo
11:26:31 <SyntaxNinja> CosmicRay: what's odd? the gopher thing?
11:26:31 <ibid> yeah, something like that could be fun
11:26:36 <CosmicRay> ibid: you could make ghc generate binaries that are less that 500K in size
11:26:43 <ibid> CosmicRay: theh
11:26:50 <CosmicRay> SyntaxNinja: yeah, I hadn't realized I had talked about it in this channel before.  sigh
11:27:21 <dcoutts> CosmicRay, apparently someone made gtk work in text mode, I wouldn't use it however :-)
11:27:38 <CosmicRay> qt also
11:27:40 <Igloo> Well, if you (or anyone else) feel like writing an SQL backend or mail/MIME frontend to http://urchin.earth.li/cgi-bin/ian/Index (darcs get http://urchin.earth.li/darcs/ian/bts/) then I'd certainly be a happy bunny  :-)
11:27:41 <CosmicRay> neither seems to be maintained
11:28:03 * Igloo can give more details if anyone's actually seriously interested  :-)
11:28:13 <SyntaxNinja> CosmicRay: dork
11:28:21 <CosmicRay> what is it with the english and writing their own BTSs? ;-)
11:28:33 <CosmicRay> in fact, English people named Ian...
11:28:48 <CosmicRay> SyntaxNinja: I seem to get that a lot.
11:28:50 <Igloo> Hey, I tried looking for one that did what I want and failed  :-/
11:28:56 <CosmicRay> SyntaxNinja: gopher is just misunderstood ;-)
11:29:21 <CosmicRay> Igloo: what feature could you not find?
11:30:42 <Igloo> One that could be easily used by mail or web and was simple to use when you were first faced with it
11:31:48 <CosmicRay> Igloo: you might look into RT
11:32:02 <Igloo> RT is what drove me to this  :-)
11:32:14 <CosmicRay> oh, urm, how did RT fail the above criteria? ;-)
11:32:24 <CosmicRay> oh are you talking about RT as used by darcs?
11:32:47 <Igloo> Yes
11:32:58 * ibid haven't found a better one than the debian bts
11:33:14 <Igloo> It got to the point I was being tempted to prod RT, and hence perl, at which point writing some beautiful Haskell seemed like the only way to go
11:33:31 <Igloo> ibid: I'm hoping to make this essentially the Debian BTS plus a web frontend
11:33:35 <CosmicRay> oh, a bts written in Haskell?  Why didn't you say so!
11:33:41 * CosmicRay scrolls back to find that darcs url
11:33:48 <Igloo> Err, you think I'd write in anything else?  :-)
11:33:50 <CosmicRay> Igloo: suddenly, this is interesting ;-)
11:34:07 <CosmicRay> Igloo: I dunno, you seem like the sort of guy that would randomly write something in smalltalk one day
11:34:14 <Igloo> Especially as this started by ibid saying he should write some Haskell  :-)
11:34:35 <ibid> most of my current projects are in - c
11:35:05 <Igloo> The difficult bit with the mail side is going to be understanding enough of MIME to separate the message from the attachements
11:35:19 <CosmicRay> Igloo: I have code that does that.  see MissingH
11:35:47 <Igloo> Code that actually works out what is message and what is attachment?
11:35:48 <CosmicRay> no need to reinvent the wheel
11:36:08 <CosmicRay> sure
11:36:09 <Igloo> I've seen the WASH stuff for parsing MIME, and planned to use that
11:36:14 <CosmicRay> that's what I've got.
11:36:26 <Igloo> (when I said "understanding", I meant me understanding rather than writing code to understand)
11:36:28 <CosmicRay> all you need to look at is the ContentDisposition in the Message
11:36:39 <Igloo> Which module?
11:36:46 <CosmicRay> Wash.Mail.Message
11:37:19 <CosmicRay> which is what you would get from using the parsers in Wash.Mail.MailPerser
11:38:03 <CosmicRay> the easiest thing for you to do, though, may be to just render text parts as text, ignore html alternatives, and show everything else as attachments
11:38:03 <Igloo> OK, but there isn't a function I can give an e-mail and get back (TheText, [AnAttachment])
11:38:50 * Igloo doesn't know how simple such a thing would be, or how QP, uuencoding, base 64 etc would affect it, if at all
11:38:57 <CosmicRay> flood
11:39:01 <CosmicRay> -- | Takes an e-mail message, returns something of a specific type
11:39:02 <CosmicRay> getX :: String -> String -> String -> Either String String
11:39:02 <CosmicRay> getX mimemaj mimemin x =
11:39:02 <CosmicRay>            let msg = digestMessage $ forceEither $ parseMessageFromString x
11:39:02 <CosmicRay>                flats = flattenMessage msg
11:39:02 <CosmicRay>                ispdf (ContentType maj min _) =
11:39:04 <CosmicRay>                    maj == mimemaj && min == mimemin
11:39:06 <CosmicRay>                contenttypes = map getContentType flats
11:39:08 <CosmicRay>                pdfs = filter (ispdf . getContentType) flats
11:39:12 <CosmicRay>                showcttype (ContentType maj min _) = "<" ++ maj ++ "/" ++ min
11:39:14 <CosmicRay>                                                      ++ ">"
11:39:18 <CosmicRay>                in
11:39:20 <CosmicRay>                case pdfs of
11:39:22 <CosmicRay>                  [y] -> Right (getDecoded y)
11:39:24 <CosmicRay>                  _ -> Left $ "Could not find one file in message; attachments: "
11:39:26 <CosmicRay>  ++ (show contenttypes) ++ " " ++ show (map showcttype contenttypes)
11:39:29 <reffie> omfg
11:39:50 <basti_> lisppaste2: @url
11:39:50 <lisppaste2> To use the lisppaste bot, visit http://paste.lisp.org/new/haskell and enter your paste.
11:39:51 <basti_> :)
11:39:54 <CosmicRay> this is not exactly what igloo was asking for, this is something that actually finds something of a specific type no matter now nested it is.
11:40:05 <CosmicRay> but it should show you the idea
11:40:12 <CosmicRay> mime is hierarchical
11:40:25 <Igloo> And I'd need to know what to do with gpg sigs and suchlike too
11:40:40 <Igloo> I'm sure it's all very simple, I just think I'd need to learn more about MIME before I could write it  :-)
11:40:45 <ibid> mail parsing is a nasty proposition
11:40:52 <CosmicRay> well no, it's not very simple.  it sucks really
11:41:06 <CosmicRay> I thought you were thinking of re-implementing wash.mail yourself at first
11:41:15 <CosmicRay> wash.mail is really quite nice as far as mime libraries go
11:41:21 <Igloo> No, it's "OK, I have WASH/Mail. Now what?"
11:41:29 <CosmicRay> also you have to remember that nothing guarantees that there is one real "message"
11:41:36 <ibid> the standards are built on broken legacy standards that are built on other broken legacy standards
11:41:37 <CosmicRay> you could have several text parts that comprise the original message
11:41:53 <ibid> and most implementations of that broken standard are broken one way or another
11:41:56 <CosmicRay> ibid: also there are lots of buggy implementations
11:42:07 <ibid> CosmicRay: :)
11:42:08 <Igloo> I probably want to do what mutt does, but I'm not sure if looking at mutt's source will be the right way to work out what that is
11:42:30 <CosmicRay> Igloo: actually I still believe that you want to do what rt does.
11:42:52 <ibid> i have a special-purpose c implementation of a mail decoder
11:42:53 <CosmicRay> I think mutt just looks at the first thing in the message, and if it's a multipart/alternative, shows the text.
11:42:55 <Igloo> Anyway, like I said, if someone wants to write the mail parsing end then I'd be a happy bunny  :-)
11:43:01 <CosmicRay> hmm, actually no, mutt does show several parts sometimes.
11:43:31 <Igloo> I think mutt puts together message body and signature when they're in separate parts, possibly due to gpg sigs
11:43:42 <CosmicRay> you're right
11:43:47 <Igloo> (I assume it's more general than that, but that's when I've noticed it)
11:44:27 * CosmicRay has to run
11:44:50 * Igloo AFKs for a bit too
12:10:16 <frederik> everybody: emacs or vim?
12:10:24 <basti_> emacs.
12:15:31 <jlouis> emacs
12:21:17 <dcoutts> vim
12:21:48 <reffie> nvi
12:26:02 <Lemmih> emacs
12:29:20 <xerox> emacs
12:33:16 <wagle> punchcards
12:43:29 <kaol> emacs
12:47:40 <Khisanth> magnets
12:52:43 <frederik> so emacs wins then?
12:53:04 <frederik> i'm in the process of switching to vim, i like some things about it but don't like some other things...
12:53:18 <thedward> I prefer to use vim inside of emacs-shell
12:54:39 <wagle> sacrilege!
12:57:12 <basti_> frederik: i can't take an editor (!) with a modal (by intention (!)) interface serious
12:58:43 <frederik> what's wrong with a modal interface?
12:59:06 <goron> basti_: Are you talking about emacs?
13:01:03 <frederik> thedward: what's emacs-shell?
13:02:55 <basti_> goron: no, about vim... this insert/delete mode stuff... pissed me off the very first moment i saw vi, and didnt get any better since then.
13:03:51 <goron> thedward: It's a command shell in emacs.
13:04:01 <goron> uh frederik
13:04:25 <goron> basti_: Do you use emacs for Haskell?
13:04:38 <basti_> yes i do, and the haskell mode pisses me off lots, too.
13:04:49 <thedward> frederik: M-x shell
13:05:13 <goron> thedward: that's a different shell.
13:05:30 <thedward> goron: ah, well, that is what I meant. :)
13:06:13 <goron> basti_: I tried it a year ago or something (haskell.el). I remember not being impressed in any way.
13:06:49 <basti_> yes, the haskell mode sucks bigtime. But better a sucky haskell mode and a good editor interface than the other way round... At least that's what i think.
13:06:51 <goron> basti_: It killed my interest for emacs, but now I forced myself to learn Lisp and emacs. I must say Lisp has some nice tools.
13:06:58 <basti_> btw, someone could go and fix the emacs.el
13:07:01 * basti_ gazes at his navel
13:07:23 <goron> basti_: There's something called SLIME which is pretty nice. Not optimal, but nice.
13:07:32 <basti_> an editor or an emacs mode?
13:07:39 <goron> basti_: emacs mode
13:07:41 <SyntaxNinja> poor haskell mode.
13:07:57 <goron> basti_: but that's for Lisp.
13:08:10 <basti_> uhm
13:08:12 <wagle> i want an editor that truly understands the syntax of the language its editing
13:08:27 <basti_> i'd want too
13:08:37 <goron> Yi should do that sometime. (think vaporware)
13:08:44 <goron> ;)
13:08:46 <basti_> emacs should do it first.
13:08:53 <basti_> :P
13:09:05 <goron> basti_: AFAIK even Lisp isn't completely parsed.
13:09:09 <thedward> you could implement Haskell in emacs lisp
13:09:21 <wagle> werent they going to move to escheme from elisp a couple years ago?
13:09:29 <basti_> it can't be too hard to parse lisp. you just need to count braces. or am i missing something delicate?
13:09:30 <thedward> I have a friend who wrote (most of) a jvm in elisp
13:09:42 <goron> basti_: But maybe I am wrong.
13:09:54 <wagle> basti_: strings, comments, backslashed chars, ...
13:10:01 <basti_> wagle: parser matter.
13:10:11 <goron> I want an editor that uses my computer cycles. We don't live in the eighties anymore.
13:10:14 <wagle> basti_: ?
13:10:16 <basti_> uhm
13:10:25 * basti_ tip of tongue
13:10:26 <thedward> they've been "going to move to scheme" ever since I've heard of emacs (about 11 years).
13:10:50 <basti_> theres two levels in a parser... regexes first, to collect tokens, and then Knuth-2 language
13:11:09 * wagle sees a great need for ehaskell
13:11:14 <basti_> a string would collapse to a single token on the regex level
13:11:31 <thedward> is Yi usable yet? I haven't played with it.
13:11:45 * basti_ only cares for yi-emacs
13:11:59 <pejo> wagle, (speculation) What about eclipse iwth  haskell plugin?
13:12:00 <basti_> i don't know vi well enough for trying the vi workalike interface thoroughly
13:12:07 <thedward> the vim and emacs modes should be invoked as 'yim' and 'yimacs'
13:12:08 <basti_> yi as no syntax highlight so far
13:12:08 <wagle> i just get messed up by emacs not recognizing a backslashed paren to not be a paren (etc etc)
13:12:31 <basti_> wagle: yes. This sort of stuff sucks.
13:12:33 * goron used yi as a nano replacement for commit messages on his old system.
13:12:57 <wagle> pejo: i've been playing with eclipse with c (gcc and linux kernel source)..  it gets confused
13:13:20 <pejo> wagle, ah, you wanted support for some other language. :-)
13:13:27 <basti_> we should put exactly the parser that the actual compiler is using into the editor
13:13:36 <wagle> hence my original comment about wanting an editor that really understood the syntax
13:13:45 <thedward> basti_ : just build yi into ghc?
13:13:49 <thedward> or vice versa
13:13:50 <basti_> is it possible to escape from elisp to haskell?
13:13:54 <basti_> thedward: rather vice versa ;)
13:14:03 <thedward> that sounds reasonable
13:14:05 <basti_> you'd just need the parser, which is a tiny slice of the actual compiler
13:14:20 <thedward> why stop there, though? :)
13:14:33 <wagle> pejo: well, there isnt a real haskell plugin for eclipse yet, and i'm trying to find a way to better treat linux distributions as data objects
13:14:54 <basti_> thedward: what would be the next step in your opinion?
13:15:35 <pejo> wagle, ah, ok. I'm running Solaris, makes java apps pretty useless for my desktop.
13:16:07 <wagle> pejo: also i wanted to try a "production quality" eclipse pluging before playing with experimental/prototype plugins
13:16:22 <astrolabe> The interface to compilers is quite crude.  There is the code, pragmas and switches.  Maybe something more interactive would be worthwhile.
13:16:23 <basti_> eclipse is an ugly elephant
13:16:35 <wagle> pejo: eclipse makes java useless, or solaris?
13:16:42 <goron> ghc as a lib, anyone?
13:16:56 <wagle> basti_: using the latest eclipse?
13:17:07 <basti_> wagle: not using eclipse at all. tried it now and then
13:17:10 <pejo> wagle, Solaris. Everything is dog slow, esp with some latency. I simply don't bother, but 1.5 might have solved stuff.
13:17:38 <basti_> rises like yeast, goes like a oil tanker in syrup, tons of features though.
13:17:44 <wagle> i'm still macosx 10.3, so am stuck with java 1.4.2 for a while
13:18:45 <wagle> i'm going to try out intellij idea next, but i think its only java
13:19:21 <pejo> wagle, hm. Does visual studio for mac exist? Read soemthing about haskell plugin for it.
13:20:15 <wagle> well, you can run windows in virtual pc
13:20:17 <goron> One good thing about Emacs is that it's so *open*.
13:21:31 <goron> A bad thing is that configuration of your .emacs file becomes an obsession for a lot of people.
13:21:42 <basti_> it isnt for me
13:22:02 <wagle> what i want is visualization of the entire compilation process with the ability to formulate queries within and across stages
13:22:07 <basti_> i think i have 4 lines in it, to hook in some modes
13:22:27 <wagle> i want aspects that change what the compiler does
13:22:40 <mwc> Well, looks like HP has fired the 'father of OOP'
13:22:45 <wagle> i want dynamic aspects that permit the program to repair itself
13:22:48 <basti_> yea heard about it
13:22:50 <mwc> I'm glad to see that he's finally being punished for his crimes.
13:22:51 <goron> mwc: that's old news.
13:22:54 <basti_> *G*
13:23:50 <wagle> goron: i recently finished reading the book "The Pragmatic Programmer", and they had a big point of "You must completely master your editor"
13:24:18 <goron> wagle: Well, why not use gedit? That's easy to master. :D
13:24:28 <mwc> Does anybody know of a tool like indent for haskell code?
13:24:29 <wagle> it being your primary tool.  the faster and more facile you are with it, the better your skill at programming
13:24:35 <mwc> something to pretty it up
13:24:47 <Lemmih> mwc: There's haskell-src-exts.
13:24:54 <goron> wagle: In general: when something is easy for you, you can do more complex stuff.
13:25:18 <wagle> goron: haha..  the point is to be able to perform MAJOR miracles on a regular basis..
13:25:31 <goron> wagle: If the threshold of typing an 'e' is high, you would never accomplish anything.
13:25:46 <goron> wagle: right
13:25:48 <basti_> so what is "mastering" your editor?
13:26:00 <goron> basti_: Writing your own, I guess.
13:26:10 <basti_> mmmk
13:26:11 <wagle> learning all the intricities
13:26:23 <wagle> automation
13:26:41 <wagle> make common tasks as easy as possible
13:26:46 <pejo> goron, thats just reinventing the wheel, spending time that would have been better spent doing other stuff.
13:26:57 <goron> pejo: I was joking.
13:27:20 <pejo> goron, I have no sense of humor.
13:27:48 <wagle> goron: its true..  he has none at all..
13:27:51 * wagle runs
13:28:01 * Oeje1 seconds that.
13:28:07 * Oeje1 runs too.
13:28:08 <goron> Riot!
13:28:17 * goron runs harder
13:28:24 <goron> er faster
13:28:36 * wagle runs better
13:28:37 * Lemmih grabs his microwave riot gun.
13:28:54 <Oeje1> Noooo, I want to try it too.
13:29:00 * goron gets Wicked Sick bonus.
13:29:04 * wagle gets really warmed up
13:44:59 <Oeje1> wagle: Do people still use editors?  Ain't that so nineteen eighties?  I thought is was all Eclipse like IDEs these days.
13:47:09 <mwc> IDEs? Do SCons and Vim count?
13:47:55 <Oeje1> mwc: Grrrr, no!
13:49:00 <mwc> What's so good about an IDE anyways?
13:49:40 <mwc> It seems to be a mediocre editor paired with a bunch of pretty buttons as graphical sugar for a makefile
13:49:46 <wagle> Oeje1: i wrote a (semi-serious) scheme interpreter in java, really pushing subtypes..  most all the if statements disappeared into a large soup of tiny methods calling each other.  emacs was horrible for this..  for any particular screen, only 3-5 lines (the current method of interest) were what i wanted to see, the rest of the screen was irrelevant noise... i really wanted to be able to do things like "show me the foo method in all these classes"..
13:50:27 <mwc> wagle: there's some java based project to do that
13:50:32 <wagle> now (finally!) i'm learning some ide's to see how well i can do this sort of thing
13:50:47 <mwc> they call it "Hypersource" as a bastard portmanteau patterned after Hypertext
13:51:51 <mwc> wagle: grep couldn't cut it? :P
13:52:03 <wagle> for haskell, i really want a navigator _for code that doesnt typecheck_ that allows me to ask it what type it thinks "this thing here" has
13:53:07 <mwc> Seems like that would be a compiler mode
13:53:10 <basti_> http://kqe.de/pruell/sauf-oder-stirb.jpg
13:53:25 <mwc> a switch to have it vomit all its type deductions if a type verification fails
13:54:01 <Oeje1> A language syntax should really try to be the following three at once: Easy to read, easy to parse and easy to edit by hand or programmatically.
13:54:03 <wagle> mwc: neat
13:54:21 <mwc> basti_: I don't know what's worse... to be in the middle of a gay fetish gangbang, or to be drowned in malt liquor
13:54:35 <basti_> mwc: mmmmh
13:55:01 <mwc> wagle: for what its worth, post it on the GHC list, seems like it would be fairly easy to do
13:55:24 <Oeje1> basti_: Oh, no.  One can only imagine the pain if he gets the bear in his nose.
13:55:33 <mwc> or eyes?
13:55:50 <mwc> I wonder if the base physician has treated many yeast infections of the cornea :P
13:56:05 * mwc visualizes the poor bastard squeezing Monistat into his eye
13:56:34 <basti_> i dont want to know, honestly ;)
14:00:11 <mwc> brb
14:29:37 <mikael> Hey.  The GHC packages in Debian Unstable need rebuilding, I think.
14:30:48 <mikael> I'd rebuild it myself if ghc didn't depend on ghc.  :-)
14:36:45 <SyntaxNinja> mikael: why do you think it needs rebuilding?
14:37:38 <mikael> They depend on libgmp3, which has been replaced.
14:38:55 <arjanoosting> mikael: just wait for a little while until ghc 6.4.1 is released (ghc 6.4 does not compile with gcc 4.0)
14:39:06 <mikael> Lots of unstable packages seem to need rebuilding lately...
14:39:44 <arjanoosting> mikael: yes because of the c++ transition (but that is unstable :)
14:39:54 <mikael> Ah!  That makes sense.  Thanks.
14:42:04 <SyntaxNinja> mikael: you could maybe rebuild it if you get a binary version from someplace
14:43:01 <Igloo> The binaries in the debs will work fine
14:43:06 <mikael> Yeah...  I can probably dig up something in some apt cache.
14:43:15 <Igloo> From the C library's PoV it's a gratuitous name change
14:43:23 <Igloo> Unfortunately it was bundled with a C++ lib
14:50:25 <arjanoosting> SyntaxNinja: I know I have asked you this before but I want to submit my NM application; do you want to be my advocate?
14:53:09 <SyntaxNinja> arjanoosting: I think so :) I haven't had much extra time lately, but I could probably make time for that.
14:54:33 <arjanoosting> SyntaxNinja: I don't think it takes much time, at least not at much time as it will take from me ;)
14:56:53 <Igloo> Looking at the nm stats it looks like it won't take much time at all for a while  :-(
15:01:37 <arjanoosting> Yeah, well I don't think the queue will get any shorter for a long time...
15:03:38 <Igloo> I'm not sure if processing will pick up after the post-release developing dies down
15:25:06 <[1]alex> anyone here know why threads or sockets would behave differently on windows vs unix?
15:25:36 <[1]alex> I have a server that when started at the ghci command line requires me to keep hitting enter to get it to respond on unix.
15:25:41 <[1]alex> on winxp it works fine.
15:26:10 <Lemmih> Buffering issues?
15:26:37 <[1]alex> maybe.  would they be platform dependent?
15:28:17 <Lemmih> Try turning buffering off on stdin.
15:28:29 <[1]alex> the code doesn't read from stdin...
15:28:36 <Lemmih> Baf. s/stdin/stdout/
15:28:59 <[1]alex> oh thats interesting/wierd.
15:29:10 <[1]alex> how do I do that?
15:29:37 <Lemmih> hSetBuffering stdout NoBuffering
15:29:46 <Lemmih> @type System.IO.hSetBuffering
15:29:51 <lambdabot> GHC.IOBase.Handle
15:29:51 <lambdabot>          -> GHC.IOBase.BufferMode
15:29:51 <lambdabot>          -> IO ()
15:29:59 <Lemmih> @type System.IO.BufferMode
15:30:00 <lambdabot> bzzt
15:30:25 <Lemmih> Oh well.
15:32:04 <[1]alex> too much stuff is memory so compile is really sloww right now.
15:32:55 <[1]alex> ok it compiles....
15:33:50 <Igloo> You can't ask for the type of a type
15:34:09 <Lemmih> Yeah, I know. Meant @info but that has been removed (:
15:34:19 <Igloo> Oh, how come? Too verbose?
15:34:33 <arjanoosting> SyntaxNinja: I have just submitted my NM application :)
15:34:49 <Igloo> Cool  :-)
15:35:53 <[1]alex> setting no buffering didn't help.
15:36:18 <[1]alex> I can try setting it on stdin too but I don't see why it is blocking either way.
15:36:40 <[1]alex> is there some issue with having to forkos because two different threads are doing IO?
15:47:07 <SyntaxNinja> arjanoosting: good luck!!
15:47:28 <Lemmih> What's NM?
15:47:53 <SyntaxNinja> Lemmih: you have to be in The Cabal to know what it means
15:47:59 <arjanoosting> New Maintainer application
15:48:02 <arjanoosting> SyntaxNinja: lol
15:48:25 <SyntaxNinja> Lemmih: it's the word that people who aren't in The Cabal use to indicate that they want to be in the cabal. once they're let in, they're allowed to know what it means.
15:48:45 <arjanoosting> it is very confusing to have Cabal in  both the Debian and Haskell community
15:48:58 <arjanoosting> :)\
15:48:58 <SyntaxNinja> arjanoosting: well, there's no debian cabal.
15:49:34 <arjanoosting> so they all say.... :-D
15:49:45 <Lemmih> ahh...
15:52:25 <arjanoosting> SyntaxNinja: i have sent you an email about advocating me (which consists of visiting  http://nm.debian.org/nmadvocate.php?email=arjanoosting@home.nl and following the steps there)
15:53:07 <SyntaxNinja> arjanoosting: thanks.
15:53:20 <SyntaxNinja> maybe I can dig out of my backlog of work this weekend and upload my sponsored packages...
15:54:16 <Igloo> If they use ghc then remember they won't build in unstable, so uploading them there isn't worth spending time on
15:55:07 <jlouis> tuomov: thankyou for ion3!
15:55:24 <Igloo> (IMO, at least)
15:55:39 * SyntaxNinja nods
15:55:55 <SyntaxNinja> Igloo: speaking of which, a proper cabal release and upload will probably wait for 6.4.1.
15:56:26 <Igloo> Oh, that reminds me
15:56:33 <SyntaxNinja> pressure is on, JaffaCake ;)
15:56:54 <Igloo> There was a discussion earlier about how to get the necessary files into a package for setup register. I remember talking to you about that a while ago, but don't remember the outcome
15:57:49 <SyntaxNinja> well, if you use the --gen-script option, then you don't need anything besides the generated script.
15:58:04 <SyntaxNinja> in theory ;)
15:58:40 <Igloo> Aha, ta
15:59:09 <Igloo> vegai: You hear that?  :-)
15:59:56 <dcoutts> SyntaxNinja, actually we (the Gentoo packaging folk) were hoping for something more flexable that the --gen-script option
16:00:28 <dcoutts> the script that is generates doesn't quite do the right thing for the gentoo packaging model
16:00:45 <dcoutts> and so at the moment we have to hack the script that is generated
16:01:09 <Igloo> Is HaskellDB generally considered the thing to use for Haskell database stuff, BTW?
16:01:38 <dcoutts> SyntaxNinja, it'd be much easier for us if there were an option to just give us the package file that needs to be registered and we'll do the registering bit
16:02:15 <dcoutts> ./Setup.lhs register --gen-pkg-conf or something similar
16:03:05 <dcoutts> if we sent you a patch is there any chance it'd get into the Cabal 1.2 release?
16:03:36 <Igloo> What is SEtup register wants to do something other than register with the impl?
16:03:56 <dcoutts> then it shall be smote!
16:04:21 <Igloo> :-)
16:04:35 <dcoutts> like what? what can you expect to do apart from producing a thing to register?
16:05:11 <dcoutts> you're not allowed any custom post install thingies, it doesn't play nicely with packaging systems
16:05:36 <Igloo> Plays perfectly happily with Debian's  :-)
16:05:47 <Igloo> Do you knot have an equivalent of Debian's postinst script then?
16:06:23 <SyntaxNinja> dcoutts: I remember this. hmm.
16:06:29 <dcoutts> we can do post install things in the ebuilds fine, but it'd be a bit of a concern to allow the setup to run its own actions
16:06:32 <Igloo> (I haven't thought about reasonable other things that could be done)
16:06:50 <dcoutts> so we do the package registering as a post install action
16:07:30 <Igloo> Because setup is run as root and you assume root won't be using the package, you mean?
16:07:56 <dcoutts> we'd really rather not let the setup do things outside of the build sandbox
16:08:16 <SyntaxNinja> dcoutts: one problem with that is that it breaks abstraction between haskell compilers.
16:08:24 <dcoutts> we'd then have to look at the code that it's going to run which means more manual checking of things
16:08:39 <Igloo> OK, so you could use what cabal has now, but you'd rather not in case it does naughty things?
16:08:53 <dcoutts> SyntaxNinja, that's ok, the packaging systems are already very intimate with the haskell compilers
16:09:32 <SyntaxNinja> dcoutts: I think you could just write a little external program to read the necessary junk from the .cabal file and produce the thing yourself.
16:09:59 <SyntaxNinja> dcoutts: that is, just use cabal's library to do the registration step yourself; it would even be portable across compilers :)
16:10:27 <dcoutts> Igloo, we do use the --gen-script thing, but that gets run before merging into the filesystem, no cabal setup code operates on the 'live' filesystem
16:10:44 <dcoutts> SyntaxNinja, I'm not sure I follow that list bit
16:11:13 <SyntaxNinja> dcoutts: you don't want to run a program within the package, right? but you wouldn't mind it if you wrote the program and it's just a part of the build dependencies of the package?
16:11:16 <dcoutts> isn't there a lot of information that cabal adds to the .cabal file to produce the info it feeds to ghc-pkg ?
16:12:15 <SyntaxNinja> yeah, but you can use the cabal library to produce it.
16:12:41 <dcoutts> SyntaxNinja, so we write a prog that uses the Distribution.* modules to produce the installed package info from the .cabal file
16:13:25 <SyntaxNinja> exactly.  just look at the RegisterCmd bit in Distribution.Simple, it's like 7 lines long, remove the hook-related stuff (replace hookOrInArgs with readPackageDesc or whatever it is) and you should be set.
16:13:33 <dcoutts> SyntaxNinja, is there another way that does not break the abstraction but works with packing systems better?
16:13:59 <dcoutts> debian just runs the script produced by setup register --gen-script then?
16:14:28 <SyntaxNinja> dcoutts: what do you mean 'works with packaging systems better'?
16:15:09 <dcoutts> the point of course is that we can't actually register at the time the package is built because we can't modify the live filesystem, only do stuff in the temporary directory
16:15:14 <SyntaxNinja> dcoutts: I'd rather not add flags to register to tell it to do compiler-specific things
16:15:43 <Igloo> Surely register already does compiler-specific things?
16:16:05 <SyntaxNinja> dcoutts: right, but you can run a program that you trust during the installation step, right?
16:16:15 <SyntaxNinja> dcoutts: or are you only allowed to move files?
16:16:22 <dcoutts> so anything that needs to run after merging the package into the filesystem needs to be done by the packaging system in post-install actions
16:16:36 <dcoutts> we can run things after moving the files
16:17:00 <SyntaxNinja> Igloo: register is a generic interface. it DDRT for multiple compilers.
16:17:51 <SyntaxNinja> dcoutts: right, so if you write the 5-line-long program I'm suggesting, then you can verify that program isn't evil yourself, although I guess i'm not sure why gen-script doesn't do what you want, except that you can't trust it.
16:18:30 <dcoutts> it's not that we can't trust the gen-script result it's just that it didnt' to the right thing for us
16:18:35 <Igloo> Oh, ISWYM
16:18:55 <dcoutts> let me see what hacks we had to use...
16:19:00 <SyntaxNinja> dcoutts: OK. I forget the details.
16:19:08 <SyntaxNinja> dcoutts: but seriously, this idea of mine is very easy :)
16:20:10 <dcoutts> ok
16:20:38 <SyntaxNinja> and it'll dtrt for multiple compilers :)
16:20:59 <dcoutts> re the hacks, we were turning off --auto-ghci-libs, and registering in a local package config file rather than the global one
16:21:11 <dcoutts> SyntaxNinja, that sounds good :-)
16:21:31 <SyntaxNinja> dcoutts: oh hm. then actually, the register function won't work for you :(
16:21:39 <SyntaxNinja> dcoutts: but I have a compromize...
16:22:30 <SyntaxNinja> I'd accept a patch to parameterized the register function with a local package config and whether or not to generate the ghci libs
16:23:11 <SyntaxNinja> well, actually for those I might add flags; though the ghci-libs thing is kinda compiler specific.
16:23:15 <SyntaxNinja> I think i was goign to move that...
16:23:37 <dcoutts> yes, doing the ghci-libs during build would be better
16:24:03 <dcoutts> I think we talked about that before too :-)
16:24:15 <SyntaxNinja> http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=308263
16:24:18 <SyntaxNinja> so I have that one on the todo list
16:24:37 <SyntaxNinja> and this one: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=317803
16:24:59 <SyntaxNinja> so I'd be happy to have patches for those two wishlist items, which would perhaps make the gen-script option work for you
16:25:39 <dcoutts> for reasons I can't quite remember now we want to keep the installed package conf files around which is why we didn't want to just register in the globabl package.conf file
16:26:21 <Excalibor> greetings
16:26:25 <dcoutts> SyntaxNinja, ok cool, I'll see if we can find the time to make patches for those features
16:26:33 <SyntaxNinja> sweet
16:26:53 <dcoutts> then we can simplify our haskell-cabal.eclass and standardise on cabal-1.2
16:27:05 <SyntaxNinja> although I'd like the with-packag-conf feature to be more generic, fwiw.
16:27:15 <dcoutts> how so?
16:27:36 <SyntaxNinja> cabal doesn't have a concept of a package config file (from the outside)
16:27:50 <SyntaxNinja> just --user and --global. so if we could get away with --in-place or something, that would be best.
16:27:56 <SyntaxNinja> because not all compilers have package config files.
16:28:26 <SyntaxNinja> see what I mean?
16:29:07 <dcoutts> yeah, the package config repo thing is not the nicest, we'd really prefer just a collection of "installed package info" files (or whatever they are called - the things that you pass to (g)hc-pkg register)
16:30:42 <SyntaxNinja> dcoutts: there's info in that one bug for how to generate ghci files, which I probably got from you :)
16:31:15 <dcoutts> which in turn I got from the ghc-pkg code
16:31:17 <SyntaxNinja> dcoutts: well, you could just alter the configure function itself to do everything-but-ghc-pkg, and then use the first "clever" option I had.
16:31:42 <dcoutts> yes
16:32:09 <dcoutts> btw as I mentioned before, that code snippet does not work on solaris or macos x
16:32:33 <dcoutts> (yes apparently it's true, ghc-pkg --auto-ghci-libs does not work on solaris or macos x)
16:33:05 <SyntaxNinja> I've heard complaints about macos x
16:33:13 <SyntaxNinja> well that's lame.
16:33:27 <gzl> like, in general, or with respect to that flag? :)
16:33:55 <dcoutts> gzl, just that flag --auto-ghci-libs
16:34:36 <dcoutts> SyntaxNinja, but if you're doing it during the build step you don't need to go via the .a file, just link all the .o files into one .o file, this is what the ghc build system does (which is why it works on solaris & macos x)
16:35:00 <dcoutts> ask JaffaCake for details on that bit
16:37:28 <gzl> what's useful about the flag?
16:37:34 <gzl> the one-line description isn't telling me much
16:38:14 <dcoutts> it produces the ghci HSfoo.o files for the libHSfoo.a files
16:38:25 <dcoutts> it means your package will work with ghci
16:39:16 <dcoutts> ghci dynamically loads package .o files, ghc ststically links to package .a files
16:39:26 <dcoutts> ststically/statically
16:40:05 <gzl> ah, cool
16:40:10 <gzl> yeah, then it sucks that that's broken
16:40:32 <dcoutts> it's been broken for ever and people don't see to complain
16:40:42 <dcoutts> I don't understand
16:40:55 <gzl> haha
16:41:03 <gzl> yeah, I've never used ghc-pkg.
16:41:10 <dcoutts> maybe solaris and macosx users only use the standard packages that come with ghc
16:41:20 <Igloo> It's only people packaging things for broken systems who might possibly complain, isn't it?
16:41:41 <dcoutts> or people building from source themselves and trying to use ghci
16:41:42 <Igloo> There's no benefit to using it for things you are just compiling yourself, right?
16:41:50 <arjanoosting> ghc --make does the right thing on solaris?
16:42:11 <dcoutts> arjanoosting, yes it does
16:42:44 <dcoutts> Igloo, well it's the easiest way to build ghci libs
16:55:18 <fnord123> Hi all
16:59:28 <lispy> i found a paper that compares a toy program written independently by several programmers in each of the languages C, C++, Java, Rexx, Tcl, Perl and Python.  They found that differences between programmers using the same language seems to make more difference than changing languages.
17:02:50 <mflux_> I don't think that's really that much of a surprise, they are more or less similar languages. It would be more interesting to have something of the ML-camp or Haskell in too..
17:03:08 <Excalibor> okay, time for bed... good night!
17:10:23 <lispy> mflux_: i think python is quite a bit different from C
17:10:53 <lispy> and the C implementations did quite well
17:11:26 <lispy> i think the difference between C and Python was less than the difference between C and Java in most categories
17:11:29 <fnord123> anyone looked at the yi project? I'm more of a schemer, but if this thing is rolling nicely I might like to learn haskell to see if i can help
17:11:46 <lispy> fnord123: yes, yi is rather interesting
17:11:53 <lispy> fnord123: dons is the author
17:11:59 * lispy pokes dons 
17:12:18 <dcoutts> fnord123, go for it, progress on the gtk gui interface would be especially cool :-)
17:12:25 <lispy> fnord123: i've been toying with creating an elisp interpreter for Yi
17:12:49 <dcoutts> lispy, huh? but Yi should be extened in Haskell! :-)
17:13:01 <dcoutts> it already uses hs-plugins
17:13:06 <fnord123> i dont even have hugs installed :-/
17:13:09 <lispy> dcoutts: yes true.  But it would also be nice if i could use it as a drop in replacement for emacs
17:13:33 <lispy> fnord123: neither do i.  I prefer GHC
17:13:54 <dcoutts> lispy, I fear the internal apis would be too different to allow emacs elisp code to be dropped in and made to work
17:14:20 * heatsink wishes it only had to use the module name once when invoking a type constructor Module.Con {Module.field1 = value1, Module.field2 = value2}
17:14:39 <fnord123> i looked at the code before. theres like less than a thousand lines..
17:14:43 <fnord123> how complete is this?
17:14:44 <dcoutts> the elisp fudge layer would probably amount to rewriting emacs (at least the C parts of it)
17:14:46 <lispy> dcoutts: i think by plugging the elisp interpreter into the Yi framework just right that won't be a problem
17:16:10 <lispy> dcoutts: who knows, maybe it's a lost cause.  But I have a lot of elisp I don't want to immediately port.  Take gnus for example.
17:16:26 <lispy> maybe there needs to be an elisp -> haskell translator :)
17:16:31 <Number17> does haskell have a binary shift operator built in?
17:16:43 <mikael> Number17: no, but there's one in Data.Bits, I think
17:16:56 <fnord123> so is ghs the accepted platform?
17:17:18 <fnord123> or is this channel like #scheme where they all like some obscure implementation (s48)
17:17:22 <dcoutts> lispy, I don't think that's the hard part, it's providing the api/environment that the elisp code expects to run in that's probably the hard bit
17:17:23 <lispy> fnord123: ghc is very widely used these days, and it has ghci which is interactive in the way hugs is
17:17:49 <mikael> last time I checked, not even #scheme could decide on a scheme system :-)
17:18:13 <dcoutts> fnord123, yes basically everyone uses ghc/ghci for serious work, and hugs for the occasional small thing
17:19:10 <Number17> mikael:  eh, ok, thanks
17:19:32 <lispy> ghci has better error messages than hugs, IMHO
17:19:41 <lispy> meaning it's nicer for n00bs
17:19:41 <fnord123> mikael: no no, it's overrun by chicken and s48 users
17:20:02 <fnord123> when i find plt and chez users mostly on the web (and bigloo since i am on the bigloo mailing list..)
17:20:08 <dcoutts> lispy, yes we're finally going to switch from hugs to ghci for our new students
17:20:47 <Number17> speaking of ghc, is it possible to make binarys smaller; on x86 32-bit linux they're ~250KB for the smallest, and on windows it's upwards of 500KB
17:21:05 <lispy> Number17: i think you can run strip on them
17:21:40 <dcoutts> Number17, appart from strip (which helps quite a bit) we'll have to wait for ghc to support building packages as shared libs
17:22:00 <fnord123> dcoutts:  which uni?
17:22:11 <dcoutts> fnord123, oxford uk
17:22:13 <Number17> lispy: yes, that brought a 277KB binary to 162KB
17:22:16 <Number17> thanks :)
17:22:22 <lispy> np :)
17:22:46 <dcoutts> Number17, with shared libs we wont need to include the whole rts + standard lib into hello world
17:22:59 <shapr> fnord123: The only feature missing from yi is syntax highlighting. dons is doing (part of?) his thesis on Yi so it's definitely rolling.
17:23:03 <lispy> dcoutts: is building them as a shared lib a difficult technical problem or just waiting for someone to finish the code?
17:23:24 <fnord123> k
17:23:49 <shapr> fnord123: Have you read the research paper on Yi and lambdabot?
17:23:59 <fnord123> i shouldn't get sidetracked i think though... it wont help me finish my partial evaluators and interpreters. shapr, i read some of it
17:24:01 <dcoutts> lispy, it's somewhat difficult as it requires the generated code to be position independent
17:24:13 <dcoutts> it's getting closer to working however
17:24:27 <shapr> fnord123: Well, come back when you're done with your peval and interpreters, we'll be glad for more people :-)
17:24:32 <Number17> alright; since all the standard libs are built in, can I take binaries from ghc and run them on pretty much any linux on the same arch (and with the same C ABI)?
17:24:37 <dcoutts> fnord123, you work on partial evluation?
17:24:44 <fnord123> im trying to learn about it
17:24:47 <Number17> without having to worry about libaries
17:24:51 <fnord123> and apply it to other languages
17:24:57 <fnord123> (other as in not ml or scheme)
17:25:06 <dcoutts> fnord123, which languages are you targeting?
17:25:14 <fnord123> fortran :D
17:25:18 <lispy> Number17: hmm...i think so.  You may get better results with static linking too.
17:25:23 <dcoutts> fnord123, ha!
17:25:39 <dcoutts> fnord123, I'm working on pe with haskell
17:26:02 <fnord123> none of the papers do what i think it bleedingly obvious though: add a pattern matcher to the function to check if the args match
17:26:17 <fnord123> when you dont have to peval the program, just functions..
17:26:35 <dcoutts> hmm, not sure I follow
17:28:11 <fnord123> (define-peval something (lambda (a b c d) ...) '((?a ?b 3 4) (1 ?a 3 ?a)) -> a function that received 4 args and patterns matches to see if it should run the he pevaled versions based on the given arg lists
17:29:04 <dcoutts> you mean do a dynamic test and if it matches then use the specilised version of the function?
17:29:18 <fnord123> yea
17:29:32 <fnord123> theres a tradeoff there but in some cases it could be a gigantic win
17:29:56 <fnord123> and of course, being self applicable would remove the pattern matching if you didn't define any arg patterns
17:30:06 <dcoutts> ok, the test has some run time overhead, and would be less than ideal if there are loads of specilised versions
17:30:12 <fnord123> would->should :)
17:30:22 <dcoutts> but I guess there are some situations where it would still be a big win
17:30:41 <dcoutts> you're working on an untyped language?
17:30:46 <fnord123> in the programs ive studied theres a power law on the argument
17:30:47 <fnord123> arguments
17:31:13 <fnord123> so i think in most cases, it would be a big win
17:31:47 <fnord123> yeah i thought fortran would be good since i work with it at work
17:31:58 <fnord123> and we need to speed up our system (even more)
17:32:12 <dcoutts> interesting, it sounds useful! :-)
17:32:29 <dcoutts> (unlike most PE systems)
17:33:03 <fnord123> C++ can do this, but it doesnt have full function arg specialisation so its a bit wonky
17:33:19 <dcoutts> C++ templates you mean?
17:33:25 <fnord123> i first ran into peval from currying though. i just assumed currying would peval
17:33:29 <fnord123> yeah c++ templates
17:34:03 <dcoutts> I imagine some graph reduction evaluation systems could do a form of dynamic PE
17:34:15 <dcoutts> which would make currying to PE
17:35:01 <fnord123> yeah. i suspect theres something like the Y combinator out there that could dynamically peval a lambda expression if it had knowledge of the guts
17:35:15 <dcoutts> but mostly people talk about PE doing "syntactic currying" in contrast to typical currying
17:36:09 <fnord123> hm, well how about i delegate this work to you and then i can go work on yi
17:36:26 <dcoutts> heh
17:36:58 <dcoutts> yes, go work on yi, we'll all benefit (especially when we build our Haskell IDE on yi)
17:39:26 <fnord123> well i found the combinator in lambda calc in a danish paper. (I think...). but scheme is eager and haskell is lazy. and lambda calc is lazy...... so i've been converting it to scheme. but im enchanted with the idea of cheating
17:39:30 <fnord123> :)
17:40:45 <fnord123> http://repository.readscheme.org/ftp/papers/topps/D-141.pd
17:43:40 <dcoutts> I think most of the content of that paper appears in Jones' '93 partial evaluation & automatic program generation book
17:43:54 <dcoutts> (which is available online)
17:45:46 <lispy> someone should build some collabrative editing tools for Yi
17:46:02 <lispy> steal ideas from SubEthaEdit(sp?)
17:47:04 <lispy> is it wrong that i'm viewing Yi as less of an editor and more as an application platform?
17:47:16 <lispy> i think i've spent too many years in emacs...
17:47:42 <dcoutts> I want to base an IDE on it, if that's any consolation
17:47:44 <fnord123> oh i have that but in post script - which looks like poo in preview on osx
17:48:07 <dcoutts> fnord123, even with AA turned on?
17:48:09 <fnord123> YES!!!!!!1 I want to  work on yi to help gank AWESOME ideas from subethaedit
17:48:13 <lispy> fnord123: surely you can open it in Acrobat tho?
17:48:15 <fnord123> yes with aa
17:48:23 <dcoutts> hmm
17:48:34 <lispy> fnord123: might look better in Acrobat, but i have no idea :)
17:49:04 <fnord123> SEE fits the workflow of people working in industry. get someone in training? slip em in SEE and have them watch and help
17:49:14 <fnord123> but alas not many use macs at work
17:49:20 <lispy> ya
17:49:23 <lispy> and it's not free
17:49:31 <fnord123> its not open
17:49:37 <lispy> that either
17:49:47 <lispy> to me free means GPL or similar
17:49:56 <fnord123> k
17:50:31 <fnord123> thats so awesome. i come in here and meet people studying peval and working on yi to give it features i was going to suggest from SEE
17:50:53 <lispy> well, i don't know that anyone has started doing that :)
17:51:01 <lispy> just an idea on the table so to speak ;)
17:51:21 <fnord123> 50 cups of coffee and you know its on
17:51:26 <lispy> hehe
17:51:59 <lispy> fnord123: in general lots of intellectuals with good ideas hang out here
17:52:59 <lispy> and #haskell is much tamer than most language channels on freenode.  Less trolls, and less bigots :)
17:53:11 <lispy> but i must catch the bus, so ttyl
17:53:52 <fnord123> take care!
17:54:22 <fnord123> considering ive been sitting in emacs, lisp, and scheme, freenode isnt very bigoted imo
17:58:55 <int80_h> yeah I think any "our language is better than yours." is hyperbole and meant in jest, alot of the time.
17:59:02 <fnord123> im guessing make way=static is pretty useless as this is a very dynamic program
17:59:46 <fnord123> at least MLers, lispers, haskellers, and erlangers have something to back it up
18:00:03 <fnord123> its worrying when it comes from C++ers
18:01:11 <fnord123> sweet. i built yi and ran it. :D now to look for haskell packages for networking
18:06:52 <jlouis> heh, go-fish.. a net-working package for haskell. Too bad it only exist in my mind
18:07:54 <Igloo> Eh? There is a network package, unless you ment something high level or something
18:18:36 <fnord123> so the following lib doesn't work well? http://www.haskell.org/ghc/docs/latest/html/libraries/network/Network.html
18:20:46 <dons> works fine
18:21:51 <fnord123> "jlouis: heh, go-fish.. a net-working package for haskell. Too bad it only exist in my mind"
18:22:42 <fnord123> good morning don
18:23:07 <dons> hey
18:23:17 <dons> looking to do some yi hacking?
18:23:31 <mwc> Hmm, this kind of bugs me: connectTo :: HostName -> PortID -> IO Handle
18:23:39 <mwc> shouldn't that be "Maybe IO Handle
18:24:10 <Igloo> It presumably throws an exception if it fails
18:24:28 <mwc> yeah, just don't know if I want to handle it that way
18:25:03 <fnord123> i built it. i dont know haskell but im bashing way furiously
18:25:13 <Igloo> Something like try will give you IO (Maybe Handle)
18:25:26 <mwc> heh, I was gonna finish off the school of expression this weekend
18:25:48 <mwc> but I'm going to be doing some Urban Infiltration at an abandonned psych hospital
18:30:23 <mwc> what will we be calling the GTK2 frontend for Yi?
18:30:46 <Number17> Yi Gu?
18:30:48 <fnord123> WEE!
18:31:02 <fnord123> tee hee!
18:31:14 <Number17> after a chinese food place called "Yi Fu" that got shut down from rat feces being in the food
18:31:20 <mwc> I was thinking gu-yi as a pun at how people pronounce GUI as "gooey"
18:31:34 <Number17> that's even better
18:32:32 <dons> gu-yi is fun
18:32:33 <fnord123> i dunno. a gui shouldnt be priority should it?
18:32:42 <fnord123> who even uses a gui to edit text/
18:32:50 <mwc> not really, no, but it provides for access to nicer text systems than most terminals do
18:32:58 * fnord123 thought everyone xtermed and used vim or emacs
18:32:59 <mwc> personally I like my antialiasing
18:33:09 <fnord123> my xterms have it :)
18:33:09 <Number17> fnord123:  SciTE
18:33:11 <dons> xterm antialiases these days
18:33:12 <mwc> I use the OS X native frontend for Vim mysefl
18:33:19 <dcoutts> and it'll allow use to start using Yi as the basis for an IDE :-)
18:33:22 <mwc> yeah, not the same somehow :P
18:33:27 <Number17> don't use it for haskell though, emacs is much nicer than that
18:33:30 <dcoutts> having a GTK UI I mean
18:33:31 <dons> but a gtk2 gui is on the list of thing todo
18:33:36 <fnord123> what do guis have to do with ides?
18:34:06 <fnord123> if you want to run an expression, i dont see what it has to do with an ide
18:34:08 <dcoutts> fnord123, I believe there is some relation between the two :-)
18:34:19 <mwc> dcoutts: managed to support those OS X headers yet?
18:34:28 <dcoutts> mwc, yes :-)
18:34:31 <dons> btw, yi now happily has 3 emacs emulation modes :)
18:34:32 <mwc> I'm in the mood to given it a test if you're ready
18:34:58 <dcoutts> mwc, ok you've got gtk2hs cvs?
18:35:11 <mwc> not a recent checkout, just need to bring it up to datye
18:35:30 <dcoutts> ok, I'll commit my changes to cvs... wait a minute
18:36:03 <dcoutts> I'm still waiting for a review from Manuel for my changes but I can put them in the Gtk2Hs cvs version in the meantime
18:36:31 <mwc> seems to me you can actually ignore it entirely, can't you?
18:39:45 <gzl> I dunno, the GUI versions of editors like emacs and vim are handy
18:39:50 <dcoutts> mwc, yes we can ignore it
18:40:33 <dcoutts> mwc, my current approach is to generate just a place holder for the asm statements, but the asm function annoations I discard totally
18:40:45 <dons> gzl, yeah, i don't see anything wrong with a non-ncurses interface. the mac people really want it, addicted as they are to eye candy ;)
18:41:05 <mwc> meh, I use irssi, I can live without
18:41:11 <dons> these days i use gtk2-vim anyway
18:41:29 <dcoutts> yes, some people are comforable with text interfaces, another group of devs expect gui dev tools
18:41:36 <dcoutts> it's just the way it is
18:41:36 <mwc> dcoutts: safe to do an update yet?
18:41:55 <gzl> dcoutts: that's a separate issue, but the gui versions of the text tools have some useful features
18:42:05 <mwc> I find that the apple GUI for gdb is bigtime handy
18:42:09 <dcoutts> mwc, I'm just doing a last check build before comitting, I'll tell you when to cvs update
18:43:00 <dcoutts> mwc, actually the sourceforge anon cvs seems to have quite a time lag behind the developers cvs
18:43:22 <dcoutts> mwc, maybe I should do you a tarball
18:43:36 <mwc> would be appreciated it that's the case
18:43:37 <gzl> also, some IDEs offer features that I haven't seen command line tools offer (though the limitation has nothing to do with GUI vs text)
18:44:10 <fnord123> the only one ive seen that requires a gui is uml refactoring
18:44:38 <mwc> I'd like to see some sort of run time inspector for haskell programs. I could probably bolt it on top of ghci somehow, but I'd like to be able to step through the evaluation and see when things happen and what values they have
18:44:42 <dcoutts> gzl, I suspect that one aspect of the difference is that text interfaces don't have much screen realestate
18:45:02 <mwc> Haskell's better to develop in, but I find that debugging in C is still the best experience
18:45:13 <mwc> which is entirely tools born of bleak necessity
18:45:14 <fnord123> will it be an issue that people have really disjoint installs of yi, so their .yi doesnt map and then they simply  get frustrated?
18:45:14 <dcoutts> gzl, ie they insist on 80x40 text interfaces, compared to 1600x1200 pixel guis
18:45:49 <dons> fnord123? disjoint installs?
18:45:54 <gzl> dcoutts: I dunno, some of these features don't require GUIs
18:46:03 <gzl> dcoutts: some of them do, and then your point is well taken
18:46:23 <fnord123> well if im not on a gui interface i wont have the gui plugin. or i might not have some other plugin.
18:46:42 <mwc> fnord123: just do what Vim does, there are sepearete .vimrc and .gvimrc files. The GUI reads both, the CLI version only the one
18:46:49 <dons> no worse than vim
18:47:20 <dons> the .yi/* files will be the same, I would think, but extra fields will just be unused
18:48:19 <dons> a lot of the motivation I had to write yi and hs-plugins was to kill off the mess of configuration languages, like vimscript, and use haskell instead
18:48:20 <lispy> cvs?
18:48:25 <fnord123> i see that wrt gui. but with other things like collaborative editing. version control is an issue..
18:48:43 <lispy> dcoutts: really? your gtk work is not in darcs?
18:48:54 <gzl> how usable is yi?
18:49:18 <dons> when (myVers /= yourVers) $ error "incompatible yi versions" ;)
18:49:40 <dons> gzl, pretty usable. try it out. need syn hl for day to day work.
18:49:49 <dcoutts> lispy, gtk2hs is a project with a long history, it predates darcs considerably. Plus we use sourceforge hosting which only provides cvs
18:49:59 <gzl> so it doesn't have syntax highlighting? what about line numbers?
18:50:14 <dons> what about them?
18:50:19 <lispy> i think if Yi grows a GUI it would be ncie if it does it the way emacs has, where all the functionallity (except displaying graphics) is available from the console or the GUI
18:50:24 <dons> lines have numbers.
18:50:51 <dons> liispy, that's how it will work. we have a typeclass for writing guis.
18:50:58 <gzl> I was wondering whether it had the the equivalent of ":set nu" in vim
18:51:03 <dcoutts> lispy, we've moved our web page to haskell.org, we may eventaully move the source code repo & mailing lists too
18:51:08 <dons> in fact, you should be able to switch between console or gui without quitting..
18:51:09 <lispy> dcoutts: taylor.py (which i have not used) can help with some of that.  But the sf.net hosting may be the hard part...
18:51:18 <gzl> and what's the benefit gained by using yi?
18:51:26 <dcoutts> mwc, http://www.haskell.org/~duncan/gtk2hs/gtk2hs-0.9.8-r1.tar.gz
18:51:26 <gzl> other than pure curiosity right now
18:51:32 <dons> gzl, no :set nu
18:51:39 <lispy> dons: ah, you're so cool!
18:51:58 <fnord123> it might be nice to have some overlayed graphics since thats a limitation of emacs. but its important to remain a text editor and not a word processor :)
18:52:08 <dons> it's a research project, to writing extensible, dynamic application in haskell
18:52:21 <fnord123> its a license for feature creep
18:52:33 <lispy> fnord123: overlayed graphics ala w3m?
18:52:38 <dons> the benefit gained will be that it hopefully will turn into a decent alternative to vim or emacs
18:52:51 <fnord123> i hope so too
18:53:28 <gzl> dons: oh, I thought it was supposed to be a vim clone
18:53:33 <dons> nah.
18:53:43 <lispy> if it does a good job at what vim and emacs do a great job at, and supports collabrative editing i could see it being quite popular
18:53:50 <dons> it already emulates: vi, vim, nano, ee, mg, emacs, emacs again, joe.
18:53:59 <gzl> wow, that's pretty good
18:54:07 <gzl> do you have some emulation "module" interface?
18:54:13 <gzl> that makes it easy to write the stuff?
18:54:24 <dons> read the yi paper ;) there's an embedded language for writing editor interfaces
18:54:36 <gzl> oh, you have a paper
18:54:39 <gzl> ok, I'll get the paper and hte source
18:54:44 <gzl> and stop asking stupid questions
18:54:45 <gzl> :)
18:54:49 <dons> @google dynamic applications from the ground up
18:54:51 <lambdabot> http://www.cse.unsw.edu.au/~dons/papers/SC05.html
18:55:02 <lispy> if i have time/luck it may even become a drop in replacemet for emacs (even allowing elisp)
18:55:12 * int80_h picks up the slack on the stupid question asking like a good trooper.
18:55:24 <int80_h> which is better, coke or haskell?
18:55:32 <gzl> coke
18:55:42 <dcoutts> hmmm, diet or regular coke ?
18:55:43 <fnord123> coke has caffeine which makes me NOT lazy. so its better
18:55:43 <lispy> coke? which kind?
18:55:55 <dons> but it you were blindfolded, you'd choose haskell and say it was coke
18:56:08 <int80_h> the pepsi kind of coke.
18:56:23 <dcoutts> not crack then
18:56:29 <lispy> the pepsi kind of coke...hmm...that seems like a confilct of interests ;)
18:57:03 <lispy> actually, i hear it's named taht way because coke used to contain coke
18:57:16 <int80_h> it's true
18:57:25 <int80_h> coa leaves were the secret ingredient
18:57:29 <int80_h> coca
18:57:44 <mwc_> heh; http://ter.air0day.com/?script=revengeofthesith
18:57:48 <lispy> sometime after Dr. Jeckle and Mr. Hide (sp?) was written in a weekend because the author was on coke the whole time, they made it illegal. I can only assume that book is terrible....
18:58:02 <mwc_> lispy: actually, coca cola buys depleted coca leaves to this day for flavouring only
18:58:23 <dons> Hyde?
18:58:46 <lispy> ah, perhaps
18:58:59 <dons> no, does the doctor take a secret chemical and turn into the evil Mr. Hyde
18:59:13 <mwc_> gag, I hate pens. Can't chew on them without eventaully breaking them open
18:59:36 <lispy> mwc_: lol, i suspect it's not the pen which is at fault ;)
18:59:38 <gzl> dons: 'configure' isn't +x in my yi checkout, btw
18:59:48 <dons> darcs --set-script-executable
18:59:53 <gzl> well played
19:00:01 <dons> close, --set-scripts-executable, iirc
19:00:13 <lispy> dons: didn't i send you a patch to change that in the read me?
19:00:23 <lispy> or maybe gzl didn't check the readme...
19:00:43 <dons> yes, it is in the readme ;) no one ever reads the readme
19:00:47 <gzl> no I did
19:00:51 <lispy> hehe
19:00:53 <gzl> but the explanation was *after* the instructions
19:00:58 <lispy> i tend to read the readme
19:01:08 <gzl> I always read the README when I have to build something
19:01:36 <lispy> so that bit about setting it executable needs to come sooner?
19:02:05 <lispy> actually...wouldn't it be nice if there was a script hook for darcs get
19:02:10 <dons> well, it's line 10. but maybe it should say on the website, before they actually check it out
19:02:15 <gzl> I think the best thing would be to just put that on the website
19:02:17 <gzl> yeah, exactly
19:02:23 <mwc_> dcoutts: ok, given it a try
19:02:58 <lispy> if darcs get caused a script to run on the newly checked out code, then it could set things executable
19:04:01 <lispy> i sent that in as a suggestion today on the darcs ml, but only one person responded
19:05:36 <dcoutts> mwc_, give me a shout if it works/fails
19:05:55 <mwc_> dcoutts: just building now, and lamenting the demise of btefnet
19:06:50 <lispy> can GPL'd code be patented?
19:07:00 <mwc_> I think so
19:07:14 <mwc_> you could distribute the source but you couldn't use it :P
19:07:23 <lispy> heh
19:07:45 <lispy> hm...some other people on this maillist seem to think that patenting and licensing are orthoganal
19:07:52 <mwc_> I'd agree
19:07:58 <lispy> okay
19:09:09 <mwc> dcoutts: so far nothing but warnings about FiniteMap being deprecated
19:09:12 <mwc> so looks gold
19:09:47 <lispy> dons: has anyone sent you patches to make yi compile on OS X?
19:10:11 <mwc> I thought that yi-static was workign
19:10:24 <dons> not recently. but I thought yi-static was working
19:10:31 <dons> I'll test -- I have access to a mac
19:10:44 <dons> (have you seen some problem?)
19:10:49 <lispy> okay, last time i tried i had compile errors
19:10:57 <lispy> i'm looking for my code as we speak
19:11:34 <lispy> remember this?
19:11:34 <lispy> In file included from Regex.hsc:48:
19:11:35 <lispy> /opt/local/include/regex.h:145: error: parse error before "re_void"
19:11:48 <dons> oh, hmm.
19:11:49 <lispy>  In file included from Regex.hsc:48:
19:11:49 <lispy> /opt/local/include/regex.h:145: error: parse error before "re_void"
19:11:50 <lispy> /
19:11:54 <lispy> hmm...
19:11:58 <lispy> did any of that get sent?
19:12:05 <lispy> this: In file included from Regex.hsc:48:
19:12:05 <lispy> /opt/local/include/regex.h:145: error: parse error before "re_void"
19:12:06 <lispy> /
19:12:15 <dons> it's now been sent 3 times ;)
19:12:21 <lispy> oh, sorry
19:12:32 <dons> looks like  i don't have access to a mac anymore :/
19:13:38 <dons> was this a cpp problem?
19:13:48 <lispy> i think so
19:13:55 <dons> I don't remember finding a solution though.
19:14:00 <lispy> hmm...configure script is borked after a pull
19:14:15 <Korollary> yo fellaz
19:16:22 <lispy> hmm...and for some reason make doesn't like the make file
19:16:42 <lispy> for example, make clean only cleans if i add FAST=y
19:17:37 <lispy> i wonder if i need a different version of hsc2hs
19:17:57 <lispy> hsc2hs version 0.66
19:18:00 <dons> no. hsc2hs always tries to rebuild some deps, even on make clean. known issue
19:18:01 <lispy> what version do you use?
19:18:58 <dons> getting latest yi works for me. configure seems fine
19:19:24 <dons> maybe re-get. or do darcs changes to see if anything local is hanging around.
19:20:28 <lispy> http://www.opendarwin.org/pipermail/darwinports-bugs/2005-July/011789.html
19:20:46 <lispy> i'm not the only one getting this, and the other people aren't trying Yi, so i don't think it's Yi at fault
19:21:02 <lispy> i'll go bug the darwin ports people
19:21:14 <dons> ah!
19:21:29 <dons> good work :)
19:22:41 * mwc sobs while compoling gtk2hs 1 gig sort on ram :(
19:23:42 <dons> I thought that issue got sorted, and now -H80M does the job
19:23:49 <lispy> dons: seems that tcl was the problem, i was told to uninstallit
19:24:14 <lispy> Boot.hs:54:0:
19:24:14 <lispy>     Failed to load interface for `System.Plugins':
19:24:22 <lispy> did i forget to install something?
19:24:29 <lispy> i think i've seen that message before
19:25:29 <lispy> huh, port seems to think hs-plugins is installed
19:26:15 <dons> maybe hs-plugins 0.9.8
19:26:31 <dons> you need 0.9.10
19:26:45 <gzl> I should probably install dports
19:26:49 <gzl> fink doesn't have this stuff
19:26:50 <lispy> Unpacking tgz archive for hs-plugins 20050407_1
19:26:51 <dons> (between these, Plugins was changed to System.Plugins)
19:27:08 <lispy> any idea which version that date would correspond to?
19:27:16 <lispy> or someway i could igure it out?
19:27:25 <lispy> gzl: dports is nice in some ways
19:27:41 <dons> hmm. sounds like a snapshot.
19:27:50 <dons> I think it's too old.
19:28:30 <gzl> or maybe I should package this stuff for fink
19:28:31 <lispy> i'll try updating
19:28:42 <gzl> though all the stuff I maintain for fink right now is never updated, which I really like :)
19:28:44 <lispy> gzl: that would be cool
19:28:55 <gzl> I'm no porting expert
19:29:21 <gzl> hmm, actually, that reminds me, I need to upgrade scheme in fink
19:29:36 <mwc> gz1: I was just under the impression that fink is never updated :P
19:29:58 <gzl> fink has more packages than dports does
19:30:07 <gzl> just not the haskell ones
19:30:12 <mwc> yeah, exactly
19:30:28 <gzl> that's a separate issue. overall, the fink repository is larger
19:30:53 <gzl> I think I should probably package this stuff for fink
19:31:01 <gzl> otherwise I'll have to recompile stuff in my dports tree
19:31:04 <gzl> that would suck
19:31:25 <mwc> I find that darwinports seems to be more current though
19:31:25 <mwc> plus I find adding new stuff to dports is very easy
19:32:08 <gzl> that may well be
19:32:15 <gzl> I don't know how dports is now
19:32:24 <gzl> I've been using fink since well before there was a dports :)
19:32:34 <gzl> maybe I should take another look
19:32:36 <mwc> just put the URL, name, and version in Portfile, and do port install
19:32:52 <gzl> oh, that's only for packages that have a standard installation process
19:32:57 <gzl> many packages require modifications
19:33:00 <mwc> yeah
19:33:08 <mwc> then you just put a hook in
19:33:25 <gzl> but that's the annoying part
19:33:47 <mwc> well, if worst comes to worse, a portfile is a Tcl script
19:33:59 <gzl> yeah
19:34:56 <mwc> dcoutts: make finished fine, just going to install and test
19:35:08 <lispy> xb
19:35:26 <lispy> er...stupid keyboard :)
19:36:57 <lispy> looks like i'll have to install hs-plugins manually
19:37:27 <gzl> maybe I should drop support for scheme
19:37:34 <gzl> I don't actually use scheme, even :)
19:37:48 <lispy> heh
19:37:51 <mwc> dcoutts: demo/hello works, just going to check them all out, but looks like its all good
19:37:52 <gzl> in fact, I don't know scheme
19:38:20 <lispy> gzl: that cracks me up
19:39:37 <dcoutts> mwc, great, does that mean we'll get some MacOS X package then? :-)
19:39:49 <mwc> yeah, soon as you make a realse
19:40:01 <gzl> lispy: I think I wanted to try it out once, so I packaged it
19:40:06 <mwc> I'll submit a darwinports portfile
19:40:10 <lispy> if ghc is in /opt/local/bin/ghc, what do i want to use as the prefix to install hs-plugins?
19:40:20 <gzl> /opt/local, probably
19:40:28 <dcoutts> I'm always eager to add new links to packages to our download page
19:40:32 <gzl> but I don't know about hs-plugins
19:40:51 <lispy> dons: does /opt/local sound right?
19:41:14 <dcoutts> mwc, I'll check with the other Gtk2Hs devs but I think we're pretty close to a doing a bugfix release. I think we've fixed all currently known bugs.
19:41:52 <lispy> oh, he says configure --prefix=/usr/local for most people, so i bet /opt/local is perfect
19:41:52 <mwc> dcoutts: I actually have a portfile ready, just need to tick up the version
19:41:59 <fnord123> should buffers have only one point?
19:44:30 <mwc> I tested concurrent and fastdraw, figured those would be the best stress tests to see if there were any OS X bugs
19:45:34 <fnord123> is dons still about?
19:46:50 <lispy> hm....
19:46:51 <lispy> Rebuilding dependencies ... ghc-6.4: Error; multiple packages match altdata: altdata-0.9.10,
19:46:51 <lispy>                                         altdata-0.9.8
19:46:51 <lispy> rm: depend: No such file or directory
19:47:04 <lispy> what does that mean?  i need to upgrade altdata to 0.9.10?
19:48:38 <mwc_> OMG, Darren Aronofsky did a scifi original picture
19:48:43 <mwc_> this should be wild
19:48:58 <mwc> the man behind Pi and Requiem for a Dream
19:50:26 <fnord123> i already saw solaris
19:51:19 <dcoutts> mwc, cheers, yes those two demos are probably a good test
19:51:46 <dcoutts> mwc, btw does Gtk look any good on OS X?
19:52:01 <mwc> Yeah, like it does on linux, especially if you theme it
19:52:09 <dcoutts> a OS X screenshot or two would be cool
19:52:12 <mwc> I was just going to give you one
19:52:17 <mwc> downloading HRay source
19:52:18 <dcoutts> :-)
19:52:39 <gzl> there's also a GTK+-OSX project
19:52:41 <mwc> doesn't look it Aqua though, its gtk drawing in an OS X window
19:52:48 <gzl> to make it Aqua
19:52:58 <mwc> gzl: yeah, for GTK1 wasn't it? I was a part of it early on, and it died
19:53:10 <Korollary> I thought it had legal problems with apple
19:53:14 <mwc> No
19:53:21 <dcoutts> gzl, one of the gtk devs is currently working on a GDK level port to OS X
19:53:22 <gzl> it may have died
19:53:23 <gzl> I have no idea
19:53:27 <gzl> dcoutts: cool
19:53:31 <gzl> I don't use gtk, really
19:53:37 <mwc> it would be the GTK api over top of Carbon API
19:53:52 <dcoutts> ie the same way as the windows port was done
19:54:03 <dcoutts> then it's just a matter of getting the theme right
19:54:05 <lispy> so it would give the OS X look and feel?
19:54:08 <mwc> yeah
19:54:19 <mwc> and it would run as an OS X application, rather than as an X11 window
19:54:37 <dons> lispy, looks like you didn't unregister the old hs-plugins
19:54:43 <dcoutts> eg on windows the "WIMP" theme uses the WinXP themeing dll to do much of the drawing and so it follows the theme pretty well
19:55:11 <lispy> dons: ah, okay
19:55:28 <dcoutts> gzl, eg http://haskell.org/gtk2hs/gallery/HRay/HRayScreenShot6
19:56:21 <gzl> right
19:56:33 <fnord123> where would a network connection fit into yi, do you lot think. at the editor level?
19:56:34 <dcoutts> mwc, I've got patches for HRay to make it not block the gui when doing the rendering (and display an activity bar)
19:57:01 <dcoutts> mwc, not that it's especially important just for a screenshot :-)
19:57:07 <lispy> fnord123: dons is the one to ask
19:57:58 <mwc> sigh, I wish I'd gone into Compsci at times, seems like a lot of fun if you have some freedom
19:58:22 <lispy> mwc: what did you go ino instead?
19:58:41 <mwc> lispy: applied mathematics, so I don't get to spend all time coding
19:58:53 <dons> fnord, hmm. off the top of my head, you'd  want to start a reader thread that actually talks over the network, (see the getcLoop in Core.hs)
19:58:56 <gzl> applied math can be cool too
19:59:06 <gzl> pure math is better, but hey.
19:59:08 * gzl ducks
19:59:09 <mwc> yeah, I'm specializing in theoretical physics
19:59:23 <gzl> cool
19:59:29 * mwc confronts gzl with a nonlinear DE
19:59:44 <lispy> mwc: nice!
19:59:46 * gzl ties mwc up with a fiber bundle
19:59:53 <mwc> just finished my numerical analysis exam, it wasn't as excruciating as I'd though
20:00:00 <lispy> i sometimes wish i had gone the math route
20:00:14 <lispy> (for grad school that is)
20:00:20 <mwc> I have a good friend in Compsci and business, and he's mad about Java
20:00:26 <mwc> its so sad
20:00:29 <Korollary> lol
20:00:33 <lispy> i'm in with a bunchof HCI people, and HCI has some interesting bits, but it's not what i'm best at
20:00:44 <mwc> dcoutts: what's the standard canonical hray script to render?
20:00:51 <dcoutts> hmm
20:01:19 <dcoutts> @seen boegel
20:01:20 <lambdabot> Last time I saw boegel was when I left #haskell 21 days, 1 hour, 4
20:01:20 <lambdabot> minutes and 50 seconds ago, and I have missed 18 days, 5 hours, 20
20:01:20 <lambdabot> minutes and 19 seconds since then.
20:01:35 <Korollary> precise
20:02:13 <mwc> "that's enough, data"\
20:02:25 <mwc> well, away to watch the Daily Show
20:02:27 <lispy> hsx is not in dports?  bummer...
20:02:28 <mwc> ciao baby
20:03:07 <fnord123> well what functionality are we looking for? a command to list edits at an IP'd server
20:03:14 <fnord123> a way to map names to servers
20:03:27 <fnord123> a way to join a server's edits
20:03:27 <dons> I'm not sure what  you're trying to do :)
20:03:32 <dcoutts> mwc, I'm not sure the scene in the existing screenshots is included in the current hray tarball
20:03:35 <fnord123> adding collaborative editing
20:03:52 <dcoutts> mwc, I'd say just pick one of an appropriate size that you think looks cool
20:04:02 <lispy> fnord123: i'd have to study SEE and read the research papers that they read...
20:04:24 <fnord123> yes but if you do it from a text interface it's not as easy :)
20:04:41 <dcoutts> mwc, so that probably means about 400x300 resolution (you can edit the scene file if you find one that's cool but in the wrong size)
20:04:56 <mwc> god damn :( thje Daily Show has been preempted
20:04:56 <dons> at  the top level, yi takes input from a channel, provided by a thread calling getch. you just want keystrokes to come from somewhere else -- over a network. now, that seems fairly easy to add to yi. how to arrange for output to go to both the console, and to somewhere else, that's going to need some design
20:05:24 <fnord123> i also want to display multiple cursors
20:06:15 <dons> i think there is a lot of hacking ahead then
20:06:31 <dons> maybe you should pick a small target first, and try to get that working
20:06:43 <Korollary> mwc: it's on mon-thu anyway
20:06:44 <fnord123> name it
20:06:56 <lispy> runhaskell: waitForProcess: interrupted (Interrupted system call)
20:07:06 <lispy> i get that trying to build harp
20:07:29 <dons> you could avoid runhaskell, and just compile Setup.lhs into a binary
20:07:34 <dons> ghc  --make Setup.hs -o setup
20:07:55 <lispy> good idea
20:08:10 <dons> fnord123 -- well, what do you want to hack on? a good way to start getting familiar with yi is to implement a keymap for you favourite editor
20:08:26 <fnord123> im comfy with vim and emacs and you have both
20:08:27 <fnord123> :)
20:09:22 <dons> hmm. have you looked at the TODO ?
20:09:33 <fnord123> no i  couldnt find one. i began a rough one on the wiki
20:09:48 <dons> no no, there's a TODO, at the top level, near the README
20:10:48 <dons> there's lots of good smallish tasks in there
20:10:59 <lispy> ah, i had the impression the TODO was not updated
20:11:18 <dons> no, I try to keep it current
20:11:34 <dons> looks correct to me
20:11:34 <lispy> i should probably be hacking on darcs instead of getting Yi tocompile :)
20:11:54 <lispy> i really want a hook for get scripts
20:12:03 <fnord123> are you the fabled darcs hax0rer?
20:12:09 <lispy> no
20:12:16 <lispy> Igloo is a darcs hacker
20:12:24 <shapr> Yow!
20:12:30 <lispy> @yow
20:12:31 <lambdabot> Couldn't find fortune file
20:12:44 <dons> i should fix that
20:13:07 <shapr> I can't believe it's not butter!
20:13:10 <lispy> are IORefs considered evil?
20:13:14 <dons> lambdbot's home got rebooted and reinstalled after 218 days uptime :)
20:13:24 <lispy> ah
20:13:38 <dons> considered evil only by goody-goodies ;)
20:13:38 <shapr> Hey, QuotesPage should be in fortune format, or at least easily and automatically mashable into that format.
20:13:40 <lispy> nice uptime
20:14:11 <shapr> Then @quote could spit out QuotesPage quotes as well.
20:14:16 <dons> hey shapr, yi has *3* emacs modes now
20:14:26 <fnord123> bug: o will rip the last char and put it on the next line and open it for editing
20:14:48 <dons> yeah?
20:14:53 <fnord123> ill fix it
20:14:57 <shapr> Wow, who wrote the third?
20:15:01 <dons> me :)
20:15:06 <shapr> Huh, nifty
20:15:12 <dons> fnord, just hitting 'o' in vim mode?
20:15:17 <shapr> Should be good for finding a nice keymap abstraction then.
20:15:37 <dons> yeah, well, I'm already finding it pretty easy to write using the lexer combinators
20:15:39 <mwc> shapr: how's code
20:15:56 <dons> (methinks they're just not well-documented, that's why no one could write emacs in them)
20:16:42 <shapr> I won't argue that.
20:16:48 <shapr> I never finished the tutorial...
20:17:10 <dons> heh
20:17:19 * mwc suppresses scream as ammonia burns into ant stings
20:17:38 <shapr> I think there's a useful pattern there, I often get something started, but I never make those beginnings publically viewable. I would often continue code that others have written if their beginnings were accessible.
20:18:21 <shapr> I suspect that the right solution is to make sure you never end a day of hacking without the code being in state that you want to export to others, and always export your code to your website/darcs repo/etc.
20:18:30 <shapr> Hm, that sounds like XP.
20:19:10 <dons> I wouldn't disagree with this model
20:19:12 <lispy> shapr: i agree, but that also puts a high demand or your hacking/expirementing sessions
20:19:29 <dons> real experiments may not have to be public
20:19:40 <dons> but anything with reasonable utility should be
20:19:48 <lispy> ah yeah, okay
20:20:02 <dons> where public == in darcs
20:20:07 <lispy> right
20:20:16 <shapr> Thing is, how do you know what has reasonable utility?
20:20:18 <dons> I should write a Haskell Open source manifesto, based on darcs
20:20:26 <lispy> hehe
20:20:31 <shapr> Experiments often have highest utility, they show you where not to go.
20:20:46 <shapr> "Don't do it this way, this sucks, and here's why."
20:20:47 <lispy> darcs needs to grow still, i'm finding it lacking for doing centralized development
20:20:47 <mwc> hmm, our Haskell Open SOurce Guru shoudl be even fatter and hairier than RMS
20:20:55 <mwc> since of cource we're lazier
20:20:57 <shapr> mwc: Heck no, he should be pure :-)
20:21:19 <shapr> Our Haskell Open Source Guru should be thin and not very hairy.
20:21:24 <dons> hehe
20:21:27 <mwc> we'll get dons really fat, then shave him and display him naked from the waist up like Bhuddha
20:21:29 * shapr nominates dons 
20:21:34 <mwc> pure and lazy
20:21:57 <shapr> lispy: I think a cgi script that accepts gpg signed patches would help there.
20:21:59 <dons> :}
20:22:01 <mwc> I think we should appoint a celebrity spokesperson
20:22:05 <lispy> hmm...it could be like yoda, but lazy ;)
20:22:15 <mwc> hahah
20:22:37 <shapr> dons: Anyway, if you start your Haskell Manifesto, I'll commit at least one patch :-)
20:22:57 <lispy> shapr: well, procmail can be setup to accept patches which can be sent by darcs send, maybe we need to publicize the procmail tools
20:23:33 <mwc> "Did you know that in Indian Villages, children as young as 8 are forced to slave over a Java project? We can help to end this ssuffering. With a pure functional language, they could be more productive in a short amount of time, letting them code for their villiage and still having the time to improve their condition.s Please help Haskell."
20:23:39 <dons> ok. i'll put some thoughts together on a manifesto/`what people should do' if we want haskell code to grow and flourish
20:24:08 <dons> @todo-add write Haskell Manifesto
20:24:08 <lambdabot> Entry added to the todo list
20:24:17 <lispy> heh
20:24:21 <mwc> I think we should try to steer Cabal into something like CPAN
20:24:47 <dons> yeah, that's one thing we need. it really is still too hard to find libraries
20:24:54 <mwc> functional code blocks should be really easy to drop into a project on the spot without worrying about icky stuff like states and globals
20:24:58 <dons> unless you hang out on #haskell
20:25:35 <shapr> Yeah, this is Haskell gossip central.
20:25:47 <lispy> yi is building this time
20:25:57 <mwc> OMG! Did you hear SJP asked Julia Cutforth out to the prom! OMFG!@!!!!
20:26:08 <shapr> mwc: That's pretty good, eight year old Indian children doing Java :-)
20:26:12 <lispy> Julia Cutforth?
20:26:15 <shapr> Who?
20:26:34 <fnord123> oh snap! I thought she was going with Alan Kay! But since he got fired she was al about the benjamins
20:26:36 <shapr> Isn't SPJ married anyway?
20:26:41 <mwc> lispy: I needed a name for some made up #haskell gossip in the style of california highschool girls
20:26:52 <shapr> Oh
20:27:10 <fnord123> Jessica Cutforthski
20:27:12 <shapr> I was thinking of all the female Haskellers I knew, and none of them have Julia as a first name.
20:27:28 <mwc> shapr: I was going to suggest we get Angelina Jolie to do it as part of her UNICEF work :P
20:27:33 <mwc> shapr: there are female haskellers?
20:27:48 <shapr> Gabrielle, Rebekah, Kirsten, Philippa, and more.
20:28:03 <mwc> :O I assumed Philippa was a dude
20:28:48 <shapr> Anyway, I judge a programmer by the quality of their code, and a researcher by the niftiness of their ideas.
20:28:48 * mwc paints foot with ammonia
20:28:56 <lispy> mwc: ah, california highschool girls...they're 18 riht?
20:29:21 <mwc> oh, sure, but a girl who haskell would be pretty spiffy
20:29:28 <lispy> shapr: you shouldn't judge people ;)
20:29:41 <dons> @pl getMsgE >>= \s -> msgE (s++[c])
20:29:42 <lambdabot> msgE . (++ [c]) =<< getMsgE
20:29:51 <dons>  @pl makes Yi a little shorter!
20:30:05 <lispy> and a lot less readable!
20:30:14 <dons> nah, that code is ok
20:30:17 <mwc> why not leave it in Do notation?
20:30:39 <Cale> yeah, do notation looks a bit more readable here, I think
20:31:05 <dons> oh, now Cale's hacking on me :/ looks like I have to change it back
20:31:07 <lispy> oh, yi runs
20:31:15 <Cale> hehe
20:31:41 <Cale> I should get to actually coding some stuff.
20:31:43 <mwc> "And he saw that there were pageouts, and he decreed that a plague should sweep the firstborn process from each session,"
20:31:50 <mwc> "And the lord looked down, and say that it was good."
20:31:56 <Cale> I suppose classes will end soon.
20:32:08 * dons reverts code, and leaves @pl version as comment with cheeky smiley face
20:33:00 <fnord123> hey can you guys try and repro this? edit a file in emacs. save it without a newline at the end. then open it in Yi and move to the bottom and try to edit past the end
20:33:05 <fnord123> (in Vi mode)
20:33:15 <mwc> shapr: Java is brain damaged enough a child should be able to do it
20:33:35 <mwc> The problem with Java as a languaged is that its C++ that's had a belt sander take off all the pointy edges
20:33:41 <lispy> dons: where do i find the editor specifications again?  I just tried --as=emacs  and it seems to be missing commands so i wanted to try some of the other emacs modes
20:33:51 <mwc> the fact that its still a machine to maim crush, and destroy hasn't changed.
20:33:56 <fnord123> mwc, is modula three thats been made to look like C++
20:34:01 <dons> fnord123, works for me?
20:34:15 <lispy> modula 3 or .... smalltalk!
20:34:27 <mwc> no, Java is less dynamic than Smalltalk, isn't it?
20:34:28 <dons> do you have the latest yi? becaues i don't get your 'o' problemm either
20:34:43 <fnord123> its a problem with A and a as well
20:34:50 <fnord123> I have the source from the tarball
20:34:51 <mwc> besides, we've already seen that Alan Kay is being punished for his criems. Soon he'll go on trial at the Hague
20:35:07 <lispy> dons: didn't i have a problem withweird ness, and i built it static andit went away?
20:35:10 <dons> lispy, 'a' and 'A' both work for me too.
20:35:14 <fnord123> k
20:35:17 <lispy> fnord123: have you trid the static build?
20:35:20 <mwc> So the come uppance for Steel, Struostrup can't be far behind
20:35:27 <lispy> dons: are you talking to me or fnord?
20:35:28 <dons> just check that yi-static has the same behaviour
20:35:31 <fnord123> im using the static vuild
20:35:37 <fnord123> build
20:35:54 <fnord123> i couldnt figure out what plugins it was begging me about so i just made way=static
20:36:01 <dons> fnord. now, lispy, the keymaps are in Yi/Keymap/
20:36:07 <dons> emacs2 and mg are the other emacs modes
20:36:15 <lispy> dons: ah, i missed it some how, thanks
20:36:35 <dons> I think mg may be getting close to the most complete. working on M-x foo now
20:36:44 <lispy> Key sequence not defined : C-j
20:36:59 <dons> edit; darcs record; darcs send!
20:37:13 <lispy> that's what hitting enter tells me, so i guess the mac sends different keys?
20:37:24 <mwc> lispy: check your terminal
20:37:26 <mwc> settins
20:37:45 <dons> hmm. could be my fault.
20:37:50 <dons> I was messing with ncurses yesterday
20:37:57 <mwc> Terminal -> Window Settings, then Keyboard panel
20:38:30 <lispy> mwc: i don't see anything related to enter
20:38:44 <dons> lispy, can you add 'nl True' to line 226 of Yi/Curses/Curses.hsc
20:38:46 <mwc> yeah, thought it was a meta problem :P
20:39:13 <dons> it didn't seem to be doing anything on my machine, but it is supposed to translate Enter to \n
20:39:28 <lispy> dons: actully, mg doesn't have the problem
20:39:38 <lispy> dons: so maybe i should just use mg?
20:39:40 <dons> ah, ok. no probs then
20:39:53 <dons> sure :)
20:40:05 <dons> @seen jyp
20:40:06 <lambdabot> I saw jyp leaving #haskell 10 hours, 7 minutes and 30 seconds ago.
20:40:16 <mwc> @seen mwc
20:40:17 <lispy> does Yi have a concept of buffers?
20:40:17 <lambdabot> You are in #haskell. Last spoke just now.
20:40:21 <dons> jyp is responsible for emacs2, so we should tell him.
20:40:29 <dons> lispy, yep.
20:40:29 <mwc> Damn, I was hoping it wouldn't detect me for some reason
20:40:50 <lispy> how do i open a file in emacs mode?
20:41:06 <lispy> C-x C-f just says, "C-x-"
20:41:21 <mwc> well, I better go for real this tiem
20:41:23 <dons> um, not impelemtned. open it on the command line
20:41:32 <lispy> oh i see
20:41:32 <dons> i'll implement this now
20:41:38 <dons> (i only started the mg mode yesterday ;)0
20:41:42 <lispy> dons: no, don't implement it because of me :)
20:41:50 <lispy> do it when ou have time :)
20:41:59 <dons> oh, i'm working on Yi now
20:42:08 <lispy> ah alright
20:42:17 <lispy> man, mynet connection has terrible latency
20:42:29 <lispy> it's like typing over dial up...very slow dialup
20:43:07 <lispy> well, getting Yi installed was what iw anted to get accomplised today
20:43:10 <lispy> next is darcs
20:43:32 <fnord123> darcs is a piece of piss to install
20:43:44 <lispy> oh?
20:43:54 <fnord123> yeah. i didnt even have to look at the code
20:43:55 <lispy> i've only had trouble with it on solaris
20:44:12 <lispy> wait, does piece of piss mean easy?
20:44:16 <fnord123> yes
20:44:19 <lispy> ah
20:45:45 <lispy> dons: (looking at Mg.hs) very nice
20:46:15 <dons> cheers
20:47:11 <lispy> and maybe it would be better to just write an email client from scratch and stop using gnus :)
20:47:31 <dons> well, we almost have one in `riot'
20:47:37 <lispy> and an irc client to replace erc :)
20:47:41 <lispy> riot?
20:47:46 <dons> and we have one of those too,  ginsu
20:47:55 <dons> @google tuomov riot
20:47:57 <lambdabot> http://modeemi.fi/~tuomov/riot/
20:48:25 * heatsink asks for advice on debugging fixpoint code that is not as lazy as intended
20:48:58 <lispy> dons: hmm....werd
20:49:05 <dons> hmm. really? not as lazy?
20:49:38 * dons stretches back in the sunshine, hacks some more yi code
20:49:44 <heatsink> Yeah, the program exits with <<loop>>
20:49:56 <lispy> oh, thats right your in .au, so it's day time now
20:50:13 <heatsink> which means something is strict that shouldn't be.  And I'm having a hard time locating the error with Debug.Trace.trace.
20:50:23 <shapr> lispy: I'm rather upset at gnus, I hope Yi gets something better.
20:50:31 <dons> oops. blackhole, lispy
20:50:35 <dons> sorry, heatsink
20:50:55 <lispy> shapr: hmm...what about gnus pises you off (I can think of somethings)
20:51:03 <heatsink> btw I like how you found a character for yi
20:51:15 <dons> @eval let f = f in f :: ()
20:51:17 <lambdabot> Fail: <<loop>>
20:51:17 <lambdabot>  
20:52:42 <dons> heatsink, I don't think this is laziness involved
20:53:26 <dons> but instead, you've defined an infinite loop, but of a form that is a detectable blackhole
20:53:28 <lispy> i've seen this before using `where'
20:53:36 <shapr> lispy: More than anything, the fact that it's not simple enough for me to debug myself.
20:53:54 <lispy> shapr: yeah, itis horrible complex
20:54:05 <lispy> and emacs is a terribe debugger
20:54:24 <shapr> I've really tried to fix gnus on my own, and I really do have a clue about elisp, but it just wasn't worth it.
20:55:01 <lispy> emacs sort of has that about it
20:55:17 <heatsink> dons: Yea, I understand the concept.  I fully intended to form the loop -- I have a let {x = f y; y = g x} but f is supposed to be lazy in y.
20:55:49 <heatsink> ... (and g x is supposed to be lazy in y also)
20:56:06 <lispy> what is your base case?
20:56:25 <shapr> Emacs would be manageable if someone got in and refactored the whole codebase. That won't happen while RMS is alive though.
20:56:38 <shapr> So I guess my biggest problem with gnus is actually RMS.
20:56:45 <lispy> shapr: what about xemacs?
20:56:51 <lispy> or starting your own fork?
20:57:13 <lispy> yeah, if RMS would embrace modern programming techniques...
20:57:22 * lispy doesn't think RMS is a very good programmer
20:57:25 <fnord123> emacs isnt so bad to edit
20:57:49 <heatsink> lispy: base case?
20:57:54 <fnord123> the lispy-C macros throughout the code are damaging to the eyes, but some of it isnt bad. and its heavily commented
20:58:02 <heatsink> I actually found the problem, it wasn't what I expected.  I misspelled a variable.
20:58:32 <lispy> ah, yeah that's what happned to me the last time i hada blackhole
20:58:38 <shapr> lispy: gnumacs is the popular political choice. I've been using xemacs as much as I can, but recently a gnus bug forced me to switch back to gnumacs to read non-ascii email.
20:58:42 <heatsink> heh
20:59:09 <fnord123> oh boy. here comes the son
20:59:10 <fnord123> sun
20:59:13 <shapr> Anyway, the community split between gnumacs and xemacs isn't good for the community either.
20:59:26 <shapr> fnord123: oh you're in my timezone?
20:59:38 <shapr> It's 6am here.
20:59:42 <shapr> I should really fall over and sleep.
20:59:46 <fnord123> london here
20:59:53 <fnord123> its da bomb!
20:59:55 <shapr> I'm a bit north of you.
21:00:18 <lispy> shapr: ya, i know, but if someone came through and really cleaned up emacs, maybe they would unite around a new emacs...or RMS would revolt because he's a bit controlling...
21:01:56 <shapr> Yeah, one or the other. But I'd rather have Yi as the new emacs.
21:03:01 <fnord123> im enjoying this haskell malarky. it's good fun. too bad i have to go into work in a few hours to deal with C++
21:03:55 <shapr> Haskell is a lot of fun, both the language and the community.
21:04:05 <shapr> fnord123: It's saturday, is that a workday for you?
21:05:18 <fnord123> unfortunately it is this week and last week
21:05:25 <fnord123> my project is due
21:05:31 <fnord123> (friday)
21:05:35 <fnord123> although the spec isnt finished
21:05:59 <fnord123> (I dont write the specs...)
21:07:14 <shapr> That sounds like jobs I've had in the past.
21:08:23 <fnord123> I don't even know what I'm going to do when I get to work. the problem is in someone elses code that I havent delved into before. dons haskell is a sweet dream to read compared to any C++ as far as im concerned and i just started reading haskell today
21:11:39 <shapr> Anyway, time for me to sleep, g'night all.
21:11:49 <shapr> fnord123: Nice to meet you, come back soon :-)
21:11:51 * shapr &
21:12:16 <fnord123> byebye
21:14:15 <heatsink> goodnight shapr
21:15:35 <heatsink> well now this is working and it's late so I think i'll go to bed... goodnight all
21:21:04 <yosemite> has anyone here played with house?
21:21:58 <fnord123> no and this code snippet wont run for me: http://www.haskell.org/pipermail/haskell/2003-April/011580.html
21:23:12 <dons> emacs-ers, does keyboard-quit take the editor back to the top-level whenever invoked?
21:24:54 <fnord123> should do
21:25:01 <fnord123> but i havent tried it.
21:25:09 <dons> ok, just working out what it does, so I can implement it
21:29:26 <Korollary> "At top-level, as an editor command, this simply beeps."
21:30:19 <dons> and if in some sub mode, it escapes to the top level?
21:30:57 <Korollary> "During execution of Lisp code, this character causes a quit directly."
21:31:50 <dons> ok, i can do that with an exception
21:32:39 <Korollary> I shall check yi out I suppose
21:33:08 <fnord123> sweet ass i got the snippet working.
21:33:48 * fnord123 adds server programming in Haskell to CV
21:34:32 <dons> heh
21:35:45 <fnord123> i was looking over the code and thinking we might be able to rip out the local thread for getcloop and replace it with a server channel
21:36:06 <fnord123> input from server rather than just a keyboard thread
21:36:26 <dons> yes, that could be done. I think that's the easy part
21:36:32 <fnord123> but im thinking now that that wont work since you would have like 5 people changing things in the *same* buffer
21:37:37 <dons> the buffer is locked , so concurrrent access is no problem
21:37:49 <fnord123> k
21:37:50 <dons> however, just thinking about how to have multiple inputs to yi needs thinking
21:38:06 <dons> i.e. multiple main loops would be running
21:38:09 <dons> with their own states
21:38:12 <fnord123> there are issues with undos and such
21:38:38 <thedward> dons: have you seen the paper on the palimpset algorithm?
21:38:44 <fnord123> darc's change management could roll in nicely here
21:38:48 <dons> yeah, it's more like multiple instances of yi are running, that just talk to an underlying shared buffer
21:40:19 <fnord123> thinking about it that way is so spartan
21:40:29 <fnord123> could you imagine editing an ever changing buffer?
21:41:02 <thedward> dons: http://cs-people.bu.edu/dgd/thesis/original_paper.html
21:41:05 <fnord123> ill do some more research on the 'correct' way
21:41:12 <lispy> fnord123: i use emacs for irc :)
21:41:17 <dons> thedward, no?
21:41:19 <lispy> fnord123: that's an everychanging buffer
21:41:33 <dons> thedward, ah, ok.
21:41:39 <thedward> dons: it is an algorithm/protocol for dealing with multiple people editing the same document
21:41:45 <fnord123> ok. now compile the buffer. :)
21:41:55 <fnord123> thanks thedward
21:41:58 <dons> thedward, cool.
21:50:50 <fnord123> dons do you have a mac?
21:59:07 <dons> i have a mac68k running netbsd, fwiw
21:59:30 <fnord123> nah i was wondering if you had SEE so I could watch you hack yi
21:59:40 <fnord123> http://abridgegame.org/darcs/manual/node8.html#SECTION00820000000000000000
22:00:17 <fnord123> i think darcs has something close enough to a change management system that collaboration can use. I'll investigate some gankage after i sleep
22:00:26 <dons> nope. never used it.
22:00:47 <dons> (SEE)
22:00:54 <fnord123> k
22:00:57 <fnord123> nighty night
22:30:52 <thedward> do there exist debian packages for HSP?
22:36:52 <dons> don't think so, but it's easy to install
22:37:05 <dons> it's cabalised
22:47:40 <pejo> Is there any documentation of what optimisations that are implemented in ghc, except scattered phd theses from cambridge and papers from Simon and Simon?
22:52:06 <neilc_> exit
22:52:09 <neilc_> exit
22:52:12 <neilc_> quit
22:52:20 <dons> hmm, other than that linked at haskell.org/ghc/documentation.html ?
22:53:30 <dons> secrets of the inliner is the main paper, I think.
22:54:56 <Korollary> there used to be a tv series named Simon & Simon. Detective brothers in San Diego.
22:55:21 <dons> solving type constraints in their spare time!
22:56:39 <Korollary> (Criminal c, Jail j) => job :: c a -> j a
22:56:51 <Korollary> one way monad
22:56:53 <Korollary> no parole
23:06:13 <pejo> dons, ok. Thanks, once again.
