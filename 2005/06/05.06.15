00:06:02 <Itkovian> meuning
00:11:52 * boegel y0ws
00:13:55 <kaol> @y0w
00:13:57 <lambdabot> I haven't been married in over six years, but we had sexual counseling
00:13:57 <lambdabot> every day from Oral Roberts!!
00:14:37 <boegel> disturbing fact
00:25:04 <Itkovian> boegel.
00:27:39 <Itkovian> any MacOSX binary distributions of Happy?
00:31:40 <boegel> Itkovian: how's the parser stuff going ?
00:32:26 <boegel> Itkovian: not according to the Happy website
00:33:18 <Itkovian> no indeed not.
00:33:26 <Itkovian> will continue over lunch
00:34:23 <Itkovian> I am wondering though what you'd like, or what would be most useful, because simply parsing rules is nice, but maybe you should also be able to specify the interpretation in terms of the openGL framework, no?
00:34:35 <Speck> In mathematics, does a positive number imply that it is not zero?
00:35:01 <boegel> Itkovian: the interpretation of the symbols is always the same
00:35:17 <Itkovian> Speck: no.
00:35:44 <Itkovian> Speck: 0 can be both positive and negative, well, in a limit sense of way.
00:35:47 <boegel> F means "forward and draw", G means "forward and don't draw", and all other letter have no meaning (they are just skipped)
00:36:05 <boegel> Speck: positive includes 0, strictly positive doesn't include 0
00:36:28 <Itkovian> boegel: isn't that limiting what you could do?
00:36:35 <Speck> so if one defines a sphere as the set of points on R^3 which are at distance r from a fixed point, where r is a positive real number, if they let r = 0 they still have a circle?
00:36:40 <boegel> Itkovian: surprisingly, no
00:36:52 <boegel> I have to support various angles, but that's it
00:37:00 <Speck> I mean strictly (very strictly)
00:37:09 <boegel> what other operations do you know besides forward, draw and turn ? :)
00:37:16 <Itkovian> boegel: can the angle be changed by a symbol in the grammar?
00:37:36 <Itkovian> I mea, other than a fixed amount
00:37:49 <boegel> Speck: if you define it that way, yes, r = 0 is still a circle
00:38:01 <Speck> I ask because that is how it is defined here on wikipedia
00:38:04 <boegel> Itkovian: yes, it can, but I don't support that (yet)
00:38:17 <boegel> there is some kind of notation for that, let me see....
00:38:17 <Itkovian> I will keep the definition given in the http://en.wikipedia.org/wiki/L-system page
00:38:50 <Itkovian> Speck: strictly positive number are everything > 0
00:39:04 * Speck is still not convinced that the notion of non-existence is significant in mathematics
00:39:14 <Speck> ok thanks all
00:39:29 <boegel> Itkovian: there's no defition of symbols on the wikipedia page ?
00:39:40 <Itkovian> R_0 is taken by some to mean R without 0, others use R^+
00:40:02 <Itkovian> boegel: no, I meant the L-System def, so you have vars, constants, ...
00:40:09 <boegel> Itkovian: oh, ok
00:40:45 <boegel> well yeah, but I treat everything not constant (so stuff besides F,G,<,>,^,&,+,-) as vars :)
00:40:58 <boegel> srictly speaking, F and G are vars
00:41:35 <boegel> Itkovian: if you'd ask Boute, he'd say you have to write R_(>0)
00:43:02 <Itkovian> so <, > etc are constants?
00:44:19 <Itkovian> I have another question ... how are the rules applied? in sequence, random, ... do you use the rule repeatedly on each var or only on the last one in the string?
00:45:00 <Itkovian> or on each var simultaneously?
00:45:17 <Itkovian> the Koch-curve suggests the latter
00:45:31 * boegel thinks
00:45:39 <boegel> it's been a while since I implemented it
00:46:51 <boegel> for now, I check check for each char which rule can be applied on it
00:47:14 <boegel> context-free grammar means there can be only 1 rule for each var (so only 1 rule for F ->, G ->)
00:47:52 <boegel> the output of that rule is added to a list, and then the next char of the original string is taken
00:48:30 <boegel> that will need some work too, because you can specifiy several rules, each with their own %
00:50:04 * Itkovian needs to revise his grammar stuff ... 
00:51:34 <boegel> it comes back to you very quickly
00:51:42 <boegel> s/quickly/fast
00:51:47 <Itkovian> boegel: can't you simply map the rules? I mean, we could rewrite each rule to a function, and load the resulting code dynamically, no? You'd then have a function with pattern matching for each rule in the set
00:51:52 <boegel> damned, stupid head, that wasn't right
00:52:47 <boegel> Itkovian: I thought about that, but then I'd have to write a parser (and I didn't feel like it back then), and I have no experience with dynamically loading code in Haskell
00:52:58 <boegel> but that's a possibility, sure
00:53:04 <lispy> boegel: but you can have F -> aS, F -> bS, so your explanation seems a bit simplistic
00:53:09 <Itkovian> I am certain the hs-plugins authors can help there
00:53:12 <boegel> although my current code is quite simple too :)
00:53:35 <boegel> lispy: yeah, but then you'd have to attach %'s to each rule
00:53:46 <Itkovian> lispy: ah, but then you'd have to makew a choice, and you'd wind up in a parallel universe - or is it a multiverse
00:54:04 <Itkovian> ok, yes, yo could decide based on random chance
00:54:18 <lispy> boegel: i'm just thinking of context-free grammar as a mathematical object ;)
00:54:18 <Itkovian> Well, the implementation would need to leave room for that
00:54:38 * Itkovian looks up the grammar stuff on the wikipedia
00:54:43 <lispy> and on that note i'ts time for bed
00:54:59 <Itkovian> grrr, it's been like 5 years since I learned that stuff
00:56:00 <Itkovian> ok, I recall some of it now
00:56:11 <boegel> lispy: oh, I see... but I didn't mean to support context-free grammars :)
00:56:46 <boegel> Itkovian: told you it would come back fast
00:56:55 <boegel> lispy: going to bed at 10am ? you're crazy ! :p
00:57:13 <Itkovian> boegel: well, isn't that the def of an LSystem, that it is based on a cfg?
00:57:56 * Itkovian will enjoy a bit of Apocalyptica meanwhile
00:59:20 <Itkovian> man, this mac is addictive ... to the point I hardly work on my desktop anymore ...
00:59:26 <Itkovian> I should ask a work-refund
01:02:05 <boegel> Itkovian: well yeah, but when you want to support everything that context-free grammars are capable of
01:02:18 <boegel> I even think that confext-free L-system are just a subset
01:02:23 <Itkovian> yeah, well ...
01:02:32 <Itkovian> lets start at the beginning, eh.
01:02:34 <Itkovian> as you did
01:02:46 <boegel> that was my idea too
01:03:10 <Itkovian> where _exactly_ in fptools can I find happy? or do I need to check it out separately?
01:03:39 <Itkovian> ok, no need to answer that one
01:09:04 <autrijus> @pointless (\d -> word == name d)
01:09:05 <lambdabot> (word ==) . name
01:09:13 <autrijus> nothingmuch: there you go
01:09:38 * nothingmuch wondered why word == . name didn't work ;-)
01:09:43 <nothingmuch> ah
01:18:59 <nothingmuch> *Harrorth> main
01:19:00 <nothingmuch> Welcome to Harrorth!
01:19:01 <nothingmuch> : FOO 1 ;
01:19:02 <nothingmuch> : BAR FOO 2 DUP ;
01:19:03 <nothingmuch> see BAr
01:19:06 <nothingmuch> ": BAR FOO 2 DUP  ;  "
01:19:08 <nothingmuch> see foo
01:19:11 <nothingmuch> ": FOO 1  ;  "
01:19:13 <nothingmuch> see 1
01:19:16 <nothingmuch> "Error: the word 1 does not exist"
01:19:18 <nothingmuch> see dup
01:19:21 <nothingmuch> ": DUP <prim>  ;  "
01:19:27 <nothingmuch> see ;
01:19:29 <Itkovian> erm ...
01:19:29 <nothingmuch> ": ; <prim>  ; IMMEDIATE "
01:19:57 <nothingmuch> oh, sorry
01:20:00 <nothingmuch> that was meant to be for autrijus...
01:20:02 <nothingmuch> @karma nothingmuch--
01:20:03 <lambdabot> nothingmuch-- has a karma of 0
01:20:18 <nothingmuch> err... =/
01:25:31 <ski> @karma-- nothingmuch
01:25:32 <lambdabot> nothingmuch's karma has been incremented
01:25:40 <nothingmuch> =)
01:25:41 <ski> @karma nothingmuch
01:25:42 <lambdabot> nothingmuch has a karma of -1
01:25:46 <ski> better ?
01:26:07 <nothingmuch> ski: while you're here
01:26:11 <nothingmuch> what do you think
01:26:49 * Itkovian thinks that -- is decrementing, not incrementing ...
01:26:59 <ski> why does it print strings ?
01:27:23 <nothingmuch> ski: the see word? err, putStrLn?
01:27:40 <ski> yeah
01:30:11 <ski> nothingmuch : but you've gotten interpreted/compiled distinction working ?
01:30:37 <nothingmuch> yes
01:30:53 <ski> nice
01:31:33 * ski goes back to fighting a configure.sh script ..
01:31:41 <mflux_> hmm.. is it possible to have a self-contained function that internally uses IORefs to do its bidding, yet it wouldn't be in the IO monad?
01:31:47 <mflux_> without unsafePerformIO of course
01:32:08 <mflux_> hmm, I guess not, but how about with other monads?
01:32:15 <ski> it is possible, if you use STRef's and the ST monad, instead of IORef's and the IO monad
01:32:17 <mflux_> lets say it would like to use variables
01:32:17 <nothingmuch> you can compose the IO monad with another monad
01:32:21 <michaelw> mflux_: STRef
01:32:23 <nothingmuch> or use State or STM
01:32:35 <mflux_> I guess that's exactly what I was thinking then
01:32:35 <nothingmuch> what's ST?
01:32:39 <ski> @index runST
01:32:40 <lambdabot> Control.Monad.ST.Lazy, Control.Monad.ST, Control.Monad.ST.Strict
01:32:52 <ski> @type Control.Monad.ST.runST
01:32:57 <lambdabot> Control.Monad.ST.runST :: forall a. (forall s. GHC.ST.ST s a) ->
01:32:57 <lambdabot> a
01:33:02 <mflux_> are there arrays for STRef? or does that need specific support anyway..
01:33:15 <ski> yes, there are
01:33:53 <ski> ST monad is for internal state, with e.g. newSTRef,readSTRef,writeSTRef, that mimics those for IORef
01:34:10 <ski> runST gets you out of the ST monad
01:34:55 <ski> (also STArray, etc ..)
01:35:12 <ski> nothingmuch,mflux_ : ok ?
01:35:31 <mflux_> yes, I can refer to the documentation now that I know they exist ;)
01:35:40 <ski> yesh :)
01:47:30 <Itkovian> erm ... how to compile happy from the fptools repos?
01:50:06 <Itkovian> it seems to want mk/config.mk, which exists ... but somehow make doesn't detect it.
01:55:50 <michaelw> Itkovian: did you set ProjectsToBuild ?
01:56:09 <Itkovian> ah, no
01:56:16 <Itkovian> as a shell var?
01:56:28 * Itkovian goes sniff out the docs ...
01:56:34 <michaelw> in config.mk i think
01:59:41 <Itkovian> ok
02:16:44 <michaelw> Itkovian: worked?
02:20:41 <Itkovian> eh, nope
02:21:21 <Itkovian> http://www.buytaert.net/albums/vancouver-2004/32/
02:21:25 <Itkovian> hoe oud schat je dien dude?
02:22:06 <earthy> tussen 18 en 20.
02:22:13 <earthy> misschien jonger
02:22:17 <earthy> owh, sorry. ;)
02:22:30 * earthy switches back to english
02:23:16 <Itkovian> oops, wrong channe;
02:23:27 <Itkovian> i should be talking to boegel ...
02:23:36 <Itkovian> he's 40 ;-)
02:25:24 <earthy> 40?! wow.
02:26:29 <earthy> and no, he couldn't have been younger than say 20, upon reinspection
02:26:47 <earthy> but 40... big diff.
02:27:30 <boegel> Itkovian: heh, second time this has happened :)
02:28:16 <boegel> he'll probably live to be a 150 or so ;
02:38:49 <andersca> hey mr bringert
02:39:00 <dcoutts> JaffaCake, any estimate on the 6.4.1 release? I'm wondering because I image I'll release Gtk2Hs with a windows installer built for 6.4 and then the next day 6.4.1 will come out and the windows users will complain :-)
02:39:28 <JaffaCake> I don't have any firm plans right now
02:39:32 <dcoutts> ok
02:39:34 <bringert> hey andersca
02:40:05 <JaffaCake> I think Simon & I will get together and see where we are next week or so, he's away at PLDI at the mo
02:59:41 <michaelw> xerox: how's your Game of Life going?
03:00:33 <xerox> michaelw, I'm going to work on it today - I passed much time writing up proposal for the Google's Summer of Code :)
03:01:55 <dcoutts> xerox, until we get cairo bindings you can use the more basic gdk drawing functions. I should post my demo code of doing a low level effecient repaint handler.
03:02:19 <ndm> xerox, were you able to grab the darcs version of hoogle? is york working again
03:02:25 <xerox> dcoutts, I'd love to see it.  I was going to ask you about it :-)
03:02:28 <dcoutts> I reimplemented the ICFP'04 ants viewer in Gtk2Hs with an emphasis on good performance.
03:02:59 <xerox> ndm, could you please give me the url again?
03:03:33 <ndm> http://www-users.cs.york.ac.uk/~ndm/hoogle/darcs/
03:03:41 <xerox> aiskiii, @karma+ ndm
03:03:42 <aiskiii> ndm's karma raised to 1.
03:03:44 <xerox> aiskiii, @karma+ ndm
03:03:44 <aiskiii> ndm's karma raised to 2.
03:03:47 <xerox> aiskiii, @karma- ndm
03:03:48 <aiskiii> ndm's karma lowered to 1.
03:03:53 <xerox> Good.
03:04:28 <dcoutts> We never ran the old one for a full game, it was that slow, the new one runs the full 100,000 rounds in about 1 min (mind you the ants are moving about rather more quickicly than you can follow at that speed).
03:04:36 <ndm> for some reason the README seems to have disappeared, but other than that it seems fine
03:04:54 <michaelw> xerox: i hacked something up yesterday evening, would be interesting to compare (no gui, just engine)
03:05:35 <xerox> michaelw, yes, it would be - I didn't have time to write the "more efficient" `tick` algorithm tough.
03:06:17 <Lunar^> dcoutts: What is your main change to achieve that?
03:06:41 <dons> xerox, looks like a good ptach.
03:07:15 <xerox> dons, ^_^ I'm going to work some some things then send it.
03:07:27 <dcoutts> Lunar^, well the main change to the simulator (which used to take 5min to run and now takes a few seconds) was a change of data representation.
03:07:59 <xerox> michaelw, is your source availabe somewhere?  I'll finish && put mine up after this lambdabot work.
03:08:04 <michaelw> xerox: reference for tick algo?
03:08:06 <dcoutts> Lunar^, I changed from using finite maps of records (records of info about each ant & game cell) to records of unboxed arrays.
03:08:59 <Lunar^> dcoutts: Maybe that could fit in a TMR article?
03:09:16 <dcoutts> Lunar^, that's what I'm planning to write my TMR arice on :-)
03:09:26 <Lunar^> dcoutts: great! :)
03:09:35 <xerox> michaelw, I mean the algorithm to calculate the world situation in the next time tick :)
03:10:36 <michaelw> xerox: http://lambda.foldr.org/~michaelw/snippets/game-of-life.hs
03:11:20 <xerox> dons, is it possible to actually try plugins modules in GHCi?  If I try, it complains about Map.hs containing lexical errors (#ifdefs).
03:11:55 <dcoutts> Lunar^, then for the GUI, I used an array of marks to note which cells had changed and thus need repainting. So we only redraw exactly which cells changed. Also the expose handler uses it too to figure out which cells need redrawing. Finally I was careful to preallocate all X windows graphics recources so that the communication with the X server is essentially only one way and so you do not suffer the latentcy of X server round trips (con
03:11:55 <dcoutts> sequently it also runs well over a remote X connection).
03:12:30 <Lunar^> dcoutts: mhh.. I see
03:12:47 <Lunar^> xerox: and if you add -cpp on the command-line?
03:12:50 <xerox> michaelw, looks really nice.
03:13:05 <xerox> Lunar^, let me try.
03:13:29 <dons> xerox. yes, you can run it in ghci
03:13:39 <dons> you need to: ghci -fglasgow-exts -cpp
03:13:39 <xerox> Lunar^, it works! Thanks much.
03:14:09 <xerox> Right, I wanted it to infer a type for me, heh.  But finally I tought about it and wrote it by hand.
03:14:56 <dons> I have a script for getting types inserted for me:
03:14:58 <dons> FILE=$*
03:14:59 <dons> DECL=`cat`
03:14:59 <dons> ID=`echo $DECL | sed 's/^\([^ ]*\).*/\1/'`
03:14:59 <dons> echo ":t $ID" | ghci-6.4 -Onot -v0 -cpp -fglasgow-exts -w $FILE
03:15:00 <dons> echo $DECL
03:15:19 <dons> that works for vim. fairly easy to do in emacs too, I'd think
03:15:23 <xerox> @karma+ dons
03:15:23 <lambdabot> dons's karma has been incremented
03:16:49 <xerox> Prelude Plugins.Karma> :browse Plugins.Karma
03:16:49 <xerox> theModule :: Lambdabot.MODULE
03:16:49 <xerox> Why so?
03:17:15 <dons> all plugins need to export a 'theModule' symbol
03:17:27 <dons> it's a value-level rep of a module, basically
03:17:30 <xerox> How does one reach Module's functions?
03:17:44 <dons> oh, you;l need to load it interpreted
03:17:49 <dons> $ touch Foo.hs
03:17:51 <dons> then :reload
03:19:03 <michaelw> xerox: tell me when your code is up (or send it by email)
03:19:14 <xerox> michaelw, sure.
03:20:02 <xerox> dons, that's _really_ nice.
03:21:42 <xerox> getKarma :: forall a (m :: * -> *) k. (Control.Monad.Trans.MonadIO m, Ord k, Num a, ?ref::GHC.IOBase.MVar (Data.Map.Map k a), ?name::String) => k -> m a
03:22:08 <xerox> I did use "String -> Karma IRC Integer", but I'm not sure about the "IRC" part.
03:31:34 * boegel sings: "I'm gonna fuck you, softlyyyyyyyyyyy"
03:31:45 <dcoutts> !!!
03:31:47 <kaol> @yow
03:31:48 <lambdabot> On the road, ZIPPY is a pinhead without a purpose, but never without
03:31:48 <lambdabot> a
03:31:48 <lambdabot> POINT.
03:31:56 <xerox> a
03:31:58 <xerox> POINT.
03:33:43 <boegel> for the people who have never seen it: http://www.snabbstart.com/flash/fuck-her-gently---tenacious-d.aspx
03:37:17 <xerox> y0 TFK!
03:37:35 <TFK> howdy xerox
03:38:14 <TFK> I see that shapr has been doing some self-advertising ;-)
03:38:51 <boegel> TFK: where ? how ? when ! ?
03:46:39 * boegel takes a break
03:47:07 <boegel> I hope this I'll be able to pull of my exam Friday
03:50:26 <TFK> "Shapr is awesome" <--- see? Very subtle.
03:51:13 * Itkovian fails to see the subtelty involved
03:51:20 --- topic: set to '["http://www.haskell.org/learning.html","http://www.haskell.org/ghc/survey/start.cgi","http://www.haskell.org/tmrwiki/IssueThree","Shapr is awesome","ICFP Contest! http://icfpc.plt-scheme.org/","ghc added to Fedora Extras"]' by lambdabot
03:51:31 <xerox> Uh
03:51:59 * xerox is guilty
03:52:10 <boegel> yo Itkovian
03:52:30 <boegel> xerox: what did you do ! oh no !
03:52:48 <xerox> We need topic-cons "logs: http://meme.b9.com/cview.html?channel=haskell&date=today", I'm sorry.
03:53:00 <xerox> @topic-cons "logs: http://meme.b9.com/cview.html?channel=haskell&date=today"
03:53:00 <lambdabot> I do not know the channel "logs:
03:53:05 <xerox> @topic-cons #haskell "logs: http://meme.b9.com/cview.html?channel=haskell&date=today"
03:53:06 --- topic: set to '["\"logs: http://meme.b9.com/cview.html?channel=haskell&date=today\"","http://www.haskell.org/learning.html","http://www.haskell.org/ghc/survey/start.cgi","http://www.haskell.org/tmrwiki/IssueThree","Shapr is awesome","ICFP Contest! http://icfpc.plt-scheme.org/","ghc added to Fedora Extras"]' by lambdabot
03:53:17 <xerox> @topic-tail
03:53:17 <lambdabot> I do not know the channel
03:53:23 <xerox> @topic-tail #haskell
03:53:23 --- topic: set to '["http://www.haskell.org/learning.html","http://www.haskell.org/ghc/survey/start.cgi","http://www.haskell.org/tmrwiki/IssueThree","Shapr is awesome","ICFP Contest! http://icfpc.plt-scheme.org/","ghc added to Fedora Extras"]' by lambdabot
03:53:26 <xerox> @topic-cons #haskell logs: http://meme.b9.com/cview.html?channel=haskell&date=today
03:53:29 --- topic: set to '["logs: http://meme.b9.com/cview.html?channel=haskell&date=today","http://www.haskell.org/learning.html","http://www.haskell.org/ghc/survey/start.cgi","http://www.haskell.org/tmrwiki/IssueThree","Shapr is awesome","ICFP Contest! http://icfpc.plt-scheme.org/","ghc added to Fedora Extras"]' by lambdabot
03:53:44 <xerox> I'm very sorry for the inconvenience :(  Lunchtime.
03:53:54 * boegel takes a big break
03:54:09 <xerox> (I could argue that @help topic isn't _much_ helpful ...)
04:16:27 <boegel> it's going to be like 30°C this weekend, and I have to study
04:16:32 <boegel> don't you just hate that :(
04:19:50 <Itkovian> no, not anymore :-)
04:21:35 <boegel> Itkovian: heh, bastard :p
04:24:39 * boegel wrestles through the last 2 chapters of Appel's book
04:25:36 * Itkovian rings the bell 
04:25:38 <Itkovian> go!
04:26:18 <kaol> @moo wrestling with cows.
04:26:19 <lambdabot>           (__)
04:26:19 <lambdabot>           (xx)
04:26:19 <lambdabot>    /-------\/
04:26:19 <lambdabot>   / |     ||
04:26:19 <lambdabot>  *  ||----||
04:26:19 <lambdabot>     ^^    ^^
04:26:21 <lambdabot>  
04:26:24 <lambdabot>  Cow who used Jolt to wash
04:26:25 <lambdabot> down psychadelic mushrooms
04:28:17 <boegel> I said wrestling through, not wrestling with, rigth ? :)
04:29:02 <kaol> through cows? eww.
04:29:04 <Itkovian> such things I hear ... well they don't make sense
04:33:01 <boegel> @moo
04:33:02 <lambdabot>              (__)
04:33:02 <lambdabot>              SooS
04:33:02 <lambdabot>       /------S\/S
04:33:02 <lambdabot>      / |     ||
04:33:02 <lambdabot>     *  ||----||
04:33:03 <lambdabot>        ^^    ^^
04:33:05 <lambdabot>     This cow belonged
04:33:07 <lambdabot>   to George Washington
04:33:13 <boegel> hehe, nice one
04:38:12 <boegel> oh man, I hate the fact that they keep on mentioning festivals on the radio: I don't have the freakin' money you fuckers !
04:38:14 <earthy> not cows... owh gawd
04:39:36 <Itkovian> boegel: don't mention it!
04:40:51 <boegel> I mean all these great bands, and I won't be there :'(
04:48:03 <Itkovian> neiter will I
04:48:06 <Itkovian> +h
04:48:43 <Itkovian> btw I saw a guy with a flogging molly jack this morning :-"
04:49:26 <boegel> you should pay attention to those guys on festivals, I'm guessing at least 5-10% of the people has a Flogging Molly t-shirt :)
04:51:56 <boegel> Itkovian: have you listened to some of their songs ? you should try and get your hands on 'Devils Dance Floor', that's their best song imho
04:53:05 <Itkovian> nope
04:53:27 <Itkovian> i'll listen to a sample if they're in the Belgian iTunes directory
04:53:44 <boegel> they're not in there yet ? can't believe it
04:54:14 <boegel> you sure you didn't have grease in your eyes when you were checking ? :p
04:54:24 <Itkovian> I haven't checked yet
04:54:55 <Itkovian> nope, no flogging molly (in the Belgian dir, mind)
04:55:59 <boegel> damn :s and how can they get in there ? just wait ?
04:57:12 <Itkovian> yeah
04:57:14 <Itkovian> i guess
04:57:20 <Itkovian> well, it's not exactly my genre
04:59:09 <boegel> it wasn't mine either, but they simply rule :)
05:01:51 * boegel is finally done with Appel's book
05:02:04 <boegel> ... and will start all over again now
05:02:05 <boegel> :(
05:05:02 <earthy> 'compiling with continuations'?
05:05:38 <Lunar^> boegel: I never understood all the second part
05:06:06 <Lunar^> boegel: but I still read it again every 6 months, slowly grasping more bits each time
05:06:09 <boegel> Lunar^: we only have to know 1-11 and 17-18
05:06:28 <boegel> I hope the professor will be gentle on us
05:06:33 <Lunar^> boegel: what's 17-18 already?
05:06:41 <Lunar^> boegel: I find SML hard to read, though
05:06:57 <Lunar^> (vs. Haskell)
05:06:59 <earthy> ah. not 'compiling with continuations' then.
05:07:19 <earthy> but rather 'modern compiler implementation', right?
05:07:26 <Lunar^> earthy: That title sounds interesting
05:07:34 <Philippa> I'd rather the SML than the C or Java versions though
05:08:02 <boegel> Lunar^: dataflow analysis and loop optimizations
05:08:10 <boegel> earthy: yeah
05:08:21 <Lunar^> Philippa: for sure :)
05:08:22 <boegel> Philippa: it is the C version :s
05:08:31 <Lunar^> boegel: my dear...
05:08:49 <Lunar^> doing compiler in C... yuk
05:08:53 <boegel> anyway, I'll take another break now, and start all over again in an hour or so
05:09:06 <boegel> yeah, poor me :
05:09:08 <boegel> :p
05:09:38 <p21870> the C version !!! omfg
05:09:59 <p21870> better take that drion pill right away
05:10:13 <p21870> or stock up on anti-depressiva
05:12:35 <Philippa> I suspect the C version's neater than the Java version
05:12:40 <Philippa> it's got a cleaner way to fake ADTs
05:13:24 <p21870> sure, im not saying Java is going to be any better
05:23:22 <earthy> hey, C isn't all that bad
05:24:45 <p21870> ok, so call me biased
05:27:03 <Itkovian> we do
05:29:36 <p21870> call me al
05:30:59 <earthy> you can call me al... hm. cue trumpets!
05:31:32 <p21870> i knew i could count on earthy to reckognize the song :)
05:31:45 <earthy> If you'll be my bodyguard, I can be your long lost pal
05:32:05 <p21870> or are you simply copy-pasting the lyrics :P
05:32:20 <earthy> actually, the cue trumpets was due to recognizing the song
05:32:30 <earthy> the lyrics are due to google. ;)
05:32:55 <p21870> that's what i thought hehe
05:33:48 <earthy> and I now know I've always misheard the lyrics
05:34:13 <earthy> I thought it was 'I can call you daddy, and daddy when you call me, you can call me al!'
05:34:18 <earthy> but that's quite wrong
05:34:22 <p21870> ow
05:34:43 <p21870> so it actually is.....
05:34:56 <earthy> 'I can call you Betty, and Betty when you call me you can call me Al'
05:35:13 <Itkovian> lol
05:35:17 <p21870> that does seem more in place
05:35:22 <Itkovian> yeah
05:35:47 <Itkovian> the name 'Al' usually sets of a brainwave reminding me of a famous shoe salesman.
05:35:50 <p21870> a lot more politically correct
05:36:01 <earthy> itkovian: yeah, bundy
05:36:06 <earthy> same era. :)
05:36:07 <Itkovian> damn right!
05:36:18 <Itkovian> There is only one al.
05:36:25 <p21870> bundy....that set of a brainwave reminding me of that blonde member of the family
05:36:47 <Itkovian> p21870: now there's a dangerous sidetrack that may cause blood drain in the brain
05:36:51 <earthy> Al Yankovic?
05:37:03 <earthy> i.e. 'Weird Al'.
05:37:06 <Itkovian> depending on where your brain is localed, before some haskell chick decides to have a laugh
05:37:22 <p21870> 'haskell chick'....what is that?
05:37:32 <earthy> p21870: Phillippa
05:37:34 <Itkovian> e.g. Philippa
05:37:37 <Itkovian> lol
05:37:40 <earthy> (minus the l)
05:37:41 <p21870> that almost the same as saying...there are hot chicks doing computer science
05:37:46 <p21870> it's just unheard of
05:37:51 <earthy> but, there are.
05:37:55 <Itkovian> well, you'd be surprised
05:37:57 <p21870> sure, but then you wake up
05:38:02 <Itkovian> lol
05:38:02 <earthy> no
05:38:02 <p21870> and it's all gone
05:38:05 <earthy> no
05:38:06 <earthy> ;)
05:38:15 <p21870> and you have to go to your own university without all that sweetness
05:38:24 <Itkovian> change uni
05:38:24 <earthy> ah. ;)
05:38:43 <earthy> actually, Utrecht isn't doing too bad in that department
05:38:51 <Itkovian> I guess not
05:38:51 <p21870> the CS department is
05:38:55 <xerox> ndm, the darcs repo works, but the working directory is called "darcs" when one darcs-gets.
05:38:59 <earthy> um. no.
05:39:11 <Itkovian> xerox wasn't that fixed yesterday?
05:39:13 <earthy> but you have to look at 'informatiekunde'. :)
05:39:19 <Itkovian> hmm, no that was boegels
05:39:21 <earthy> or 'cki'
05:39:47 <Itkovian> why o why doesn't R keep the model updated?
05:40:29 <p21870> ow please earthy, i refuse have anything to do with inku
05:40:51 <earthy> suit yourself. no good looking women for you. :P
05:40:59 <p21870> inku doesnt have all that
05:41:20 <p21870> cki had exactly one
05:41:31 <p21870> cs had zip
05:41:34 <Itkovian> besides, there's a lot more fun to do with a chick but discussing CS
05:41:40 <earthy> exactly
05:41:44 <Itkovian> face it, you really do not want to do that
05:41:57 <earthy> which is why I have no problem that my girl doesn't understand one iota of computer science
05:41:57 <Itkovian> otherwise, there will be no time to get round to fluid exchanges
05:42:07 <p21870> Itkovian, all the more that i would like a nice girl instead of a CS girl
05:42:21 <earthy> she understands about fluids though... chem major. :)
05:42:25 <Itkovian> yeah, but you, like the rest of us, have the disadvantage that you're a nerd.
05:42:36 <p21870> hehe
05:42:46 <Itkovian> albeit prolly one proficient in fluid exchange techniques, having made sufficient observations.
05:42:50 <Itkovian> lol
05:42:52 <p21870> obviously you havent seen me 'en face'. i dont resemble a nerd in any way
05:43:06 <earthy> you don't? man...
05:43:13 <Itkovian> I really don't give a shit ;-)
05:43:14 <TFK> ...if you take away the glasses and add some muscle...
05:43:14 <p21870> hahah don't lie earthy
05:43:18 <earthy> I must have the wrong image :)
05:43:31 <Itkovian> well, at least he's got that big belly muscle :-)
05:43:43 <xerox> Itkovian, it seems not.
05:43:44 <Itkovian> capable of hoisting lots of coke, beer and coffee
05:43:52 <p21870> man, all the twisted you guys have :)
05:44:04 <TFK> Itkovian, the important things in life!
05:44:07 <Itkovian> well, I am envisioning a standard CS person irc'ing
05:44:12 <earthy> then again, there's enough cs majors 'round here that aren't truly nerdy
05:44:15 <xerox> darcs get http://www-users.cs.york.ac.uk/~ndm/hoogle/darcs/
05:44:21 <Itkovian> TFK: procreations seems to be more important
05:44:30 <ndm> hi xerox
05:44:38 <Philippa> speak for yourself. Sex != procreation, thankfully
05:44:49 <Itkovian> Well, yeah, but practice makes perfect, eh
05:44:52 <earthy> you wouldn't enjoy it as much, otherwise? :)
05:44:59 <TFK> Oh yes, we're living in an enlightened age of contraception!
05:45:01 <ndm> you were having issues with the working directory being called darcs, how would I fix that?
05:45:18 <ndm> would it be better if the directory was hoogle/hoogle ?
05:45:19 <TFK> And actually it does; the body just doesn't quite get it.
05:45:21 <Philippa> not to mention an equally enlightened age of sex not always having to mean heterosexual penetrative sex
05:45:24 <Itkovian> I think you need to move down one level in the dir hierachy, no?
05:45:27 <xerox> hoogle/darcs/hoogle ?
05:45:38 <xerox> Hmm..
05:45:43 <p21870> you are starting to talk weird now Philippa
05:45:51 <Philippa> I am?
05:46:12 <Philippa> I mean, leaving aside the fact that's an act I'm really not all that interested in?
05:46:15 <Itkovian> Philippa: hmm ... don't lead me into temptation, I'm trying to stay focused here
05:46:24 <Philippa> focused on what, exactly? ;-)
05:46:35 <Itkovian> well, erm ... before you misunderstand me, leave the third last word in place.
05:46:52 <Itkovian> focused on erm, trying not to think of sex, of course
05:47:02 <Itkovian> I am a man ...
05:47:07 <Philippa> bad idea. Trying not to think of sex is another form of thinking about sex
05:47:08 <Itkovian> which should explain all.
05:47:12 <p21870> right...that usually helps....trying not to think about something
05:47:26 <earthy> the trick is to think about something else instead
05:47:28 <Itkovian> Philippa: yes, but you can disguise it a bit better
05:47:51 <Philippa> yeah. Right up until someone asks you what kind of sex you're trying not to think about
05:48:06 <earthy> anyway, yeah, there's good fun to be had in calling snuggling and foreplay sex as well
05:48:08 <Itkovian> earthy: but the world is full of it! How can one avoid it, when all one sees are chicks, in various states of undress
05:48:34 <TFK> Itkovian, run for the mountains!
05:48:45 <earthy> itkovian: I don't particularly get turned on by chicks. makes me think of food...
05:48:49 <p21870> uuuh...why would you want to avoid it in the first place
05:48:55 <Itkovian> earthy: girls then
05:48:55 <p21870> mossels
05:48:58 <p21870> hehehe
05:49:10 <ndm> http://www-users.cs.york.ac.uk/~ndm/hoogle/darcs/hoogle/
05:49:10 <Itkovian> p21870: that's a digusting image
05:49:17 <Itkovian> no, no, no hoogle, sex
05:49:35 <Philippa> earthy: even more to be had in deciding that eg oral sex isn't just foreplay
05:49:41 <ndm> @google hoogle
05:49:43 <xerox> ndm, what about http://www-users.cs.york.ac.uk/~ndm/darcs/hoogle/ ? This way you could put your projects under the darcs/ directory without name-repetition!
05:49:43 <p21870> disgusting??? ever seen mossels with a nice creamy sauce? get's my appetite working
05:49:43 <lambdabot> http://www.hoogle.net/
05:49:44 <earthy> which was what I meant
05:49:51 <Itkovian> Philippa: right.
05:50:00 <ndm> now that is hoogle sex
05:50:04 <Itkovian> p21870: oh man ... poor girls
05:50:10 <earthy> p21870: creamy sauce? man, you bastard. smother those nice little mussels with cream?
05:50:12 <ndm> maybe, yeah - that seems sensible
05:50:26 <p21870> maybe a pinch of salt
05:50:28 <p21870> surely not more
05:50:32 <Itkovian> hey, try and avoid words with double meaning, eh
05:50:57 <earthy> sorry, you weren't thinking of food?
05:50:58 <Philippa> mmm. Double entendres and single intenters
05:51:02 <Itkovian> NO!
05:51:05 <Itkovian> :-)
05:51:09 <p21870> i was
05:51:12 <xerox> ndm, ok, it does work - thank you.
05:51:14 <Itkovian> liar
05:51:18 <ndm> http://www-users.cs.york.ac.uk/~ndm/darcs/hoogle/ - the final location, if it seems to make sense for everyone
05:51:21 <p21870> i love to eat mussels
05:51:24 <ndm> i just moved it
05:51:30 <earthy> ndm: that seems sensible, yes
05:51:39 <earthy> p21870: got experience? :)
05:51:50 <p21870> think food
05:51:53 <p21870> fooooood
05:51:56 <earthy> not too sour, to your tastes? :)
05:51:57 <Itkovian> p21870: thinks otherwise
05:52:01 <Itkovian> lol
05:52:06 <xerox> ndm, why the src subdirectory, tough?
05:52:08 <TFK> Think monads?
05:52:10 <Itkovian> holy shit, the logs the logs
05:52:17 <ndm> thats just one, there are more coming
05:52:22 <TFK> Think deadlines.
05:52:23 <Itkovian> ndm: very good.
05:52:24 <ndm> scripts, hi2hoo
05:52:33 <Itkovian> TFK: no, that's just as bad
05:52:36 <ndm> src is just for the source to build hoogle applications
05:52:37 <xerox> ndm, ah, hi-hoo!
05:52:40 <xerox> :)
05:52:52 * Itkovian gets back to programming
05:53:01 <ndm> i have an early version of hi2hoo, which converts .hi files to .hoo files
05:53:15 <p21870> ths conversation made me so hungry, im grabbing the peanut butter
05:53:16 <ndm> hi being GHC output, .hoo being Hoogle v3 input
05:53:41 * earthy gets back to theorem proving
05:53:53 <xerox> ndm, what about commandline options?
05:53:54 <earthy> oh, and it seems like a good time for the right cup of tea
05:54:15 <xerox> earthy, indeed.
05:55:10 * Itkovian fetches a can of coke
05:55:21 <Itkovian> and tries to put of images till after work
05:55:29 <earthy> hm. that inspires me to go get some icecream...
05:55:30 <earthy> ym.
05:55:32 <earthy> yum, even
05:57:55 <ndm> none, yet
05:58:03 <ndm> but feel free to patch CmdLine.Main :)
05:58:24 <ndm> they won't really make so much sense until it can read external .hoo files
05:58:41 <p21870> earthy, is there a difference between a regular colloquium and a thesis defense?
05:58:52 <earthy> yes and no
05:58:54 <earthy> why?
05:58:59 <p21870> kang just asked me
05:59:02 <p21870> and i didnt know
05:59:16 <p21870> is there a difference for the way it is held?
05:59:23 <earthy> no
05:59:27 <p21870> it doesnt count as a colloquium
05:59:31 <p21870> thats the difference right
05:59:41 <earthy> it doesn't count towards the colloquium credit for the one giving the defense
05:59:46 <p21870> exactly
06:00:17 <p21870> k thanks
06:00:21 <earthy> but Kang shouldn't worry. :)
06:00:27 <earthy> he's had enough attendance, IIRC
06:00:36 <earthy> and a talk, and a paper
06:00:46 <p21870> ow i think he was worrying more about the defense part
06:01:00 <earthy> you, otoh, I seem to recall no paper from. :)
06:01:07 <earthy> owh, the defense he needs to do anyway
06:01:15 <earthy> it's just convenient that we have a standard slot
06:01:32 <p21870> pff i know earthy, where am i ever going to find the time to do that stupid formality
06:01:41 <p21870> where=when
06:01:47 <p21870> ow no its where
06:01:48 <p21870> :D
06:01:53 <earthy> not 'find', 'make'
06:02:21 <earthy> plus, it's not that much time. a week fulltime, tops.
06:02:38 <p21870> i will do one when everyone is on a holiday
06:03:05 <earthy> good idea :)
06:07:43 <Itkovian> http://keepworkingworkerbee.blogspot.com/
06:19:19 <bringert> is there a decent way to build multiple cabal packages from the same repo
06:19:41 <bringert> I want to have two .cabal files in the same directroy, but cabal says Multiple description files found.  Please use only one of : ["cgi.cabal","fastcgi.cabal"]
06:24:30 * boegel returns from his break
06:24:47 <boegel> I see there was another sex-related discussion, again with Philippa involved in it ? :)
06:24:48 <Itkovian> you mean from study
06:24:53 <Itkovian> yes
06:25:11 * Itkovian thinks boegel has keyword lookup on the logs
06:25:35 <Itkovian> she tried to convince us of the joys on non-penetrative sex. duh. as if we didn't know.
06:26:05 <boegel> there's NON-penetrative sex too ? hmm, maybe I should try that :p
06:26:07 <Philippa> more pointing out that 99% of the time when you see guys talking about sex there's an assumption they're talking about penetrative sex
06:27:14 <Itkovian> oh common, guys NEVEr talk about the sex they're having ...
06:27:17 <Philippa> once in a while you see somebody attempting to define sex in such a way that there's no such thing as lesbian sex, too
06:27:38 <Itkovian> Well, ... I've got only one thing to say to that ...
06:27:45 <jlouis> poor lesbians... no sex for them
06:28:28 <boegel> Itkovian: guys always talk about the sex the _want_, but are not getting
06:28:37 <Itkovian> The Four Pillars of the Male Heterosexual Psyche (Steve)
06:28:37 <Itkovian> Steve describes the four pillars of the male heterosexuality psyche over dinner.
06:28:41 <Itkovian> "We like (1) naked women, (2) stockings, (3) lesbians, and (4) Sean Connery best as James Bond because that is what being a boy is and if you don't like it, darling, join a film collective."Series 1, Episode 4 (Inferno)
06:29:01 <TFK> boegel, so guys who're not talking about sex at all are either eunuchs or Hugh Hefner's proteges?
06:29:17 <boegel> TFK: err, no, they're just busy coding I guess :p
06:29:20 <Itkovian> Wouldn't that be great, being a lesbian? You'd have all the advantages of being a man, but with less embarrassing genitals. Plus every time you have sex, there's four breasts: two guest breasts and two you can take home afterwards."
06:29:32 <TFK> boegel, ah, the former :-P
06:30:23 <boegel> Itkovian: yeah ! must be fantastic :)
06:31:28 <earthy> um. hm. um. right.
06:32:02 <earthy> to get back to the definition of sex: 'any activity with orgasm as its ultimate goal'
06:32:04 <Philippa> Itkovian: some guys do think having male parts is a good thing...
06:32:15 <earthy> s/ultimate/direct/ even
06:32:22 <Philippa> earthy: even that's too narrow for a number of reasons
06:32:27 <Itkovian> Philippa: I was but quoting Steve.
06:32:31 <Itkovian> erm Jeff
06:32:40 <Itkovian> But the idea seems fantastic :-)
06:32:41 <Philippa> yeah, I realise it's a quote
06:32:42 <boegel> who's the f*ck is Jeff ? :)
06:32:45 <earthy> philippa: yeah, I know. but it's a reasonable working definition
06:33:00 <Itkovian> I stick to the point that women are infenitely more pretty to look at than men :-)
06:33:13 <Itkovian> boegel: get some culture! Coupling!
06:33:16 <Philippa> there're a few exceptions
06:33:32 <Itkovian> well, yes, I was referring to the top of the line specimen
06:33:34 <Itkovian> ;-)
06:33:39 <boegel> Itkovian: what's Coupling ? some tv show ?
06:33:42 <Itkovian> the ones you see naked
06:33:58 <earthy> um.
06:34:03 <Itkovian> oh come on boegel! http://www.bbc.co.uk/comedy/coupling/
06:34:06 * earthy respectfully disagrees
06:34:09 <Philippa> a lot of the women in mags and the like I don't find all that attractive
06:34:18 * earthy agrees with Philippa
06:34:32 <Itkovian> Philippa: true, but that's because they were 'enhanced' so to speak
06:34:40 <Itkovian> besides, that's just the outside.
06:34:41 <Philippa> not entirely
06:34:49 <TFK> Silicon chest and plastic face?
06:34:50 <boegel> Itkovian: you mean like these women? :)
06:34:52 <boegel> http://www.leonardnimoyphotography.com/images/2/fullbody/42.jpg
06:34:59 <Itkovian> I wouldn't want to know more than 1% of them, cos they seem to have personality disorders, mostly
06:35:29 * boegel blushes as he has never heard of Coupling
06:35:32 <Itkovian> ok, buddy, you're lucky my lunch has passed my stomach already
06:35:45 <boegel> *hehe*
06:35:49 <Itkovian> ah well, women are just great to look at.
06:35:56 <earthy> in general yes
06:36:06 <earthy> in specific cases... not always
06:36:13 <Itkovian> I mean that in no offending way, such as a nature biew is awesome to look at
06:36:20 <Itkovian> s/b/v/
06:36:27 * earthy agrees
06:36:43 <boegel> Itkovian: can you compare 'Coupling' with 'Friends', besides the UK<->US difference ?
06:36:47 <Itkovian> Philippa: care to give an example?
06:36:57 <earthy> boegel: nowhere near related in type of humor
06:36:59 <Itkovian> boegel: coupling is way more funny.
06:37:07 <earthy> and way, way, *way* nastier
06:37:11 <Itkovian> yeah ;-)
06:37:19 * boegel looks it up
06:37:26 <Philippa> Itkovian: Page 3 of the Sun here stopped showing women who'd had boob jobs a long time back, I still don't find the folks they take pics of that attractive
06:37:28 <Itkovian>  need breasts with brains. I don’t mean individual brains, obviously... I mean, not a brain each. You know, I like intelligent women, but you’ve got to draw the line somewhere... I think breast brains would be over-egging the woman pudding."
06:37:42 <Itkovian> Page 3 ... yeah .. that sums it about up
06:37:54 <Itkovian> besides didn't they show a lot of Katie Price too?
06:38:05 <Philippa> I never paid much attention, I'm not a Sun reader
06:38:10 <Itkovian> Neither am I
06:38:14 <boegel> hmm, no coupling stuff on irc apparently
06:38:17 <Itkovian> I just thought that were she got famous
06:38:25 <Philippa> you just see a shot once in a while - the entire look they go for just doesn't particularly do it for me
06:38:43 <Itkovian> checjk this one:
06:38:45 <Itkovian> I like films with lesbians in them because it’s nice to think there are attractive women out there who can’t find a boyfriend.
06:38:45 <Philippa> the body type can, but only accompanied by the right personality...
06:38:47 <earthy> heck, I always admire the shots if they *do* do it for me.
06:38:49 <Itkovian> loool
06:39:04 <Philippa> yeah. Right. I've got a boyfriend, it's women I'm looking for :-)
06:39:05 <p21870> still talking about women huh
06:39:07 <p21870> lol
06:39:13 <boegel> Philippa: hehe
06:39:20 <Itkovian> p21870: is there anything else but that and coding?
06:39:26 <earthy> then they've found someone real pretty, if she can take that kind of photographic maltreatment
06:39:29 <earthy> itkovian: food
06:39:36 <p21870> i'd say thats the only thing....forget the coding
06:39:38 <boegel> Itkovian: yeah, sex, because sex != women
06:39:39 <Itkovian> right
06:39:57 <Itkovian> depends on your gender and orientation I guess
06:40:09 <earthy> still, everyone needs food
06:40:15 <earthy> shelter's nice too
06:40:17 <p21870> i hear women can cook also
06:40:18 <boegel> damn, no coupling stuff at all on the net :(
06:40:24 <earthy> freedom
06:40:38 <boegel> earthy: you rule at this game
06:40:47 <Philippa> p21870: men generally make the best chefs
06:40:50 <p21870> true
06:40:57 <p21870> the best cooks are men
06:41:20 <p21870> but for the daily stuff....women suffuce
06:41:23 <p21870> suffice
06:41:29 <earthy> what, no coupling? not even at http://thepiratebay.org/details.php?id=3236893 ?
06:42:09 <Philippa> p21870: you're rather assuming we can be arsed to cook at all
06:42:20 <Philippa> though I did teach my boyfriend a rather nice (if somewhat cheaty) pasta recipe
06:42:46 <earthy> http://www.tv.com/coupling/show/7895/summary.html
06:43:10 * earthy is in fact the daily cook in his house
06:43:11 <p21870> maybe so Philippa, but who cooks in the end of the day...surely you
06:43:14 <Itkovian> I always do the cooking at home.
06:43:19 <Itkovian> I enjoy it immensely
06:43:27 <earthy> I shudder to think what my gf'd serve me daily
06:43:31 <Itkovian> lol
06:43:42 <Itkovian> well, my girl can cook, but she doesn't like it.
06:43:45 <earthy> same here
06:43:50 <p21870> depends on how much she wants to get rid of you earthy
06:43:54 <Itkovian> and she gets nervous when ten things have to be ready at the same time
06:44:01 <Philippa> p21870: it's about even, probably leaning in Damien's direction atm. Though we often both work on something
06:44:04 <earthy> and she doesn't know any recipes
06:44:11 <Itkovian> well, neither do I
06:44:15 <Itkovian> I just do stuff
06:44:19 <Philippa> yeah, I avoid having to get multiple things ready at once for the most part
06:44:25 <Itkovian> practice makes perfect
06:44:26 <p21870> damn, i hope that bundy girl is oldfashioned and knows how to cook
06:44:27 <Philippa> I mostly just have cheat's recipes that don't require it
06:44:42 <Itkovian> I always forget the recipe for pancakes, I mean, the amount of each ingredient I have to use ;-)
06:44:44 <Philippa> pasta's great for that, you can just chuck stuff in
06:44:49 <Itkovian> so we're always on a roll
06:45:11 <Itkovian> p21870: how could she, she never gets any food at home :-)
06:45:13 <earthy> owh, right. pancakes. that's like 1-1 flour-milk, plus some added eggs and a shot of beer
06:45:20 <Itkovian> and sugar!
06:45:24 <Itkovian> vanilla
06:45:24 <earthy> and salt
06:45:47 <Itkovian> no salt, unless you want to make erm, I don;t know the english name, and can't recall the dutch atm ...
06:45:50 <earthy> but if you want to make 'm better you're going to have to add buckwheatflour
06:46:00 <Itkovian> eh? dutch name?
06:46:09 <earthy> boekweitmeel. farine de sarassin
06:46:13 <Itkovian> my god you pour beer into yr pancakes?
06:46:15 <Itkovian> ok
06:46:17 <p21870> buckweed also works
06:46:28 <Itkovian> that's digusting
06:46:31 <Philippa> a small amount of a good ale goes well in a lot of stuff
06:46:38 * Philippa loves pork and ale sausages, for example
06:46:44 <earthy> yeah we do beer in our pancakes... makes the batter come together *much* nicer
06:46:46 <Itkovian> Philippa: erm ... well, not in Belgium it doesn't
06:46:56 <Itkovian> we _drink_ the beer
06:46:58 <earthy> plus the pancakes themselves turn out lighter
06:47:12 <earthy> itkovian: you open the bottle, pour a dash into the batter, drink the rest
06:47:17 <Itkovian> nonono
06:47:23 * Itkovian runs away screaming
06:47:26 <p21870> and that for 10 bottles
06:47:42 <earthy> p21870: no, that'd spoil the batter. better to keep the beer to yourself. :)
06:47:43 <p21870> you'd be wasted before you had one pancake
06:47:44 <p21870> hahah
06:48:09 <earthy> flensjes? you looking for that word, itkovian?
06:48:26 <p21870> ow i was thinking in the style of...pour some mixture in the pan...open a bottle...pore some beer in it...finish the beer....on the next pancake
06:48:28 <p21870> :D
06:48:35 <Itkovian> no flensjes are something else, no?
06:49:03 <p21870> flensjes are just pieces of old bread soaked in milk and eggs that only need to touch the pan
06:49:05 <earthy> p21870: nah :)
06:49:12 <Itkovian> yeah that's what I thought too
06:49:26 <earthy> nope. that's wentelteefjes
06:49:28 <Itkovian> we call it 'pain perdue' or 'verloren brood'
06:49:32 <Itkovian> (lost bread)
06:49:33 <p21870> ow riiight
06:49:37 <earthy> flensjes are very thin pancakes
06:49:39 <Itkovian> or 'gewonnen brood'
06:49:48 <p21870> i crave biest
06:49:49 <earthy> yup, that's the terms I know as well
06:50:00 * boegel doesn't like torrents, it eats bandwidth like crazy
06:50:08 <Itkovian> well, I've got a very cookbook, but I hardly ever use it
06:50:11 <jlouis> #haskell, sex, food, and (language theoretic) drugs
06:50:18 <Itkovian> boegel: you can limit the upload, eh
06:51:06 <Itkovian> you do not want season 4, as Jeff isn't in it anymore
06:51:45 * Itkovian wonders if there is a connection between those, other than the folks in here
06:52:10 <p21870> anyone ever had the first milk a cow gives after delivering a baby-cow? you cook it, let it cool down. it gets real thick...eat it with beschuit and sugar.......
06:52:13 <p21870> hmmm
06:52:13 <p21870> biest
06:52:35 <earthy> ah, right, biest.
06:52:44 <earthy> I was thinking about where I'd heard the term before
06:52:47 <earthy> nie stuff, yeah
06:52:50 <earthy> nice, even
06:53:03 <boegel> Itkovian: we call that 'klakkaars'
06:53:20 <p21870> it's stuffed with vitamines, proteins, etc.  (because it's meant for the baby-cow to grow and stuff)
06:53:45 <Itkovian> boegel: yeah, but you live inland :-)
06:54:15 <boegel> Itkovian: heh :) some of my student-colleagues I live like 10km from sea :)
06:54:42 <Itkovian> toeroet? da zal we mir zien ee
06:55:02 <reffie> ik hou van jou
06:55:39 * earthy looks at reffie weirdly
06:55:58 <earthy> well, if that's how you feel 'bout me...2
06:56:39 <boegel> Itkovian: I can't figure out what you just said... the 'mir' word, wtf ?
06:56:56 <boegel> reffie: ja, je kan van mij ook een stamp onder je kloten krijgen
06:57:33 <earthy> anyway, why the bleeping bleep is Agda so badly documented
06:57:33 <reffie> k
06:57:47 <boegel> earthy: Agda ? or Ada ?
06:58:25 * boegel wonders why's he never able to study between 14h and 17h
06:58:35 <earthy> Agda
06:58:41 <earthy> the prooftool underlying Alfa
06:58:53 <p21870> boegel, because you're digesting during that time?
06:59:04 <earthy> because you're on IRC during that time?
06:59:18 <Itkovian> boegel: it will be more, eh
06:59:50 <boegel> earthy: nah, I can study fine before noon, and I'm on IRC then too
07:00:04 * Itkovian is trashing his powerbook
07:00:10 <Itkovian> gotta easy on the apps
07:00:14 <Itkovian> s/y/e/
07:00:16 <jlouis> trashes his stomach by not eating
07:00:50 * boegel notices the striking resemblence between Dutch and the language on 'The Pirate Bay'
07:02:13 * p21870 notices that his cup of coffee is empty
07:03:05 * Itkovian thanks earthy for that torrent site :-)
07:07:56 <p21870> huh did i miss that link on the main channel earthy ;)
07:10:32 <Muad_Dibber> afternoon
07:10:42 <earthy> what torrent site?
07:11:41 <p21870> denial in public....riiiiight
07:12:04 <p21870> afternoon....Muad...or should i refer to you by your other nick...aap :)
07:12:25 <Muad_Dibber> p21870: thats not a nick, thats just the category i fit in :P
07:12:45 <p21870> i have to ask again though, could it be possible i stumbled along you in enemy territory a week ago muad?
07:13:04 <p21870> and with
07:13:17 <p21870> enemy territory...i dont mean earthy's room
07:13:25 <p21870> :)
07:13:53 <Muad_Dibber> p21870: not a week ago, it's been a while since i played
07:13:57 <Itkovian> p21870: better call him 'The Mouse' ;-)
07:14:29 <p21870> oh ok, cause there was this player which had exactly your name....and since it is quite unique...i thought maybe it was you
07:14:38 <Muad_Dibber> well it isn't unique
07:14:41 <p21870> ow
07:14:42 <Muad_Dibber> when i picked it it was
07:14:46 <Muad_Dibber> but i see more and more clones
07:14:52 * boegel fancys a game of ET
07:15:01 <Itkovian> boegel: oh yes ...
07:15:03 <p21870> i dont know any other people with that kind of nick
07:15:54 <p21870> where is it from anyway?
07:16:13 <Muad_Dibber> it's from a book
07:16:31 <Itkovian> Dune
07:16:35 <Itkovian> ;-)
07:16:42 <Itkovian> Ah Mahdi ...
07:17:05 <p21870> ow ok, well then it isn't unique indeed...lots of people must have read that book
07:17:17 <Muad_Dibber> its quite agood book aswell ;)
07:17:27 <yain> it was worm or something
07:17:40 <yain> yeah, i think it was worm.
07:17:41 <Itkovian> Maud'Dib is Paul Atreides
07:17:46 <yain> really?
07:17:49 <Itkovian> yes.
07:17:55 <yain> jeses
07:18:04 <Itkovian> He takes on that name when he killed Jamis
07:18:21 <Muad_Dibber> in the end he merges with a sandworm indeed
07:18:29 <Muad_Dibber> but the nick Muad'Dib refers to a desert mouse
07:18:30 <p21870> i saw some commercial for the movie dune, it looked god awfull. make-up and effects from 2 centuries ago
07:18:33 <Itkovian> it means 'the mouse', refers to a desert mouse, known for its stealth and water conservation
07:18:47 <Itkovian> No, Paul does not merge with a worm!
07:18:50 <Itkovian> Leto II does
07:19:01 <yain> oh
07:19:12 <p21870> darn, a dune expert in disguise that Itkovian
07:19:20 <yain> well, i read it when i was like seven
07:19:25 <p21870> or he's using google
07:19:32 <Itkovian> Paul is killed when Leto and he attack Arrakeen to kill his sister
07:19:43 <Itkovian> I've read the series like > 10 times
07:19:52 <p21870> so on which page is all of that?
07:19:53 <p21870> :P
07:19:56 * Philippa never got further than Leto's death
07:19:56 <Itkovian> St. alia of the Knife ;-)
07:20:02 <Philippa> the series was really starting to put me off by then
07:20:12 <Itkovian> Philippa: in Dune or God-emperor of Dune?
07:20:27 <Philippa> the latter
07:20:38 <Itkovian> you must really read Herectics and Chapter-House, imo they are on par with the first book
07:20:42 <xerox> yaaawn.
07:20:54 <p21870> i never get myself to read such a big book. I always put on some dvd or so
07:21:16 * Itkovian loves to read
07:21:30 <boegel> Itkovian: apparently :) where do you find the time man ?
07:21:31 <xerox> Itkovian, do you know how the correct order of the series?
07:21:33 <p21870> ah i see, not me
07:21:36 <Muad_Dibber> well, i read dune about 10 years ago :P
07:21:43 <Itkovian> in fact I am reading 'The machine Crusade' right now, which is set pre-Dune
07:21:57 <p21870> a another prequel
07:22:04 <p21870> how today
07:22:06 <Itkovian> not as good as Frank's books, but still enjoyable, though predictive at times
07:22:17 <p21870> Frank's books?
07:22:21 <Itkovian> which is a tad disappointing
07:22:24 <Itkovian> Frank Herbert
07:22:41 <p21870> is that from
07:22:47 <Itkovian> imo Brain could have made much better prequels, but hey, shit happens
07:22:47 <p21870> uncle tom and the negro hut
07:22:55 <Itkovian> eh?
07:23:02 <Itkovian> isn't that a book by Mark Twain?
07:23:02 <p21870> i read that book
07:23:07 <p21870> once
07:23:42 * boegel is reading 'The Hitch Hikers Guide to the Galaxy' now, pretty neat
07:23:59 <mflux_> why bother? the movie is waiting behind the corner..
07:24:00 <mflux_> ;)
07:24:07 <CosmicRay> boegel: nice
07:24:11 <CosmicRay> boegel: I enjoyed it too
07:24:13 <p21870> i'll just stick to my wildboys/viva la bam collection
07:24:18 <boegel> because I'd like to read the book before I see the movie :)
07:24:21 <Itkovian> mflux_: the book is prolly way better than the movie
07:24:33 <boegel> besides, most of the time the movie sux while the book is great
07:24:36 <mflux_> so you can have higher expectations and get disappointed
07:24:38 <mflux_> not a good move!
07:24:40 <yain> (and the movie is like 10x shorter)
07:24:46 <mflux_> better read the book afterwards ;)
07:24:49 <boegel> except American Psycho, you gotta love Christian Bale :)
07:24:54 <Itkovian> no, that spils the readin XP
07:25:05 <mflux_> (although I've already read it, but maybe I should do that again, this time in english)
07:25:08 * boegel agrees with Itkovian
07:25:11 * Itkovian found American Psycho (the movie) quite good.
07:25:15 * Muad_Dibber likes books from tom clancy as well
07:25:15 <Itkovian> the business cards are awesome
07:25:23 <mflux_> although I guess the tapes by BBC are the real way to go
07:25:24 <Muad_Dibber> although you have to be in the mood for spies and violence :P
07:25:26 * boegel doesn't remember the business cards
07:25:27 <mflux_> as they are the originals
07:25:27 <CosmicRay> boegel: you may also enjoy the 1980s BBC TV series
07:25:28 <Itkovian> I love Steven Erikson (see nick)
07:25:30 <xerox> Do anybody of you use Emacs in console mode when hacking Haskell?
07:25:35 <Itkovian> nope
07:25:39 <boegel> CosmicRay: where on earth will I find those :)
07:25:57 * Itkovian also recalls the scene with the two hookers ...
07:25:59 <Itkovian> lol
07:26:05 <dcoutts> xerox, on the console I use vim, in X in use NEdit
07:26:11 <Itkovian> 'don't just stand there .. eat'
07:26:17 <Itkovian> need I say more?
07:26:21 <CosmicRay> boegel: they're on DVD here in region 1
07:26:23 <xerox> The color scheme is weird, at least for the light blue.
07:26:24 <Itkovian> eh Philippa ?
07:26:26 <Itkovian> ;-)
07:26:27 <CosmicRay> boegel: I rented them from greencine.com easily enough
07:26:28 <boegel> my Hitch Hikers book is only like 160 pages, is that possible ? or do I have to trimmed down version ?
07:26:35 <CosmicRay> boegel: I suspect you could find them on dvd over there with no big trouble
07:26:37 <boegel> CosmicRay: cool
07:26:40 <Itkovian> boegel: no you have the first book
07:26:41 <CosmicRay> boegel: it is a "trilogy"
07:26:49 <Philippa> of five
07:26:49 <Itkovian> boegel: there's four more
07:27:04 <Itkovian> boegel: i can lend you my copy as soon as I get it back from Michiel
07:27:07 <boegel> and Hitch Hikers is the first ?
07:27:13 <p21870> boegel, that series is so all over the internet. it's quite nice
07:27:15 <Itkovian> yes
07:27:15 <boegel> Itkovian: cool
07:27:27 <Itkovian> I do not have the last book though
07:27:29 <boegel> okay, then I'll continue reading :)
07:27:33 <Itkovian> the first four are the best anyway
07:27:37 <boegel> Itkovian: what a shame !
07:27:50 <boegel> I'll read the Holistic Detective Agency stuff too
07:28:00 <Itkovian> well, when I bought them, the last one hadn't been published yet
07:28:02 <boegel> I heard Boute say it was a great book :)
07:28:08 <CosmicRay> boegel: full list in order at http://www.douglasadams.com/creations/hhgg.html
07:28:12 <Itkovian> boegel: yes, they're great
07:29:02 * boegel will take a full trunk of books with him to the South of France for his (last big) holiday
07:29:05 <Itkovian> My favorite authors include: Steven Erikson, Glen Cook, Frank Herbert (Dune), Chiena Mieville, Ian Cameron Esslemont ...
07:29:22 <Itkovian> boegel: if you are into complex stuff, you should read Gardens of the Moon
07:29:24 * boegel doesn't know any of them
07:29:28 <Itkovian> it's fantasy
07:29:35 * boegel doesn't like fantasy
07:29:39 <Itkovian> but very good. not the usual Tolkien rip offs
07:29:49 <Itkovian> oh but neither did I :-)
07:29:58 <boegel> I never managed to read the full Tolkien stuff
07:30:01 <Itkovian> until Tolkien and Erikson came along
07:30:11 <p21870> hey is the psp out in europe?
07:30:13 <Itkovian> George Martibn is very good too, though he should write faster
07:30:22 <Itkovian> p21870: the what?
07:30:27 <p21870> psp
07:30:31 <p21870> playstation handheld
07:30:36 <Itkovian> ah
07:30:38 <Itkovian> no idea
07:30:39 <boegel> I think so
07:30:43 <boegel> not sure though
07:30:52 <p21870> cause that would be my alternative to a book :D
07:31:01 <p21870> if the battery usage is reasonable
07:31:05 <p21870> unlike my ipod :P
07:31:22 <boegel> p21870: ipod battery usage is reasonable, if you ask me
07:32:02 <p21870> i wish it would be longer than 8 hours
07:32:23 <boegel> 8 hours is fine for me
07:32:26 * xerox loves his Rio Karma.
07:32:40 <boegel> I only use it when riding my bike and sitting on the train
07:32:41 <xerox> 20Gb for $130
07:34:44 <Itkovian> hmm
07:34:48 <Itkovian> I'd love an Ipod
07:35:03 <Itkovian> but how could you read a bloody book on an IPod?
07:35:09 <Itkovian> iPod
07:35:13 * boegel waves his iPod at Itkovian
07:35:20 <Itkovian> diediedie
07:35:22 <Itkovian> ;-)
07:35:50 <boegel> Itkovian: you can't, but when you have an iPod, you can shut out all the noisy people on the train whilst reading a book
07:35:57 <Itkovian> true
07:35:59 <boegel> and ending up in Brussels instead of Ghent ;)
07:36:06 <Itkovian> I can do the same with my powerbook tho
07:36:22 <boegel> true, but that's a bit bigger :)
07:38:47 * boegel should start studying again soon, but doesn't know where to begin :(
07:38:56 <Itkovian> at the beginning
07:39:06 <p21870> read a book on an ipod....
07:39:12 <xerox> boegel, what are you studying?
07:39:21 <xerox> p21870, audio books!
07:39:21 <p21870> you can listen to an audiobook :P
07:39:40 <p21870> xerox, exactly
07:40:39 <boegel> xerox: modern compiler implementation in C (Appel)
07:40:48 <basti_> hi!
07:40:52 <Itkovian> p21870: but that's not the same as reading the words imo
07:41:00 <Itkovian> hi basti_
07:41:04 <p21870> Itkovian, you are right.
07:41:10 * boegel agrees with Itkovian (again)
07:41:16 <Itkovian> not as submerging
07:41:16 <xerox> Itkovian, but you could do it while unicycling, yay ;)
07:41:22 <p21870> but i'd like to read of paper anyways
07:41:27 <Itkovian> is that shapr tal
07:41:29 <Itkovian> king
07:41:33 <boegel> now there's a good reason
07:42:11 * boegel starts printing the 820 slides, since the exam is partially with open book
07:42:26 <p21870> you have an exam about that apple book?
07:42:34 <boegel> p21870: yeah, Friday
07:42:39 <p21870> mannnn that sucks
07:42:41 <boegel> I wasn't reading it for fun :)
07:42:50 <p21870> i thought you were actually
07:42:54 <boegel> p21870: thanks for the support :s
07:43:08 <boegel> no
07:43:14 <p21870> hey, i only bring truth boegel....truth you already know ;)
07:43:18 <boegel> it's quite interesting, but it's damn hard
07:43:35 <boegel> I'm really curious what he'll ask
07:43:49 <p21870> ask him :P
07:43:51 <boegel> if he starts asking C-implementation stuff, I'm fucked :)
07:44:12 <p21870> well the book *does* say implementation in C :D
07:44:13 <boegel> p21870: he doesn't even reply to students emailing him questions, let alone he'd answer that :)
07:44:19 <boegel> p21870: grr
07:44:51 <boegel> p21870: we've had several pc classes that threat that part, I think
07:45:09 <boegel> counts for 1/3 of the exam result
07:46:16 <Itkovian> boegel: usually, if the exam is oral, he provides half the answers himself, i once thought i was sacked, but i got 16/20 ... while he told me all the stuff I should have answered ... just make sure you agree and somtimes try to answer ahead of him and you'll be fine
07:46:23 <boegel> I guess I'll go and study some more, sitting around here complaining about it
07:46:39 <boegel> Itkovian: it's not an oral exam :(
07:46:45 <Itkovian> too bad ;-)
07:46:48 <boegel> :'(
07:46:59 <p21870> for my implementation of compiler class...i had to dray some type inference tree, define some attribute grammer to solve some problem, translate a piece of code to stack instructions and some general questions
07:47:02 <earthy> oral exam...
07:47:05 * earthy sniggers
07:47:09 <bringert> CosmicRay: do you have any comments om my CGI module?
07:47:11 <p21870> dont start earthy
07:47:19 <bringert> does it do the things you want?
07:47:21 <boegel> earthy: omg :)
07:47:38 <CosmicRay> bringert: I will once I have the chance to look at it later today
07:47:43 <CosmicRay> bringert: from your description, it sounds good
07:48:24 <Itkovian> earthy: come on the prof is male ... if it was a female, we could appreciate your thoughts ;-)
07:48:52 <p21870> a female CS prof...it gets funnier and funnier
07:49:08 <Itkovian> well, we did have two of those, but they were ugly as hell
07:49:26 <p21870> let me guess....only their passports proved they were women
07:49:32 * Itkovian cringes at the thought of even have to see Rita naked
07:49:45 * boegel runs away screaming
07:49:48 <Itkovian> haha
07:50:00 <Itkovian> boegel: did you know koen once ended up in her bedroom?
07:50:14 <boegel> Itkovian: tell me all about it ! :)
07:50:24 <Itkovian> he was still studying then and she asked him to come and explain to her what the stuff was all about!
07:50:33 <Itkovian> can you imagine?!
07:50:41 <Itkovian> a prof asking you to explain the stuff she's teaching
07:50:42 <boegel> no, I can't actually :)
07:50:53 <p21870> he must have had good methods
07:50:55 <p21870> lol
07:51:04 <boegel> Itkovian: she was a prof already then?
07:51:22 <Itkovian> when he was there ... well, I can't recall the details, we'll have to ask Michiel once, but he did end up in her bedroom, fully dressed, needless to say
07:51:37 <boegel> I hope he remained fully dressed
07:51:38 <Itkovian> maybe she was a teaching assistant, or a doctor assistant, i don't know
07:51:45 <Itkovian> but she taught that class for sure
07:51:50 <earthy> yeah, I can imagine explaining something to the teacher
07:51:59 <earthy> about the stuff he/she is teaching
07:52:03 <boegel> that's just nasty
07:52:06 <earthy> but then again, I've been the teacher.
07:52:09 <Itkovian> it is
07:52:15 <earthy> so I know how little I know. :)
07:52:18 <Itkovian> we kinda loathe her a bit
07:52:26 <nothingmuch> what's the name of integer /?
07:52:36 <earthy> nothingmuch: div
07:52:39 <nothingmuch> grazie
07:52:54 <boegel> Itkovian: any more interesting stuff ? :)
07:53:01 <Itkovian> heh
07:53:02 <nothingmuch> @pl (\a b -> toInteger (fromEnum ((==) a b)))
07:53:03 <lambdabot> ((toInteger . fromEnum) .) . (==)
07:53:12 <Itkovian> when you came and work here boegel. be patient
07:53:14 <nothingmuch> oh, i see
07:53:19 <boegel> ah damned :)
07:53:28 <boegel> s/ah/oh
07:57:58 <Itkovian> i'm off ... ttyl
07:58:36 <p21870> hey its time indeed
07:58:37 <p21870> later
07:59:17 <boegel> bye Itkovian
08:20:49 * boegel leaves for a while
08:21:47 <xerox> http://dvzine.org/
08:35:17 <Speck> Anyone know of some good haskell blogs?
08:35:29 <basti_> lambda the ultimate is not specifically haskell
08:35:35 <basti_> but a good blog.
08:39:58 <Muad_Dibber> is there already a wxHaskell XML editor?>
08:40:29 <Speck> Yeah I already  read LtU :-)
08:44:38 <Muad_Dibber> hmm?
08:49:12 <Speck> from above
08:52:41 <shelarcy> Proxima is wxHaskell editor, but It is prototype now.
08:52:46 <shelarcy> http://www.cs.uu.nl/research/projects/proxima/
08:53:08 <shelarcy> s/wxHaskell editor/wxHaskell XML editor/
09:09:21 <SyntaxNinja> @yow
09:09:23 <lambdabot> I think I'm having a mid-week crisis.
09:12:52 <musasabi> sorry for the offtopic - but what does one use instead of a monad transformer stack in Clean for state and exceptions ?
09:20:18 <dcoutts> ndm, do you have some code for extracting function names and their types from .hi files then? I'm trying to write a tool to compare API compatability between different versions of the same package.
09:20:18 <dcoutts> ie dumpt the functions and their types from all exposed .hi files in both versions of the package and then check for removed functions or changes in type.
09:20:27 <dcoutts> but parsing the output of ghc --show-iface is not quite as simple as using grep/sed since the types flow over multiple lines.
09:20:32 <dcoutts> so I was hoping I could pinch some of the hoogle .hi reader code :-)
09:21:22 <dcoutts> ndm, actually I've got to run off, but maybe I can bug you later about it? :-)
09:25:29 <ndm> dcoutts, just got back
09:25:32 <ndm> yes, i do
09:25:40 <ndm> if you give me an email, i'll send you a copy...
09:27:11 <Igloo> It'd be nice if GHC-as-a-package could be used for that sort of thing
09:27:47 * Igloo is hopeful it will be possible to write a whole-program(s) unused function finder easily with it, but I haven't looked at it at all to see if that is feasible
09:28:08 <ndm> dcoutts: i'm off now, but ask tomorrow and i will give you the code
09:33:56 <ndm> Igloo, it relatively easy to do unused function finding
09:34:09 <ndm> as long as you are a bit careful with the modules and classes
09:34:17 <ndm> i have a version on a reduced Haskell like language
09:39:11 <SamB> how do you attach a file to a page on hawiki?
09:46:40 <kowey> hi haskellers... anyone know of a compact String library for haskell?
09:47:02 <kowey> i just tried to use PackedString... but then watched to my horror as usage went up
09:47:10 <kowey> (efficient here probably meant time-wise :-) )
09:47:45 <SamB> Maybe you should look at whatever NHC uses
09:48:19 <SamB> because NHC is a space-optimized compiler, its supposed to be able to compile itself with 4 megs of heap
09:48:43 <SamB> (or was that four megs of total ram? I don't remember...)
09:49:01 <kowey> was reading their paper on profiling... looking at the lib
09:49:21 <kowey> hmm... but if i'm using GHC
09:49:29 <kowey> does it look like i'd have to do something myself?
09:49:40 <kowey> like some ffi craziness?
09:50:29 <SamB> well, GHC CAN compile NHC, and the string stuff, from what I understand, is part of the compiler, not the library...
09:50:46 <kowey> hmm... so dig up the NHC source code
09:51:37 <kowey> is nhc98 the latest?
09:51:48 <kowey> uh... nevermind
09:58:18 <SamB> @docs System.Posix
09:58:19 <lambdabot> http://haskell.org/ghc/docs/latest/html/libraries/unix/System.Posix.html
10:09:18 <kowey> mrph...
10:09:40 <kowey> well... i used the PackedString from NHC (not the compiler, though, but the library)
10:09:48 <kowey> and still using more memory
10:12:15 <Igloo> ndm: The difficult bit is parsing Haskell, which is why I hope the ghc package can be used for that
10:13:03 <Igloo> I've written the code to do it, but it uses some ugly shell scripting and -ddump-simpl output to get the data, and gets it wrong for things like infix ops
10:13:38 <Igloo> kowey: You could try darcs' FastPackedString
10:13:50 <kowey> thanks Igloo (and SamB)
10:13:58 <kowey> i'm going to first try the compiler version
10:14:39 <kowey> dissapointed that Simon Marlow's UArray implementation should take up more space though
10:16:09 <SamB> kowey: what kind of things are you doing with the strings?
10:16:33 <kowey> lots of comparisons
10:16:49 <kowey> although....
10:17:06 <SamB> where do they come from?
10:17:12 <basti_> could be cheaper to sort first and then compare indices instead of comparing the strings all the time
10:18:05 <SamB> as in zip [0..] (sort strings)?
10:18:14 <kowey> hmm
10:18:21 <kowey> i'm not sure that's going to be easy for me
10:18:29 <kowey> in that the strings are buried in
10:18:48 <kowey> something like [(String,String)] within a tree within another data structure
10:18:54 <SamB> though he said he was worried about SPACE, and not time...
10:19:01 <kowey> right
10:19:19 <kowey> although... maybe some of the stuff i'm going is defeating the packing
10:19:49 <kowey> how would you write the following oft-used snippet?
10:20:03 <kowey> isAnon = (==) ps_UNDERSCORE where ps_UNDERSCORE = packString "_"
10:23:37 <SamB> kowey: probably I would lift ps_UNDERSCORE to the top level, to start with, but I would have expected GHC to do that too. but I can be wrong.
10:23:43 <SamB> (often am!)
10:23:47 <kowey> actually, i already do that
10:23:50 <SamB> okay
10:23:57 <kowey> was just using the where for irc pasting
10:28:54 <SamB> well, first off, I don't think you can beat plain-old String for that particular check, certainly not by much...
10:29:27 <kowey> well... what i'm really worried about
10:29:32 <kowey> is just carrying all these strings around
10:29:52 <SamB> where do the strings come from?
10:30:02 <kowey> i have a bunch of trees, the nodes of each tree carry two lists, each list carries a ([String],[String])
10:30:19 <kowey> the user supplies a large textual input file
10:30:52 <kowey> although... what is true is that i do eventually start using the same strings a lot
10:30:57 <SamB> okay, okay. Well, you could try interning them when you read the input. How do you read the input.
10:31:17 <SamB> er, s/\.$/?/
10:31:23 <kowey> got some happy code lying around
10:31:28 <kowey> hmm
10:31:34 <SamB> Happy? oh, the pain...
10:31:48 * SamB is partial to Parsec
10:31:55 <kowey> although what would be nice is to have some kind of representation that does this for me
10:32:13 <kowey> uhm.. you know, some kind of string pointer manipulation i don't have to see :-) automagic
10:33:34 <kowey> ok, maybe a more concrete compilery question
10:33:40 <SamB> automagic like Data.Array.Diff magic? well, it would be harder because it would require GLOBAL state to hide interning, and that could be bad...
10:35:19 <SamB> threading it through the parser, even in happy, would probably be better...
10:35:38 <kowey> oh dear
10:35:45 <SamB> what?
10:35:53 <kowey> well i'm going to see how far i can run with a simple drop-in replacement of the data
10:36:16 <kowey> before doing anything that would involve re-writing, well... everything :-)
10:36:52 <SamB> if Happy is half the parser-generator I think it is, it should be pretty easy to thread state through a parser...
10:37:06 <kowey> parsing is only a tiny fraction of the story
10:37:16 <kowey> parsing gives me a small number of trees
10:37:32 <kowey> what i then do is some comparisons between my trees... and over time, i get a big number of trees
10:37:33 <SamB> do you generate new strings after parsing, then?
10:37:41 * kowey thinks
10:37:57 <kowey> there is some alpha-conversiony stuff
10:38:02 <kowey> that i do in the very beginning
10:38:13 <kowey> but other than that..
10:38:27 <kowey> i think the rest of it is unification from there on
10:39:03 <basti_> building prolog 9? ;)
10:39:23 <kowey> heh, well, natural language stuff
10:39:33 <basti_> nailing pudding to a tree?
10:39:45 <kowey> ?
10:39:46 <SamB> remind me what alpha conversion is again?
10:40:01 <kowey> speaking loosely (don't know what the right term is)
10:40:05 <kowey> the basic idea is that
10:40:22 <basti_> replacement of variable names (all a's with b's, for example)
10:40:32 <kowey> i want to unify two lists, say [X,Y,3] [1,2,Z]
10:40:37 <basti_> without changing the algorithm
10:40:52 <kowey> or yes, more simply put by basti
10:41:08 <basti_> unification is something else
10:41:18 <kowey> well... the thing is
10:41:39 <kowey> our unification algorithm assumes the variables between our two lists are disjoint
10:41:45 <basti_> "natural language processing" always evokes some kind of gag or cough reflex with me... i can't put my finger on the "why"
10:41:47 <kowey> so i'm using the term "alpha-conversion" imprecisely
10:41:55 <kowey> to mean "i rename things so they don't collide"
10:41:55 <basti_> hmm
10:42:11 <basti_> oh well *that* part of unification is alpha-conversation then
10:42:24 <basti_> you mean as in [X,3]=[2,X] would rename one of the x's?
10:42:41 <kowey> oh, ok... cool... thought it was only a lambda calc stuff, not good at this formal stuff
10:42:57 <kowey> yeah, or rather i systematically rename everything
10:43:06 <kowey> [X-1,3]=[2,X-2]
10:43:27 <kowey> but that's really small potatoes compared to what's really going on
10:43:29 <basti_> hmm you know that arithmetics is undecideable?
10:43:33 <basti_> =)
10:44:15 <SamB> maybe you should just pair the string up with an id of some kind, instead of replacing it with another string...
10:44:43 <kowey> what, for the alpha conversion stuff?
10:44:52 <SamB> yeah
10:45:06 <kowey> well, it's really not a big deal compared to the rest of it
10:45:26 <kowey> i don't mind wasting some space for all those alpha converted variables
10:45:44 <kowey> drop in the bucket
10:45:57 <SamB> and as to threading interning through a parser, it looks easy enough...
10:46:01 <SamB> see http://www.haskell.org/happy/doc/html/sec-monads.html
10:46:01 <basti_> so how is the natural language processing going to happen?
10:46:09 * basti_ wonders
10:46:33 <kowey> well... it's a generator, so its job is to make sentences
10:46:40 <kowey> it takes a set of trees
10:46:46 <basti_> oh. okay. thats not as hard.
10:46:48 <kowey> and systematically combines pairs of trees together
10:47:03 <kowey> every new tree needs to be considered as well
10:47:12 <kowey> so what you end up with is a whole messload of trees
10:47:25 <SamB> so have you heap-profiled this at all?
10:47:31 <SamB> not that I have a clue how.
10:47:35 <kowey> yep
10:47:44 <basti_> hmm
10:47:50 <basti_> compile -prof
10:47:54 <SamB> and strings were hogging most of the space?
10:47:54 <kowey> the basic thing is that we know we're using loads of memory
10:47:57 <basti_> then run +RTS -hC or something
10:48:08 <kowey> well... we don't know that, but intuitively
10:48:16 <kowey> that's the bulk of our data
10:48:34 <SamB> kowey: why do you heap profile and then proceed to reason by intuition about space usage?
10:48:50 <SamB> instead of, you know, looking at the heap profile?
10:49:14 <kowey> looking at the heap profile tells us which functions use space
10:49:26 <kowey> but say for arguments sake, and there probably is...
10:49:37 <kowey> say there is some ghc switch that lets us know what data structure uses the more space
10:49:52 <basti_> try the different heap profiles
10:49:55 <basti_> there's lots.
10:50:20 <kowey> ok... yeah, i should try that
10:50:37 <kowey> well... here's an empirical argument
10:50:42 <kowey> might be full of BS :-)
10:50:55 <yain> all arguments are
10:51:10 <kowey> with Strings: i was using 3.8 G of space.. with PackedStrings, i'm using 5.5 G
10:51:18 <kowey> just by changing the String data type
10:51:34 <kowey> therefore, Strings must play a big role? no?
10:53:13 <SamB> kowey: methinks you must have been getting something out of lazyness or the fact that @xs ++ ys@ allocates only @length xs@ cons cells...
10:53:24 <Speck> I can't grok the parsec combinators, can someone more simply explain the difference between endBy and sepEndBy?
10:54:44 <xerox> @index endBy
10:54:45 <lambdabot> Text.ParserCombinators.Parsec.Combinator, Text.ParserCombinators.
10:54:45 <lambdabot> Parsec, Text.ParserCombinators.ReadP, Distribution.Compat.ReadP
10:55:01 <xerox> @type Text.ParserCombinators.Parsec.Combinator.endBy
10:55:03 <SamB> Speck: sepEndBy (char 'a') (char 'b') will match "ababab" and return "aaa"...
10:55:09 <lambdabot> Text.ParserCombinators.Parsec.Combinator.endBy :: forall a
10:55:09 <lambdabot>                    st
10:55:09 <lambdabot>                    tok
10:55:09 <lambdabot>                    sep.
10:55:09 <lambdabot>                  Text.ParserCombinators.Parsec.Prim.GenParser
10:55:09 <lambdabot> tok
10:55:11 <lambdabot>                                 st
10:55:13 <lambdabot> [9 @more lines]
10:55:18 <xerox> gee.
10:55:30 <SamB> Speck: endBy (char 'a') (char 'b') will match "aaab" and return "aaa"...
10:56:00 <SamB> no, wait
10:56:07 <SamB> now I don't have a clue what endby is for...
10:57:22 <SamB> maybe the sepEndBy matches "ababab" *and* "ababa"?
10:57:39 <Speck> I can't really tell due to my lack of Haskell ability (portmanteou: Haskility), but Parsec in general seems to suffer from TMWTDI
10:58:21 <Speck> portmanteau, rather
10:58:34 <SamB> okay, yeah.
10:58:37 <SamB> Prelude Text.ParserCombinators.Parsec> parseTest (sepEndBy (char 'a') (char 'b')) "ababab"
10:58:37 <SamB> "aaa"
10:58:37 <SamB> Prelude Text.ParserCombinators.Parsec> parseTest (sepEndBy (char 'a') (char 'b')) "ababa"
10:58:37 <SamB> "aaa"
10:59:11 <SamB> hmm, the documentation might be useful for this ;-)
10:59:14 <SamB> http://www.cs.uu.nl/~daan/download/parsec/parsec.html
10:59:24 <Speck> I'm reading the documentation
10:59:46 <Speck> it just doesn't have enough examples to make it understandable for me
11:00:21 <Speck> at least for the parts of it that aren't in the tutorial section
11:00:23 <SamB> which documentation are you reading?
11:00:28 <Speck> the tutorial section is fantastic
11:00:51 <Speck> I was reading the html page you linked to
11:01:03 <Speck> which I read before in its linked pdf form
11:01:10 <Speck> just needs to sink in I guess
11:02:45 <SamB> It looks like @sepEndBy p sep@ is for things where the final @sep@ is optional, and @endBy p sep@ for things where the final @sep@ is mandatory...
11:03:05 <SamB> parseTest is a very usefull function
11:04:05 <kowey> (night folks, and thanks again)
11:05:09 <Speck> yeah, you're right SamB. I need to really memorize the api before I ask so many n00b questions :-P
11:05:14 <Speck> thanks for explaining it to me
11:05:50 <SamB> Speck: nah.
11:05:57 <SamB> you just need to experiment ;-)
11:06:52 <SamB> hmm, I was getting endBy mixed up with manyTill myself just now
11:09:18 <Speck> unrelatedly, Sam is an outrageously cool name
11:09:54 * SamB thought it was rather everyday, but maybe that is because for him it is used just about everyday ;-)
11:10:10 <Speck> it is for me as well
11:10:19 <Speck> perhaps I'm biased
11:15:50 <Speck> lines = entries `sepEndBy` newline
11:16:10 <Speck> this doesn't work like I expected it to
11:16:23 <SamB> maybe because there is a lines in Prelude?
11:16:27 <SamB> @type lines
11:16:34 <lambdabot> lines :: String -> [String]
11:16:45 <Speck> I am qualifying it
11:16:57 <Speck> and actually hiding it from my import
11:17:01 <SamB> oh
11:17:22 <Speck> it lets the `entries' parser scan past newlines
11:17:28 <SamB> what does it do that you did not expect?
11:17:32 <SamB> oh, well yeah
11:17:54 <Speck> I'd expect it to pass a slices of the input file to entries
11:18:20 <Speck> so the entries parser would never even see newlines
11:19:06 <SamB> that wouldn't work too well for trying to parse something like (foo, (bar, baz)) with using sepBy...
11:19:31 <SamB> besides the likely space-leak...
11:19:48 <Speck> hm... is there a combinator that does roughly what I'd like to do?
11:20:45 <SamB> basicly, you just have to keep entries from eating your spaces...
11:20:56 <SamB> er, newlines
11:21:28 <Speck> that makes it impossible to decouple my parsers :/
11:22:18 <SamB> face it! the parsers will most likely always be coupled...
11:22:39 <Speck> yeah I guess so
11:23:03 <Speck> entries = (many1 (noneOf [' ','\n'])) `sepEndBy` space    when I define my entries parser to be like this it still eats it
11:23:48 <SamB> what are you trying to parse, anyway?
11:23:55 <Speck> w3c extended log file format
11:24:55 <Speck> but as a step to that, newline-separated, once again space separated input (into a [[String]])
11:28:12 <SamB> oh, I think space probably eats newlines...
11:28:24 <SamB> try char ' '
11:28:47 <Speck> @type Text.ParserCombinators.Parsec.Combinator.space
11:28:47 <SamB> yeah, that works a lot better
11:28:49 <lambdabot> bzzt
11:28:57 <Speck> blargh
11:30:34 <Speck> that does work
11:30:44 <Lemmih> nibro: Hey. Bjorn Bringert wrote a FastCGI binding.
11:34:39 <SamB> @index openBinaryFile
11:34:40 <lambdabot> System.IO
11:35:24 <SamB> @index writeBinaryFile
11:35:25 <lambdabot> bzzt
11:38:45 <CosmicRay> SamB: see System.IO haddock docs, IIRC
11:38:48 <CosmicRay> maybe System.IO.Binary
11:38:58 <CosmicRay> there is no writeBinaryFile in fptools iirc
11:39:43 <SamB> @docs System.IO
11:39:44 <lambdabot> http://haskell.org/ghc/docs/latest/html/libraries/base/System.IO.html
11:47:03 <Speck> can parsec parsers be parametrized?
11:51:14 <Lemmih> A parser is just a normal function.
11:51:50 <Speck> yeah I figured it out right after I asked
11:52:01 <Speck> I keep on thinking about yacc-likes that aren't part of the host language
11:52:32 <basti_> hmm. When looking up for some java related stuff recently, i stumbled over someone claiming that java would be strongly typed. I had to laugh.
11:55:01 <SamB> Parsec is the funnest because it uses a real language ;-)
11:56:44 <mflux_> I do wonder if Parsec-like solution is the best for parsers though; for example bison can produce some compile time diagnostics about the rules?
11:57:11 <mflux_> or are the mistakes caught by bison-like compilers still so rare that the cost of using a separate language is higher
11:59:39 <SamB> well, with Parsec you can write a fairly direct parser...
12:04:15 <mflux_> or must?-)
12:09:58 <autrijus> must is correct :)
12:10:37 <SamB> well, you could write one similarly obfusticated to those that YACC and friends require...
12:10:42 <musasabi> mflux_: usually parsec parsers are so much clearer that one does not make the mistakes in the first place.
12:11:13 <SamB> I'm not sure what mistakes yacc catches anyhow, so maybe they are impossible in Parsec.
12:11:20 <musasabi> Usually I end up spending more time debugging e.g. happy parsers than the parsec using ones.
12:11:55 <SamB> I spend more time debugging Parsec parsers because I don't write parsers in Happy ;-)
12:13:30 <SamB> typically, the reson I use Haskell in the first place is Parsec...
12:17:26 <musasabi> SamB: usually I have emacs with both ghci and the parser I am writing. Then I define a small function like p :: ParserType -> String -> IO (), which I use to test the parser in small parts.
13:16:46 <SamB> is there some kind of nice monadic interface to random number generation?
13:18:14 <xerox> @index randomR
13:18:15 <lambdabot> System.Random
13:18:19 <xerox> @docs System.Random
13:18:20 <lambdabot> http://haskell.org/ghc/docs/latest/html/libraries/base/System.Random.html
13:18:26 <xerox> There you go :)
13:18:39 <SamB> what part of "nice monadic" do you not understand?
13:19:49 <xerox> There is a randomRIO if you want...
13:20:27 <SamB> that IS monadic, but I don't think it qualifies as nice...
13:22:49 <xerox> :)
13:32:59 <TheHunter> what more do you want from a monadic random interface than randomIO, randomRIO and getStdRandom-like functions?
13:39:12 <SamB> TheHunter: something besides IO for a monad, hmm?
13:39:29 <TheHunter> <SamB> that IS monadic, but I don't think it qualifies as nice...
13:39:46 <TheHunter> you were complaining about the interface, not the fact that it is IO.
13:40:10 <TheHunter> anyway, doing something like that for a state monad should be less than 10 lines of code.
13:45:57 <SamB> actually, I'm going to mangle QuickCheck's Gen...
13:48:13 <TheHunter> that's ok too if you don't care you're not getting a monad.
13:49:43 <jyp> is boegel or dcoutts around?
13:49:55 <SamB> actually, I could change it to be a real monad, I think...
13:50:38 <TheHunter> by making it a state monad...
13:50:59 <SamB> oh, yeah, probably it will be one.
13:51:10 <SamB> but it will look nicer in compiler error messages.
13:51:41 <boegel> jyp: boegel is !
13:51:46 <boegel> yo Itkovian
13:51:56 <jyp> hey boegel :)
13:51:59 <Itkovian> hi boegel
13:52:08 <boegel> hey jyp, how can I help
13:52:11 <TheHunter> newtype Rand a = Rand (State Gen) deriving (Functor, Monad) will give just as good error messages.
13:52:52 <jyp> boegel: Your releasing HRay made me resurrect my old ray tracing project :)
13:53:00 <jyp> (a classic :)
13:53:14 <jyp> Much weaker than yours,
13:53:34 <jyp> though it included implicit surfaces (aka metaballs)
13:54:08 <boegel> jyp: cool
13:54:22 <boegel> jyp: any screenshots ?
13:54:24 <jyp> so I wanted to let you know that if you're interested in that part i'd gladly give you the code, or even contribute if you want
13:54:32 <jyp> that can be arranged
13:55:48 <SamB> true
13:55:57 <boegel> jyp: that would be cool
13:56:08 <xerox> Quick poll, who is typing QWERTY and how many DVORAK?
13:56:21 <TheHunter> querty
13:56:31 * jyp works on it
13:56:32 <boegel> adding that kind of stuff to HRay shouldn't be too hard, implementing an intersection an normal function should do it
13:56:59 <xerox> TheHunter, take a look at this when you have some time: http://dvzine.org/ :-)
13:57:06 <astrolabe> qwerty.  I've never even seen a dvorak
13:57:10 <jyp> boegel: that's was my guess, so it's ready to plug in I think :)
13:57:40 <xerox> astrolabe, it's not even needed, eheh, take a look at the same url.
13:57:50 <boegel> jyp: great !
13:57:57 <boegel> jyp: familiar with darcs ?
13:57:59 <xerox> In fact I'm typing qwerty too, but I'm trying to learn dvorak && touch typing.
13:58:18 <TheHunter> the suboptimal positions of special characters and totally fucked up keybindings always put me off
13:58:47 <TheHunter> s/keybindings/keybindings of applications/
13:59:18 <jyp> boegel: here ya go... http://users.skynet.be/jyp/Screenshot.png
13:59:27 <jyp> (and sorry for the general lameness :)
14:00:06 <jyp> boegel: I've hacked with darcs a bit, so I guess I'm ready for it
14:00:09 <boegel> jyp: is that you're coding working ?
14:00:35 <boegel> jyp: we'll, i suppose the first thing you'll have to do is pull in my darcs repo
14:00:46 <boegel> basicly 'darcsget url'
14:00:55 <boegel> and you can find the url on the download page of HRay
14:01:01 <jyp> alright
14:01:07 <jyp> I'll give it a shot then
14:01:14 <boegel> jyp: which GTk2Hs version are you using ?
14:01:18 <jyp> cvs
14:01:38 <jyp> head (unless it moved away from sf ?)
14:02:10 <boegel> jyp: no, I mean like 0.9.7 ? or the new beta release ?
14:03:11 <jyp> well I suppose it's the beta release, I just grabbed it from sourceforge's cvs
14:03:32 <boegel> jyp: ok then, then you won't have to change anything to the stuff you pull in with darcs
14:03:38 <boegel> should work fine
14:03:54 <boegel> just compile using ghc --make -O
14:04:00 <boegel> an then run it, off course :)
14:04:01 <jyp> alright
14:05:10 <boegel> tell me if something is wrong, I'll probably be able to help you with it then
14:06:17 <jyp> ... compiling ...
14:06:48 <boegel> it's possible it'll take a while, because the HRayPerlin stuff has four large hardcoded lists in it
14:08:22 <boegel> you can test it with some of the scene description files I included in the repo
14:08:58 <jyp> ok, it works alright :)
14:09:06 <boegel> now
14:09:26 <boegel> to add your support, we'd have to change to parser bit too
14:09:38 <boegel> since there's only support for planes/sphere's
14:09:43 <jyp> yup that's what I was thinking ...
14:09:55 <boegel> but maybe you can start with adding intersection and normal stuff, and adjust ObjType
14:10:04 <boegel> and then hard-code some scenes for testing
14:10:13 <boegel> I'll do the necessary parser adjusting then, ok ?
14:10:17 <jyp> cool
14:11:52 <jyp> If you like I also did the intersection test for quadrics; but it's less beautiful :)
14:12:14 <boegel> jyp: doesn't matter, include the darn thing :)
14:12:34 <jyp> fine, fine :)
14:12:34 <boegel> I'll see if I can clean it up then, if necessary
14:15:09 <jyp> ok ;) yet I meant, "the rendered effect is less beautiful than implicit surfaces"
14:15:40 <boegel> jyp: oh, ok
14:15:54 <boegel> jyp: I think you can make pretty neat stuff with quadrics, no ?
14:16:17 <boegel> hey jyp, you're from be ? hadn't noticed :)
14:16:21 <boegel> have we talked before ?
14:18:30 <jyp> we talked briefly a few month ago, yes :)
14:18:51 <jyp> and you noticed my nationality then too :p
14:19:46 <jyp> quadrics are cool, but their infiniteness makes for weird scenes...
14:19:55 <jyp> often people don't understand them
14:20:21 <jyp> I mean, can't make out the 3D object from its 2D projection
14:21:33 <boegel> jyp: you can't ? strange, I'd think you can
14:21:47 <boegel> and you could limit their infiniteness to certain bounds
14:21:57 <boegel> like a polygon is a limitation of a plane
14:21:59 <jyp> maybe it's because of my perspective...
14:22:26 <jyp> yup, but I didn't find the time/will to implement csg or such
14:22:31 <SamB> @hoogle Monad m => (a -> m a) -> [m a]
14:22:32 <lambdabot> Prelude.map :: ((a -> b) -> [a] -> [b])
14:22:52 <boegel> jyp: csg ? :)
14:23:07 <jyp> constructive solid geometry ?
14:23:10 <jyp> i guess
14:23:34 <jyp> well, intersections and stuff
14:24:27 <boegel> oh, yeah, I remember that
14:24:49 <boegel> neither have I, but you can define polygons (and other 'clippings') fine without them
14:24:54 <boegel> s/them/csg
14:28:52 <boegel> jyp: http://en.wikipedia.org/wiki/Quadric
14:29:02 <boegel> how about the first one (ellipsoid)
14:29:06 <boegel> that's a finite one :)
14:32:34 <jyp> yup right
14:32:44 <jyp> definitely
14:33:32 <jyp> cool to animate as well
14:33:56 <jyp> bounces & rotates :)
14:34:02 <boegel> well yeah, that's future plan:)
14:35:21 <jyp> It was my original plan to have animated scenes with my tracer...
14:35:32 <jyp> but I'm around 1 fps ...
14:35:39 <jyp> so I wait for a better ghc =)
14:35:56 <boegel> jyp: heh :)
14:36:05 <boegel> won't be possible with mine too I think
14:36:18 <boegel> but a ray tracer isn't suited for real-time rendering
14:36:23 <boegel> too many calculations (for now atleast)
14:36:26 <jyp> not really true
14:36:49 <jyp> there's quite a lot of papers on real time raytracing around
14:37:29 <jyp> besides my C++ version could show some cool scenes at reasonable framerates :p
14:37:42 <boegel> jyp: oh nice
14:37:57 <boegel> but then you'd need quite some more optimalisations :) HRay has none so far
14:38:18 <jyp> well I guess so...
14:38:32 <jyp> yet the main problem is haskell's lazyness...
14:38:45 <boegel> lazyness is a gift ! :)
14:38:59 <jyp> quite hard to compile to fast code ...
14:39:02 <boegel> if you use it properly (which is hard sometimes)
14:39:10 <jyp> true
14:39:27 * boegel fetches some Doritos
14:39:36 <jyp> ha :)
14:39:49 <TFK> Speaking of the devil. I want to walk a linked list represented by a mapping. This is my current solution: http://hbin.dyndns.org/pastebin/51.html <--- I was wondering if this can be reduced to a recursive list definition, like the Fibbonaci numbers were in Gentle.
14:40:18 <jyp> boegel: do you have a function to scale a vector by a scalar ?
14:40:49 <jyp> ok, *>
14:42:32 <boegel> jyp: there you go :)
14:43:23 <jyp> well, intersection test now compiles
14:43:47 <boegel> nice
14:43:51 <boegel> how about the normal stuff ?
14:44:05 <jyp> done as well
14:44:29 <boegel> and you've added the MetaStuff to ObjType too ?
14:45:13 <jyp> data Object = ... ?
14:45:17 <jyp> then yes
14:45:41 <boegel> yeah, sorry :)
14:45:50 <boegel> it was called ObjType a long time ago
14:46:02 <boegel> we'll, the you should try and hardcode a simple scene
14:46:11 <jyp> directions ?
14:46:14 <boegel> HRayMain would be a nice place
14:46:32 <boegel> use the Scene constructor
14:46:35 <jyp> got it
14:46:56 <boegel> and place the Camera at (0,0,-150)
14:46:59 <boegel> that easiest
14:48:19 <xerox> goodnight folks :)
14:50:08 <jyp> gn
14:50:11 <boegel> jyp: let scene = Scene (Camera (0,0,-150) (100,75)) (0.8,0.8,0.8) [((MetaStuff x y z), (Texture Solid (1.0,0.0,0.0) 0.0 0 0.0 0.0))] [(PointLight (0,0,-150) (1.0,1.0,1.0))]
14:50:19 <boegel> something like that
14:50:38 <boegel> and off course you'll have to adjust x y z and MetaStuff according to your definitions
14:51:22 <boegel> and then do let image = getImage 3 (800,600) scene
14:51:27 <boegel> in HRayMain that is
14:51:46 <jyp> ok thanks
15:01:01 <jyp> well well... it works not ...
15:01:16 <jyp> so I guess I'll call it a day
15:01:17 <boegel> doesn't work ?
15:01:28 <boegel> you see nothing or so?
15:01:32 <jyp> nope...  a nice gray uniform color
15:01:35 <boegel> jyp: wait man !
15:01:38 <jyp> haaa
15:01:41 <jyp> my heart
15:01:44 <boegel> don't leave me like this :)
15:01:45 <jyp> :)
15:02:02 <boegel> record the stuff you did with darcs, and send me the patch
15:02:05 * jyp pats boegel's shoulder
15:02:16 <jyp> ok, ok :)
15:02:26 <boegel> you've probably placed your metaball behind the camera orso :D
15:02:39 <boegel> 'cause gray is the background color you've set
15:03:17 <jyp> I don't think so; i tested with sphere in the same place
15:03:21 <jyp> but who know
15:03:42 <boegel> yeah
15:03:43 <jyp> anyhow; the patch is gonna be a bit rough, mind you...
15:03:56 <jyp> don't take it too literally :)
15:03:59 <boegel> no problem, darcs allows unpatching (right everyone ?)
15:05:13 <jyp> It is "darcs push" to send you the patch ?
15:05:43 <jyp> .. darcs send
15:06:05 <boegel> no idea man :)
15:06:25 <jyp>   * metaballs added
15:06:25 <jyp> Shall I send this patch? (1/1) [ynWvxqadjk], or ? for help: y
15:06:25 <jyp> What is the target email address?
15:09:05 <jyp> ok, sent over
15:09:25 <boegel> pls wait until it has arrived :)
15:09:34 <jyp> I'll do quadrics some other day, then try to debug
15:09:43 <boegel> jyp: ok
15:09:56 <boegel> great, thanks for you're contributions man
15:09:59 <jyp> must be something stoopid
15:10:05 <boegel> you'll be mentioned somewhere soon
15:10:08 <jyp> since it works with my code
15:10:13 <jyp> too kind of you :)
15:10:13 <boegel> hmm, still no mail...
15:10:42 <jyp> I might be underconfigured when it comes to sending mail with darcs
15:11:28 <boegel> the manual mentioned send is to be used to apply the patch on some repositroy
15:11:39 <boegel> did you have to give up an url ?
15:11:53 <boegel> Send is used to prepare a bundle of patches that can be applied
15:11:53 <boegel>               to a target repository.  Send accepts the URL of the repository
15:11:53 <boegel>               as an argument.  When called without an argument, send will use
15:11:53 <boegel>               the most recent repository that was either  pushed  to,  pulled
15:11:53 <boegel>               from  or  sent  to.   By  default,  the patch bundle is sent by
15:11:54 <boegel>               email, although you may save it to a file.
15:12:04 <jyp> well I gave one upon fetch of course, but none other
15:12:17 <boegel> oh, it does mention sending to email
15:12:29 <boegel> strange
15:12:49 <jyp> my local mail agent is probably not correctly configured
15:13:10 <jyp> so I think I'll have to go for the secondary solution; ie. save to file & send over manually
15:13:20 <boegel> jyp: yeah, probably
15:13:51 <jyp> since it's a bit to late to try to figure out how exim works ...
15:14:04 <boegel> jyp: I think the patch (if it's only one) is already in a file
15:14:37 <TheHunter> darcs send -o filename will save the patch to a file.
15:14:51 <boegel> TheHunter: thanks:)
15:15:19 <TheHunter> darcs send --help has the discription.
15:17:46 <Muad_Dibber> can i write down something like Eq a, Ord a => a -> a?
15:18:05 <jyp> sure
15:18:22 <jyp> but I think it will be 'id' ?
15:18:39 <jyp> boegel: sent
15:18:44 <TheHunter> (Eq a, Ord a)  => ...
15:18:49 <jyp> with gmail
15:18:53 <Muad_Dibber> ah okay TheHunter , thats what i was missing
15:19:22 <jyp> so it should be fast enough
15:19:23 <boegel> jyp: gmail is probably quite slow, right ? :p
15:19:34 <TheHunter> actually, the parens are unnecessary for ambigous parsing, but haskell requires them anyway.
15:19:35 <Muad_Dibber> hmm
15:19:45 <Muad_Dibber> i was trying to use quickCheck, anybody used it with ghci?
15:20:10 <TheHunter> it's pretty simple
15:20:15 <TheHunter> :m +Text.Show.Function
15:20:21 <TheHunter> :m +Debug.QuickCheck
15:20:25 <Muad_Dibber> oh nvm, i had an unshowable thing
15:20:50 <jyp> afk 5
15:20:55 <TheHunter> test $ \(x::Double) y z -> x + y + z == x + (y + z)
15:21:40 <boegel> jyp: nothing yet :s
15:24:54 <boegel> jyp: I've got mail !
15:24:56 <jyp> boegel: mmm
15:25:01 <jyp> hehe
15:25:11 <jyp> well I might know what the problem is
15:25:28 <boegel> now, before I apply this patch, how can i unapply it afterwards ? i don't want to fuck up my darcs repository :)
15:25:41 <jyp> my intersection test was optimized to return the 1st intersection only...
15:26:12 <jyp> well you should maybe "fork" before applying
15:26:16 <boegel> jyp: oh, and that might be in behind the camera
15:26:31 <boegel> but still, if you've set the metaball at the right place, there should be no problem, right ?
15:26:38 <jyp> I guess
15:27:03 <jyp> well ... I'll have to review the code with a clear mind
15:27:31 <jyp> hopefully the error will show if you don't find it in the meantime
15:28:14 <boegel> jyp: I'll give it a short try now... :)
15:28:51 * boegel has probably already fucked up his repo
15:28:52 <boegel> grr
15:32:41 <lispy> boegel: what's up?
15:32:44 <lispy> darcs problems?
15:33:24 <boegel> lispy: yeah, I'm trying to undo some patches I got from dcoutts, because I still have gtk2hs 0.9.7 on my system
15:33:59 <boegel> but I'm not sure how to doit (rollback, unrecord, unpull, ...)
15:34:03 <boegel> s/doit/do it
15:34:19 <lispy> ask in #darcs to be safe, but i think it's revert and then unpull
15:34:42 <boegel> lispy: okay
15:35:32 <lispy> "In other words, you could lose precious
15:35:33 <lispy> code by unpulling!"
15:35:37 <lispy> hmm....
15:35:43 <lispy> unpull sounds dangerous
15:36:31 <jyp> well I guess I'll let you sort this out while I get some sleep
15:36:41 <TFK> Any idea regarding that recursive list definition?
15:36:48 <boegel> jyp: I'll get some sleep too, I have an exam on Friday :)
15:36:52 <jyp> good night folks
15:36:55 <jyp> heh
15:37:07 <jyp> work well then
15:37:10 <boegel> TFK: don't know, I think it's hard because you need the lookup first
15:37:11 <TFK> http://hbin.dyndns.org/pastebin/51.html <--- this is what I wrote to walk over a linked list represented by a mapping; any better ways?
15:37:13 <jyp> and good luck
15:37:21 <boegel> maybe if you split it up in two functions ?
15:37:32 <boegel> jyp: thanks, and thank you for the contribution :)
15:37:39 <jyp> my pleasure
15:37:48 <TFK> Well, I was hoping to make it short ;-)
15:46:07 <TFK> I was kinda hoping that there would be a cool solution to this one ;-)
15:54:31 <arjanb> you could use the 'maybe' function there
15:55:24 <Cale> chain' start assoclist = start : do next <- maybeToList (lookup start assoclist); chain next assoclist
15:55:48 <TFK> That's shorter :-d
15:55:51 <TFK> * :-D
15:56:15 * TFK tries to understand
15:57:47 <arjanb> @pl \start assoclist -> start : maybe [] (chain assoclist) (lookup start assoclist)
15:57:48 <lambdabot> liftM2 (.) (:) (liftM2 (maybe []) chain . lookup)
16:02:27 <Cale> @plugs (\start assoclist -> start : maybe [] (chain assoclist) (lookup start assoclist)) 1 [(1,2),(2,3),(3,4)]
16:02:32 <lambdabot> Variable not in scope: `chain'
16:03:14 <Cale> @plugs let chain start assoclist = start : maybe [] (chain assoclist) (lookup start assoclist) in chain 1 [(1,2),(2,3),(3,4)]
16:03:14 <lambdabot> Occurs check: cannot construct the infinite type: b = [(b, b)]
16:03:14 <lambdabot>    Expected type: [(b, b)]
16:03:14 <lambdabot>    Inferred type: b
16:04:13 <Cale> @plugs let chain assoclist start = start : maybe [] (chain assoclist) (lookup start assoclist) in chain 1 [(1,2),(2,3),(3,4)]
16:04:14 <lambdabot> <Plugins.Eval>:1:
16:04:14 <lambdabot>   No instance for (Num [([(t, t1)], [(t, t1)])])
16:04:14 <lambdabot>   arising from the literal `1'
16:04:16 <Cale> @plugs let chain assoclist start = start : maybe [] (chain assoclist) (lookup start assoclist) in chain [(1,2),(2,3),(3,4)] 1
16:04:18 <lambdabot> [1,2,3,4]
16:08:42 <TFK> Why does the original versoin work, though?  Isn't 'next' a list now?
16:09:04 <Cale> @pl y (\chain assoclist start -> start : maybe [] (chain assoclist) (lookup start assoclist))
16:09:29 <lambdabot> y ((ap (:) .) . flip (ap . ((.) .) . (maybe [] .)) (flip lookup))
16:09:29 <lambdabot> optimization suspended, use @pl-resume to continue.
16:09:30 <Cale> next is a value
16:09:55 <Cale> @pl f (y f)
16:09:56 <lambdabot> f (y f)
16:10:07 <Cale> hmm... does it know about y? :)
16:10:26 <TFK> Yes, but isn't it a list?
16:10:38 <Cale> TFK: no, next isn't
16:10:46 <TFK> I mean, maybeToList returns a list and all.
16:11:19 <Cale> yes, and <- pulls out each element and puts it in next
16:11:30 <Cale> (nondeterministically)
16:11:32 <TFK> Hmmm, OK.
16:11:43 <Cale> there's either 0 or 1 elements in that list
16:12:15 <TFK> So what happens if there are zero elements? Why doesn't it raise an error?
16:13:18 <Cale> if there aren't any elements, it gives [] as the result of the do.
16:13:37 <Cale> which is the list of all possibilities
16:13:51 <Cale> (this is sort of an abuse of the list monad :)
16:15:01 <TFK> I guess I'll need to sleep on it :-) a bit late now.
16:15:26 <TFK> I also printed you paper on Monads as Containers, going to do another Haskell-learning sprint.
16:15:35 <Cale> cool
16:17:32 <boegel> yaay, metaball supports is working in HRay
16:17:36 <boegel> thanks to jyp :)
16:21:32 <boegel> metaballs in HRay: http://scannedinavian.org/~boegel/HRay/img/metaball.png
16:21:34 <boegel> *yaay
16:23:28 * boegel goes to bed now
16:29:16 <jaro> Hi there. Trying to make class for some sort of strange metric (or norm). I designed: type IBinOp = Int->Int->Int ; data PNLinear IBinOp = PNLin Int NormFunc IBinOp
16:30:42 <jaro> but I also do have class which specifies some transformations upon those norm functions. But when I try instance ComplexNorm (PNLinear IBinOp), I get this error: Illegal left hand side in datatype definition. What's the problem?
16:31:21 <Heffalump> in *datatype* definition?
16:31:36 <Heffalump> are you using Haskell 98, or have you enabled extensions (-fglasgow-exts in gh/ghci)
16:31:55 <Heffalump> oh, yes.
16:32:03 <Heffalump> your data declaration is invalid
16:32:12 <autrijus> you need something like
16:32:16 <Heffalump> you can do data PNLinear = PNLin Int NormFunc IBinUp
16:32:20 <autrijus> data PNLinear a where
16:32:29 <Heffalump> or data PNLinear = PNLin Int NormFunc a
16:32:39 <autrijus>     PNLin :: Int -> NormFunc -> IBinOp -> PNLinear IBinOp
16:32:47 <autrijus> and then your instance will work.
16:32:57 <autrijus> <- using it heavily.
16:33:15 <Heffalump> (but what autrijus suggests is a GADT that's only in GHC 6.4)
16:33:25 <autrijus> (but it's damned nifty.)
16:33:36 <Heffalump> only if you really need it, IMO
16:33:51 <autrijus> I really need it... it's either that or metacomputational monads that can't be Show'ed.
16:33:51 <Heffalump> and you have to really understand what's going on with standard datatypes to make that decision
16:33:55 <autrijus> right.
16:33:57 <Heffalump> yes, I know *you* do.
16:33:57 <jaro> It looks fine. I'll try the conservative way. Anyway thanks for suggestions.
16:34:23 <autrijus> alright, seems we're in vehement agreement. :)
16:34:28 * autrijus waves and sleeps. &
16:34:36 <Heffalump> btw I hope to have a pre-release of my Haskell Perl binding ready soonish, once I can sort out cabal issues
16:34:45 <autrijus> oooh Heffalump++
16:35:01 <Heffalump> though it does use an explicit PerlInstance, which is a bit ugly.
16:35:41 <Heffalump> I'm thinking about auto-generating multiple interfaces, e.g. a PerlIO monad, an implicit parameter interface, an interface with a single global interpreter (and thus no overhead of passing it around) etc.
16:35:49 <Heffalump> do you think that'd be worth the effort?
16:47:44 <Itkovian> @seen boegel
16:47:45 <lambdabot> I saw boegel leaving #haskell 23 minutes and 46 seconds ago.
16:47:51 <Itkovian> shit
16:48:13 <Itkovian> what is preferred? a lhs file or a hs file with haddock comments in it?
16:49:42 <Heffalump> I think haddock.
16:49:46 <Heffalump> especially for a library
16:50:04 <Heffalump> but I dunno if you're asking about some specific situation where you want a particular person's opinion :-)
16:50:41 <Itkovian> well, boegel's opinion would be great as it's his code I'm hacking
16:51:10 <Itkovian> somehow the lhs thingie seems a bit, well, uneasy (to me)
16:51:25 <Itkovian> it's not a lib, although it may one day become one
16:51:31 <Itkovian> boegels choice
16:58:14 <Itkovian> @type (=<<)
16:58:15 <lambdabot> (=<<) :: forall b (m :: * -> *) a.
16:58:15 <lambdabot>    (Monad m) =>
16:58:15 <lambdabot>    (a -> m b) -> m a -> m b
17:50:00 <jaro> @type .
17:50:02 <lambdabot> bzzt
17:50:18 <jaro> @type (.)
17:50:19 <lambdabot> (.) :: forall c a b. (b -> c) -> (a -> b) -> a -> c
17:50:30 <jaro> wow. That's great :)
17:51:27 <jaro> But I've never seen this notation before...
17:54:24 <Cale> which notation?
17:54:25 <Heffalump> which notation?
19:30:49 <Heffalump> has anyone got an example of packaging FFI code using cabal? (apart from the test in the cabal distro)
19:32:33 <Lemmih> It's pretty much like package a normal package.
19:32:48 <Lemmih> *packing
19:34:19 <Heffalump> it's not including the _core.o and _stub.o files in the .a
19:34:50 <Heffalump> I'm also having trouble getting the information about what external library to link put in the appropriate place
19:35:30 <Lemmih> GHC-6.4 puts stub files in the wrong directory.
19:35:57 <Heffalump> ahh.
19:35:59 <Lemmih> I usually work around it by linking it to where it should be.
19:36:05 <Heffalump> that's why they're sitting in the wrong directory :-)
19:36:20 <Heffalump> YM making a symlink?
19:36:26 <Heffalump> the problem is that dist/ is made by cabal.
19:37:01 <Heffalump> I guess I could make the symlinks in pre-build - is that after dist/ is made?
19:37:15 * Heffalump tries
19:37:33 <Lemmih> External libraries should be put in Extra-libraries.
19:37:33 <Heffalump> oh, or just make it myself thn
19:39:07 <Heffalump> ta.
19:46:00 <Heffalump> ah, my actual problem is that the hsc C file isn't being included.
21:52:34 <musasabi>  /c
23:05:14 <jlouis> hmmm
23:05:54 <lumi_> Hi, does anyone have experience with darwinports's ghc?
23:06:01 <dons> hey jlouis, how's code?
23:50:44 <xerox> 'morning
