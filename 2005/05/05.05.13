00:24:29 <FrederikEaton> http://toastball.net/toast/ - prelim support for cabal
00:24:46 <FrederikEaton> no libraries yet, but the one executable package i tested works
00:26:05 <FrederikEaton> GET http://toastball.net/toast/toast|perl -x - arm toast
00:26:11 * FrederikEaton goes to sleep
01:09:36 <nibro> oi dons, you there?
01:29:42 <dons> nibro, hey
01:29:49 <dons> btw, hs-plugins has been ported to cygwin.
01:30:05 <dons> no more posix deps
01:32:30 <nibro> dons: great news :)
01:32:53 <nibro> but there's still a cygwin dependency then?
01:33:29 <dons> well, it's only been tested on cygwin. but windows should work, I think.
01:33:40 <dons> don't see why not, other than configure.ac issues
01:33:47 <nibro> ah, great!
01:33:48 <dons> (like finding the right paths)
01:34:17 <nibro> so, again, what about hsx? :)
01:34:34 <dons> hsx? is that the parser lib?
01:34:38 <dons> (it has a name now?)
01:35:06 <nibro> aye, well, haskell-src-exts you probably be the formally correct name ;)
01:35:20 <dons> ah, yes.
01:35:56 <dons> well, time permitting I can integrate it in the next 2 days.
01:36:01 <dons> it's on my list
01:36:22 <nibro> well, I intend to release hsp like within 10 minutes, so either you include hsx or I supply a patch for hs-plugins for hsp users to apply... or you could simply apply that patch yourself :p
01:37:00 <nibro> the integration is trivial really, and it's all in my patch
01:37:04 <dons> oh, is that all I have to do?
01:37:10 <nibro> yes
01:37:24 <dons> I thought I also needed to distribute hsx in my build system..
01:37:28 <nibro> and probably tell people where to find hsx
01:37:33 <dons> so they'd be an hsx dep. ok.
01:37:40 <dons> gimme 5 mins then..
01:37:43 <nibro> no, just point them to me, that'll do :)
01:37:48 <nibro> sure
01:41:40 <dons> ok!
01:41:44 <dons> go go go!
01:42:06 <nibro> going going gone :)
01:42:40 <nibro> thanks alot =)
01:43:24 <dons> no worries, just took a bit of nudging :}
01:43:24 <nibro> for hs-plugins users who are not hsp users, you should probably point them to http://www.cs.chalmers.se/~d00nibro/haskell-src-exts
01:43:31 <dons> ok.
01:44:20 <nibro> hopefully I'll get the haskell-src-exts changes into the official haskell-src package soon enough, so this is really just a transition phase
01:44:56 <dons> yeah. that'd be nice.
01:46:12 <skew> @seen shapr
01:46:13 <lambdabot> I saw shapr leaving #haskell 4 days, 16 hours, 45 minutes and 55
01:46:13 <lambdabot> seconds ago.
01:46:22 <skew> :(
01:46:36 <nibro> gee, he must be on vacation or something ;)
01:57:19 <Itkovian> would a post regarding benchmark request be appropriate on the sequence pages?
02:17:34 <dons> nibro, I'm thinking of moving the various hs-plugins modules under the System.* namespace. any problems with that? System.Plugins/ System.Eval for example
02:20:44 <FrederikEaton> uh wouldn't shapr tell us if he was leaving? someone should call him
02:21:01 <FrederikEaton> hello
02:22:01 <FrederikEaton> i mean, i would tell you guys if i were leaving, but ... :)
02:23:16 <nibro> dons: no problem at all, I think it's a good idea
02:23:37 <nibro> just tell me when so I can change my imports
02:23:38 <dons> ok. your cabal set up is really nice :)
02:23:48 <dons> will do.
02:23:56 <nibro> it is? :)
02:24:43 <dons> yeah. I wonder if I can cabalise hs-plugins ...
02:25:43 <dons> though a Makefile to run the the 3x3 commands would be good ;) what do Cabal hackers normally do?
02:26:05 <nibro> I've been thinking of such a makefile yes
02:26:30 <nibro> and a makefile for hsp, where the cabalization is *not* that pretty...
02:31:19 <dons> nibro, does Hsx provide parseModuleWithMode?
02:34:02 <dons> scratch that. something else going on.
02:34:07 <nibro> yes, through Parser (as in haskell-src)
02:35:30 <dons> I'm getting: Plugins/Parser.hs:41:9: Not in scope: `parseFileContentsWithMode'
02:35:57 <nibro> it's exported by Language.Haskell.Hsx
02:36:44 <nibro> I'm sure I made that change in the patch...?
02:36:48 <dons> ok, maybe I haven't registered the package properly.
02:38:16 <nibro> the idea behind pFCWM is to handle files that start with # lines, i.e. cpp'ed files
02:38:58 <nibro> you actually have some support along those lines somewhere in you Parser module, but you didn't do it at the top level (but now you do :))
02:39:57 <dons> yeah. that's ok. just trying to get hs-plugins to build ;)
02:41:03 <nibro> that would probably be a useful feature yes. to be able to build properly that is. :o)
02:41:38 <dons> do I need something later than hsx 0.2?
02:42:47 <nibro> no, hsx only relies on standard packages
02:42:58 <nibro> and it's all in the 0.2 version
02:43:41 <dons> hmm. I can't find parseFileContentsWithMode.
02:44:37 <nibro> that's weird. it should be in src/haskell-src-exts/Language/Haskell/Hsx.hs
02:45:42 <dons> nope, nothing in there export re-exports of the Hsx/* modules
02:46:19 <dons> I'll reget. maybe I had some older version by mistake
02:46:35 <nibro> gah, then you have the wrong 0.2 version (!!?)
02:46:52 <nibro> just do a darcs get and you'll be fine :)
02:47:05 <dons> I just had some version on my hdd, and thought it looked ok :}
02:47:09 * nibro should learn to use a better versioning policy...
02:47:27 <dons> now I know what people who try to build yi and can't feel like ;)
02:47:35 <nibro> hehe
02:50:49 <dons> $ for i in src/harp src/haskell-src-exts src/trhsx ; do cd $i ; runhaskell Setup.hs configure --prefix=/home/pls ; runhaskell Setup.hs build ; runhaskell Setup.hs install ; done
02:50:52 <dons> ;)
02:51:27 * nibro copies...
02:52:03 <dons> but you'll want --prefix=$PREFIX
02:53:45 <nlv11757_> is a function name unique in a C program?
02:54:45 <nlv11757_> or rather a function signature?
02:59:04 <pharm> Quikkie question: can anyone point me to some example haskellwhich will execute a command and grab the command output?
02:59:22 <pharm> I seem to be lost in a twisty maze of IO Handles
03:00:40 <dons> @type System.Process.runInteractiveCommand
03:00:41 <lambdabot> System.Process.runInteractiveCommand :: String
03:00:41 <lambdabot>               -> IO (GHC.IOBase.Handle,
03:00:41 <lambdabot>                 GHC.IOBase.Handle,
03:00:43 <lambdabot>                 GHC.IOBase.Handle,
03:00:45 <lambdabot>                 System.Process.Internals.ProcessHandle)
03:00:53 <dons> hGetContents on the 2nd component of the tuple
03:03:39 <pharm> Ah. I missed that one -- I think I folded it's description into runInteractiveProcess which wasn't what I wanted of course. Ta muchly.
03:06:11 <pharm> Actually, maybe I do want that -- I was sidetracked by trying to get runProcess to do what I wanted. cheers anyway.
03:07:16 <pharm> @type getContents
03:07:18 <lambdabot> getContents :: IO String
03:08:45 <bourbaki> moin
03:21:13 <dons> nibro, should the version number be encoded in thie library file name? HShaskell-src-exts-0.2.o ?
03:21:20 <dons> doesn't seem right.
03:22:13 <dons> maybe it doesn't matter.
03:25:32 <dons> oh. got it. bug in hs-plugins build system.
03:26:15 * Lemmih ponders about mixing hackage+modhaskell+hsp into a HaskellForge.
03:26:18 <dons> oh. not it's not. need to build haskell-src-exts the profiled way.
03:26:36 <dons> hmm!
03:29:09 <dons> does Cabal know how to build profiled libs?
03:29:16 <Lemmih> Not yet.
03:30:07 <dons> is there a technical reason, or just no code yet?
03:30:31 <skew> does Cabal give Haddock the location of other documentation you have installed?
03:30:32 <JaffaCake> no techical reasons, just isn't implemented, AFAIK
03:30:32 <Lemmih> The latter. I think something is already in the works.
03:30:48 <dons> ok.
03:40:30 <dcoutts> JaffaCake, (or indeed anyone else who might know anything about ghc on win32) how do I detect that ghc is installed on windows, apparently the .msi installer does not modify the PATH to put ghc on it.
03:41:26 <skew> dcoutts: you are responsible for the gtk2hs ebuild for gentoo?
03:41:36 <dcoutts> is there some registry setting or something? actually, more particularly, how do I figure out where ghc is installed so I can run it
03:41:55 <dcoutts> skew, yes (and I'm currently trying to write a win32 installer for gtk2hs!)
03:42:22 <skew> it doesn't build with the current ghc-bin-6.4
03:42:49 <skew> tools/c2hs/base/general/GetOpt.hs:1:0: Module `GetOpt' is a member of package util-1.0.
03:43:23 <dcoutts> skew, ah! that's caused by the dreaded package overlap restrcition
03:43:39 <dcoutts> do you have cabal or wxhaskell installed?
03:43:49 <skew> I couldn't find the right options in the docs to force emerge to ignore the broken digest/authentication when I added -ignore-package util-1.0 to the hcflags
03:43:57 <skew> I have cabal
03:44:03 <skew> 0.5
03:44:34 <dcoutts> ok, unmerge it, you don't need it and it breaks other packages in the manner you have noticed
03:44:50 <dcoutts> ghc-6.4 provides an updated version of cabal anyway
03:45:02 <skew> oh, okay
03:45:31 <skew> does gtk2hs take 400MB itself?
03:46:28 <dcoutts> skew, sadly yes, the c2hs ffi preprocessor is rather hungry on ram, we're trying to do something a bout it, but it's quite tricky
03:46:55 <skew> how far in would that be? I haven't broken 230 of 256 yet
03:47:11 <skew> wait, you include your own c2hs and build with that?
03:47:16 <dcoutts> yes
03:48:29 <dcoutts> you've got 256mb ram? that's probably not enough, you'd need to build manually using the method here: http://haskell.org/gtk2hs/archives/2005/04/29/building-on-machines-with-less-ram/
03:53:32 <dcoutts> oh dear, I think the oom killer may have got skew :-(
04:00:08 <JaffaCake> dcoutts: re detecting GHC installation on Windows, I don't think there's a way
04:00:52 <JaffaCake> the only thing put in the registry is the uninstallation info, I believe
04:02:27 <faiv> any one knows a paper that deals with music and category theory?
04:04:32 <shelarcy> dons: I send MSYS support for hs-plugins.
04:05:24 <shelarcy> and some patch I missed.
04:06:25 <dons> cool! thanks.
04:08:46 <dcoutts> JaffaCake, hmm, that makes installers rather tricky if we can't eg locate ghc-pkg to actually register anything :-)
04:09:07 <dcoutts> do you know if the uninstall registry entry gives away the install dir of ghc?
04:09:18 <basti_> hi all
04:09:42 <JaffaCake> the installer will have to ask the user which GHC they want to install on
04:10:11 <dcoutts> because there can be more than one version installed, yes
04:10:20 <JaffaCake> I don't know what the structure of the uninstall info in the registry is, I'm afraidd
04:11:07 <dcoutts> sadly I can't look it up because I didn't use the .msi to install on my box since I'm not admin (so I had to find some tool to unpack the .msi!)
04:11:48 <JaffaCake> looking in a few standard places will probably get you most of the way: c:\ghc\ghc-6.4 is a common one
04:12:16 <JaffaCake> for a binary installation, you have to install on exactly the right version of GHC, too
04:12:49 <dcoutts> yes, I was going to say that, so asking the user for a preference doesn't help much
04:13:28 <dcoutts> well, I'll try to find out from a win32 user what the uninstall info in the registry looks like
04:13:35 <JaffaCake> right, but asking for a preference covers up the fact that the installer doesn't know where GHC lives :)
04:14:10 <JaffaCake> I'll just have a peek in my registry, see if I can find anything
04:14:19 <dcoutts> :-) indeed "you can pick any version of ghc you've got isntalled (so long as it is exacltly version 6.4)"
04:14:37 <nibro> dons: whatever naming policies of generated files in haskell-src-exts, it's cabal and not me :-)
04:15:48 <JaffaCake> HKEY_CURRENT_USER\Software\Microsoft\Installer\Products\63AFB729F65ACE642AF82153748F7AF4
04:15:57 <JaffaCake> contains the info for GHC 6.4 on my box
04:16:13 <dcoutts> cheers JaffaCake
04:16:44 <JaffaCake> it doesn't seem to have the path, though
04:16:55 <JaffaCake> it has the path to the installer, which is a bit bizarre
04:17:32 <dcoutts> but the installer is not on the system?
04:17:51 <JaffaCake> it is, but there's nothing stopping me deleting it
04:18:22 <dcoutts> btw, does the .msi installer give the user a choice in where it installes? or does it just install to c:\ghc\ghc-x.y\ ?
04:20:08 <JaffaCake> There's also HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Installer\Products
04:20:17 <JaffaCake> for stuff installed "for all users"
04:20:27 <JaffaCake> it gives you a choice
04:20:37 <dcoutts> right, but no path I'm guessing
04:20:47 <JaffaCake> nope, not yet... still looking
04:21:03 <dcoutts> thanks muchly
04:23:02 <JaffaCake> More stuff in HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Installer\UserData\S-1-5-18\Products\5304FCA6853964E4581C3F5FED34A7F3\InstallProperties
04:23:22 <dcoutts> ok, I'm copying all this down :-)
04:24:39 <JaffaCake> HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{927BFA36-A56F-46EC-A28F-123547F8A74F}
04:26:12 <shelarcy> maivar
04:26:31 <dons> nibro, yep. solve the problem - hs-plugins was building the profiled way, and couldn't find the profiled hsx. all fixed now.
04:26:44 <dons> shelarcy, can you use darcs send -o /tmp/f ; and then mail me /tmp/f ?
04:26:56 <JaffaCake> Aha!  HKEY_CURRENT_USER\Software\Haskell\GHC\ghc-6.4
04:27:08 <dcoutts> oh, sounds promising
04:27:24 <JaffaCake> that contains InstallDir=c:\ghc\ghc-6.4
04:27:29 <dcoutts> yay!
04:27:41 <dcoutts> thanks v. much JaffaCake
04:27:41 <JaffaCake> interesting that I only have one version under that key, though
04:27:55 <dcoutts> you've got multiple ghc versions instaled?
04:27:56 <JaffaCake> maybe it's a new thing that Sigbjorn starting putting in the installer for 6.4
04:28:03 <dcoutts> right
04:28:04 <JaffaCake> yeah, quite a few
04:28:36 <dons> shelarcy, the patch you sent me isn't a proper darcs patch: "darcs failed:  Bad patch bundle"
04:28:56 <dons> using darcs send -o /tmp/f should create a proper patch to send, though
04:29:06 * JaffaCake wonders why I can't search my registry with google desktop search
04:29:09 <shelarcy> OK. I try it.
04:31:32 <JaffaCake> HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Installer\UserData\S-1-5-21-1721254763-462695806-1538882281-36379\Components\05666C053C5A9274D9A78F0EDE339CFD
04:31:48 <JaffaCake> also contains the value "c:\ghc\ghc-6.4", if that's any help
04:31:57 <dcoutts> ok, thank's
04:32:30 <dcoutts> but the search doesn't turn up your install of "c:\ghc\ghc-6.2.2" ?
04:32:43 <JaffaCake> I was only looking for 6.4
04:32:50 <dcoutts> oh, ok :-) np
04:33:05 <dcoutts> I've pestered you enough no, I think :-)
04:33:09 <JaffaCake> looks like the structure of the Installer's registry entries is quite complex
04:33:13 <dcoutts> no/now
04:33:27 <JaffaCake> I am just a remote grep :)
04:33:35 <dcoutts> :-)
04:35:02 <dcoutts> I'd do it myself but not being admin, I can't install .msi packages, I had to find some .msi unpacker from a dodgy russian 'warez' site so I could install ghc :-)
04:36:31 <nlv11757_> got you more than you bargained for probably also :P
04:36:31 <shelarcy> dons: I send it. Is this OK?
05:06:52 <shelarcy> dons: I send using "darcs send -o /tmp/f" patch again. Is this OK?
05:09:48 <shelarcy> I have mistake.
05:10:03 <shelarcy> patch is not correct.
05:19:24 <shelarcy> "This is True patch"'s f.patch is correct one.
05:37:21 <GunZ> hey guys can you tell me where i can look at all the definitions of the basic functions in haskell?
05:37:52 <integral> ttp://www.cs.uu.nl/~afie/haskell/tourofprelude.html "Tour of the Haskell Prelude" perhaps?
05:38:07 <GunZ> integral: ok thx
05:38:33 <skew> http://www.haskell.org/ghc/docs/latest/html/libraries/index.html
05:38:50 <GunZ> skew: thx
05:39:02 <skew> "Prelude" is where you find the functions availible without importing anything
05:39:21 <GunZ> ok
05:44:12 <skew> Oh, also the haskell-doc part of the emacs haskell-mode will show you types for at least some basic functions if you just leave the cursor in them for a while
05:44:53 <GunZ> skew: i was actually just lookign at the definitions of the functions to see if i understood the typing system
05:46:37 <skew> oh, if you want interesting types, take a look at runST in Control.Monad.ST
05:52:52 <nlv11757_> shouldnt makefiles follow dependencies
05:52:57 <nlv11757_> if i have rules like;
05:53:08 <nlv11757_> a : b and c : d
05:53:22 <nlv11757_> and b : c
05:53:38 <nlv11757_> and d changes....then when i want to make a....it should remake it no?
05:56:56 <dons> shelarcy, thanks! that applies. all is good.
06:07:22 --- topic: set to '["logs: http://meme.b9.com/cview.html?channel=haskell&date=today","http://www.haskell.org/learning.html","http://www.haskell.org/ghc/survey/start.cgi","\"http://www.haskell.org/tmrwiki/IssueTwo\"",""]' by lambdabot
06:07:54 --- topic: set to '["logs: http://meme.b9.com/cview.html?channel=haskell&date=today","http://www.haskell.org/learning.html","http://www.haskell.org/ghc/survey/start.cgi","\"http://www.haskell.org/tmrwiki/IssueTwo\""]' by lambdabot
06:07:58 --- topic: set to '["logs: http://meme.b9.com/cview.html?channel=haskell&date=today","http://www.haskell.org/learning.html","http://www.haskell.org/ghc/survey/start.cgi"]' by lambdabot
06:08:10 --- topic: set to '["logs: http://meme.b9.com/cview.html?channel=haskell&date=today","http://www.haskell.org/learning.html","http://www.haskell.org/ghc/survey/start.cgi","http://www.haskell.org/tmrwiki/IssueTwo"]' by lambdabot
06:08:19 <dons> ?
06:08:39 <TheHunter> the quoted "'s looked ugly.
06:08:59 <dons> good point
06:09:08 <dons> @uptime
06:09:09 <lambdabot> uptime: 5 days, 55 minutes and 19 seconds
06:09:13 <dons> go lambdabot!
06:09:39 <dons> @ghc
06:09:40 <lambdabot>  Command stack underflow at command
06:09:48 <dons> @ghc
06:09:49 <lambdabot>  Data constructor does not return its parent type
06:09:57 <dons> oh, that's interesting
06:11:52 <TheHunter> hmm, i got Data constructor `Bar' returns type `Bar' instead of its parent type, does that count, too?
06:13:01 <dons> close enough ;)
06:13:14 <Muad_Dibber> how do i tell a haskell program to exit? :P
06:13:27 <TheHunter> @index exitWith
06:13:29 <lambdabot> System.Exit
06:13:39 <skew> ^C? kill -9?
06:14:42 <dons> shutdown -hp now
06:14:43 <dons> ?
06:15:07 <dcoutts_> skew, so the gtk2hs emerge did not go well?
06:15:22 <skew> no, I think it ran out of memory
06:15:46 <skew> despite being the only thing running except init, a few agettys, bash and su
06:16:13 <skew> with 500MB swap space, BTW
06:16:20 <dcoutts_> yes, 256 is too little, it can be built using the method in the FAQ, that works with very little ram
06:16:44 <skew> I'm upgrading various other stuff at the moment, I'll try that when I get back to installing Haskell things
06:16:47 <dcoutts_> the swap space doesn't really help, the heap can't be swapped out really
06:17:08 <dcoutts_> ok
06:17:14 <skew> well, I was going off to work on something else for a few hours, so I wouldn't care if it went very slowly
06:25:24 <jlouis> 7
06:31:56 <torus> @help
06:31:57 <lambdabot>  @help <command> - ask for help for <command>
06:32:36 <dons> not very helpful?
06:33:11 <jlouis> hmmm, are people using the factmodule?
06:33:14 <Igloo> Maybe he juhst wanted to know what @help was for
06:33:35 <jlouis> I should really be doing some upgrades to that module, I think
06:33:47 <dons> i think a few facts made it in
06:34:14 <dons> tried out the new darcs port on openbsd, jlouis?
06:35:01 <jlouis> dons: I have no OpenBSD machines at the moment which can run darcs
06:35:08 <jlouis> ie, fast OpenBSD machines
06:35:19 <jlouis> I have a couple of netbsd ones though
06:35:26 <dons> ok :)
06:35:40 <dons> what do you do with OpenBSD?
06:36:08 <dons> a toy, or, say, routers and firewalls?
06:36:15 <jlouis> the latter primarily
06:36:36 <jlouis> NetBSD is my serious work horse
06:36:52 <jlouis> but no ghc6.4 port yet. I'll guess I'll have to create one myself
06:36:58 <dons> sure. I run netbsd on my mac68k.
06:37:00 <dons> yeah!
06:37:18 <jlouis> Can you suggest a path to take to bootstrap?
06:37:30 <jlouis> There is an old 6.2.1 port, but that doesn't work anymore
06:37:56 <jlouis> So either you fix 6.2.1, upgrade to 6.2.2 and then to 6.4. Or you attack 6.4 directly
06:38:15 <dons> well, there's two. either via a binary bootstrap binary. or with a .hc boot tarball.
06:38:35 <dons> the maintainer could create either of these.
06:38:36 <jlouis> ah, linux emulation
06:38:41 <dons> or that too.
06:38:44 <jlouis> maybe that is a way
06:39:02 <dons> but doesn't that end up creating a ghc that only creates linux binaries?
06:39:22 <jlouis> nono, use the linux-emulation to bootstrap a netbsd GHC
06:39:52 <dons> but how can you gte from a linux-emul ghc to a ghc native one? won't they all be linux binaries?
06:39:52 <jlouis> if I am not mistaken and my bratman diagrams correct, hehe
06:40:29 <dons> but you could use 6.2.1 to build 6.2.2, and then 6.4. then create a .hc tarball of that.
06:40:32 <dons> ?
06:40:43 <jlouis> I am considering that path yes
06:41:00 <jlouis> probably the easiest
06:42:04 <dons> possibly it is easier to create a binary of 6.4 and have the port script boot from that (this is how freebsd works). but it is a slower build then.
06:42:21 <dons> .hc builds are much faster (as it's mostly gcc)
06:46:22 <jlouis> check
06:47:16 <jlouis> I have 3 days to play with it. But I also have an algebra handin to do
06:48:27 <TheHunter> cool: "On the type system front, we plan to extend GHC’s higher-rank type system to incorporate impredicative types too: http://research.microsoft.com/~simonpj/papers/boxy."
07:02:30 <jlouis> TheHunter: impredicative types? I did never hear that term before
07:02:48 <jlouis> do I have a chance with the paper then?
07:03:58 <TheHunter> haven't read it yet. Impredicative types are just something like [forall a. a -> a -> a].
07:07:31 <jlouis> ah
07:49:04 <derelm> hi, i wonder whats special about reading from a socket with hGetContents, so that i cannot print that string later?
07:49:55 <Cale> derelm: hGetContents only sets up a list so that it reads from the socket as you use the data
07:50:22 <derelm> hmm
07:50:34 <Cale> (it's a little unsafe, it's lazy IO)
07:51:37 <derelm> but ... how can i work with that data then?
07:52:15 <derelm> Cale: you mean, it basically waits for data while i try to print?
07:52:22 <Cale> you probably don't want hGetContents unless you expect to read a large amount of data from the socket and want to read it as you process it
07:53:13 <derelm> but i am experiencing a problem when reading with hGetChar ... when i sent "ABC" i can get "AB" but i cannot get the last char
07:53:43 <Cale> hmm
08:00:09 <derelm> so how can i get the full contents of the string i sent ?
08:00:47 <Lemmih> length input `seq` hClose socket
08:01:07 <Cale> you could do that
08:01:25 <Cale> http://www.haskell.org/hawiki/HaskellIrcPastePage
08:01:35 <derelm> why would i need the seq?
08:01:48 <Cale> see if the hGetContents' there works
08:02:04 <Cale> derelm: to force it to look at the whole file before you close it
08:02:39 <derelm> but that wouldnt work in a do block where i want to return data using the very same socket?
08:02:55 <Cale> hGetContents does not read the file, it creates a list whose elements read the successive characters in the file.
08:03:32 <Cale> So it is somewhat unsafe, in the sense that if the file changes while that list is being processed, you could get junk.
08:04:09 <Cale> Try the hGetContents' that I put on the paste page.
08:04:38 <derelm> ok
08:05:01 <Cale> (and in the sense that you have a [Char] which does IO.
08:05:04 <Cale> )
08:05:27 <derelm> yes
08:23:30 <dons> you could also (length input) in a forkIO
08:24:39 <Matt-W> I so need a Haskell job
08:24:50 <dons> forkIO (Control.Exception.evaluate (length output) >> return ())
08:24:58 <Matt-W> I just spent two days tracking down a seriously obscure C++ bug that was caused by one line of code in a class definition
08:45:35 <esap> Matt-W: Obscure C++ bug, how's that possible? :-) C++ is so clear and simple language :-)
08:46:33 <ozone> dons: you're still up!
08:52:16 <Oejet> Hej.
08:54:23 <Lemmih> Hejsa.
08:55:04 * esap goes on to play nethack, as it's Friday the 13th.
09:01:08 <musasabi> evening
09:19:57 <Muad_Dibber> blah
09:20:02 <Muad_Dibber> i still dont get along very good with monads
09:22:13 <Lemmih> Wanna talk about it?
09:23:42 <Muad_Dibber> well, say i have something like this: StateT Bool IO ()
09:24:05 <Muad_Dibber> which is like a model of a program with a global bool variable, right?
09:25:23 <Muad_Dibber> now i try to create some function "forever"
09:25:26 <Lemmih> It's a model of a computation with a varying Bool value.
09:25:36 <Muad_Dibber> yeah thats what i meant
09:26:19 <Muad_Dibber> so forever should keep on going forever, always propagating the state
09:27:34 <Cale> what type signature should it have?
09:27:58 <Cale> (exactly what do you mean by "keep on going forever"?)
09:28:39 <Lemmih> forever = forever?
09:28:42 <Muad_Dibber> imagine this for:
09:28:43 <Muad_Dibber> forever :: Monad m => m () -> m ()
09:28:43 <Muad_Dibber> forever m = m >> forever m
09:29:16 <Muad_Dibber> it will keep "executing" the monad m
09:30:11 <Cale> well, the monadic computation
09:30:18 <Cale> (The monad is the type)
09:31:38 <Muad_Dibber> yeah
09:31:44 <Muad_Dibber> but you get what i mean right ;)
09:31:54 <Muad_Dibber> so how would i do this so it keeps propagating the state :P
09:32:49 <Cale> the state monad propagates state for you
09:33:41 <Muad_Dibber> yeah, but i cant use this forever functoi on the state monad as it is now
09:33:53 <Cale> why?
09:33:56 <Cale> It works for me
09:34:06 <Cale> printInc = do x <- get
09:34:06 <Cale>               lift $ print x
09:34:06 <Cale>               put (x + 1)
09:34:09 <Cale> main = execStateT (forever printInc) 0
09:36:18 <Cale> >>= (as well as >>) for the state monad threads the state along
09:38:16 <Cale> does that work for you?
09:41:08 <Lemmih> Morning, SyntaxNinja.
09:41:40 <SyntaxNinja> hiya lemmih
09:41:50 <Muad_Dibber> obviously i have something elsewhere wrong then or so :P
09:42:13 <Cale> Muad_Dibber: did you include a type signature for forever which was too restrictive?
09:43:08 <Cale> what error message are you getting?
09:46:34 <Muad_Dibber> right now, its in the main
09:46:51 <Muad_Dibber> since i use different monads there so to say
09:46:54 <Muad_Dibber> it is :
09:46:59 <Muad_Dibber> do putStrLn ("")
09:47:08 <Muad_Dibber>    OtherMonad
09:47:23 <Muad_Dibber>    putStrLn ""
09:47:32 <Muad_Dibber> (pseudocode this)
09:48:36 <Muad_Dibber> maybe its something unwanted i'm doing actually :S
09:53:05 <Cale> main has to be IO a for some a.
09:53:12 <Muad_Dibber> yeah
09:53:39 <Muad_Dibber> so putStrLn both satisfies this
09:54:52 <Muad_Dibber> but of course i should wrap the statemonad in execStateT
09:58:40 <derelm> argh how do i print a IO int to the console?
09:59:22 <Cale> An IO Int is a computation which produces an Int when it's run
09:59:30 <Cale> so you want something which looks like
09:59:36 <Cale> do n <- myIOInt
09:59:41 <Cale>    print n
09:59:42 <derelm> ah, ok
09:59:46 <derelm> thanks
10:32:43 <MachinShin> hey +
11:05:28 <jyp> any gtk2hs user around ?
11:06:04 * Lemmih raises his hand.
11:17:46 * SyntaxNinja wiggles eybrows in general direction of a haskell-related job (though not full time haskell devel): http://www.galois.com/job_testengineer.php
11:18:24 <jyp> Cool... So Lemmih, any chance you have a "TreeView" sample code lying around ?
11:19:18 <jyp> As it stands I'm unable to use the selection of a list :/
11:19:28 <Lemmih> I'm afraid not.
11:22:20 <jyp> Too bad then :P
11:25:32 <Lemmih> Isn't there an TreeList example in the distribution?
11:30:43 <jyp> Lemmih: there is, but they don't process the selection as far as I can tell
11:30:59 <jyp> maybe it changed since last time I checked
11:31:04 <jyp> gotta take a look
11:34:08 <jyp> hm, they handle clicks in the listview instead of using the selection
11:34:19 <jyp> that could be a workaround for my problem though
11:42:10 <Lemmih> jyp: Can't you use a combination of treeSelectionGetSelected and onSelectionChanged?
11:43:04 <jyp> I can try that too yes
11:43:31 <jyp> I'm using 'treeSelectionSelectedForeach' now
11:44:07 <jyp> every way of using it led me to "(dict:4194): Gtk-CRITICAL **: gtk_list_store_get_path: assertion `iter->stamp == GTK_LIST_STORE (tree_model)->stamp' failed
11:44:07 <jyp> []
11:46:39 <jyp> upon the subsequent call to treeModelGetPath, i think
11:47:32 <Lemmih> You can ask dcoutts_. He's a gtk2hs developer.
11:48:24 <jyp> Yup... I kinda hoped he awaked upon mentioning gtk2hs :)
11:48:56 <jyp> Gonna try your idea though
11:49:53 <dcoutts_> hello!
11:50:05 <Lemmih> He's awake!
11:50:14 <dcoutts_> it's alive!
11:50:18 <jyp> hey dcoutts :)
11:50:38 <dcoutts_> you had a question I believe?
11:50:50 <dcoutts_> or perhaps a bug report
11:50:53 <jyp> Yes actually...
11:51:13 <jyp> Lemmih: your solution seems to work though
11:51:43 <jyp> The thing is, I was getting "assertion `iter->stamp == GTK_LIST_STORE (tree_model)->stamp' failed"
11:52:29 <dcoutts_> ok, when you were doing what?
11:52:35 <jyp> when calling 'treeModelGetPath' on a 'TreeIter' given by 'treeSelectionSelectedForeach'
11:52:56 <jyp> this was with CVS head from a few days ago
11:53:13 <dcoutts_> oh, hmm. I was about to say that iters are not persistent, but one given to you by 'treeSelectionSelectedForeach' should be ok...
11:53:20 <jyp> (As it happens I'm unable to compile the current version)
11:53:36 <dcoutts_> current as in cvs or current as in 0.9.7?
11:53:47 <jyp> current cvs
11:54:00 <dcoutts_> oh, probably my fault :-)
11:54:04 <jyp> ... souceforge cvs
11:54:08 <jyp> no worries :-)
11:54:40 <dcoutts_> what error do you get? (we're about to release 0.9.8 so build problems are high on our TODO list at the moment)
11:54:49 <jyp> ghc-6.4: can't find file `glib/System/Glib/Types.hs'
11:55:07 <jyp> hoping that's the line you're after
11:55:14 <dcoutts_> yes
11:55:50 <dcoutts_> do you know what it was trying to make at the time it got that? make should tell you, probably in [] brackets
11:56:06 <jyp> tools/c2hs/c2hsLocal.deps
11:56:13 <jyp> make[1]: *** [tools/c2hs/c2hsLocal.deps] Error 1
11:56:16 <dcoutts_> thanks
11:56:23 <jyp> you're welcome
11:56:59 <dcoutts_> do you have a test case showing the tree iter problem that you could send to the mailing list?
11:57:45 <jyp> not right now, I'd have to build one
11:57:45 <dcoutts_> gtk2hs-users@lists.sourceforge.net
11:58:08 <jyp> I'll try to do that by monday
11:58:17 <dcoutts_> thanks very much!
11:58:27 * jyp is happy to contribute
11:59:24 <dcoutts_> do you mind if I ask what sort of GUI app you're building (we're always interested to hear what sort of thing people are doing)
12:00:08 <jyp> Lemmih: your solution fully works, as long as there's a single line selected (fine by me)... So thanks alot
12:00:32 <jyp> Actually, I'm making a little gui for a chinese-english dictionnary
12:00:41 <dcoutts_> cool
12:00:44 <jyp> something quite simple, for my personal use
12:02:06 <dcoutts_> well if you ever feel like sending us a little screenshot of it (showing off Gtk's cool unicode text rendering!) we'd love you for it :-)
12:02:34 <jyp> To be specific my goal is to have a "virtual flashcards" application for learing chinese characters...
12:02:53 <dcoutts_> interesting
12:03:02 <jyp> the dictionnary is there only to help _typing_ the characters ...
12:03:39 <jyp> till now the only method I had was to cut/paste characters from websites :p
12:04:11 <dcoutts_> btw, what version of make aure you using? $ make --version ?
12:04:18 <jyp> I'd be glad to send you screen shots... Shall it be posted to the mailing list ?
12:04:32 <jyp> GNU Make 3.80
12:04:57 <dcoutts_> ok, I wonder why I don't get the same thing... hmm
12:05:08 <jyp> Maybe autoconf/automake versions
12:05:37 <jyp> It's quite messy ...
12:06:04 <jyp> I think gtk2hs requires automake 1.8, which I installed for the purpose
12:06:11 <dcoutts_> well, we'll be doing release candidates soonish so you could try one of those, they'll be announced on the gtk2hs-users@lists.sourceforge.net mailing list
12:06:17 <jyp> sure
12:06:44 <dcoutts_> as for a screenshot, sure send it as an attachment to the same mailing list
12:06:58 <jyp> alright
12:07:17 <dcoutts_> you can even have more than one, if that helps
12:07:57 <dcoutts_> eg, you can see the collection we put togeher for boegle's HRay app: http://haskell.org/gtk2hs/archives/2005/04/28/hray-screenshots/
12:12:26 <dcoutts_> jyp, 'treeSelectionGetSelectedRows' might be more useful to you
12:12:36 <jyp> haaaa
12:13:24 <jyp> I'll try that, thanks
12:15:32 <jyp> you can have a look here: http://users.skynet.be/jyp/han.png
12:15:58 <jyp> I'll give a screenshot of the dictionnary when it'll look better
12:16:17 <CosmicRay> woot, finally have MissingPy working with GHC 6.4
12:16:19 <dcoutts_> cool! I just love the look of character sets that I don't understand :-)
12:16:51 <jyp> :)
12:17:14 <jyp> fyi, this one means "han", as in the chinese ethnicity
12:17:27 <dcoutts_> ok
12:21:35 <basti_> what i find fascinating about chinese charecters is that they're actually understood as composed of a few symbols each that form some kind of metaphor to the idea that's depicted
12:22:32 <jyp> actually there are "ideophonograms" as well, which makes the system somewhat less beautiful
12:22:49 <basti_> ;)
12:23:20 <basti_> we've had chinese write "konkret krass aldea" in phonetics
12:23:24 <basti_> we wanted to write it on shirt
12:23:25 <basti_> s
12:23:49 <basti_> never actually did it though
12:24:19 <basti_> (konkret krass aldea is a general idiomatic affirmative of alleged german-turkish origin)
12:26:16 <jyp> twisted :-)
12:28:19 <basti_> it was fun back then.
12:34:30 <CosmicRay> where's shapr been this week?
12:34:34 <CosmicRay> @seen shapr
12:34:35 <lambdabot> I saw shapr leaving #haskell 5 days, 3 hours, 34 minutes and 16
12:34:35 <lambdabot> seconds ago.
12:35:00 <tuomov> He's changed shape?
12:35:04 <CosmicRay> heh
12:35:58 <jyp> quite unlike the guy, huh?
12:36:10 <basti_> thats bizarre
12:36:14 <basti_> something must have happened
12:36:24 <basti_> he would have told if he planned it wouldnt he?
12:36:44 <Igloo> He's been away for a few days before
12:37:18 <basti_> -g-
12:37:28 <basti_> probably he's doing a unicycle tour
12:44:54 <Igloo> Has anyone got something that'll do whole-program unused-function checking for Glasgow Haskell?
12:52:43 * stepcut learns how to use Haskell XML Toolkit
13:06:04 <jyp> Igloo: maybe check Claus Reinke work (I think) ... the haskell refactorer
13:09:30 <SyntaxNinja> y0
13:22:31 <CosmicRay> Igloo: this looks ominous: http://buildd.debian.org/fetch.php?&pkg=missingh&ver=0.11.0&arch=hppa&stamp=1115974118&file=log&as=raw
13:22:38 <CosmicRay> ghc crashed with a bus error
13:22:54 <CosmicRay> ghc -package Cabal Setup.lhs -o setup
13:22:54 <CosmicRay> make[1]: *** [setup] Bus error
13:28:35 <wagle> man, i'm been razzed so much about using allegedly type unsafe languages, that that is so ironic
13:35:12 <stepcut> SyntaxNinja: am I supposed to be doing something about becoming a debian something or other ?
13:36:39 <Igloo> Hmm, that doesn't look good
13:39:03 <SyntaxNinja> stepcut, Lunar^, and a few others were supposed to email me
13:39:06 <SyntaxNinja> heffalump
13:39:15 <SyntaxNinja> well, he already did actually
13:40:01 <CosmicRay> Igloo: do you want me to submit a bug about it?
13:40:27 <Igloo> Yeah, preferably with a patch attached  :-)
13:40:32 <CosmicRay> heh
13:40:35 <Lunar^> SyntaxNinja: sorry, I must have missed something then
13:40:50 <CosmicRay> Igloo: I could send you one to remove hppa from Architecture :-)
13:41:12 <Igloo> Oh, and tag it sid please
13:41:20 <CosmicRay> right
13:41:49 <SyntaxNinja> yeah, pls email me :)
13:41:51 <SyntaxNinja> one and all
13:42:17 <SyntaxNinja> and then we'll start a CC list for discussion and see if we're all on the same page and if it makes sense to work together
14:01:55 <Igloo> Hmm, I'm sure there was a flag to have ghc dump the source showing explicit layout, but now I can't find out
14:05:48 <CosmicRay> -ddump-parsed maybe?
14:06:21 <Igloo> Doesn't put the ;{} in
14:07:42 * CosmicRay orders a patch panel for his house
14:10:48 <SamB> hmm, should I report this bug on the tracker or the mailing list? JaffaCake said that the last two bugreports I sent to the mailing list never made it into his inbox...
14:12:25 * Igloo reads the pretty printer and concludes I must have imagined it
14:12:40 <SamB> I guess I'll try the bugtracker...
14:16:10 <SamB> JaffaCake: you aren't the only one who punts TH bugs to simon!
14:16:16 * boegel wheeps
14:16:22 <SamB> but I guess you probably knew that.
14:16:32 <SamB> (SourceForge does it too)
14:17:14 <Oejet> boegel: Did something happen?
14:19:08 <boegel> Oejet: yeah, I didn't win the big lottery :(
14:20:12 <Oejet> How unlucky can a guy be?
14:20:35 <boegel> yeah, I played for like 6€, and still I didn't win anything
14:20:40 <boegel> it's unbelievable
14:23:33 * boegel leaves
14:23:45 <boegel> I'll go and dream of lot's of money :) bye everyone
14:23:54 <Cale> which big lottery?
14:24:58 <boegel> Cale: there was a special lottery because we're Friday the 13th today
14:25:14 <boegel> 7.000.000 € (plus Euro Millions -> 32.000.000 €)
14:27:52 <halcyon10> hi all. can anyone explain the Numeric Type-Class Hierarchy to me? i haven't understood by now what the various Type-Classes actually are
14:28:30 <halcyon10> it all starts with the Num-TypeClass, right?
14:29:11 <SamB> Yeah, pretty much.
14:29:47 <Cale> http://www.haskell.org/onlinereport/standard-prelude.html -- I think just reading the prelude gives a decent overview
14:29:53 <SamB> I mean, Num depends on Eq and Show, but...
14:30:09 <halcyon10> what exactly are the Fractional and Real TCs for?
14:30:27 <SamB> I would suggest playing with :i in GHCi or hugs
14:31:30 <Cale> Fractional has (/), recip, and fromRational
14:31:53 <SamB> or perhaps looking at haddock documention for Prelude if there is any...
14:31:58 <Cale> Real has toRational, somewhat unintuitively
14:31:58 <SamB> @docs Prelude
14:31:59 <lambdabot> http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html
14:32:43 <halcyon10> Cale: thx for the suggestion, but i just read those parts in the Prelude but it's wasn't really clear to me afterwards so i thought someone here could explain it better
14:32:49 <SamB> Cale: it is because haskell was not designed by numerical analysts
14:33:35 <SamB> halcyon10: if you would ask more specific questions we could try to extract reasoning from the typeclasses ;-)
14:35:21 <halcyon10> ok, what is the difference between Fractional and Rational? i actually haven't found a definition of Rational
14:36:13 <SamB> hmm, those docs would be easier to read without all those non-Prelude types and classes leaking in from the rest of the library..
14:36:20 <halcyon10> oh, i just saw, Rational is imported from another module
14:36:33 <jyp> bye folks
14:38:16 <SamB> how long does simon peyton-jones take to respond to bugreports, me wonders...
14:38:31 <SamB> Rational is a type
14:38:37 <SamB> it is just Ratio Integer
14:38:43 <SyntaxNinja> SamB: just CC simonMar or simonPJ while fiing the bug report
14:39:35 <SamB> SyntaxNinja: I tried sourceforge this time and filed it under Template Haskell, which automatically assigns it to simonpj
14:41:12 <SamB> somebody look at this horribly cluttered Haddock documentation for Prelude. Its, well, uh, horribly cluttered.
14:42:09 <CosmicRay> if fptools was in darcs, I'd send a patch :-)
14:42:37 <halcyon10> SamB: ok, so Rational is the division(sorry, don't know the right word) of two Integers p,q ?
14:43:12 <SamB> halcyon10: I don't know the right word either, but yes
14:44:03 <halcyon10> SamB: ok, and what can Fractional do what Rational can't ?
14:44:26 <SamB> halcyon10: well, Fractional is a typeclass.
14:44:36 <SamB> @type 1 / 2
14:44:42 <lambdabot> 1 / 2 :: forall a. (Fractional a) => a
14:45:21 <SamB> see, the expression "1 / 2" is valid for any type which is an instance of Fractional.
14:45:33 <SamB> @type 1 % 2
14:45:36 <lambdabot> bzzt
14:45:48 <halcyon10> so Fractional could be a fraction(thats the word =)) of any (valid) type
14:47:08 <SamB> Fractional just means that it supports proper division (though not necessarily very accurately)
14:47:46 <SamB> @type 1.5
14:47:48 <lambdabot> 1.5 :: forall t. (Fractional t) => t
14:48:41 <halcyon10> so would the Fractional type be like a body and Real like a ring in the mathematical sense?
14:49:29 <Cale> Num is like ring, Fractional is like field.
14:49:31 <halcyon10> or Num actually is already like a ring
14:49:53 <halcyon10> ah, that makes things clearer already :)
14:50:32 <SamB> @type (<1)
14:50:34 <lambdabot> (<1) :: forall a. (Ord a, Num a) => a -> Bool
14:50:56 * SamB was hoping to see (Real a) => a -> Bool
14:51:17 * SamB guesses the compiler cannot read minds ;-)
14:51:24 <basti_> SamB: well...
14:51:34 <basti_> I think Ord Real and Num Real huh?
14:51:57 <SamB> Prelude> :i Real
14:51:57 <SamB> class (Num a, Ord a) => Real a where toRational :: a -> Rational
14:51:57 <SamB>         -- Imported from GHC.Real
14:52:05 <basti_> uhm
14:52:07 <basti_> but similar.
14:52:08 <basti_> ;)
14:52:27 <SamB> its best to try and keep types and type classes straight ;-)
14:55:01 <halcyon10> that means Num-Types don't need to be ordered but Real-Types have to, right?
14:55:10 <SamB> yes
14:55:13 <SamB> for a good reason
14:55:21 <halcyon10> ah
14:55:21 <basti_> uhm?
14:55:34 <basti_> hmm
14:55:34 <basti_> yes
14:55:37 <SamB> well, complex numbers for one ;-)
14:56:46 <SamB> though they aren't in the Prelude
14:58:06 <SamB> @docs Complex
14:58:08 <lambdabot> Complex not available
14:58:17 <SamB> @docs Data.Complex
14:58:18 <lambdabot> http://haskell.org/ghc/docs/latest/html/libraries/base/Data.Complex.html
14:58:59 <SamB> SyntaxNinja: you did @docs, right?
15:01:26 <halcyon10> i think i got over the main unclarities now, thanks for your help, all
15:01:57 <SyntaxNinja> SamB: I've never written a lambdabot module
15:02:36 <SamB> oh, maybe that was TheHunter ?
15:03:12 <SamB> SyntaxNinja: are you too lazy to write a module, or too busy, or just don't want any?
15:03:38 <SyntaxNinja> SamB: lambdabot is very cool, but the cost of learning seems larger than the payoff :)
15:03:56 <SamB> SyntaxNinja: you don't have to understand lambdabot to write a module.
15:04:12 <SamB> I've written two already and I still don't know how it works.
15:05:38 * SyntaxNinja shrugs
15:07:11 <Miteorite> damn, the answer is in the topic. no chance to spam.
15:08:04 <TheHunter> SamB, it's my ugly hack, alright
15:15:25 <SamB> TheHunter: I don't like this error message
15:15:36 <SamB> @docs Complex
15:15:37 <lambdabot> Complex not available
15:16:16 <TheHunter> SamB, change it, i'm not particularly proud of my error messages.
16:27:31 <stepcut> ok, I totally have to rewrite my programs to use the haskell xml toolkit instead of HaXml now
16:29:26 <SyntaxNinja> stepcut: why?
16:29:56 <stepcut> well, it seems to do everything I used about HaXml better
16:30:39 <stepcut> but more specifically, this week I (as far as I can tell) really needed things state and IO facilities that HXT provides
16:31:55 <stepcut> things *like the* state
16:31:59 * stepcut is very tired today
16:33:30 <stepcut> I wanted to make a filter that would look at some attributes of some nodes at the top of tree, and use that to create new elements inside some of the grandchidren nodes that matched a filter
16:34:15 <stepcut> but, with HaXml, I could not figure out how to get the information I learned when processing the top level nodes down to the filter that processed the grandchildren nodes with out lots of ugliness
16:35:13 <stepcut> And, I wanted to do things where I walked over an xml document and run shell commands
16:36:08 <stepcut> When I encountered some nodes, I wanted to add things to a dictionary, and then when I hit children nodes, I wanted to lookup that information and spawn a script using it
16:36:38 <stepcut> I also wanted to transform xml documents into non-XML documents and non-XML into XML
16:36:54 <stepcut> and that also turned out not so pretty
16:37:31 <stepcut> (in part because of, once again, needed to save state information while traversing the tree)
16:38:01 <stepcut> some state needed to be passed only parent to child, but some also needed to be passed to siblings...
16:38:43 <stepcut> and, lastly, it will give me an excuse to play with arrows (hopefully)
16:46:50 <SyntaxNinja> :)
16:48:10 <reffie> lsb end
16:48:16 <reffie> bah
18:28:13 <wagle> @seen shapr
18:28:14 <lambdabot> I saw shapr leaving #haskell 5 days, 9 hours, 27 minutes and 56
18:28:14 <lambdabot> seconds ago.
18:58:30 <dons> @ghc
18:58:32 <lambdabot>  Use -fglasgow-exts to allow multi-parameter classes
18:58:36 <dons> ok!
19:03:21 <blackdog> g'day don. how's life?
19:04:30 <dons> heya blackdog. pretty good.
19:04:42 <dons> wazzup ?
19:06:58 <dons> having some fun with my new fanless firewall/router/gf desktop box: http://www.elx.com.au/item/ELS1002
19:13:41 <dons> blackdog, how'd the web content haskell plugin thingy go?
19:18:11 <creichen> Sometime ago I stumbled across a rather strange little rhyme: "A parser for things is a function from strings to lists of pairs of strings and things".
19:18:37 <creichen> I can't find this on the web anymore, though... it was in context with FP, IIRC. Does anyone happen to be familiar with it or who made it up?
19:22:37 <dons> yes, I remember this rhyme.
19:23:13 <dons> but I don't remember author.
19:23:37 <dons> @google "A parser for things is a function from strings"
19:23:38 <lambdabot> No result found.
19:26:27 <blackdog> dons: alas, very very slowly. work is a bit crazy at the moment - will have more time in a few weeks.
19:28:19 <blackdog> http://www.willamette.edu/~fruehr/haskell/seuss.html
19:28:24 <blackdog> it was one of fritz's!
19:28:39 <dons> oh yes. that's it
19:30:09 <blackdog> that box is pretty sweet. I've been looking at getting a quiet box - breaking all the rules by having one box for firewall, fileserving, and media.
19:30:38 <blackdog> i just can't cope with having big beige boxes in every room any more - way too noisy and ugly.
19:39:53 <dons> blackdog, yeah. that via box looks good for media thingy in a stereo cabinet.
19:39:59 <dons> for music at least
19:40:07 <dons> might want to crank it up a bit for moovies
19:40:20 <dons> it net boots really nicely
19:40:29 <dons> so no hdd required. just a wireless card..
19:40:47 <dons> (can you net boot from a wireless card??)
19:40:56 <dons> just ether anyway.
19:47:27 <blackdog> well, i don't mind it being plugged in - the hub's there anyway.
19:47:47 <blackdog> and mad gets sniffy about wireless, it isn't fast enough apparently.
19:47:54 <dons> oh!
19:48:33 <AtnNn> in ghci i can do `let e = 2.718' and then use e, is it possible to do that in hugs? i cant seem to use `let' without an `in'
19:48:53 <dons> well, you could netboot a ram disk on the via box (hdd's are so noisy) and nfs mount the media stuff. pretty cool I reckon.
19:49:05 <dons> AtnNn: can't do that in hugs
19:49:45 <blackdog> problem is, i don't want to run two boxes at all.
19:50:05 <blackdog> so i need a hdd somewhere. :)
19:50:13 <AtnNn> ok
19:54:32 <thou> dons: if I do:  ./yi-static html/Yi.Yi.html, it doesn't display correctly (some chars missing, typing j or k jumps around in the file, etc.) - is that a known problem?
19:54:52 <thou> dons: i built it from a week-old darcs repo
19:56:32 <thou> i take that back about missing chars - looks like it's just 1) when i first load the file, the screen is blank (have to type ^L or j or something to show the page); and then the movement is erratic
19:56:48 <dons> maybe there are tabs? or other weird control chars? unicode perhaps?
19:56:57 <thou> could be unicode
19:57:08 <dons> (tabs should be ok I think)
19:57:13 <thou> but it's weird; if I hit ^B repeatedly, the cursor keeps jumping around on the screen
19:57:47 <dons> yeah, works for me on OpenBSD.
19:57:49 <dons> what os?
19:57:55 <thou> FreeBSD
19:58:02 <dons> hmm. let me see..
19:58:12 <thou> hmm, i'm running it in screen, let me try just in xterm
19:58:20 <dons> ok. might be that.
19:58:31 <thou> nope
19:58:49 <thou> I do have LC_ALL=en_US.UTF-8
19:58:52 <thou> let me try w/o that
19:59:12 <thou> nope
19:59:22 <dons> no, you'd have to regenerate the haddock files surely?
19:59:30 <dons> so they weren't full of unicode chars..
20:00:16 <dons> ok. i've got Yi.Yi.html open on a FreeBSD box. what do I do to get an error?
20:00:34 <thou> well, when I first open it up, the screen is blank
20:00:55 <thou> so that's the first problem right there (have to hit ^L or move the cursor to see anything)
20:01:13 <thou> then when I hit j or any other movement key, it jumps around
20:01:29 <dons> can you get the latest yi to confirm this please?
20:01:45 <thou> k
20:01:47 <dons> I don't have any of these problems.
20:01:59 <thou> i'll pull and rebuild
20:03:00 <dons> you might have some intermediate state when were hacking on the curses stuff
20:03:03 <thou> dons: stupid question: if I do 'darcs pull' and it says 'No remote changes to pull in', that means i've got the latest?
20:03:43 <dons> hmm. yes.
20:03:50 <dons> what's the last change? (darcs changes | less)
20:04:10 <thou>   * Remove M-' ' that sneaks in sometimes, breaking haddock
20:04:49 <dons> ok. that's the most recent. let *me* rebuild and see  what happens.
20:06:01 <thou> I put a copy of the file here:  http://www.magnesium.net/~thim/tmp/Yi.Yi.html
20:10:33 <dons> ok. one poiiint is that the internal and externl representatoinn of tabs aren''t in sync
20:11:13 <dons> damn wireless/fast keyboard
20:12:13 <dons> the tabs are rendered as 4 spaces I think, but internally are only 1 char.
20:12:30 <dons> so deleting them messes things up (you can't move to the end of a line properly)0
20:12:51 <dons> what ghc do you have?
20:12:55 <thou> 6.4
20:13:22 <dons> ok. I've only got 6.0.1 on the freebsd box. could be the difference.
20:13:35 <dons> because I don't have  any curses problems
20:13:38 <thou> ok
20:13:44 <thou> i can edit other files just fine
20:13:46 <dons> just the tab issues, which I already knew about
20:13:55 <thou> just not those .html files that haddock made
20:14:39 <thou> e.g., if I do ./yi-static Yi.hs, then it's fine
20:15:20 <dons> ok. I'll look into this some more. I'll have to get 6.4 on the freebsd box though, I think
20:16:41 <thou> no worries
20:16:56 <thou> i was just wondering if it's me ....
20:18:22 <thou> dons: if I run 'expand html/Yi.Yi.html > foo.txt; ./yi-static foo.txt' then it works fine
20:18:27 <thou> dons: so it is the tabs...
20:19:27 <dons> ok. and the screen doesn't need a ^L to renderR?
20:19:33 <thou> nope
20:20:02 <dons> hmm. ok.
21:37:12 <thou> @type fromMaybe
21:37:17 <lambdabot> bzzt
21:37:30 <reffie> @ghc
21:37:31 <lambdabot>  Kinds don't match in type application
21:38:38 <thou> @type Maybe.fromMaybe
21:38:39 <lambdabot> Maybe.fromMaybe :: forall a. a -> Maybe a -> a
21:47:05 <thou> hi, kaa
21:47:27 <thou> err, sorry, wrong window :-}
21:47:49 <Gahhh> hi, Keanu
21:48:01 <thou> kaamos: are you back in /names
21:48:07 <thou> damn
21:48:11 * thou needs to quit
22:51:57 <blackdog> hey all... i'm starting to get some pain in my wrists and hands, and it scares me to death to think that i might have to stop typing. I know shapr rates the Kinesis keyboard - have any of you tried chording/vertical/alternative keyboards?
22:57:19 <Gahhh> blackdog: do you exercise at all ?
23:38:10 <blackdog> Gahhh: yeah, heaps. I ride about 25 km a day...
23:52:26 <dbremner> blackdog - Wrist braces and regular breaks helped me.
