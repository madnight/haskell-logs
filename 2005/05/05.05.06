00:00:26 <dbremner> Gahhh - Robert Dewar apparently learned Algol 68 by reading the report. I wish I had that level of skill. :-)
00:01:16 <Gahhh> dbremner: you can have given time. After reading the haskell report I felt like I'd rather read reference docs instead of language tutorials.
00:03:00 <Gahhh> this method excludes the C++ standard, of course.
00:03:49 <lispy> Gahhh: the lisp hyperspec is pretty trashy too
00:03:51 <dbremner> Gahhh - I learn languages by immersion.
00:04:39 <dbremner> lispy - it's intended as a reference.
00:05:09 <Gahhh> immersion is good. What I don't like is tutorials (having to) leaving out content along the steps. My brain tries to autocomplete the missing pieces then, and I am confused later on.
00:05:51 <dbremner> Gahhh - exactly. I found SoE fairly frustrating.
00:06:01 <Gahhh> SoE = ?
00:06:12 <Gahhh> school of expre ?
00:06:14 <dbremner> Gahhh - the Haskell School of Expression.
00:06:32 <Gahhh> I have that and I read it. I gained almost nothing from it. It collects dust now.
00:06:46 <dbremner> Gahhh - same.
00:07:09 <lispy> dbremner: yeah, but have you tried to implement common lisp using it as a reference?
00:07:18 <lispy> dbremner: i tried...and failed :)
00:07:34 <dbremner> lispy - how far did you get?
00:07:48 <lispy> i got lost when i hit reader macros
00:08:03 <lispy> the description of the read algorithm was very confusing as well
00:08:28 <lispy> when that happened i went back to just implementing what i knew of lisp
00:08:47 <lispy> and figured i'd fix stuff as it became a problem :)
00:09:07 <lispy> then i ran out of free time (I became a grad student) and stopped working on it...
00:09:11 <dbremner> lispy - there are two ways to write a language standard. One is to formally define it - SML, Algol 68. Then you've got a consistent artifact frozen in time - additions take forever. The other method is describing it in English and dealing with the resulting errors.
00:10:00 <Gahhh> blew english. I have an excerpt from the Python reference nailed to my cube's wall. It's unintelligible.
00:12:14 <dbremner> Gahhh - an approach that makes sense to me is to define behavior of the language with a Haskell interpreter.
00:15:34 <Gahhh> dbremner: I think it's an inherent complexity problem most of the time. You can represent it worse, but probably not much better.
00:16:46 <dbremner> Gahhh - http://blogs.msdn.com/ericlippert/archive/2003/09/18/53053.aspx
00:18:56 <Gahhh> heh
00:19:30 <Gahhh> I suppose if you know denotational semantics, you can eat your cake too
00:19:32 <dbremner> Gahhh - and the related lambda discussion. http://lambda-the-ultimate.org/classic/message8778.html
00:20:17 <dbremner> Gahhh - I'm currently reading Denotational Semantics: The Scott-Strachey Approach to Programming Language
00:20:17 <dbremner> Theory
00:20:58 <Gahhh> Do you find it useful ?
00:21:07 <lispy> interesting, my PL prof last term decided that no one uses denotational semantics anymore so we didn't discus it
00:21:14 <lispy> ond now i've been hearing about it a lot lately :)
00:21:18 <dbremner> lispy - I can easily believe that.
00:21:34 <dbremner> lispy - I often feel that CS is in a dark age of sorts.
00:21:38 <Gahhh> lispy: what did he say that they were using then ?
00:21:39 <tic`> which one is denotional semantics? small-step or big-step?
00:22:09 <lispy> Gahhh: she, and we studied operational and um...the other one that slips my mind at the moment
00:22:56 <lispy> is the other one formal semantics?
00:23:04 <dbremner> lispy - axiomatic?
00:23:09 <lispy> ah yeah
00:23:18 <dbremner> lispy - the big three.
00:23:36 <Gahhh> isn't (axiomatic > denotational) semantics ?
00:25:26 <dbremner> Gahhh - AFAICT it's a different approach entirely. http://burks.brighton.ac.uk/burks/foldoc/49/9.htm
00:26:02 <Gahhh> I just love how Frank Atanassow bashes things.
00:26:21 <lispy> well, i finally decided which problem to study.  The instructions say to write 1 page describing what you want to work on.  Hmm...I did it in two sentences.  Some how I think I may be missing something...
00:27:20 <Lemmih> dcoutts: ping.
00:27:35 <Gahhh> lispy: and what is it ?
00:28:09 <lispy> a modified version of Knight's tour
00:28:15 <dbremner> lispy - my favorite smart alec response to "any questions?" was "describe the nature of consciousness."
00:28:25 <lispy> in this version the boards have missing holes
00:28:32 <Gahhh> dbremner: have you read that entire thread you posted for me ? It talks about why the guy did the DS for javascript.
00:28:53 <lispy> DS?
00:29:00 <Gahhh> denot seman
00:29:03 <lispy> ah
00:29:12 <Gahhh> I abbrev aggress tonite
00:29:16 <lispy> :)
00:29:26 <dbremner> "You can read this for pleasure or personal edification. It's probably quite hard to get hold of now. It's a classic, and it's completely out of date. A bit like Plutarch."
00:29:26 <dbremner> Gahhh - yep. That's where I got the idea from.
00:29:29 <lispy> that's okay as long as you don't get annoyed when i ask what it means :)
00:29:51 <dbremner> Gahhh - er the quote is from a review of the Denotational Semantics book I'm reading.
00:31:24 <Gahhh> can I read it for profit ?
00:32:02 <dbremner> Gahhh - presumably.
00:32:12 <Pseudonym> Is it the Strachey?
00:32:42 <_JusSx_> đŋß
00:32:56 <_JusSx_> ßðđŋħ€ŋŧ€łł«ðđŋð»¢«»«»«»«»«»«»»«»«»
00:33:54 <dbremner> Psuedonym - yes.
00:34:10 <Pseudonym> Yeah, I read that 13 odd years ago, and it was out of date then.
00:34:30 <dbremner> Gahhh - I got interested in DS after reading a thesis titled Realistic Compiler Generation.
00:34:34 <Pseudonym> It's not Dragon Book out of date.
00:34:38 <Pseudonym> Oooh, good title.
00:34:46 <Pseudonym> Is that online somewhere?
00:34:50 <dbremner> Psuedonym - that's ok, I've got shelves of out of date boks.
00:35:04 <reffie> the dargon book is out of date?!
00:35:09 <dbremner> Psuedonym - possibly, I've got it as a book.
00:35:11 <Pseudonym> I have an ACM Computing Reviews from October 1966.
00:35:15 <Pseudonym> reffie: Sure is.
00:35:19 <Pseudonym> It's 20 years old.
00:35:33 <reffie> Pseudonym that doesn't necessarily mean it's out of date.
00:35:46 <lispy> i found a book i like better than the dragon book
00:36:00 <Pseudonym> It doesn't mention SSA form, graph coloring register allocation, cache optimisation, bottom-up code generation...
00:36:05 <Pseudonym> Code scheduling...
00:36:19 <lispy> it's called "Modern Compiler Design" by Grune, Bal, Jacobs and Langendoen
00:36:20 <dbremner> Psuedonym - it's always amusing reading descriptions of stacks before the term was used.
00:36:21 <Pseudonym> Basically doesn't mention anything that modern compilers do except LR parsing. :-)
00:36:47 <reffie> Pseudonym you mean optimization techniques
00:36:56 <lispy> it even describes how to make an haskell complire
00:37:08 <lispy> as one of the motivations of a whole chapter :)
00:37:22 <lispy> the amusing thing is that they refer to C as the portable assembler
00:37:35 <Gahhh> I'd be disappointed if modern compilers weren't doing any new things that are not in the dragon book.
00:37:41 <Pseudonym> No, I don't mean optimization techniques.
00:37:45 <Pseudonym> Not just that.
00:37:49 <Pseudonym> I mean modern intermediate forms, too.
00:38:47 <dbremner> Psuedonym - Realistic Compiler Generation is Peter Lee's thesis.
00:38:57 <Pseudonym> My favourties are Muchnick and the second edition of Appel.
00:39:02 <Pseudonym> @wiki Muchnick
00:39:03 <lambdabot> http://www.haskell.org/hawiki/Muchnick
00:39:04 <Pseudonym> Sorry.
00:39:07 <Pseudonym> @google Muchnick
00:39:09 <lambdabot> http://www.arsenyart.com/
00:39:11 <Pseudonym> Hmm.
00:39:39 <dbremner> Psuedonym - I've got Comp- w/Continuations and Modern Compiler Implementation in ML 2ed.
00:39:47 <juhp> hmmm, building ghc-6-4-branch with ghc-6.4 failed for me (x86_64)
00:39:48 <Pseudonym> http://www.softpanorama.org/Bookshelf/TOC/muchnick1997.shtml
00:40:08 <Pseudonym> Yes, the Modern Compiler Implementation (not the "basic techniques" one) is one of the best.
00:40:18 <Pseudonym> And probably the best introduction these days.
00:40:34 <Pseudonym> Though it helps, if reading the C and Java versions, if you translate the examples back into ML.
00:41:14 <Pseudonym> Muchnick's "Advanced Compiler Design and Implementation" is an incredibly good book.
00:41:27 <Pseudonym> If you're into the backends rather than the frontends.
00:42:10 <dbremner> Psuedonym - I purchased most of my compiler books after reading the comp.compilers archives.
00:42:16 * Pseudonym nods
00:45:23 <dbremner> Psuedonym - Concepts of Programming Languages was wretched, though.
00:45:54 <Pseudonym> Haven't read it, but thanks for letting me avoid it.
00:46:14 <reffie> where do you guys find the time to read all those books
00:46:22 <Pseudonym> I've been at it for a while.
00:46:23 <dbremner> Psuedonym - I spotted enough logical and syntax errors in the first 50 pages to give up.
00:46:38 <Pseudonym> I commute an hour each way on the train.
00:46:47 <Pseudonym> I tend to get quite a bit of reading in.
00:46:58 <Pseudonym> Especially if you know how to skim.
00:47:09 <dbremner> reffie - I'm single, obsessive, and have insomnia. My job involves lots of meetings and pointless emails. Abstract CS is how I escape.
00:47:22 <Pseudonym> I'm reading "Generative Programming" at the moment, and believe me, this is a book you WANT to skim.
00:47:37 <Pseudonym> So knowing which bits to skim or skip is essential.
00:47:42 <dbremner> Psuedonym - Scott Meyers made a similar comment to me.
00:47:56 <Pseudonym> About Generative Programming?
00:48:08 <dbremner> Psuedonym - yes.
00:48:15 <Pseudonym> You know him IRL, or is this an online forum thing?
00:48:33 <Gahhh> I met him IRL once.
00:48:37 <dbremner> Psuedonym - he came to speak at the local user group and I talked with him afterwards.
00:48:42 * Pseudonym has a lot of respect for him, even if he still has the same haircut he had in the 70s
00:48:46 <Gahhh> heh
00:48:52 <Gahhh> very nice guy
00:48:58 <Pseudonym> Yeah, I got that impression.
00:49:01 <Pseudonym> And very practical.
00:49:11 <Pseudonym> He has a good bullshit detector, unlike Coplien.
00:49:27 <Pseudonym> Though in Coplien's case, he generates so much of it...
00:50:02 <dbremner> Psuedonym - IIRC, we were discussing metaprogramming or some such and that book came up.
00:50:07 <Pseudonym> Right.
00:50:16 <Gahhh> my brain stops after some time. Even if I had insomnia, I couldn't do anything good with it.
00:50:50 <Pseudonym> The more I think about it, the more I think I should spend my commuting time writing rather than reading.
00:51:02 <Pseudonym> There's a category theory book that needs to be written, IMO.
00:51:05 <Gahhh> writing code or articles ?
00:51:27 <Pseudonym> One that doesn't assume you're already a theoretician, but also doesn't assume you know nothing.
00:52:07 <dbremner> Psuedonym - if you write that book, I will buy it.
00:52:12 <Pseudonym> Most category theory books can be summed up: All that stuff you already learned the hard way can be simplified!  Isn't that cool!
00:52:12 <lispy> well, good night all
00:52:15 <Pseudonym> Night.
00:52:42 <Gahhh> how many CT books have you people read ???
00:52:51 <Pseudonym> I've read about six, probably.
00:52:57 <Gahhh> holy monad...
00:53:08 <Pseudonym> But you know something?
00:53:14 <Pseudonym> I still don't understand them!
00:53:30 <Gahhh> you mean all of them. You know some CT now.
00:53:31 <dbremner> Psuedonym -off and on, at least 3 or 4. I skim various parts of various books.
00:53:50 <Pseudonym> Except for "COnceptual Mathematics", which I understood, but it didn't go far.
00:54:11 <dbremner> Psuedonym - I used category theory at work to represent our new SLA.
00:54:21 <Pseudonym> Oooh, cool.
00:54:25 <Pseudonym> Oh, I know some of them.
00:54:49 <Pseudonym> But for example, I've read six descriptions of the Yoneda lemma, and I now know what it's _for_, but I still don't understand what it _says_.
00:54:53 <dbremner> Psuedonym - My boss liked the result. I'd read some of Conceptual Mathematics at the time.
00:55:22 <Pseudonym> I already have a title worked  out, BTW.
00:55:38 <Pseudonym> I shall call this book: "Abstract Nonsense: Categories for the Armchair Computer Scientist"
00:56:16 <Pseudonym> Anyway.
00:56:21 <Pseudonym> ENough pipe dreaming.  I must go home.
00:56:22 <dbremner> Psuedonym - I like the description "the social lives of sets". I know there's a pun there waiting to be discovered.
00:56:22 <Pseudonym> Nytol!
00:56:24 <Gahhh> Pseudonym: since you are a sucker for CT text, maybe you read this too: http://www.cs.man.ac.uk/~david/categories/book/book.pdf (Rydeheard's Computational Category Theory). I havent read it.
00:57:19 <Gahhh> I just have pdf's lying around everywhere.
00:57:52 <dbremner> Gahhh - I've got a pdf collection also. Lots of standards for odd languages, theses, etc.
00:57:58 <Pseudonym> I have read it, once upon a time.
00:58:09 <Pseudonym> I don't ever recall seeing the term "natural transformation" in it, though.
00:58:21 <Pseudonym> But I might be wrong.
00:59:20 <Gahhh> Such scary jargon: "toposes".
00:59:55 <Gahhh> "you won't understand shit $#^&"
01:00:12 <Pseudonym> "Toposes" is actually fairly straightforward.
01:00:31 <Pseudonym> A topos is just something that you can play as fast and loose with as you can with a set.
01:00:57 <Pseudonym> Anyway, I have to go.
01:00:58 <Pseudonym> Nytol!
01:01:20 <dbremner> Gahhh - I've always liked this quote. "No proper program contains an indication which as an operator-applied
01:01:20 <dbremner> occurrence identifies an operator-defining occurrence which as an
01:01:20 <dbremner> indication-applied occurrence indentifies an indication-defining
01:01:20 <dbremner> occurrence different from the one identified by the given indication
01:01:20 <dbremner> as an indication-applied occurrence."  --ALGOL 68 Report
01:01:55 <Gahhh> Are you KIDDING ME!!!
01:01:57 <wilx> lol
01:02:12 <Gahhh> oh my god
01:02:36 <Gahhh> the python quote is outdone. My cube wall will be updated tomorrow.
01:02:48 <wilx> Python quote?
01:03:00 <dbremner> Gahhh - it was the 60s, drugs were cheap and plentiful.
01:03:08 <Gahhh> I have an obscure paragraph from the python lang reference on my wall.
01:03:19 <Gahhh> this is 4x better
01:04:05 <Gahhh> dbremner: which section is it in ?
01:06:41 <Gahhh> whoa apparently this is a famous quote. many google hits.
01:07:00 <dbremner> Gahhh - I saw it in an email sig.
01:10:11 <Gahhh> dbremner: it's not in the revised algol 68
01:10:18 <dbremner> Gahhh - 4.4.1
01:10:51 <dbremner> Gahhh - of original.
01:11:10 <Gahhh> ah
01:11:42 <Gahhh> do you have a link to that ?
01:12:16 <dbremner> Gahhh - google found this. http://groups-beta.google.com/group/net.followup/browse_frm/thread/f644eee57a64ad81/6a3e08d0ac0fe9d7?q=algol+68+report+%22No+proper+program+contains+an+indication+which+as+an+operator+%22+-quote+-lipitor&rnum=83&hl=en#6a3e08d0ac0fe9d7
01:13:09 <Gahhh> thanks
01:15:24 <Gahhh> going to bed. nite dbremner and all.
01:15:46 <dbremner> Gahhh - night
01:32:48 <juhp> suppose it would help if I were actually building 6-4-branch... ;)
01:33:27 <juhp> HEAD seems to be building fine on i386 though fwiw
01:42:13 <Oejet> Good day, #haskell.
01:43:22 <Lemmih> Morning, Oejet.
02:00:40 <glimming> Can someone provide me with the TWO definitions of monad in Haskell : Kleisli triple vs. Monad
02:00:46 <glimming> Which one is Monad type class?
02:00:51 <glimming> >>= vs >>
02:00:53 <glimming> ?
02:02:17 <Oejet> glimming: Fisk.
02:02:50 <Lemmih> glimming: Could you rephrase that?
02:03:27 <glimming> There are two definitions of monads around.
02:03:33 <glimming> Which one is the Monad type class?
02:03:58 <Oejet> Both >>= and >> are members of the Monad type class.
02:04:38 <Lemmih> And neither are monads.
02:04:56 <glimming> Argh
02:05:10 <glimming> the binary operator in the monad class must satisfy certain laws.
02:05:23 <glimming> That is not my question
02:05:37 <glimming> I know that a type constructor instantiating Monad is what you calla  monad
02:05:38 <glimming> So
02:05:59 <glimming> My question is what are the TWO (equivalent) definitions
02:06:00 <glimming> of monads
02:06:05 <glimming> that are around in category theory
02:06:07 <glimming> in terms of Haskell
02:06:12 <glimming> Kleisli triples vs. Monads
02:06:14 <glimming> which one is Monad?
02:06:42 <glimming> the hunter, please check backlog
02:07:06 <musasabi> If two definitions are isomorphic then it is an implementation detail what operators happen to be the primitive ones.
02:07:14 <glimming> Well
02:07:20 <glimming> I am going to ask my students to prove them isomorphic!
02:07:58 <glimming> and note also that the actual proof may or may not be expressible in haskell
02:08:24 <glimming> ;-)
02:09:04 <Oejet> Hehe.
02:10:16 <TheHunter> glimming, they are all equivalent.
02:10:23 <glimming> Yeah
02:10:28 <glimming> so which one is Monad class?
02:10:34 <TheHunter> However, you have to forget about the fail kludge the Monad type class implements.
02:10:51 <glimming> Which I do not understand anyway - what is the Fail anyway?
02:11:22 <glimming> Fail is not an issue
02:11:23 <TheHunter> the reason for fail is that pattern matching can be handled gracely in do-notation.
02:11:23 <glimming> ;-)
02:11:30 <glimming> aha
02:11:34 <glimming> Can you give an example, or a link?
02:12:06 <glimming> Given monads S and T, what does it mean to write ST  in terms of Haskell - is this combining/composing monads (is there a reference)?
02:12:13 <glimming> I am still lost as to which definition Monad uses...
02:12:28 <TheHunter> http://haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html#9
02:12:45 <TheHunter> these are the laws that the standard libs assume.
02:13:15 <TheHunter> for fail, check the report (translation of do-notation)
02:13:35 <MarcWeber> I've found this line at a tutorial: data Bool = False | True
02:13:57 <MarcWeber> But using ghci I get SyntaxError: invalid syntax. What is wrong here?
02:15:37 <Lemmih> MarcWeber: You have to save it in a file and then load it with GHCi.
02:15:57 <Lemmih> (and Bool is already defined in the prelude)
02:17:04 <TheHunter> glimming, monad transformers: http://homepages.inf.ed.ac.uk/wadler/topics/monads.html (combining monads).
02:17:42 <TheHunter> you might also wanna check the references of the "composing monads using coproducts" paper.
02:18:00 <glimming> Cool
02:18:02 <glimming> Thanks
02:18:10 <glimming> I am working with the author of the 2nd paper, neil Ghani!
02:18:11 <glimming> ;-)
02:21:07 <bourbaki> moin
02:21:57 <TheHunter> moin
02:23:42 <bourbaki> hey hows it going?
02:24:18 <TheHunter> it's ok.
02:25:22 <bourbaki> boegel are you there?
02:25:23 <MarcWeber> I know get an executable using ghc. But when I try to execute it I get the errormessage Permission denied. Permission is -rwxr--r-- ? I've also tried to execute it as root. Same result
02:25:59 <Heffalump> on what OS?
02:26:10 <MarcWeber> gentoo linux
02:26:11 <Heffalump> and is the partition mounted noexec or something?
02:26:41 <MarcWeber> No. I haden't that problems before (using gcc or fpc or something else..)
02:26:44 <TheHunter> thbot: @pl (SII(S(K(S(S(K(SII(S(S(KS)(S(K(S(KS)))(S(K(S(S(KS)(SS(S(S(KS)K))(KK))))) (S(S(KS)(S(KK)(S(KS)(S(S(KS)(S(KK)(S(KS)(S(S(KS)(S(KK)(SII))) (K(SI(KK)))))))(K(S(K(S(S(KS)(S(K(SI))(S(KK)(S(K(S(S(KS)K)(S(S(KS)K)I)
02:27:13 <bourbaki> TheHunter whats that?
02:27:30 <Lemmih> MarcWeber: How are you invoking GHC?
02:27:45 <thbot> module "base timed out
02:27:45 <thbot> module "pl" screwed up: thread killed
02:27:50 <TheHunter> bourbaki, a test of may latest lambdabot feature.
02:28:04 <MarcWeber> ghc -o test --make test.hs
02:28:10 <bourbaki> and what are these symbols doing?
02:28:10 <glimming> ooops
02:28:11 <glimming> back again
02:28:23 <glimming> So monads in Haskell are in Kleisli form not monoid form!
02:28:50 <Heffalump> this being the easier thing to program with, yes (though TheHunter disagrees, IIRC)
02:29:15 <MarcWeber> Is this line sufficient to create a HelloWorld program? main=print("Hello World")
02:31:21 <TheHunter> my point was that it's often more sensible to base monads on fmap and join and that there really should be a class Functor m => Monad m relationship.
02:31:58 <TheHunter> and, =<< is often more convenient than >>=.
02:32:37 <TheHunter> m >>= f = join (fmap f m)
02:32:56 <TheHunter> m >> n = m >>= \_ -> n (You can forget that)
02:33:04 <Heffalump> MarcWeber: yes, though I'd suggest putStrLn not print
02:33:11 <TheHunter> you can forget fail as well.
02:33:21 <Heffalump> if you do it with print you'll get the quotes printed too, for slightly complicated reasons
02:33:24 <MarcWeber> Heffalump: All I want to do is getting started ;)
02:33:34 <TheHunter> return = eta
02:33:37 <TheHunter> join = mu
02:37:30 <df_> Marcweber :: are you the owner of the file?, you probably want chmod 0755 filename
02:38:06 <MarcWeber> Heffalump: Lemmih Sorry.. I thought I was on the right partition.. You were right.. no rights to execute.. ;(
02:40:13 <MarcWeber> Now it's all working.. (The problem wasn't neither haskell nor the computer.. it was the persion in front of it (again)... ;)
02:43:44 <TheHunter> thbot, @libsrc Control.Monad
02:43:45 <thbot> http://http://darcs.complete.org/fptools/libraries/base/Control/Monad.hs
02:44:16 <TheHunter> aarrggh! my firefox has a weird bug that makes this address point to microsoft.com
02:44:38 <thou> hehe mine too
02:44:38 <TheHunter> thbot, @libsrc Control.Monad
02:44:39 <thbot> http://darcs.complete.org/fptools/libraries/base/Control/Monad.hs
02:46:01 <df_> thehunter :: it isn't a buf
02:46:03 <df_> bug
02:46:16 <TheHunter> df_, how can it not be a bug?
02:46:21 <df_> firefox puts anything that it doesn't know into a google are you feeling lucky search
02:46:50 <df_> it sees that http:// is an invalid url and does a search for http using google, which gives microsoft.com
02:47:03 <df_> you can disable it by changing a config option
02:47:16 <TheHunter> i see. gotta turn that off.
02:47:37 <df_> about:config
02:47:45 <df_> keyword.enabled = false
02:48:06 <TheHunter> hey thanks.
03:12:22 <dons> moin
03:12:42 <TheHunter> moin.
03:13:27 <dons> ooh, what's this? ~[6~[6~[6~[6~[6~[6~[6~[6~[6~[6~[6~[6~[6~[6~[6~[6~[6~[6~[6~[6~[6~[6~[6~module "pl" screwed up: thread killed
03:13:31 <dons> oops. sorry
03:13:43 <dons> wireless playing up.
03:13:55 <TheHunter> i've taken the liberty to make lambdabot a bit more concurrent.
03:14:05 <dons> :) cool!
03:15:33 <TheHunter> ah, and for that i've merged the LB and IRC monads, renamed IRC.hs to Lambdabot.hs.
03:15:50 <dons> yeah, that's ok.
03:16:19 <TheHunter> i think we can start thinking about factoring out an IRC library now.
03:16:35 <dons> I'd like the Module/MODULE/state stuff factored out
03:17:08 <dons> yep. it should be stripped down a lot.
03:17:28 <dons> s/stripped/split into relevant modules/
03:18:19 <TheHunter> yep, the idea is that the Module/MODULE/state stuff stays in Lambdabot.hs (that's what the modules import).
03:18:40 <TheHunter> and Lambdabot.hs use the IRC library to manage the connection.
03:19:11 <dons> yep. sounds good.
03:23:13 <MarcWeber> Is indenting done by tabs or spaces (how many)?
03:24:16 <dons> both, but it is best to just use spaces.
03:24:57 <MarcWeber> 2 spaces per indent? tab=8 spaces as usual?
03:25:15 <thou> http://haskell.org/hawiki/HaskellStyle
03:25:28 * TheHunter uses 2 spaces.
03:25:40 <thou> MarcWeber: there are some examples there
03:25:50 <TheHunter> most people seem to prefer 3 or 4.
03:25:53 <thou> but probably best to just read some code and see which looks good to you
03:26:04 <TheHunter> and then there's the braindead indenting that i think haskell-mode does.
03:27:03 <aleator> What is the mistake in: "tySynD n [] (appT (varT $ mkName "ForeignPtr" ) (varT m))" ?
03:29:35 <TheHunter> dons, sent you a mail. You will have to register a password for lambdabot and put it into the file State/passwd as "password". The current situation where everybody can just /nick ddarius and @msg register foo is very disturbing.
03:30:14 <dons> oh, good point
03:30:58 <Heffalump> aww, boring :-)
03:31:11 <Heffalump> (but yes, good plan)
03:34:09 <MarcWeber> TheHunter: I've tried to copy an examplor of a tutorial but I've been getting an indentation error ( suggestion of compiler). Then I've read that haskell uses a kind of python indenting.. So I wondered what's correct
03:34:46 <TheHunter> MarcWeber, the number of spaces you indent doesn't matter as long as everything's aligned properly.
03:39:09 <MarcWeber> Thanks a lot.. Will have lunch now (afk)
03:43:09 <JohnMeacham> Does anyone know where copies of thomas johnsson's papers are? I am looking for the one that used to be at http://www.cs.chalmers.se/~johnsson/Papers/analysing-heap-contents.ps.gz
03:47:25 <JohnMeacham> The full title is 'Analysing Heap Contents in a Graph Reduction Intermediate Language'
03:57:50 <dons> @version
03:57:50 <lambdabot> lambdabot 2p460, GHC 6.4 (OpenBSD i386)
03:57:50 <lambdabot> darcs get http://www.cse.unsw.edu.au/~dons/lambdabot
03:59:19 <Heffalump> is 460 just a count of the patches?
03:59:21 <Lemmih> dcoutts: Kudos. gtk2hs is really neat.
04:01:36 <TheHunter> @seen TFK
04:01:37 <lambdabot> TFK is in #haskell. I last heard TFK speak 12 hours, 2 minutes and 22
04:01:37 <lambdabot> seconds ago, but I have missed 8 seconds since then.
04:01:48 <TFK> Good morning.
04:01:56 <TheHunter> morning.
04:02:28 <TFK> You rang?
04:02:38 <TheHunter> that was fast. Anyway, lambdabot is ready for implementing a announce-listener.
04:02:53 <TheHunter> i've created a stub in Plugins/Paste.hs.
04:03:46 <TFK> Coo! Thanks :-) but I'm afraid I won't be able to hack at it in the following week (or two) at all.
04:05:00 <TFK> Real life is getting on my nerves :-/
04:05:05 <Heffalump> oh, nice.
04:21:45 <dons> Heffalump, yep, it's the darcs patch count
04:37:02 <basti_> hi
04:37:24 <Oejet> Guten Tag, Herr basti_.
04:37:42 <basti_> :P
04:38:25 <CosmicRay> pfft, no German greeting for CosmicRay.... :-)
04:41:24 <Oejet> Aber doch, willkommen zum Kanal, CosmicRay.
04:42:07 <CosmicRay> danke :-)
04:42:21 * CosmicRay had to look up Kanal :-)
04:42:45 <CosmicRay> <-- doesn't know much German yet
04:45:22 <basti_> hmm there's a nice article about german in the german wikipedia
04:46:25 <basti_> "The rules of declination are very sublte, which makes learning german difficult in the beginning"
04:46:41 <basti_> (12 declination classes)
05:12:05 <Oejet> basti_: What is a declination?
05:12:58 <basti_> uhhm... german words get different suffixes in different "cases" (Kasus?)
05:13:43 <Oejet> I know about cases, but are there 12 of them?
05:13:45 <basti_> nominativ, genitiv, dativ, akkusativ...
05:13:54 <basti_> no there's 12 different ways to decline a word
05:14:01 <tuomov> Oejet: in finnish there is :)
05:14:37 <basti_> 12 different ways of how to do it
05:14:44 <basti_> and some exceptions.
05:14:49 <Oejet> tuomov: Cool, there are six in Russian.  But isn't it just shifting from "declinations" to cases?
05:15:16 <tuomov> err?
05:15:18 <basti_> a case is a syntactical construct, where a declination is a morphological one to reflect a changing case
05:15:21 <tuomov> cases correspond to propositions
05:15:24 <tuomov> s/pro/pre/
05:15:46 <basti_> "des hauses" and "der maus" are both genitive, but "haus" and "maus" belong to different declination classes.
05:16:47 <ibid> basti_: finnish has that many real cases, and more declinations
05:16:52 <basti_> ibid: i know.
05:16:52 <tuomov> http://www.cs.tut.fi/~jkorpela/finnish-cases.html
05:16:53 <basti_> =)
05:17:11 <tuomov> I don't even know how many ways there are to inflect a word..
05:17:16 <ibid> ah, meant to say that to Oejet , apparently :)
05:17:45 <basti_> http://de.wikipedia.org/wiki/Deutsche_Sprache#Deklination < "Substantive und Deklinationsklassen"
05:17:47 <ibid> http://www.ling.helsinki.fi/~fkarlsso/genkau2.html
05:18:06 <basti_> ibid: lol
05:18:46 <ibid> those are all possible forms of the word "kauppa" 'shop'
05:18:50 <tuomov> the base words change somewhat with the different inflections, but it's all apparent from the syntax
05:18:57 <tuomov> there aren't diffent classes as such
05:19:03 <ibid> includes independent combination of cases, possessive suffixes and so on
05:19:13 <ibid> tuomov: actually, there are
05:19:27 <ibid> tuomov: we finns just aren't taught about them
05:19:36 <ibid> tuomov: because we get it from our ear :)
05:19:59 <Oejet> tuomov: Nice schema. I think I can recognise instruktiivi from Russian.
05:20:09 <tuomov> ibid: it isn't all apparent from the syntax?
05:20:18 <tuomov> two similar words could change differently?
05:20:33 <ibid> tuomov: you mean morphology, yes?
05:20:43 <tuomov> all the consonent gradatation and stuff
05:20:48 <ibid> tuomov: syntax is how you arrange words into sentences etc
05:21:23 <ibid> tuomov: there are different endings for different words, depending mostly on how their stems end
05:21:41 <tuomov> exactly, it's apparently from the stem, there are no different classes that you should know
05:22:01 <basti_> i think that would be "declitation classes" then, anyway
05:22:10 <ibid> tuomov: well, there are different classes, it's just that they're rather regular :)
05:22:30 <basti_> finnish and hungarian have lots of cases but are pretty regular i heard...
05:22:32 <Oejet> ibid: Funny kauppa page.
05:22:47 <ibid> and not all stem variations come from consonant gradation and wovel harmony
05:23:00 <basti_> as opposed to french or german for example... not many cases, but pretty irregular
05:23:14 <ibid> basti_: for finnish at least, yes
05:23:24 <tuomov> genders are very irregular in these afaik?
05:23:38 <tuomov> spanish as a bit more regular genders (a/o ending often indicates the gender)
05:23:43 <basti_> genders are, and cases are, and sometimes cases are applied for no apparent reason
05:24:05 <basti_> for example on letters you would (if you would) address people in genitive...
05:24:16 <Oejet> Genders in Danish appears to be random.
05:24:43 <basti_> genders are random in most languages aren't they?
05:24:45 <ibid> how do you decide what gender to use for a new word?
05:24:52 <ibid> in danish, for example?
05:24:55 <basti_> good question -g-
05:24:56 <ibid> or german?
05:25:04 <tuomov> well, english a/an can be considered a degenerated gender..
05:25:07 <Oejet> Gut feeling?
05:25:10 <basti_> in german it's somewhat "common sense"
05:25:15 <tuomov> and it is rather regular... as far as the pronunciation is :)
05:25:30 <basti_> "Computer" for example is male, because "er" is a very male ending
05:25:40 <basti_> "Bildhauer" (sculptor) is certainly male for example
05:25:45 <ibid> tuomov: there are three pronunciations for the two articles, are there not?:)
05:25:59 <tuomov> indeed
05:26:08 <tuomov> and for the there are two pronunciations too
05:26:09 <ibid> basti_: could you then have a female Computerin, for example as a joke?
05:26:18 <basti_> ibid: in a joke, you could, yes.
05:26:42 <tuomov> in spanish o (masc.) and a (fem.) endings indeed can some times indicate a slightly different concept
05:26:45 <basti_> but it's not always all that clear. The Duden has the last word.
05:26:54 <tuomov> although not always o=masc, a=fem, but often
05:27:01 <basti_> (Duden being THE german spelling dictionary)
05:27:23 <ibid> basti_: heh, i was trying to visualize some set of _dudes_ who define it :)
05:27:30 <basti_> i dont know how they decide that.
05:27:32 <Oejet> Der Duden?
05:27:33 <basti_> -g-
05:27:48 <basti_> "Der Duden"... "Duden" is a name, but books being addressed are male.
05:27:58 <basti_> (another case of irregularity)
05:28:21 <ibid> is duden a private or a government body?
05:28:44 <basti_> its a book, primarily, but there's a private institution that does the decisions
05:28:51 <basti_> it's the books editors
05:29:14 <basti_> its not that this would be considered all that important i think.
05:29:22 <ibid> the finnish language has a governmental office 'the language office' that makes recommendations about finnish usage
05:29:27 <basti_> there is some debate about spelling, but i consider that rather ridiculous
05:29:51 <basti_> for example, a point of debate was when and if to triple consonants.
05:29:56 <tuomov> finnish is actually two languages... the spoken and the written
05:30:01 <tuomov> which have very little do with each other :)
05:30:02 <ibid> tuomov: not just two
05:30:09 <ibid> tuomov: very much, actually
05:30:09 <tic`> really ,do they differ?
05:30:14 <tic`> didn't think they did.
05:30:14 <tuomov> well, not if you consider all the dialects
05:30:18 <basti_> in what way do they differ?
05:30:20 <ibid> tic`: superficially
05:30:27 <tic`> Okay.
05:30:42 <ibid> there are things like minä vs. mä (
05:30:44 <tuomov> spoken finnish is uses much simpler forms and is a bit more analytical in nature
05:30:45 <ibid> ('I')
05:30:51 <tuomov> lots of stuff is dropped
05:30:54 <ibid> yeah
05:30:57 <tuomov> written finnish sounds very formal spoken
05:31:04 <ibid> minä menen kouluun vs. mä meen kouluun
05:31:23 <ibid> tuomov: but you must realize that there is no one spoken finnish
05:31:27 <basti_> i know that in german you'd write things that you hardly speak (for example, most official documents are worded in pretty twisted ways)
05:31:57 <ibid> tuomov: it varies between locations, and not completely acording to the traditional dialects
05:32:07 <tuomov> no one spoken finnish, but the dialects are perhaps closer to each other these days than to the written language
05:32:26 <basti_> thats extreme.
05:32:32 <ibid> considering that the finnish written language is based on one particular dialect...
05:32:38 <ibid> basti_: and not really true
05:32:42 <basti_> ahh.
05:32:42 <basti_> :)
05:32:44 <ibid> basti_: tuomov is exaggerating
05:32:47 <basti_> i see.
05:33:23 <basti_> well standard german (which is the base for the written form) is an artificial dialect too (although similar to the hannover dialect)
05:33:26 <tuomov> the vocabulary differs a lot, yes, but the "grammar" is rather similar: simple
05:33:30 <ibid> basti_: but there are significant differences even in word formation, as tuomov said, spoken finnish uses many contractions: menen -> meen
05:33:40 <basti_> yes of course
05:33:51 <basti_> but almost every language does that i think
05:33:53 <ibid> minä -> mä
05:34:04 <basti_> some even reflect it in writing ("I am" -> "I'm")
05:34:08 <ibid> basti_: exactly, that's why i said tuomov was exaggerating :)
05:34:13 <basti_> -g-
05:34:17 <tuomov> ibid: but in some parts mie/...
05:34:21 <ibid> basti_: you *can* write spoken finnish
05:34:23 <ibid> tuomov: true
05:34:27 <basti_> thats great.
05:34:37 <basti_> you can't really write the harsher german accents.
05:34:46 <basti_> well you can but you won't be able to read them easily
05:34:51 <ibid> basti_: at least, most of it
05:35:12 <basti_> some dialects use sounds that have no spelling in standard german
05:35:15 <ibid> basti_: of course, for the thicker dialects, it takes a lot of effort to read them :)
05:35:19 <basti_> hehehe
05:35:22 * basti_ nods
05:35:38 <tuomov> actually 'd' in written finnish has no standard pronunciation..
05:35:42 <ibid> but the classic spoken finnish is rather simple to read
05:35:59 <basti_> why not?
05:36:01 <basti_> d vs. ð?
05:36:04 <ibid> tuomov: actually there is a standard pronunciation for d, it's just that not all dialects *use* d
05:36:05 <tuomov> it can be written, pronounced as e.g. english d, as j, i, soft r, etc.
05:36:10 <tic`> there's little in Swedish that differ from spoken.
05:36:15 <tuomov> s/written/dropped/
05:36:16 <basti_> oh wow -g-
05:36:26 <ibid> basti_: d is not part of the native alphabet
05:36:48 <basti_> you mean the d sound isn't in the finnish language?
05:36:51 <ibid> basti_: it's not really that people say it differently, it's just that the written language uses d where other dialects use r etc
05:36:57 <basti_> (or just in allophone cases)
05:37:03 <ibid> basti_: not in the traditional language
05:37:06 <basti_> i see.
05:37:24 <basti_> first language without a "d" i'm hearing of
05:37:25 <ibid> basti_: the traditional finnish alphabet is a lot smaller than the english one, even if it adds äö:)
05:37:25 <basti_> =)
05:37:26 <tuomov> d was chosen to indicate a sound that differs in the different dialects
05:37:52 <basti_> i heard finnish has only allophonous "sibilants" (s, z, sh, dsh etc.)
05:38:00 <ibid> basti_: finnish lacks b, d, g, q, x, z
05:38:03 <tuomov> it seldom occurs in base forms of words, but more often in inflected words
05:38:15 <tuomov> in loan words it is the normal english d, though
05:38:16 <basti_> "x" and "q" are not real sounds anyway :P
05:38:20 <ibid> basti_: the traditional language, that is.  newer loanwords use them
05:38:58 <tuomov> sh should be written as s with an inverted hat, an dsh, I think as z with an inverted hat
05:39:08 <tuomov> (and those are not found in latin1)
05:39:12 <basti_> hehe
05:39:29 <ibid> oh yeah
05:39:29 <tuomov> but again, they only occur in loan words such as chess; sakki
05:39:41 <ibid> finnish has one sound that has no corresponding letter
05:39:46 <basti_> ohh
05:39:50 <tuomov> ng as in english thing
05:40:00 <basti_> so what do you write instead?
05:40:07 <tuomov> ng
05:40:10 <ibid> it's written as n before k and when doubled it is written as ng
05:40:14 <tuomov> oh and nk too
05:40:17 <basti_> i see.
05:40:23 <ibid> ng is the *doubled* version
05:40:26 <basti_> german has lots of "double" letters
05:40:41 <basti_> au, oi, sch, ch etc.
05:40:51 <tuomov> well, finnish has long vowels and consonants
05:40:58 <basti_> long consontants?
05:41:02 <tuomov> which are doubled when written
05:41:03 <basti_> how does that work?
05:41:03 <ibid> double consonants
05:41:12 <ibid> long vowels and double consonants
05:41:14 <tuomov> long vowels just sound longer, long consonants have a stop before drop
05:41:17 <basti_> ah
05:41:40 <ibid> tuomov: it is usual to talk about double consonants, not long consonants
05:41:41 <basti_> like, glottal plosive?
05:41:55 <ibid> long vowels are written by doubling the letter
05:42:06 <basti_> or no its not a plosive when it stops the vowel
05:42:08 <tuomov> well, long glottal consontants are like that anyway
05:42:15 <tuomov> nn, mm, ll are just long sounds
05:42:21 <basti_> ah yes.
05:42:26 <ibid> kk is k with a stop
05:42:37 <basti_> you mean in a-ka?
05:42:39 <basti_> like
05:42:43 <xerox> @get-definition K
05:42:44 <ibid> i don
05:42:45 <lambdabot> K = \x y.x
05:42:46 <ibid> 't get that
05:42:51 <ibid> a-ka?
05:42:58 <basti_> well "aka" vs. "a-ka" distinction
05:42:59 <tuomov> sounds like akka?
05:43:10 <ibid> never heard of a-ka
05:43:11 <basti_> (a since you can't say k without a vowel)
05:43:21 <basti_> hmm
05:43:25 <ibid> it's more like ak-a
05:43:27 * basti_ tries to think of an english example
05:43:35 <basti_> ah
05:43:45 <tuomov> no, I think a-ka would be more correct..
05:43:55 <ibid> ak-ka, more
05:44:03 <tuomov> yes
05:44:12 <basti_> its really hard to talk about how to pronounce one's native language isnt it? ;)
05:44:40 <ibid> basically, you come to the k position, then hold without sound, and resume from that same position
05:44:52 <basti_> mm i think i see what you mean
05:45:47 <basti_> german has the habit of starting words that start with a vowel not with the vowel but with a glottal plosive.
05:45:51 <ibid> whereas with a single k you just hit the k position without the holding
05:46:01 <basti_> that makes it really hard to learn languages where the glottal plosive is a proper sound
05:46:06 * basti_ nods
05:47:44 * basti_ wants to learn something REALLY foreign once.
05:47:46 <ibid> (the usual finnish voicing of the k in isolation is k followed by a long o)
05:48:19 <basti_> in isolation? you mean like in spellings?
05:48:24 <ibid> yeah
05:48:27 <basti_> i see
05:48:37 <ibid> where english would use kay or something like that :)
05:48:41 * basti_ nods
05:49:24 <basti_> german is really stupid in that respect. "sch" (about the same as sh in english) is spelled "es-ce-ha"
05:49:33 <basti_> d'oh.
05:49:33 <basti_> ;)
05:50:26 <ibid> the german style of using ha for h has always sounded comical to me
05:50:31 <tuomov> are s, c and h pronounced as es, ce, ha?
05:50:33 <TheHunter> basti_, can you give an example for such a "glottal plosive"?
05:50:34 <ibid> in finnish, we use h with a long o :)
05:50:55 <basti_> tuomov: yes
05:51:07 * Philippa_ wonders if she should stop prodding Uncle Bob on clf...
05:51:28 <tuomov> so it comes from that writing.. is there a symbol for sch? like ß=ss?
05:51:31 <basti_> TheHunter: there is no letter which would correspond to it. I think english does it too, but i haven't listened THAT close to native speakes until now
05:51:45 <basti_> tuomov: no its written sch, and its pronounced as english "sh"
05:51:51 <tuomov> how's that pronounced as by the way as an alphabet?
05:51:54 <Philippa_> ah well, he did cause me to have or remember a minor insight about type classes and refactoring
05:52:04 <TheHunter> basti_, a word where this thing is especially noticable?
05:52:40 <basti_> TheHunter: any that starts with a vowel.
05:52:44 <basti_> http://www.phonetik.uni-muenchen.de/Lehre/Skripten/TRANS1/TRANS1Plosive.html
05:52:49 <basti_> there is an .au file of the sound
05:54:02 <TheHunter> basti_, ok, thanks.
05:54:18 <basti_> oh they write that it's not in every place.
07:00:15 <xerox> @get-definition X
07:00:15 <lambdabot> X = \x.x K S K
07:01:10 <wilx> @get-definition f
07:01:11 <lambdabot> f not defined
07:01:14 <wilx> :)
07:21:46 <xerox> @eval S I I 1
07:21:47 <lambdabot> type error
07:56:32 <foxy_> Is there a Cabal expert about?
07:57:55 <musasabi> Just ask, it is always better than asking to ask.
07:58:21 <PerlJam> I know something of the perl6 cabal, but somehow I don't think that's what you have in mind :-)
07:59:11 * musasabi has packaged a few libraries and knows the source a litle bit, but by no means I am an expert in it.
08:05:34 <foxy_> is the $topdir reference in Cabal packages supposed to be resolved before the librarydirs value is returned in Distribution.* ?
08:29:10 <CosmicRay> autrijus: ping
09:05:43 <Arsilan> Hey jeg vil godt starte en diskusion
09:05:55 <Arsilan> Er det godt at halshugge folk
09:06:04 <Arsilan> hvilket teirister jo gør idag
09:07:15 <Arsilan> OK jeg starter, jeg syntes det er godt
09:07:36 <Arsilan> fordi usa angreb irak og derfor gør teristerne kun gængæld
09:08:02 <Arsilan> det er fair play, krig er aldrig ærlig, sådan er krigens grusomheder
09:09:03 <Arsilan> er inegn der har lyst til at deltage i diskusionen
09:09:21 <Arsilan> der er anderledes end jeres kedelige snak om mega bit og tiger bit
09:10:16 <xerox> I don't know how many people will understand you in whatever language are you speaking, sorry.
09:10:36 <Arsilan> Oh ok, I wnated to start a debate
09:10:39 <tuomov> looks like danish..
09:10:45 <vidvandre> it's danish
09:10:52 <Arsilan> yes,
09:11:10 <vidvandre> why would you start such a discussion in #haskell ?
09:11:20 <Arsilan> I think its ok that teorists cut the thoat of thjir hostages
09:11:49 <Arsilan> Because its funiere then the boring debate you have about giga bit and tiger bit and so one
09:12:03 <Arsilan> on
09:12:50 <Arsilan> SO what do you gyes think that it is ok
09:13:29 <vidvandre> it is still the wrong channel IMO..
09:14:16 <CosmicRay> ops?
09:14:17 <tuomov> yeah, from what little I could understand from the text with my rusty swedish..
09:14:22 <Arsilan> probebly, but isent it a interesting debate
09:14:38 <tuomov> I meah, yeah, wrong channel
09:14:43 <tuomov> not yeah to the question posed
09:16:27 <Arsilan> Thank you,
09:16:49 <Arsilan> But dosn't it even interest you these stuff
09:18:18 <jlouis> Arsilan: Well, #terrorist-politics might care. I do not think #haskell does, however interesting that debate might be
09:18:51 <Arsilan> ok,
09:20:09 <Svrog> hi
09:21:13 <Svrog> has anyone here tried to recompile ghc 6.4 on os x 10.4?
09:21:25 <Svrog> i'm having some problems with the mangler
09:22:18 <Igloo> If you have gcc 4 you'll want ghc from CVS
09:22:54 <Svrog> i tried it with both gcc 4 and 3.3 and i get the same problem
09:23:09 <Svrog> undefined symbol ___DISCARD__
09:24:29 <CosmicRay> ooo, did I just see ghc 6.4 hit sid?
09:25:22 <Igloo> Do you read -changes or something?
09:25:30 <Svrog> i haven't had the chance to really look at the mangler but from what i could tell it's supposed to remove all lines containing that particular symbol from the asm code so i tried compiling a simple c file with just 1 function and ran the script on the resulting asm code - it didn't seem to remove all instances of ___DISCARD__ from the code
09:25:35 <CosmicRay> no, but I'm subscribed to ghc and hugs on the pts
09:25:40 <Igloo> Ah, right
09:25:47 <CosmicRay> Igloo: anyway, SWEET.  thanks.
09:32:19 * CosmicRay downloads the source to build it for amd64.
09:35:33 <aleator> What is a good way of displaying images with haskell? Anything that takes a (foreign) pointer to a pixelbuffer?
09:36:19 <Igloo> If you want to generate images then writing out ppm files and using other tools to convert them is easiest
09:36:34 <Igloo> If you want to actually put them onscreen yourself then you probably want wxhaskell or gtk2hs
09:39:09 <aleator> I have homegrown thingy for manipulating bitmaps and haskell wrapper for that. I would need something interactive for displaying changing image.
09:39:24 <aleator> I fail to find means to do this in gtk2hs.
09:41:28 <dcoutts_> aleator, there is a way to do this in gtk2hs but it hasn't made it to a released version yet.
09:42:09 <dcoutts_> see http://haskell.org/gtk2hs/archives/2005/04/28/hray-screenshots/ for proof that such a thing can be done
09:43:02 <dcoutts_> boegel's HRay program generates a list of colours which we then splat into to a PixBuf and display that onscreen
09:43:14 <dcoutts_> I've also got a demo that does animation in this manner
09:43:43 <dcoutts_> hopefully this stuff will be in the next release 0.9.8 or with a little more hassle you can get it working now
09:43:52 <aleator> dcoutss_: Ah. Do you need to serialize to haskell list in between?
09:44:16 <dcoutts_> aleator, no, that was just the way that boegel's ray tracer emitted its results
09:44:51 <dcoutts_> the PixBuf is just an array of pixels
09:45:05 <CosmicRay> Igloo: do you know if ghc 6.4 is registerized on amd64?
09:45:31 <aleator> dcoutts_, That sounds nice. I will look it up. Thanks.
09:45:32 <Igloo> It's not
09:45:37 <CosmicRay> rats
09:45:45 <CosmicRay> jaffacake is working on that though, iirc?
09:46:05 <Igloo> yup
09:46:35 <Igloo> I think 6.4 might have some support, but it's not enabled in the deb
09:46:40 <dcoutts_> aleator, you can check the gtk2hs-users mailing list for the discussion over boegel's HRay example, or just ask me if you need the code or examples
09:48:08 <dcoutts_> we were using as a primitive a function which draws a full Pixbuf by taking a callback of type (Int -> Int -> (Word8, Word8, Word8))
09:48:54 <dcoutts_> we figured this was faster than providing arbitary writing & indexing operations
09:49:39 <dcoutts_> if necessary it could be made faster still by using (Int -> Int -> (#Word8, Word8, Word8#)) or (Int -> Int -> Word32)
09:51:44 <aleator> dcoutts_, Ok. I found the discussion. Seems like what I want. Thanks.
09:52:40 <dcoutts_> aleator, great. feel free to ask on the mailing list if you have any issues / questions.
09:53:55 <aleator> dcoutts_: Sure.
09:54:03 <autrijus> CosmicRay: pong
09:57:01 <sylvan> hmm.. trying to build wxwidgets, configure fails with "checking if the C++ compiler requires -ext o... configure: error: cannot figure out if compiler needs -ext o: cannot compile
09:57:01 <sylvan> See `config.log' for more details.
09:58:16 <CosmicRay> hi autrijus
09:58:25 <CosmicRay> wanted to talk to you about your licensing question
09:58:34 <CosmicRay> did you get my brief e-mail from last night?
09:59:02 <autrijus> CosmicRay: yeah I did
09:59:28 <CosmicRay> ok.  first thing I want to do is make sure you're not wanting to use any GPL'd modules that others wrote, since it's not in my power to relicense those
09:59:49 <CosmicRay> those are mostly Peter Simons' work, such as Hsemail, IIRC
10:00:19 <autrijus> sure. and yeah, it'd be fine to use them as modules
10:00:31 <autrijus> i.e. optional, nonmandatory modules that the user has to link for herself
10:00:38 <CosmicRay> ah
10:00:40 <CosmicRay> ok.
10:00:41 <autrijus> but not depended upon by the pugs proper
10:00:54 <CosmicRay> in that case, next question is, do you know if LGPL is compatible with your Artistic 2.0?
10:01:13 <CosmicRay> I've never encountered Artistic 2.0 before, so I'm just trying to figure out what the most compatible approach is
10:01:15 <autrijus> yes, I'm pretty sure it is. so if you relicense as LGPL, I can simply use it.
10:01:31 <CosmicRay> ok, that would probably make it easiest on everyone then, since there is already LGPL code in there.
10:01:39 <autrijus> that would be wonderful indeed.
10:01:47 <CosmicRay> what I will probably do is make a separate LGPL branch that has all the GPL'd code from others pulled out
10:02:18 <autrijus> Pugs made heavy use of hs-plugins since dons relicesed it under lgpl, too
10:02:18 <CosmicRay> is darcs or svn your primary vc for pugs?
10:02:36 <CosmicRay> oh sweet, so you've already got lgpl in there too.l
10:02:41 <autrijus> svn currently is, but thanks to svk, replaying changes from one to another is not too troublesome.
10:02:48 * CosmicRay hates license proliferation and tries to avoid it when possible
10:02:50 <CosmicRay> ok.
10:02:59 <CosmicRay> I was just curious since I use darcs for missingh.
10:03:12 <CosmicRay> I will probably be able to get that up yet today, and if not, this weekend for sure.
10:03:13 <autrijus> nod. I used darcs until Pugs 6.0.4 or something
10:03:45 <autrijus> but then it became apparent that svn is a better social choice... so I kept darcs as a mirror
10:04:13 <autrijus> that would be wonderful. thanks!
10:04:23 <CosmicRay> I also noticed that you are using ghc 6.4.  musasabi recently ran some compile testing to make sure missingh builds with 6.4, so you should be good there, but he was saying there was some trouble with my build scripts for the unit tests with 6.4 due to changes in the way it handles testing
10:04:44 <CosmicRay> 6.4 just hit sid today so I may be able to fix that this weekend, but if not, it would be about a week until I get that due to a vacation next week
10:04:55 <CosmicRay> svn better social choice in perl circles, you mean?
10:04:59 <CosmicRay> s/svn/svk/
10:07:12 <CosmicRay> s/it handles testing/it handles packages/
10:07:50 <autrijus> partly that, but also the fact that we are approaching 100 committers soon
10:08:04 <autrijus> with many large-sized refactorings
10:08:10 <autrijus> and darcs was already showing signs of slowdown.
10:08:25 <CosmicRay> bummer
10:08:37 <CosmicRay> igloo has been working on that, but yeah it does still have its weak points
10:08:41 <autrijus> *nod*
10:08:59 <autrijus> so, not against darcs -- I miss the identifier renaming thing -- but I chose the practical route :)
10:09:24 <CosmicRay> how is svk these days?  I tried it awhile back and found it rather awkward and buggy, and generally less useful than arch for distributed stuff.
10:09:26 <autrijus> (althought I did teach clkao and convinced him to implement patch dependency algorithm.)
10:09:29 <CosmicRay> but I know it was being worked
10:09:40 <autrijus> yeah. 1.0 is coming like, this week
10:09:46 <autrijus> much UI and stability work
10:10:00 <CosmicRay> good
10:10:10 <autrijus> after 1.0 there's plans to imitate even more of darcs's UI.
10:10:14 <CosmicRay> heh
10:10:28 <CosmicRay> have I heard rumors of svk supporting darcs as a native backend?
10:10:30 <autrijus> like the chunk navigation during interactive checkin, patch context based merge, etc.
10:10:51 <autrijus> there were plans, but I was too occupied to really write a darcs->revml converter.
10:11:01 <CosmicRay> ah.  well it would be cool.
10:11:13 <CosmicRay> will svk be cloning the spin-for-days-on-weird-conflicts also? :-)
10:11:58 <autrijus> no, svk's 3-way merge dependency analysis runs in O(n) time :)
10:12:45 <autrijus> if darcs one day does that, I will need to reevaluate my choice and maybe sit down and write the revml interop :)
10:16:36 <CosmicRay> hehe
11:07:23 <bourbaki> moin
11:17:53 * shapr throws lambdas
11:18:54 <shapr> Oejet: hey, can you create an author page?
11:19:33 <Oejet> shapr: I sure can, shapr.
11:19:52 <shapr> Oejet: Manuel Chakravarty wanted to talk to you about your tutorial but couldn't find your email address.
11:20:01 * Oejet hides.
11:20:06 <shapr> He liked it :-)
11:20:10 <shapr> I'll forward the email to you.
11:20:12 * Oejet runs
11:20:23 <Oejet> like hell
11:21:16 <shapr> Hey, wouldn't it be cool to see your name in the FFI docs as the original author of the included tutorial? :-)
11:21:29 <Oejet> Wow.
11:21:58 <shapr> Did you get the email?
11:22:53 <Oejet> Yes!
11:23:29 <Oejet> Ok, I'm glad he wanted Mr. Franksens suggestions included.
11:24:43 <shapr> kosmikus: Am I way too late to write up stuff for HC&AR?
11:26:01 <shapr> Philippa: hey, have you seen Alistair Bayley's in-progress article on TmrWiki? What's an OO Data Consumer?
11:26:25 <shapr> foo, blackdog is offline.
11:28:38 <shapr> Philippa: how close is the next version of Flippi? It looks like there will be a new wiki for lambda-the-ultimate.org devoted to refactoring the past posts from thread mode into document mode. Someone else suggested using an FP wiki and I'd like to suggest Flippi.
11:30:15 <jlouis> anybody here beside me who likes wmaker?
11:30:32 <shapr> CosmicRay: Is your fptools repo updated from cvs? Do you send patches back in the other direction?
11:30:38 <vegai> jlouis: aye!
11:31:11 <jlouis> vegai: I need ideas. Do you have some resources beside the default setup?
11:31:29 <vegai> do you mean themes or something fancier?
11:31:32 <shapr> Oh hey, I had an idea to use QuickCheck to instrument code for laziness detection, but I'm not sure if it'll actually work.
11:31:56 <jlouis> vegai: themes, primarily
11:32:10 <vegai> yeah, there's this great site... let me see if I have it in my bookmarks
11:32:37 <Oejet> shapr: Author page setup.  You can just send him my confirmation and email if you like.
11:32:49 <vegai> http://lonelymachines.org/wm_themes.html -- there you go
11:33:02 <jlouis> vegai: thanks
11:33:02 <vegai> I'm pretty sure that those are the most impressive ones out there
11:33:41 <vegai> some of them are, anyway
11:34:07 <shapr> Oejet: I think you should send him an email, and probably mention your future plans for the FFI tutorial. For example, maybe you plan on updating the tutorial for Issue Three?
11:34:38 <Oejet> shapr: Man, I knew there were some catch. :-)
11:35:00 * shapr grins evilly
11:35:04 * shapr laughs
11:36:30 <Oejet> Ok, I'll send him an email.  shapr, thanks for telling me.
11:37:09 <shapr> Good work deserves encouragement :-)
11:37:14 <musasabi> shapr: do you have anything written on the QuickCheck lazyness-thing?
11:37:47 <Oejet> Good work leeds to more more usually, not less.
11:38:10 <Oejet> s/more more/more work/
11:39:09 <shapr> musasabi: No, it's a vague idea about taking the derivative of input/output of top level functions. Does that make any sense?
11:39:28 <shapr> Oejet: Hah, only if you choose to do so :-) But it definitely improves your reputation.
11:39:46 <shapr> If you want to do a PhD or get a job in Open Source, that sort of work is a good investment.
11:41:34 <jlouis> vegai: thanks, looks nice
11:41:41 <tuomov> hmm.. freshmeat editor totally ruined the first sentence of my riot announcement
11:43:06 <eslio> is it necessary to download gcc to install ghc?
11:43:17 <eslio> the msi package
11:50:35 <musasabi> shapr: I don't quite know how that can be done with functions being opaque and all.
11:52:49 <musasabi> shapr: functions can have different degrees of lazyness depending on the input so that can make things hard.
12:03:13 <CosmicRay> shapr: I do update it from cvs approximately every 24 hours, but patches are not sent back to cvs right now
12:03:50 <CosmicRay> hey hey!  ghc6.4 is built!
12:18:42 <kosmikus> shapr: (hcar) better now than never :)
12:19:51 <kosmikus> JohnMeacham: are you there?
12:20:28 <CosmicRay> hmm, three people in a row responding to questions from shapr in scrollback, while shapr is not here :-)
12:24:30 <kosmikus> tuomov: apropos riot -- no updates for hcar?
12:24:42 <Oejet> shapr: Email sent to Mr. Chakravarty.
12:24:56 <kosmikus> CosmicRay: 4
12:27:38 <CosmicRay> heh
12:28:19 <tuomov> Oh, forgot about it. I just finally released a new version although not much has happened lately
12:28:45 <Heffalump> if I get an AMD64 box and put Debian-AMD64 on it, can I easily use it to build i386 packages too?
12:29:06 <kosmikus> tuomov: can you write an update then, please?
12:29:45 <CosmicRay> Heffalump: yes, you can set up an i386 chroot on it
12:29:48 <tuomov> there isn't much to write about...
12:30:23 <tuomov> maybe a note on hs-plugins..
12:30:26 <kosmikus> tuomov: just take the old version and add a sentence that you released a new version any why its better than the old one?
12:30:58 <kosmikus> tuomov: or that, yes; it's really not about quantity, but if a project is alive, it's good to reflect that in the report
12:33:02 <tuomov> sent.
12:33:45 <kosmikus> thanks
12:41:38 <a5_> hi a5
12:42:01 <a5> hi
12:42:31 <a5> has anyone tried using HSX11?
12:43:11 <kosmikus> CosmicRay: ping
12:45:14 <a5> ah, Graphics.X11...
12:45:57 <CosmicRay> kosmikus: hi
12:46:16 <kosmikus> CosmicRay: your MissingPy entry looks incomplete
12:47:04 <CosmicRay> kosmikus: oh?  hmm.
12:47:13 <CosmicRay> I don't have a copy of it anymore, can you shoot me one/
12:47:31 <kosmikus> sure
12:47:34 * shapr boings
12:47:47 <CosmicRay> shapr: lots of stuff for you in scrollback :-)
12:47:52 * shapr reads
12:48:57 <kosmikus> CosmicRay: sent
12:49:20 <CosmicRay> kosmikus: thanks
12:52:22 <shapr> musasabi: what about a separate Lazable instance that's a counterpart of Testable?
12:52:28 * shapr thinks that's a very silly name.
12:52:45 <shapr> kosmikus: right, I'll whip up some entries and send them in.
12:52:49 <shapr> Oh I should make one for TMR!
12:52:58 <shapr> Oejet: excellent thanks!
12:53:17 <shapr> tuomov: want to write about Riot for TMR?
12:54:21 <shapr> Does anyone know Esa Pulkkinen's email address?
12:54:43 <shapr> Aha, Google to the rescue!
13:00:15 <kosmikus> shapr: yes, TMR is probably the most important entry you have to write :)
13:02:59 <shapr> Speaking of which, do you know of anyone I could recruit for a Generic Haskell overview article? I suspect you already have enough stuff to do at the moment, who's doing GH nowadays?
13:03:43 <CosmicRay> kosmikus: sent you a fix, thanks
13:03:43 <shapr> Oh, I could ask Claus Reinke for overview articles of FunWorlds and/or HaRe.
13:03:57 <kosmikus> shapr: you could ask dblhelix
13:04:06 <shapr> Excellent, thanks :-)
13:04:12 <CosmicRay> hmm, any swedes in here?
13:04:27 <shapr> Do I count?
13:04:37 <Oejet> Do I?
13:04:46 <CosmicRay> shapr: close enough :-)   http://changelog.complete.org/node/3
13:04:55 <CosmicRay> I was reminded of that as I'm packing for camping next week.
13:04:57 <kosmikus> CosmicRay: thanks
13:05:13 <CosmicRay> Oejet: hmm, you're danish, right?  maybe you'll get a good laugh :-)
13:05:44 * shapr laughs
13:06:29 <shapr> That's really funny.
13:06:35 <CosmicRay> :-)
13:07:08 <tuomov> shapr: what is there to write about?-)
13:07:28 <CosmicRay> shapr: you probably know the type of lantern that they're talking about, the kind that coleman invented in like 1906
13:07:31 <tuomov> a small curses tutorial?
13:07:36 <tuomov> (I should update riot to hscurses, btw...)
13:07:43 <CosmicRay> pour in some gasoline, pump up the pressure, and there ya go.  brightness.
13:07:45 <shapr> Yesterday I formed a theory that the high incidence of teenagers who consider Sweden overly capitalistic and go join the Red Front is actually a reaction against Sweden being safe to the point of boredom.
13:07:55 <CosmicRay> heh
13:07:58 <shapr> tuomov: oh, good idea!
13:08:31 <CosmicRay> what is the Red Front?
13:08:37 <shapr> It's the communists.
13:08:40 <CosmicRay> ah.
13:09:11 <shapr> Their principle activity seems to be sticking up posters that say "US out of Iraq!" and "Stop Us Imperialism now!"
13:09:13 <CosmicRay> over here, the fundamentalists would probably think it has something to do with being gay.
13:09:18 <CosmicRay> heh
13:09:39 <CosmicRay> I hate it when Kansas gets on slashdot.
13:09:43 <CosmicRay> it is *never* for anything good.
13:09:50 <shapr> What I find amazing is that the Communists here are xenophobic, extremely conservative, want all the foreigners out of the country, etc etc.
13:10:15 <CosmicRay> hmm, sounds like the republicans, hmm hmm
13:10:16 <tuomov> "communists"
13:10:17 <shapr> Ya know, Sweden for Swedes and all that.
13:10:36 <tuomov> there was this funny "national bolsheviks" site somewhere..
13:10:38 <shapr> Funny thing is that real Swedes are actually the Sami who keep getting their land taken away from them.
13:10:56 <shapr> Just like native americans in the USA.
13:11:27 <CosmicRay> yeah, the usa is one of the few places where just who the natives were is clear-cut, and of course the anti-immigration forces are just as much anti-native
13:11:45 <CosmicRay> try to figure out who the real germans or the real british are and you're in for a real treat :-)
13:12:05 <shapr> It's pretty clear cut here in Sweden as well.
13:12:16 * shapr shrugs
13:12:28 <CosmicRay> was sweden old norse country too?
13:12:29 <tuomov> Norway and Finland too
13:12:34 <shapr> The whole thing is obviously silly, but the teenagers haven't noticed that yet.
13:12:47 <tuomov> And the Sami extend to parts of Russia as well
13:13:02 <shapr> In my less than humble opinion, if these teenagers really wanted to make the world a better place they should get out and help the people in their neighborhood.
13:13:38 <shapr> That's the kind of thing that really does make a positive difference, and is much more likely to spread to others friends and neighborhoods.
13:14:03 <CosmicRay> right.
13:14:14 <CosmicRay> like bush is going to listen to a bunch of teenage swedish communists.
13:14:48 <CosmicRay> the whole idea sounds like something for a great comedy involving the SNL cast :-)
13:15:02 <shapr> You're right, it does. I hadn't thought ofthat.
13:15:06 <CosmicRay> heh
13:16:38 <shapr> There's a swedish word that's something like "sticker pushers" that means someone who puts up posters like this. I want to print up a bunch of palm sized stickers that say "Stop sticker pushers!" and put them on top of these Red Front posters.
13:16:39 * sbeyer learned some basic words/phrases/grammar Swedish today
13:16:49 <sbeyer> and you're talking about swedish
13:16:51 <sbeyer> .o( funny (
13:16:52 <shapr> hej sbeyer, hur mår du?
13:17:00 <shapr> Jag bor i Sverige, var bor du?
13:17:18 <CosmicRay> sigh, time for me to run, alas
13:17:25 <sbeyer> shapr, Jag bor i Tyskland ;)
13:17:32 <shapr> cya next time CosmicRay! Is your camping starting today?
13:17:37 <CosmicRay> shapr: probably monday
13:17:44 <shapr> Ah col.
13:17:47 <CosmicRay> shapr: going on a camping supply run today though
13:17:49 <shapr> Sounds like fun.
13:17:55 <shapr> Oh hey!
13:17:55 <sbeyer> shapr, and I'm quite well ;) *G*
13:17:58 <CosmicRay> shapr: coleman world HQ is an hour drive from my house :-)
13:18:02 <shapr> If you're feeling rich, check todays blog entry from me.
13:18:10 <shapr> I found this cool tools page...
13:18:18 <shapr> Wow, awesome!
13:18:40 <CosmicRay> kk.org?
13:18:41 <shapr> sbeyer: Min sambo kommer från Tyskland också.
13:18:44 <shapr> Yes, you know it?
13:18:46 <CosmicRay> ahh I see it
13:19:13 <CosmicRay> shapr: no, I was just confused at first cuz it looked like a blog
13:19:14 <CosmicRay> looks cool
13:19:18 <sbeyer> shapr, cool *G*
13:19:33 <shapr> It is a blog actually, but it's a cool tools blog that's a collection of submissions from others.
13:19:37 <CosmicRay> anyway, /me afks
13:19:38 <CosmicRay> cya
13:19:40 <shapr> cya
13:19:45 * shapr hops cheerfully
13:20:00 <a5> hey you know how C won't let you subtract pointers, only add them
13:20:07 <a5> can i have types like that in haskell?
13:20:12 <shapr> Can you add negative numbers in C?
13:20:16 <KrispyKringle> of course.
13:20:24 <sbeyer> shapr, I'm just walking through the Emacs tutorial so I don't want to talk Swedish now, but it's a nice language.
13:20:30 <shapr> Ok
13:20:31 <KrispyKringle> a5: it's not that C doesn't let you subtract pointers. it's that pointers are unsigned.
13:20:47 <a5> oops i mean vice-versa
13:20:53 <a5> it won't let you add them
13:21:05 <KrispyKringle> since adding signed integers works just the same as unsigned in assembly, there's no, you know, issue.
13:21:17 <KrispyKringle> a5: what are you asking?
13:21:36 <a5> if you try to add pointers i believe it says illegal pointer arithmetic
13:21:40 <KrispyKringle> can you create a data type that holds a numerical value but that can't be added?
13:21:43 <KrispyKringle> you can add pointers.
13:21:43 <a5> because pointers don't form a group
13:21:45 <KrispyKringle> people do it all the time.
13:21:53 <KrispyKringle> don't form a group? im not sure what you mean.
13:22:04 <tuomov> add pointers all the time?
13:22:08 <tuomov> I've yet to see such done
13:22:16 <tuomov> add pointer and integer, that's another matter
13:22:21 <KrispyKringle> tuomov: oh, that's what i meantl.
13:22:36 <KrispyKringle> yeah, there's no reason toa dd a pointer to another pointer, but you can certainly do it, i'd think.
13:22:39 <KrispyKringle> ill try now.
13:23:01 <a5> can't do it
13:23:12 <a5> error: invalid operands to binary +
13:23:33 <KrispyKringle> cat: /home/dan/Desktop/foo.c: No such file or directory
13:23:35 <KrispyKringle> oops
13:23:39 <KrispyKringle> cat ~/foo.c
13:23:42 <KrispyKringle> doh
13:23:51 <KrispyKringle> #include <string.h>
13:23:51 <KrispyKringle> #include <stdlib.h>
13:23:51 <KrispyKringle> #include <stdio.h>
13:23:51 <KrispyKringle> unsigned long val = 31337;
13:23:51 <KrispyKringle> unsigned long *lp = &val;
13:23:53 <KrispyKringle> int main(int argc, char **argv) { unsigned long **lpp = &lp, *tmp; char
13:23:56 <KrispyKringle> 	buf[128];
13:23:58 <KrispyKringle> 							if (argc != 2) exit(1);
13:24:01 <KrispyKringle> 									strcpy(buf, argv[1]);
13:24:03 <KrispyKringle> 											if (((unsigned long) lpp &
13:24:06 <KrispyKringle> 														0xffff0000) !=
13:24:08 <KrispyKringle> 													0x08040000) exit(2);
13:24:11 <KrispyKringle> 													tmp = *lpp; **lpp =
13:24:13 <shapr> Man, I think suggesting a new language on LtU was a bad idea.
13:24:14 <KrispyKringle> 														(unsigned long) &buf;
13:24:16 <KrispyKringle> 													*lpp = tmp;
13:24:18 <KrispyKringle> 																			exit(0);
13:24:21 <KrispyKringle> }
13:24:23 <KrispyKringle> holy crap!
13:24:26 <KrispyKringle> that's not what i meant to cat. sorry.
13:24:28 <KrispyKringle>  void main(){
13:24:31 <KrispyKringle>         char * foo, bar;
13:24:33 <KrispyKringle>         foo = 0; bar = 1;
13:24:35 <KrispyKringle>         printf("%d", (foo + bar));
13:24:38 <KrispyKringle>         return;
13:24:40 <KrispyKringle> }
13:24:43 <KrispyKringle> that's what i meant to cat.
13:24:46 <KrispyKringle> anyway, you can do that, a5 .
13:24:51 <a5> i know
13:25:26 <KrispyKringle> so...
13:25:33 <a5> you haven't added pointers
13:25:40 <a5> you added an integer to a pointer
13:25:51 <KrispyKringle> foo and bar are both char pointers, no?
13:26:08 <KrispyKringle> oh, they aren't.
13:26:09 <KrispyKringle> whoops.
13:26:13 <a5> whoops
13:26:16 <KrispyKringle> :P
13:26:20 <a5> sorry
13:26:22 <KrispyKringle> i try to avoid C when i can help it ;)
13:26:40 <KrispyKringle> anyway, you can still do it with a cast.
13:26:46 <KrispyKringle> though it's kind of pointless.
13:27:17 <KrispyKringle> anyway, you want a type that can be added to an Int, but not to another of its type?
13:28:28 <a5> http://tlau.org/glog/query.cgi?sender=&location=pub.comp.rant&body=&datestart=2005%2F5%2F6&dateend
13:28:51 <a5> uh wait
13:29:36 <KrispyKringle> that's over my head.
13:29:50 <a5> http://tinyurl.com/clu6b
13:30:25 <KrispyKringle> so what do you think the tinyurl people do with all their logs on who clicks on what urls?
13:30:45 <KrispyKringle> isn't that the same link?
13:30:59 <a5> i wasn't sure the first would work
13:31:12 <a5> anyway.
13:31:35 <a5> i guess it would be simple enough to do in a class though
13:31:52 <a5> the result of subtraction should be a member of Num
13:32:01 <a5> you should be able to add Num
13:32:18 <a5> and that's about all
13:33:50 <jlouis> pointers are, by definition, evil
13:34:23 <KrispyKringle> heh
13:34:24 <KrispyKringle> sounds about right
13:35:16 <a5> why? their types and arithmetic are interesting
13:37:12 <a5> http://math.ucr.edu/home/baez/torsors.html
13:49:38 <shapr> @yow !
13:49:39 <lambdabot> I'm dressing up in an ill-fitting IVY-LEAGUE SUIT!!  Too late...
13:51:11 <Paltas> jlouis, One of the good things about writing in haskell for the application programmer is that he get rid of these. :) Good evening mr. louis btw.
13:51:43 <shapr> Pamela Jones from Groklaw.net wrote an an lwn.net article on the subject of reverse engineering. It is terrifying. http://www.groklaw.net/article.php?story=20050504195319274
13:53:55 <shapr> On the good side, it seems that even microsoft is realizing that patent reform is needed.
13:53:56 <Oejet> jlouis: Yeah, pointers and concurrency.
13:54:25 <shapr> hoi goron
13:58:57 <Muad_Dibber> evening
13:59:17 <shapr> Wow, the UK charges 17.5% VAT on any commercial data that's digitally sent.
14:00:01 <shapr> hiya Muad_Dibber
14:01:39 <Heffalump> only if sent to an end-user, presumably.
14:01:44 <Heffalump> i.e. a consumer, not another business
14:02:06 <Heffalump> and that's just a standard principle of charging the same tax rate no matter what the means of delivery.
14:02:21 <Heffalump> They'd charge that if it was printed out and sent too
14:03:10 <shapr> Actually, not.
14:03:16 <shapr> http://www.theregister.co.uk/2005/05/05/commercial_data_sent_by_email_liable_for_vat/
14:04:58 <shapr> Printed data is not subject to the VAT, because stamps already have the tax built-in.
14:05:17 <Heffalump> that's just bizarre, but the anomaly is that the printed data is exempt
14:05:39 <shapr> Fax is exempt because you're paying VAT on the phone line.
14:05:49 <Heffalump> if they sent something with real physical value VAT would be payable too
14:07:02 <jlouis> Oejet: concurrency is not evil per se. It is concurrency with mutexes that kills
14:07:09 <shapr> Even worse, they can't get rid of it. That's gotta suck.
14:09:01 <tuomov> concurrency in the same address space is evil
14:09:53 <wagle> they can always get rid of it.  saying it can't be changed is bureaucratic bs
14:14:20 <shapr> I think the various corporate protection systems are having a lot of trouble with the internet.
14:15:34 <a5> there should be taxes on land, natural resources, and imports. period.
14:15:57 <shapr> I'm not convinced anyone has thought of decent system yet.
14:17:24 <Oejet> a5: Alot of people don't want a society like that.
14:17:37 <shapr> I do think that our current systems of government exhibit all the flexibilty of a million line COBOL program.
14:17:43 <shapr> y0 SyntaxNinja
14:17:49 <SyntaxNinja> hi
14:18:25 <a5> http://en.wikipedia.org/wiki/Henry_George
14:18:30 <Oejet> Are anyone working on a standard library for the STM monad?
14:18:32 <SyntaxNinja> shapr: heh
14:18:35 <shapr> Oejet: like what?
14:19:13 <shapr> Oejet: So um, once you've updated your FFI article, want to write an STM standard library article? ;-)
14:19:19 <shapr> I know that musasabi has written some neat STM code.
14:19:35 <Oejet> shapr: Like data structures and control structures.  I mean to take advantage of retry and orElse.
14:19:57 <goron> Fun for channel Haskell :) http://hackingthexbox.com/images/scarysmall.gif
14:20:17 <shapr> haha!
14:20:26 <shapr> goron: Have you seen the article on groklaw/lwn?
14:20:35 <goron> shapr: No
14:20:51 <shapr> Here it is - http://www.groklaw.net/article.php?story=20050504195319274
14:21:09 <shapr> It has some scary bits, but overall it's more about being informative so the real problems are uncovered.
14:21:32 <shapr> That's my favorite bit about groklaw, it gives detailed information to remove the panic on both sides of an issue.
14:22:01 <Oejet> shapr: Like tables and queues and stacks and lists.
14:22:02 <a5> hey you know how there's lists of unsolved problems in mathematics? we should publish a list of unimplemented programs in programming
14:22:26 <shapr> a5: problem is, someone would immediately patent each item.
14:22:29 <goron> shapr: What's lwn? I never saw this site before.
14:22:30 * shapr snickers
14:22:44 <shapr> Linux Weekly News, it's the best news OSS site I've seen.
14:22:56 <shapr> It's the only website to which I have a paid subscription.
14:23:37 <a5> shapr: but your discussing them is prior art
14:24:48 <shapr> a5: Not unless you've published that article in an academic journal.
14:24:55 <Oejet> musasabi: Did you write some neat STM code?
14:25:19 <shapr> That's the only way prior art works in the USA, and you only get one shot at breaking a patent.
14:25:47 <musasabi> Oejet: some STM code, but nothing very neat.
14:26:14 <shapr> That's one reason I'd like to get an ISSN number for The Monad.Reader. I think it would count as prior art then.
14:26:26 <a5> shapr: what? i don't believe that
14:26:43 <a5> what counts as an academic journal?
14:26:52 <goron> shapr: How can you have time to read all that *and* have your own company?
14:26:55 <Oejet> musasabi: Ah, I think I remember.  It was some time ago and you wrote a table data type.  But it was not very quick.
14:27:47 <shapr> goron: read all what?
14:27:59 <shapr> a5: Look it up.
14:28:11 <Heffalump> shapr: that's not true.
14:28:26 <Heffalump> google suggests that all you need is to prove that something was known by people in the US.
14:28:33 <tuomov> it is as far as the review process goes?
14:28:47 <musasabi> Getting ISSN is quite easy iirc.
14:29:04 <tuomov> (and even that may be too much hoped..)
14:29:06 <Heffalump> it's more restricted for prior art that was known abroad, and at that point "printed publication" seems to be the point
14:29:28 <shapr> There's lots of detail on this on groklaw.
14:29:37 <musasabi> Oejet: I only benchmarked alternative Map implementations based on various abstractions, Lemmih did the table stuff later.
14:29:44 <goron> shapr: I just have the impression, that you read/know a lot of a lot of different things. And since reading costs time=>you get the point.
14:30:02 <shapr> goron: Hyperactivity has its benefits.
14:30:27 <Heffalump> http://www.tms.org/pubs/journals/JOM/matters/matters-9106.html is quite good
14:30:45 <tuomov> that hacking the xbox pic isn't even a fake..
14:32:21 <musasabi> Getting ISSN is mostly filling web forms and then confirming things.
14:32:22 <shapr> Sadly, the search function isn't working on groklaw, so I can't find the article I read.
14:33:13 <shapr> Heffalump: so, written any cool code lately?
14:33:47 <musasabi> The most difficult parts are deciding a publisher and place of publication. (They want those even when they accept publications entirely on the net)
14:33:47 <Heffalump> not a huge amount, but some.
14:33:56 <Heffalump> Nothing of particularly general interest yet though.
14:34:12 <shapr> musasabi: I'd like to have .aq as place of publication.
14:34:19 <Heffalump> I have a friend who is going there
14:34:30 <shapr> I hear the beaches are sunny.
14:34:54 <Heffalump> anyway, if there is a real advantage to having TMR as a print publication, we can make an offer to print it out and post it to anyone who wants for some reasonable but not tiny amount
14:35:20 <Heffalump> doing that and keeping an archive of printed versions would probably be adequaet
14:35:48 <Heffalump> (I can't see anyone actually taking up the offer of having it sent to them, but if they did it wouldn't really be a problem)
14:36:07 <musasabi> .aq?
14:36:13 <tuomov> antractica
14:36:32 <musasabi> :-)
14:37:28 <musasabi> The place for getting ISSN is http://www.lib.helsinki.fi/julkaisuala/issn/issnloma.htm for Finland and http://www.kb.se/issn/issn1.htm for Sweden, I think other countries work the same way.
14:37:54 <musasabi> The swedish site is scary as I am understanding it.
14:45:20 <a5> shapr: do you have a link to information about prior art?
14:46:02 <a5> i've been looking to verify your statement but couldn't find any information
14:58:23 <a5> hi Jaap
14:59:20 <jaap> a5: hello... who's that?
14:59:51 <shapr> a5: Nope, I read it on groklaw, and the search engine is out of commission.
15:00:42 <a5> jaap: it's frederik
15:01:07 <jaap> a5: oic
15:01:45 * jaap needs to run off to class
15:02:28 <a5> bye
15:11:47 <shapr> Hah, scared him off!
15:12:07 <sbeyer> hm, new to Emacs, I'm a bit puzzling about haskell-mode
15:12:30 <shapr> goron: Anyway, if you want to see more random stuff that I read about check my blog. The subjects there are not limited to computers.
15:13:00 <goron> shapr: blog?
15:13:06 <goron> shapr: Address?
15:13:09 <shapr> http://www.scannedinavian.com/
15:16:55 <sbeyer> the type echo is nice, and C-c C-o for | otherwise = *...stillexperimenting*
15:17:34 <shapr> C-h b will show you useful bindings.
15:17:35 <a5> do i have an old version of haskell mode or is there a bug in treatment of "\"?
15:17:45 <a5> shapr: if it's not on the internet then it isn't true
15:18:13 <sbeyer> well, I'm sitll puzzling. Some "features" are either strange or don't work here ;)
15:20:01 <sbeyer> C-c C-.         haskell-indent-align-guards-and-rhs
15:20:10 <shapr> a5: Yes, that's an important part of truth :-P
15:20:13 <sbeyer> nothing happens :\
15:21:09 <shapr> Are you using haskell-mode 2.0?
15:21:15 <sbeyer> yes
15:21:51 <sbeyer> but the echo line tells me, that I'm pressing C-c . instead of C-c C-., maybe it's the xterm which causes the problem
15:22:10 <sbeyer> but M-x haskell-indent-align-guards-and-rhs also does nothing, except telling me, that I can use C-c C-.
15:22:26 <shapr> Do you have guards that aren't aligned?
15:22:35 <sbeyer> test x | x < 2 = "20"
15:22:35 <sbeyer> | x < 5 = "50"
15:22:35 <sbeyer>  | otherwise = "100"
15:22:44 <sbeyer> that's very unaligned ;)
15:22:53 <sbeyer> or do I expect something wrong?
15:22:58 <shapr> Good point, it doesn't work for me either.
15:23:08 <sbeyer> btw, the code doesn't make sense, it's just a test for haskell-mode ;)
15:23:47 <a5> shapr: no, i'll get 2.0
15:23:58 <sbeyer> mode is "[(Haskell Ind Doc)]" ;)
15:24:17 <shapr> aha, I got it to work
15:24:24 <sbeyer> how?
15:24:38 <shapr> First of all, you have to have the source code selected.
15:24:39 <sbeyer> the function help said something about START and END, but nothing special ;)
15:24:43 <shapr> It works on a region.
15:24:57 <shapr> test x     =
15:24:57 <shapr>  | x < 2   = "20"
15:24:57 <shapr>    | x < 5   = "50"
15:25:00 <shapr> That's what I used.
15:25:10 <sbeyer> hm
15:25:29 <shapr> Maybe it requires the equals sign because the mode isn't very smart?
15:26:10 <sbeyer> how do I make a region? (thought by setting a mark using C-Space... the region between mark and current cursor position is the wanted "region" - am I wrong?)
15:26:55 <shapr> Yup, that's right.
15:26:57 <sbeyer> (I usually use vim *g*) ;)
15:28:03 <sbeyer> shapr, your example works
15:28:42 <shapr> yay
15:29:01 <shapr> Not that I actually know why it works.
15:29:22 <sbeyer> hm
15:29:26 <sbeyer> disappointing ;)
15:30:18 <sbeyer> I expected it to auto-indent in a nice way and auto-adjust to get a nice Haskell source layout ;)
15:33:02 <sbeyer> but I also don't want to dig through nasty Emacs Lisp code ;)
15:33:51 <shapr> I'd rather dig through Yi
15:38:37 <sbeyer> Yi is?
15:39:05 <shapr> A Haskell editor that's not yet finished - http://www.cse.unsw.edu.au/~dons/yi.html
15:39:18 <shapr> It's a lot like vi, but it's totally pluggable and has some emacs support.
15:39:35 <sbeyer> hm, I don't want to use different editors for each language
15:39:53 <shapr> Yi will be a multilanguage editor when it's ready.
15:40:03 <sbeyer> I want to use one editor for C, Ruby, Lisp, Haskell, Prolog, Java ... ;)
15:40:43 <shapr> Yes, I agree.
15:40:43 <vidvandre> yi doesn't compile with GHC 6.4 ?
15:41:19 <shapr> Right now I use xemacs. I think one of the flavors of emacs is the best choice for me, but I have some problems with all emacs that I don't think will ever be fixed.
15:41:27 <shapr> vidvandre: works for me.
15:41:44 <sbeyer> Right now I use vim ;) But the most thing vim does for me is syntax highlighting
15:41:49 <vidvandre> hmm.. I'll try again.. I tried a while back
15:41:56 <sbeyer> even .emacs looks better in vim than in Emacs
15:42:08 * shapr grins
15:42:19 <vidvandre> aha.. ghc-6.4: unknown package: plugins
15:42:59 <sbeyer> the only Emacs Lisp function Emacs highlights is "if"... vim highlights the parentheses and the other functions, too.
15:57:24 <vidvandre> shapr: made yi compile now.. should learn to read README files ;)
15:57:47 <shapr> :-)
16:06:03 <seebyr> but yi isn't written in haskell, is it? ;)
16:06:41 <shapr> Yes it is.
16:06:52 <sbeyer> hm
16:07:18 <sbeyer> now I'm curious ;)
16:07:38 <sbeyer> *download*
16:18:45 <yosemite> hi, I'm trying to use http://www.haskell.org/crypto in  ghci and it's encountering a problem
16:19:01 <shapr> What's the problem?
16:19:05 <yosemite> namely: Loading package Crypto-2.0.0 ... linking ... <interactive>: /usr/local/lib/Crypto-2.0.0/HSCrypto-2.0.0.o: unknown symbol `__stginit_Char_'
16:19:08 <yosemite> ghc-6.4: unable to load package `Crypto-2.0.0'
16:19:55 <shapr> I'll download cryptolib and try it.
16:20:09 <yosemite> this is ghc 6.4
16:21:25 <yosemite> I pulled it and NewBinary out of darcs today
16:21:35 <shapr> What's the darcs url for cryptolib?
16:22:12 <yosemite> should be http://www.haskell.org/crypto iirc
16:22:13 <yosemite> hold on
16:22:25 <yosemite> http://haskell.org/crypto/src/
16:22:27 <yosemite> that's it
16:22:42 * shapr gets
16:24:11 * shapr builds
16:24:29 <shapr> Foo, what's the NewBinary darcs url?
16:25:19 <sbeyer> hihi 'en ficka' (swedish) means a bag (and 'fickan' the bag)... in German 'ficken' means having sex ;)
16:25:48 <shapr> Yeah, lots of humor between languages.
16:26:25 <sbeyer> %)
16:27:06 <yosemite> darcs get http://www.n-heptane.com/nhlab/repos/NewBinary/
16:27:08 * shapr finds NewBinary
16:27:27 <shapr> Why does HTTP require crypto nowadays?
16:27:37 <yosemite> because of SSL whatnot
16:27:44 <shapr> Oh
16:28:19 <sbeyer> shapr, When I'm in Sweden and I'm buying stuff and the saleswoman asks me, if I want a bag and I understand, if I want to have sex... *imagine* ;)
16:28:32 * shapr grins
16:28:39 <shapr> yosemite: did you get NewBinary to build with 6.4?
16:28:53 <shapr> Do you have a working Setup.cabal for NewBinary?
16:29:25 <yosemite> oh yeah
16:29:27 <yosemite> hold one
16:29:35 <yosemite> sorry for the hoops
16:29:55 <yosemite> http://www.haskell.org/crypto/downloads/NewBinary.cabal
16:30:00 <SyntaxNinja> cabal!
16:30:38 <yosemite> so it would be handy if cabal could chase down deps like the perl CPAN thingy thing does
16:32:16 <shapr> yosemite: that's happening soon.
16:34:41 <yosemite> neato
16:35:02 <a5> ocaml has man pages
16:35:18 <sbeyer> shapr, what's the right swedish word for "to want"? vilja? viller?
16:38:13 <shapr> http://www-lexikon.nada.kth.se/skolverket/sve-eng.shtml
16:38:25 <shapr> Though you may want the German dictionary :-)
16:39:11 <shapr> SyntaxNinja: By the way, I'd like to say that cabal has made my life SO MUCH EASIER.
16:39:39 <sbeyer> shapr, thank you ;)
16:43:22 <SyntaxNinja> shapr: yay!
16:43:23 * shapr builds http just for entertainment
16:44:05 <shapr> My only feature request is that I'd like to be able to do runghc Setup.hs configure build install
16:47:15 <shapr> hiya dbremner
16:52:20 <shapr> yosemite: What are you loading into ghci?
16:53:21 <dbremner> shapr - hello
16:53:28 <yosemite> ghci RSATest.hs
16:53:33 <yosemite> then running the main function
16:54:43 <shapr> aha
16:55:01 <shapr> I'd guess that means cryptolib wasn't built for interactive use.
16:55:57 <yosemite> I see
16:56:09 <shapr> Most libs can be built for interactive use.
16:56:15 * shapr pokes around inside crytpolib
16:56:19 <yosemite> so I presume there is a way to tell cabal that I want that?
16:56:45 <shapr> I don't remember how to do that off the top of my head, but you can probably look at the build part of the other modules to see what they did.
16:57:12 <yosemite> cool
16:57:14 <yosemite> thanks
16:57:22 <shapr> I wonder if it's just an import problem though...
16:57:42 <yosemite> you got the same error then?
16:57:45 <shapr> Yes I did.
16:57:55 <shapr> Loading package Crypto-2.0.0 ... linking ... <interactive>: /usr/local/lib/Crypto-2.0.0/HSCrypto-2.0.0.o: unknown symbol `__stginit_Char_'
17:00:06 <shapr> iirc, code that works when compiled is the .a file, and code that works in GHCi is a .o file created from that .a file.
17:00:11 <shapr> But I don't remember how to get there.
17:00:27 <yosemite> I got the same error trying to do stuff with http, the annoying bit is that it was for a non-SSL site
17:00:39 <yosemite> ahh
17:00:43 <shapr> I've used http interactively before, so I know it's possible.
17:00:59 <yosemite> well I can probably extract the .o using ar then
17:01:08 <yosemite> there's probably a better way though
17:01:25 <shapr> Yeah, and I used to know it too.
17:01:44 <shapr> Oh, ghc-pkg used to create .o files itself.
17:02:03 <shapr> You could pass an option like --create-ghci or something.
17:02:50 <yosemite> ahh
17:03:20 * shapr reads http://www.haskell.org/ghc/docs/latest/html/users_guide/index.html
17:05:20 <shapr> yosemite: aha! http://www.haskell.org/ghc/docs/latest/html/users_guide/packages.html#building-packages
17:05:47 <yosemite> shapr: thanks!
17:06:58 <shapr> Now I just have to figure out where the .a files went...
17:07:48 <yosemite> /usr/local/lib/ghc/... probably
17:07:54 <yosemite> well on my system at least
17:08:50 <shapr> ah yes, "ghc-pkg describe Crypto-2.0.0"
17:09:14 <shapr> hm, I've already got one.
17:09:22 <yosemite> that's a lot better than my poking around the direcotryies
17:10:52 <yosemite> me too
17:11:23 <yosemite> I'm wondering if it's some .o that isn't getting loaded for some reason that this one needs
17:11:29 <shapr> Yeah, seems likely.
17:11:32 <yosemite> and thus the missing symbol
17:13:17 <shapr> how do I get comm to pretend these guys are files? -> comm -3 `ls *.o` `ls *.a`
17:14:21 <yosemite> comm -3 <(ls *.o) <(ls *.a)
17:14:25 <shapr> oh
17:14:26 <shapr> neato
17:14:27 <yosemite> i think
17:14:39 <shapr> poo, I still need to trim chars.
17:14:50 * shapr just uses the old fashioned eyeball
17:15:14 <jlouis> yosemite: bash syntax, right?
17:15:23 <yosemite> yes
17:15:37 <yosemite> ghc-6.4/HShaskell98.o contains the missing symbols
17:16:44 <yosemite> jackpot: http://www.haskell.org/pipermail/glasgow-haskell-bugs/2004-September/004341.html
17:17:23 <shapr> Aha
17:17:35 <yosemite> or close to the solution
17:18:23 <yosemite> http://www.haskell.org/pipermail/glasgow-haskell-bugs/2004-September/004343.html <-- ok how do I add a dep on haskell98?
17:20:19 <shapr> Add a PackageIdentifier
17:20:48 <sh10151> shelll
17:21:07 <shapr> shell what?
17:23:24 <shapr> I don't think you can add a dep on h98.
17:23:42 <shapr> yosemite: At this point, I'd suggest asking on the ghc-users mailing list. I must be missing something obvious.
17:23:53 <shapr> But I don't know what.
17:24:23 <shapr> I read the docs, but there's no mention of GHCi
17:25:12 <yosemite> hmm
17:25:15 <yosemite> ok thanks shapr
17:28:45 <shapr> If you find out, now I want to know too :-)
17:29:12 <shapr> You may also want to send email directly to Dominic.
17:45:43 <yosemite> shapr: success
17:45:46 <yosemite> sort of
17:45:47 <shapr> w00
17:45:49 <shapr> What did you do?
17:46:00 <yosemite> I just hacked the package.conf file
17:46:22 <yosemite> added PackageIdentifier {pkgName =         "haskell98", pkgVersion = Version {versionBranch = [1,0], versionTags =         []}}
17:46:39 <yosemite> in the depends section for the Crypto package
17:53:50 <shapr> Amazing.
17:55:44 * wagle looks foolish looking up to see what shapr is looking at
17:56:24 <shapr> yosemite: awesome!
17:56:35 <shapr> Did you say you had a similar problem with HTTP?
17:57:05 <yosemite> it was the same problem with crypto
17:57:11 <yosemite> it was all Crypto's fault
17:57:19 <yosemite> it all works now
17:57:47 <shapr> spiffy!
17:59:05 <shapr> yosemite: btw, are you writing something interesting?
18:01:30 <yosemite> not yet
18:01:41 <yosemite> still feeling out haskell and these libraries
18:01:53 <shapr> Anything you haven't found yet?
18:02:12 <yosemite> no, not yet.
18:02:44 <yosemite> still figuring how to shuffle around data types, looking at some other code to see best practices
18:02:50 <yosemite> the wiki helps too
18:02:53 <shapr> If you can't find a particular library, I may be able to help.
18:03:08 <shapr> Have you seen The Monad.Reader?
18:03:29 <yosemite> yes I found that today
18:03:33 <yosemite> been browsing it
18:03:56 <yosemite> last week I was a bit productive and got a little configuration file reader together with Parsec
18:04:10 <shapr> Sounds useful.
18:04:45 <shapr> If you want to compare to some other config file implementations, I think both ginsu and MissingH have one.
18:04:54 <yosemite> cool
18:05:16 <shapr> Parsing was the killer app of Haskell for me when I started.
18:05:31 <yosemite> this was a format that I used on some projects a few years ago so I have implemented it in a couple different languages
18:05:56 <shapr> I've written recursive descent parsers in Python, Java, and I think I wrote a parser in VB 3 or 4 long ago.
18:06:07 <shapr> After trying Parsec, I was hooked.
18:06:10 <yosemite> fun
18:06:13 <JohnMeacham> I asked this last night, but perhaps there is someone around now who can help. I am looking for a paper of thomas johnsson's called 'Analysing Heap Contents in a Graph Reduction Intermediate Language' published in 91. It used to be on his chalmers web site, but now can't be found anywhere I looked on the internet. the filename was analysing-heap-contents.pz.gz. if anyone has a copy, that would be great.
18:06:15 <yosemite> yeah parsec is nice
18:06:27 <reffie> so when's the thirrd monad.reader coming out :PP
18:06:46 <shapr> reffie: You'll have your article ready for TMR3, right?
18:06:47 <yosemite> today is the first day I've used ghci, I was using hugs up to now
18:06:58 <reffie> ehm.. of course...
18:07:09 <shapr> JohnMeacham: tried scholar.google.com and citeseer?
18:07:50 <JohnMeacham> shapr: yup. google links to the (dead) chalmers site.
18:08:16 <JohnMeacham> shapr: and had a mangled unreadable html google cache version, but not the original.
18:08:37 <yosemite> JohnMeacham: tried archive.org yet?
18:09:02 <reffie> arxiv.org?
18:09:11 <JohnMeacham> yosemite: no. I will give it a try.
18:11:32 <shapr> You could also ask John Hughes. If he doesn't have a copy he may know someone who does.
18:12:16 <shapr> hiya CosmicRay
18:12:27 * shapr is tempted to start a p2p research paper network.
18:14:07 <CosmicRay> good evening shapr
18:14:09 <CosmicRay> hah
18:14:16 <CosmicRay> shapr: base it on gopher
18:15:07 <yosemite> oh wow
18:15:14 <yosemite> ghci is much nicer than hugs
18:15:32 <yosemite> I can bind variables
18:17:09 * shapr agrees
18:18:56 <CosmicRay> I wish hugs supported that
18:19:07 <CosmicRay> I have never really grokked why it doesn't
18:19:16 <CosmicRay> otoh hugs is a much easier port usually
18:19:42 <JohnMeacham> Yay! archive.org to the rescue http://web.archive.org/web/20031119022037/http://www.cs.chalmers.se/~johnsson/  it seems like his page (or at least all his papers) should be archived somewhere on the main haskell site.
18:22:30 <dons> much easier.
18:23:00 <dons> though ghc is a lot better these days in that respect
18:27:50 <JohnMeacham> kosmikus: yes?
18:28:19 <yosemite> how do I get ghci to load a package module on the command line?
18:28:40 <yosemite> the manual isn't being too clear to me
18:31:29 <yosemite> nevermind
18:31:40 <yosemite> apparently I wasn't trying hard enough
18:54:20 <dons> @ghc
18:54:21 <lambdabot>  scavenge: unimplemented/strange closure type
18:54:37 <dons> hehe. that bug got fixed last week.
18:55:25 <shapr> @ghc
18:55:26 <lambdabot>  No explicit method nor default method
18:55:56 <dons> oh, that wouldn't be good.
18:56:25 * shapr throws lambdas
18:56:32 * mwc sighs as the greatest cop show on TV comes to a close.
18:56:50 <dons> Law and Order?
18:56:55 <dons> :P
18:57:00 <shapr> The Simpsons?
18:57:03 <mwc> Nah, I consider that a Lawyer drama
18:57:10 <mwc> 3rd Watchd
18:57:17 <dons> 1/2 Cop/1/2 Lawyer
18:57:19 * shapr has never heard of it.
18:57:36 <dons> the Order part is the cop show.
18:57:48 * mwc wonders if they get NBC in Sweden
18:57:59 <shapr> Probably. It would require me to look at the TV though.
18:58:06 <dons> hehe
18:58:20 <mwc> dons: yeah, but third watch is sort of a combined fire-fighter/paramedic/cop show. Very well done, compelling characters
18:58:33 <dons> yep, I know it. but the firefighter stuff threw me.
18:58:35 <shapr> I can watch TV but it requires effort, and I still can't do it if I haven't taken any ADHD meds. TV is just too slow.
18:58:39 <mwc> guess it's run its time though, all the original characters were dropping out like flies
18:58:50 <mwc> shapr: heh, I walked 5 km tonight. I'm beat.
18:58:54 <JohnMeacham> Reno 911?
18:59:08 <dons> still addicted to SVU. though these days I'm more obsessed with Battlestar Galactica
18:59:22 <mwc> It occurs to me that that's probably more than I've walked since I broke my leg
18:59:23 <yosemite> it's not even filmed in Reno
18:59:28 <mwc> dons: both are excellent shows
18:59:39 <mwc> Thank god neither are being cancelled
18:59:40 <shapr> I still haven't tried playing DVDs at 1.5 times the speed. I might actually enjoy that.
19:00:12 <mwc> shapr: it's great when Samuel L. Jackson sounds like a chipmunk
19:00:14 <dons> yeah, I was worried about Battlestar. plot too darck and multi-threaded. but there's a niche for such drama.
19:00:15 <shapr> heh
19:00:26 <JohnMeacham> I have decided that I dislike SVU and the normal one. now all I watch is criminal intent. The plots of all have gotten so absuld, at least CI seems self-aware that it is absurd. This is a flip-flop of my previous opinion.
19:00:44 <shapr> JohnMeacham: Is there a single collection of graph reduction algorithms somewhere?
19:00:51 <dons> oh, I thought Criminal intent was the one that has got absurd.
19:01:16 <dons> hmm. it is self-aware in that respect.
19:01:22 <JohnMeacham> dons: yeah, but it gave up on being preachy. I couldn't deal with absurd and preachy at the same time.
19:01:51 <JohnMeacham> shapr: I don't think so, but there should be.
19:02:02 <dons> they even make ironic remarks about the character's roles on occasion.
19:02:20 <dons> unlike, say, SVU.
19:03:21 <mwc> Law and Order: Trial by Jury might become good
19:03:26 <mwc> it's starting to hit its stride
19:03:38 <dons> oh, it's not in .au yet. a month or two.
19:03:53 <JohnMeacham> shapr: perhaps a wiki page where we collect information on all the different algorithms. There are quite a few interesting ones which arn't that popular because they havn't been used in production implementations.
19:04:01 <mwc> it starts out pretty rough
19:04:23 <mwc> It also shows that they're running out of good remixes of the Law and Order theme song
19:04:34 <dons> hehe
19:04:47 <dons> well, it's, what, 15 years old?
19:05:07 <JohnMeacham> shapr: we could probably make some sort of derivation graph, like STG derives from the G-machine. then there are the combinator ones which culminate in the TIM maybe? hmm..
19:05:10 <mwc> CI is all about the trial process, looks into jury selection tricks, all the sort of behind the sccenes legal stuff
19:05:22 <shapr> JohnMeacham: I've just suggested that LtU start up a wiki to refactor their massive threads into documents, maybe it could fit there?
19:05:42 <JohnMeacham> shapr: or on hawiki. or both :)
19:05:46 <shapr> I also recently suggested something like CPAN for automated proof checkers.
19:05:46 <mwc> JohnMeacham: graph reduction for whole program transformations?
19:06:19 <shapr> It seems that there are large libraries of recorded automated proofs, but you can't just import them, you have to google for them and install them in your flavor.
19:06:35 <shapr> Basically, automated proof assistants need cabal.
19:06:44 <JohnMeacham> mwc: well, graph reduction (I think) usually refers to the very abstract evaluation model for lazy programs.
19:07:11 <mwc> yeah, and hopefully figuring out how to crush it down optimally for code generation
19:07:23 <mwc> I don't know if that step qualifies with standard definitions
19:07:32 <shapr> The best thing about a graph reduction algorithm collection would be a meta reduction graph showing particularly efficient approches.
19:07:32 <JohnMeacham> where each node is an evaluable thunk, and evaluation replaces nodes representing applications into nodes representing the result of the application.
19:08:17 <JohnMeacham> What is the alternative to graph reduction I'd like to know?
19:08:36 <shapr> tree rewriting?
19:08:37 <JohnMeacham> Perhaps, SKI combinators? are those considered graph reduction?
19:09:07 <shapr> They're nearly the same thing, imho. But I have no proof to back that up.
19:09:53 <shapr> I would be surprised if there's not an easy way to turn graph into SKI and back again.
19:10:17 <JohnMeacham> Yeah, I think the distinctions here are mainly terminology and philosophically based.
19:10:49 <shapr> I keep meaning to go read up on all the stuff behind FP, but it's so much fun to actually do FP that I keep getting distracted.
19:10:50 <wagle> where does SKI form graphs?
19:10:51 <JohnMeacham> But I am by no means an expert. which is why we need a page on this :)
19:10:59 <mwc> I've started my Haskell compiler... I'm working on a fancy Lambda Yin-Yang logo.
19:11:04 * shapr grins
19:11:18 <wagle> i already have one somewhere
19:11:31 <wagle> Y and Lambda
19:12:01 <shapr> JohnMeacham: heey, have you ever heard of something like shape typing?
19:12:24 <shapr> Have I already asked you about this?
19:12:43 <JohnMeacham> shapr: yeah, there was a language based on shape typing talked about on the list a while ago.. fish? maybe?
19:12:48 <shapr> I suspect that what I want exists, but I think I have the wrong vocabulary.
19:13:39 <wagle> http://www.cs.indiana.edu/~wagle/trans-Y-lambda-yin-yang.gif
19:13:49 <JohnMeacham> I really liked Davie's book. it is the one that made haskell 'click' for me because it had a lot of the theoretical background too. too bad it is out of date so it can't be used to learn the language today.
19:14:32 <shapr> wagle: neato
19:14:45 <JohnMeacham> mwc: will we see mhc soon?
19:15:10 <shapr> A bunch of guys on lambda-the-ultimate.org have started to write their own language. I predict the main lessons learned will be social.
19:15:18 <shapr> hiya MachinShn
19:16:08 <JohnMeacham> shapr: http://www-staff.it.uts.edu.au/~cbj/FISh/ is this the shape typing thing you were talking about?
19:16:33 <shapr> I know about FISh, but I'm not sure if he does the same thing I want.
19:16:37 <shapr> I'm reading about it now.
19:16:52 <shapr> I suspect the answer is here - http://www-staff.it.uts.edu.au/~cbj/patterns/
19:17:30 <mwc> JohnMeacham: yeah, assuming I don't get distracted by something colorful and forget about it for five yeras.
19:19:43 <JohnMeacham> shapr: you better grab shc before one of the many simons gets to it.
19:19:55 * shapr laughs
19:20:13 <mwc> I was going to call it muhc actually
19:20:20 <mwc> "Matt's Ultimate Haskell Compiler"
19:20:24 <CosmicRay> mwc: how about muahahahahc
19:20:24 <JohnMeacham> mwc: Well, hopefully if the hatchet plans work out, it will get much easier to experiment with haskell compilers in the future.
19:20:34 <CosmicRay> mwc: it could be the evil haskell compiler
19:20:36 <mwc> but also, mu, which is m, is one up from l, lambda
19:20:50 <JohnMeacham> ehc already exists
19:20:58 <shapr> I'll call mine shoc, Shae' Heck ovva Compiler.
19:21:13 <CosmicRay> heh
19:21:16 <mwc> CosmicRay: yeah, with abusive and psychotic  error messages patterned on Charlie Manson's speech
19:21:21 <CosmicRay> heh
19:23:25 <shapr> JohnMeacham: The @eval command in lambdabot is what worked for me. Haskell really clicked when I realized you write most of it in a few lines of sugar on top of a lambda calculus interpreter.
19:25:00 <JohnMeacham> shapr: I always thought of learning haskell like tipping over a vending machine. you can't just do it in one push, but you have to rock it back and forth a bit trying different approaches until WHAM! you crushed your leg but have all the free soda you want. perhaps the analogy falls down here....
19:25:16 <shapr> Especially since it has only one leg left.
19:25:24 <mwc> where n(lines of sugar) is proportional to the sophistication of the given lambda interpreter
19:25:33 <shapr> Actually, not really.
19:25:53 <CosmicRay> autrijus: ping
19:26:02 <shapr> As far as I can tell, the required amount of sugar for a particular level of sophistication increases very slowly.
19:26:04 <mwc> JohnMeacham: I liken it to falling over and crushing your best friend who you realive you didn't really like anyways
19:26:19 <mwc> shapr: depends on if that interpreter has a type system :P
19:26:29 <shapr> huh, Tom Lord actually wrote a fascinating post.
19:26:38 <CosmicRay> autrijus: darcs get --partial http://darcs.complete.org/missingh.lgpl.  has my bits re-licensed, others' gpl'd bits removed, and stuff that depend on those bits either rewritten or removed.
19:26:42 <CosmicRay> shapr: you lie!
19:26:45 <CosmicRay> :-)
19:26:55 <shapr> No really, as it relates to darcs it is truly fascinating.
19:27:00 <CosmicRay> url?
19:27:23 <CosmicRay> tom lord has a tremendous gift for saying little of interest with many words.
19:27:56 <mwc> I once tried using tla for versioning my website
19:28:01 <JohnMeacham> shapr: where is his interesting post?
19:28:03 <mwc> within two days I had installed Wordpress
19:28:24 <shapr> http://article.gmane.org/gmane.comp.lang.lightweight/3545
19:28:34 <shapr> For once, this is really a neat idea.
19:29:16 <shapr> Especially since it'll mean I won't have to write a p2p toolkit for Haskell.
19:30:02 <shapr> If he's right...
19:31:19 <mwc> Yeah, he might be, but it won't catch up because it will have 17 different commands for 'ls'
19:32:54 <CosmicRay> mwc: each requiring at least 30 characters to type
19:33:49 <shapr> I do wish there were some way to pass values from one Haskell RTS to another.
19:34:07 <Gahhh> distributed haskell ?
19:34:10 <JohnMeacham> shapr: you want to write part of a program in ghc and another part in nhc?
19:34:22 <mwc> CosmicRay: of course, we'll have to use each in it's own context and they'll all have esoteric semantics
19:34:22 <JohnMeacham> oh. you mean like two instances of ghc.
19:34:24 <CosmicRay> this sentence is interesting:
19:34:26 <CosmicRay> All this got me thinking.  The end-point of this game is a globally
19:34:27 <CosmicRay> distributed, p2p-maintained database of known objects, addressed by
19:34:27 <CosmicRay> content.
19:34:30 <CosmicRay> that is what freenet is.
19:34:51 <shapr> except that freenet is painfully slow.
19:34:58 <CosmicRay> true, but that is what it is :-)
19:34:58 <yosemite> freenet suffered from being anonymous
19:34:59 <shapr> And not enough people actually started using it.
19:35:12 <CosmicRay> shapr: which contributes to the slow bit, yes
19:35:18 <yosemite> it was hard to index content.  the last time I looked anyway
19:35:24 <shapr> Right, I'd like the freenet layer on the bottom for efficient sync, and the anonymous layer on top.
19:35:38 <shapr> Then I don't have to use the anonymous part to slow down the whole thing.
19:36:33 <shapr> Even better, use OpenSLP to announce your block daemon to the local network and then you can share stuff with anybody.
19:37:34 * shapr doesn't understand Barry Jay's Pattern Calculus.
19:39:38 * CosmicRay posts an LGPL'd missingh at autrijus's request
19:40:21 <wagle> shapr: url?
19:40:33 <shapr> wagle: http://www-staff.it.uts.edu.au/~cbj/patterns/
19:40:44 <shapr> I'm beginning to think that I should look harder at Epigram and Generic Haskell.
19:41:15 <shapr> I think dependent types will solve my problem, but I think type indexed types would be simpler if they work.
19:45:01 * mwc resolves to understand that sentance by the end of summer.
19:45:18 <shapr> About dependent types and type-indexed types?
19:45:22 <mwc> that's the once
19:45:47 <shapr> That's easy, learn enough about Epigram and Generic Haskell to understand how they're different from Haskell.
19:46:32 <shapr> Generic Haskell has a simple idea, Data.Generics is a different approach to the same goal. Each have their good and bad points.
19:46:35 <dbremner> shapr - that reminds me of Phantom. http://64.233.179.104/search?q=cache:Kv22mcVCOfIJ:www.apocalypse.org/pub/u/antony/phantom/coots.ps+phantom+modula+3&hl=en&start=3&client=safari
19:46:41 <mwc> I'm gonna wait until I get a better handle on Haskell then just the syntax
19:47:14 <wagle> well darn.  Amber Telfer's working on pattern calculus stuff, but i dont find her releasing any of it..  maybe in the cvs?
19:47:19 <Gahhh> dbremner: yo
19:47:20 <JohnMeacham> Tim Sheard had an interesting paper on how extensible kinds and GADTs give you the power of dependent types. (I think extensible kinds is being worked on for ghc but am unsure)
19:47:35 <dbremner> Gahhh - hello.
19:47:48 <shapr> dbremner: That's the same guy who worked on Yampa and Fruit, and recently left Galois.
19:48:07 <dbremner> shapr - I'll have to google those.
19:48:33 <shapr> dbremner: http://www.apocalypse.org/~antony/
19:52:31 <dbremner> shapr - there's also E. http://www.erights.org/
19:53:08 <shapr> Yeah, capabilities are interesting. I still haven't read much about the theory behind them.
20:01:03 <shapr> nibro_afk: could HaRP be extended to do binary pattern matching?
20:02:16 <JohnMeacham> What are peoples opinions on fISH? has anyone used it much? it seems inteersting, I wonder if his ideas could be applied to a haskell compiler.
20:02:28 <dbremner> shapr - http://mumble.net/~jar/pubs/secureos/ Jonathan Rees wrote a thesis on capabiilities
20:02:43 <JohnMeacham> s/fISH/FISh/
20:03:44 <shapr> I've only read about FISh, and I'm not convinced I understand his ideas.
20:06:02 <JohnMeacham> I am wondering if the ideas from HList could be used to statically determine array sizes in a wai similar to FISh. since they can encode integers in types...
20:06:26 <shapr> Didn't Oleg write about encoding info into types recently?
20:06:59 <JohnMeacham> Yeah, he is a master of type craziness.
20:08:40 <JohnMeacham> I love his web site though, he has tons of interesting code snippets, some profound, some mundane. but you never know til you read them.
20:08:50 <JohnMeacham> is he ever on #haskell?
20:08:54 <Gahhh> That site is huge
20:10:02 <JohnMeacham> I used a varient of his lambda calculus interpreter 4 times in jhc.
20:10:05 <shapr> I've never seen him here.
20:10:10 <Gahhh> I think haskell could use a Scott Meyer-like figure that demonstrates how to write good haskell.
20:11:29 <JohnMeacham> He also has a tendancy to implement each thing he does in several languages, making his site a nice rosetta stone.
20:13:18 <Gahhh> I should read more on his numerical stuff.
20:17:14 <foxy> @seen dons
20:17:15 <lambdabot> dons is in #haskell. Last spoke 1 hour, 12 minutes and 27 seconds ago.
20:20:10 <foxy> dons: I found a big error, $topdir wasn't being substituted in package file conf so no object files were getting loaded.   Once that was fixed I discovered that base relies on somes windows dlls.  I tried loading those but it doesn't work
20:29:49 <dons> foxy, can you send me a patch
20:44:44 <foxy_> dons: I'll send you a patch
20:51:16 <JohnMeacham> Hmmm.. I should go find a party. perhaps Hollywood. Friday night is always so crowded though.
20:59:30 <shapr> hiya FrederikEaton
20:59:41 * a5 screams
20:59:49 * FrederikEaton shoots a5
20:59:55 * a5 dies
20:59:57 <shapr> Wow.
21:00:23 <wagle> umm
21:00:28 <FrederikEaton> john said i should use my RealName
21:00:30 <dons> yay. got Xorg running on my new fanless VIA desktop/router
21:00:44 <shapr> I have the sudden urge to quote from "Fear and Loathing in Las Vegas".
21:00:50 <FrederikEaton> guns are legal here
21:00:54 <wagle> i'm in trouble.  too hungry to get up and get food.
21:01:07 <dons> wagle: !
21:01:11 <shapr> wagle: Quick! Use the mobile phone to order pizza!
21:01:14 <dbremner> FredrikEaton - automatic weapons are legal in Idaho
21:01:22 <shapr> They deliver to the desktop don't they?
21:01:27 <shapr> dbremner: really?
21:01:54 <shapr> I thought there was a federal ban on automatic weapons in the 1930s?
21:02:14 <wagle> there's a ban, unless you have a permit
21:02:23 <JohnMeacham> It depends on the state I thought.
21:03:03 <Gahhh> do SUV's count ?
21:04:25 <dbremner> shapr - JohnMeacham is right. There are class 3 permits, though.
21:04:34 <foxy_> dons: did you get the patch?
21:07:26 <dons> yep. cheers
21:07:55 <dons> does that improve any of the regress tests?
21:07:59 <foxy_> it could be a bit more elegant... (I hard coded c:/WINDOWS/SYSTEM)
21:08:11 <foxy_> the failure occurs later on :-)
21:08:12 <dbremner> Gahhh - unfortunately, no. In my area, you can throw a stone in any direction and hit one. Come to think of it, that's not a bad idea.
21:08:51 <Gahhh> dbremner: which is not a bad idea: throwing stones at SUV's or counting them as weapons, or both ? ;)
21:09:25 <dbremner> Gahhh - they both work for me.
21:10:33 <Gahhh> man, there are some insance threads on LtU classic.
21:10:40 <Gahhh> insane
21:10:53 <shapr> Which ones?
21:11:02 <dons> foxy_: probably a good idea not to use tabs in the patches.
21:11:04 <shapr> Speaking of which, if the LtU wiki happens, are you guys gonna contribute?
21:11:28 <Gahhh> shapr: This one is certifiably insane: http://lambda-the-ultimate.org/classic/message12290.html
21:12:03 <foxy_> dons: emacs inserts them, I don't know how to avoid them
21:12:14 <dons> ok.
21:12:27 <dons> :set ts=8 expandtab ; :retab ;)
21:12:45 <foxy_> in emacs?
21:13:02 <dons> nah, vim. hence: ;)
21:13:08 <foxy_> grin
21:13:36 <foxy_> Loading package base-1.0 ... linking ... done
21:13:36 <foxy_> Loading object API Mwc3949737 ... done
21:13:36 <foxy_> Looking for <<Mwc3949737_resource_closure>>
21:13:36 <foxy_> load: couldn't find symbol <<resource>>
21:13:36 <foxy_> a.out: no
21:13:56 <dons> oh, much further.
21:14:28 <foxy_> do I need to record which dlls get loaded in the environment?
21:14:30 <dons> so now check that "Mwc3949737_resource_closure" is valid in the Mwc* object
21:14:40 <dons> hmm.
21:15:32 <dons> i'll have to think about that.
21:15:44 <dons> the problem would be loading them twice.
21:15:45 <foxy_> $ nm /tmp/MNF4086497.o | grep resource
21:15:45 <foxy_> 00000014 D _MNF4086497_resource_closure
21:15:45 <foxy_> 00000318 T _MNF4086497_resource_info
21:15:45 <foxy_> 00000000 D _MNF4086497_resource_srt
21:15:53 <dons> ah. leading underscore!
21:16:06 <dons> check that that config.h value is set to 1..
21:16:28 <foxy_> its set to 0
21:16:41 <foxy_> s/it's/its/
21:16:45 <dons> ./configure doesn't detect this properly for cygwin.
21:17:03 <dons> you could add a bit of code to configure.ac to do this, if you like
21:17:28 <shapr> Gahhh: What's insane about that?
21:17:45 <dons> we're almost thhere, foxy_. looking up the symbol is the last bit. :)
21:17:54 <foxy_> awesome
21:17:57 <dbremner> Gahh - you might like this. http://www.gladwell.com/2004/2004_01_12_a_suv.html
21:18:42 <shapr> Oh, I found the insane parts, never mind.
21:22:31 <shapr> Wow, this thread really is nuts.
21:26:22 <foxy_> how do I commit patches to my own copy of a source tree (with darcs) ?
21:26:56 <shapr> darcs record
21:27:04 <shapr> but you probably want to do darcs whatsnew first
21:27:29 <foxy_> I did darcs send and it wanted to send some patches that I've already sent
21:27:36 <shapr> I tend to do "darcs whatsnew -s" first, and often I end up recording just a few chunks together eachtime.
21:28:31 <dons> foxy_, that's because I hadn't yet applied them to the official repo
21:28:38 <foxy_> ahh
21:28:42 <dons> but the first patches are in now.
21:28:51 <dons> anyway, darcs knows how to ignore already-applied patches
21:29:07 <dons> just applying the cygwin/_ patch now
21:30:37 <dons> so is cygwin working now?
21:30:45 * dons crosses fingers
21:36:10 <Gahhh> windows made me reboot. yay.
21:36:52 <JohnMeacham> Off to find wine, women, song, and a new update avoidance algorithm.
21:38:14 <foxy_> I'm recompiling with underscore
21:39:47 <shapr> Gahhh: Man this thread is extreme.
21:40:10 <foxy_> dons: One thing I have to do manually before running a program is export TMPDIR=/tmp, I don't know how to fix this in the source
21:41:02 <Gahhh> shapr: heh I told you.
21:41:40 <shapr> I'm halfway down the page now and I can feel a volcano in the distance.
21:41:44 <dons> foxy_, yep. TMPDIR is set in src/plugins/Plugins/Consts.hs
21:41:52 <dons> add a good default for cygwin
21:42:49 * dons disappears for a little while
21:43:49 <dbremner> shapr - ANKOS is the "Dianetics" of Math.
21:44:50 <shapr> ANKOS?
21:45:04 <shapr> Oh that.
21:45:06 <dbremner> shapr - A New Kind of Science.
21:45:47 <reffie> ANKOS!
21:45:59 <shapr> My description is "Wolfram is the academic equivalent of a one-hit boy band"
21:46:49 <shapr> Over produced, recycled, focussed on the mass market, zero content pap focussed on sensationalism and the mass market.
21:48:20 <shapr> Wait, I said mass market twice.
21:48:31 * shapr blames it on lack of sleep.
21:48:51 <dbremner> shapr - that's ok, he repeated himself many times.
21:50:19 <reffie> i think i'm pretty fucked for my abstract algebra final
21:51:58 <shapr> Wow, this guy claims that Java is better for writing refactoring tools than Smalltalk.
21:52:33 <shapr> He put his foot in his mouth so far he's suckin on his thigh.
21:52:51 <Lemmih> URL?
21:53:00 <shapr> http://lambda-the-ultimate.org/classic/message12290.html
21:53:31 <shapr> This is the academic equivalent of schadenfreude(sp?).
21:54:10 <gzl> right spelling
21:55:13 <shapr> yay
21:56:22 <wagle> whole thread, or somewhere in particular?
21:56:42 <shapr> About a quarter of the way it gets interesting.
21:57:20 <shapr> About two thirds of the way down is the guy who claims that Java is better for tools like Eclipse than Smalltalk would be.
21:58:12 <wagle> "harming joy"?
21:58:46 <shapr> Wha?
21:59:21 <shapr> If you search for Stefaniak, that's where the Java is better for refactoring part starts.
21:59:26 <wagle> babelfish translates schadenfreude as "harmful joy"
21:59:32 <shapr> Oh yes, that's right.
21:59:49 <shapr> It's the entertainment in seeing others injure themselves in particularly stupid ways.
22:00:03 <shapr> Pratfalls and the like.
22:00:13 <wagle> ah
22:00:20 <shapr> Think "America's Funniest Home Videos"
22:01:01 <shapr> The most interesting thing to me is that this Lount guy really can't see outside of the world he knows.
22:02:13 <skew> his complaints about franks "ad homenium" attacks are kinda wierd too
22:02:31 <wagle> hmm.. you up late or up early?
22:03:05 <shapr> skew? or me?
22:03:14 <wagle> (i'm falling asleep..  at you are however many hours in front of me)
22:03:40 <wagle> gnight
22:03:42 <skew> maybe I'm a bit strange, but I read most of that stuff as meta-procedural suggestions about how finding useful information, thinking carefully, and crafting effective messages
22:03:51 <shapr> In my current rotating schedule I sleep from 10am to 5pm.
22:03:57 <shapr> I put in a full workday in bed!
22:04:39 <shapr> I thought the point about meta not being any different was telling.
22:04:51 <shapr> Hofstadter mentions that early in GEB.
22:05:20 <skew> that's a great book
22:05:34 <skew> I wonder how much of this sort of trouble people have because they haven't read it?
22:05:57 <shapr> GEB is just one source of those ideas, but it is a good source.
22:06:36 <shapr> You have a good point though, people who have never been exposed to this sort of stuff can rarely discuss it.
22:07:27 <gzl> GEB is good, but it's a little too all over the place.
22:07:34 <shapr> This guy obviously doesn't know anything about type inferencing.
22:08:01 <skew> Some people seem to think mostly in terms of specific examples, and make a few abstractions through sheer effort
22:08:52 <shapr> Some people are bad at generalizing.
22:09:03 <shapr> That's what you said, right?
22:09:28 <skew> not exactly, many people are pretty good at generalizing from specifics
22:10:05 <skew> The trouble seems to be collapsing the meta-levels and thinking about abstractions in and of themselves.
22:10:08 <Gahhh> the inexact terminology also adds fuel to the fire.
22:10:29 <skew> Oh, and I think that guy was mostly missing the point about parametric polymorphism
22:11:00 <Gahhh> I just love it when somebody unleashes F Atanassow.
22:11:05 <shapr> Yeah, it's so much fun.
22:11:08 <shapr> flame on!
22:11:23 <skew> and the whole idea of *thinking* about your code...
22:12:07 <Gahhh> skew: I tried to reason about my code today, but it's such a mess of imperative stuff that I ended up firing printf's to understand it. Embarassing.
22:29:33 <shapr> whew, I finished the thread.
22:30:04 <Gahhh> tee hee
22:31:54 <shapr> I have a suspicion that you have to have at least a few points on the crackpot scale to get far enough into CS to be able to even talk about all this.
22:33:17 <dbremner> shapr - I've heard more than one person advance the theory that FP does something to the brain.
22:33:51 <shapr> Did they say what it does to the brain?
22:34:06 <Gahhh> narcotics ?
22:34:18 <shapr> I think it definitely decreased my tolerance for the sort of syntactic bullshit I dealt with for years in Java.
22:34:55 <dbremner> shapr - same, and PHP makes me wince.
22:35:35 <skew> well, I can tell you writing an interpreter in Python after knowing Haskell was quite an adventure
22:35:36 <dbremner> shapr - the context was Boost and the FC++ library.
22:35:51 <shapr> I think the healthiest attitude in programming is to realize that engineers have been building bridges for thousands of years, and programmers have been building programs for ... how long?
22:36:24 <Gahhh> I dont think number of years is an equivalent currency between the two fields.
22:36:25 <shapr> I shudder to think what bridges were like in the first fifty years. (I bet the bridges shuddered too)
22:36:39 <shapr> Yeah, true.
22:36:50 <Gahhh> bridges worked, just like x86 assembly worked.
22:36:50 <skew> lots of interesting stuff has happened in bridge building the last fifty years or so too..
22:36:53 <shapr> But the essence of my point is that software engineering is in its infancy.
22:37:07 <dbremner> shapr - in Programming Pearls, there's an essay comparing the Golden Gate bridge to software.
22:37:17 <shapr> I'll have to read that.
22:39:53 <dbremner> Gahhh - older architectures were often simpler. It's hard to have race conditions on a TRS-80.
22:41:14 <Gahhh> dbremner: I think people are too hard on software. Why such high expectations ? I am more disappointed by how governments/justics system/economies work (or not) than by C++. In comparison, CS shines imho.
22:41:53 <shapr> Yeah, governments suck.
22:42:26 <shapr> I've suggested SimPolitik, an open source economy simulator where the candidates have their proposed changes and model results online.
22:42:42 <shapr> And you can download the changes and run the simulation yourself.
22:42:47 <Gahhh> I need to write a bribery plugin for that app.
22:43:26 <dbremner> shapr - there was a Korean system similar to that.
22:43:43 <shapr> Did it work?
22:44:16 <dbremner> shapr - http://www.sfgate.com/cgi-bin/article.cgi?file=/news/archive/1999/09/14/international0110EDT0424.DTL
22:44:59 <dbremner> shapr - one of the examples in Sources of Power is a mental model of the Polish economy. It's an excellent book.
22:45:41 <skew> Gahhh: the trick is getting bribery predictions accurate enough to be useful to you, while keeping the main simulation inacurrate enough that the inefficiencies you introduce to collect bribes are lost in the noise :)
22:46:06 <shapr> Yes, that's brilliant.
22:46:13 <shapr> Thta's exactly the sort of thing I wanted to do!
22:46:27 <skew> is it?
22:46:40 <shapr> sorry, the Posdaq
22:46:41 <skew> that sounds more like a futures market, which is also really cool
22:46:45 <dbremner> shapr - we discussed it in the International Political Econ class I was taking at a time.
22:46:50 <dbremner> shapr - at the time.
22:47:08 <skew> I thought you were talking about having the politicians try their hand at running a simulated economy?
22:47:47 <skew> shapr: oh, I didn't think *you* were in it for the bribes
22:47:57 <shapr> I do FP for the chix man.
22:51:28 <skew> good luck with that.
22:55:42 <Gahhh> chicks dig fp
22:55:49 <Gahhh> and encapsulation
22:59:05 * shapr laughs
22:59:15 <shapr> In my experience FP is a good way to get rid of chix.
22:59:30 <shapr> "I'm tired of hearing about monads, let's talk about something else."
23:00:30 <dbremner> shapr - that reminds of this quote from k5. "Sure, you're not tracking down seg faults in your pointerless language, but that doesn't mean it works! You're just tracking down something else instead!"
23:00:30 <dbremner> "You know what I'm tracking down instead of seg faults? A cold beer! That's what I'm tracking down, Chester! And I'm bangin' Claudia Schiffer! Functional programming rules!"
23:00:43 <Gahhh> dbremner: lol
23:00:57 <Gahhh> Haskell - Cold, down, easy.
23:01:50 <dbremner> Gahhh - jacob on k5 has a couple diaries about programming language flamewars. http://www.kuro5hin.org/story/2001/7/7/111852/2129
23:02:09 * shapr laughs
23:04:53 <shapr> Long ago I was comparing Java and Python...
23:05:14 <shapr> <shapr> in reality, it just means I can throw down some Zope stuff and then play more crack attack rather than wrestling with J2EE for months \n <shapr> ya know, no one on #java plays crack-attack \n <shapr> I think there's a not so hidden truth there.
23:06:05 <Gahhh> I dont think there is a lot of point in comparing languages. It's a good idea to know many, tho.
23:06:41 <shapr> I think there's a great point in comparing languages, as long as you compare the languages yourself, in how work for you.
23:07:03 <shapr> But maybe I just said the same thing you said.
23:08:08 <Gahhh> we can point out the differences but I don't think we can ever come to an irrefutable conclusion if one is better than the other. The individual is to choose the one appropriate for the job.
23:08:21 <shapr> Oh, I agree with that.
23:08:27 <shapr> Thing is, most people don't know the differences.
23:08:51 <Gahhh> most people know very little about very few things.
23:08:57 <dbremner> Gahhh - I disagree with that. There are a lot of ideas that have disappeared in newer languages.
23:09:26 <Gahhh> dbremner: newer ? I didn't say older languages were worse.
23:10:34 <dbremner> Gahhh - There are some features that were common in older languages but are absent in newer languages. Nonreserved keywords, for example.
23:11:33 <Gahhh> dbremner: ok. so that makes them inferior ?
23:11:45 <Svrog> hi
23:11:59 <Gahhh> hi Svrog
23:12:09 <Svrog> is there anyone here who has some experience with cross compiling haskell?
23:12:23 <Svrog> ghc to be precise
23:14:45 <dbremner> Gahhh - I would say that C88 > K&R.
23:16:07 <Gahhh> dbremner: Heh. Well, I think you know what I meant.
23:27:41 * shapr throws lambdas
23:30:13 * Lemmih ducks.
23:32:37 * dons is back, on a brand new network :)
23:32:46 <Gahhh> you need to throw that in a try block: try { \x -> x+1 } catch ( s-expr ) { return IO (); }
23:32:52 <dons> though hardware hacking makes me feel icky
23:33:11 <dons> foxy_ says "it looks like cygwin is working" yay!
23:33:30 <Gahhh> what is working in cygwin ?
23:33:33 <dons> @karma+ foxy
23:33:34 <lambdabot> foxy's karma has been incremented
23:33:38 <dons> hs-plugins
23:33:40 <Gahhh> ah
23:33:55 <Gahhh> is there a ghc/cygwin or is it with the ghc/mingw on cygwin ?
23:34:15 <dons> don't know.
23:36:50 <Gahhh> shapr: I now saw your post on the LtU wiki. seems like a good idea. Some of those threads have a lot of stuff written that can serve as reference.
23:39:26 <shapr> I'll sign you up to the list of people willing to turn threads into documents then :-)
23:40:23 <Gahhh> Doesn't that require me to at least understand what the threads are about ? :)
23:42:24 <foxy> straight ghc with cygwin
23:43:12 <foxy> dons: I don't understand the configure process.  My attempt hack the configure.ac file failed
23:45:21 <dons> you where hacking it to do what?
23:45:31 <dons> the underscore problem, or something else?
23:49:02 <foxy> the underscore problem and to define CYGWIN
23:49:44 <dons> you could check the output of `uname`, and use that to set the variables you wish.
23:50:11 <dons> if you then want them in config.h or config.mk, you need to add defaults to config.h.in (for example), and use AC_SUBST(FOO) in configure.ac
23:50:40 <dons> so it's a mixture of shell programming, and m4/autoconf macro hacking
23:50:45 <foxy> aah, I need defaults
23:50:51 <dons> @FOO@
23:50:52 <lambdabot> Unknown command, try @listcommands.
23:51:01 <dons> where FOO is the variable you want to get a value for
23:51:24 <dons> it should work for the underscore variable though, right? as it's already defined in config.h?
23:52:06 <foxy> no, that didn't work
23:53:27 <dons> are you running autoconf after messing with configure.ac?
23:54:04 <foxy> yup
