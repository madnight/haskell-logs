00:01:22 <stefan__> @yow
00:01:22 <lambdabot> I'll show you MY telex number if you show me YOURS...
00:23:11 <xkb> earthy, is the source avail of those sollutions to the icfp contest?
00:27:07 <earthy> not that I know of
00:27:18 <xkb> k
00:57:35 <musasabi> Has anyone looked into using rewrite rules with arbitary sequence types?
00:59:09 <xkb> Is there a Stack ds in Data.something?
00:59:48 <musasabi> xkb: stack is a list.
00:59:59 <musasabi> type Stack a = [a]
01:00:17 <musasabi> push :: Stack a -> a -> Stack a
01:00:26 <musasabi> push s x = x:s
01:00:51 <musasabi> pop :: Stack a -> (a,Stack a)
01:00:56 <kosmikus> xkb: our sources are available from the team homepage, google dunkosmiloolump
01:01:02 <musasabi> pop (x:xs) = (x,xs)
01:01:08 <xkb> kosmikus, thanks
01:01:08 <musasabi> and so on.
01:01:43 <xkb> kosmikus, nice quote at the beginning :D
01:02:02 <musasabi> or were you looking for something else?
01:02:12 <xkb> musasabi, no..
01:02:22 <xkb> I was just wondering if I had to type it all myself
01:02:28 <xkb> or just include a module
01:22:13 <musasabi> Is there any good string benchmark in haskell?
01:55:31 <xkb> is there anyway to trace the contents of a datastucture during execution?
02:00:52 <earthy> hey, congrats kosmikus!
02:00:54 <earthy> how's snowbird?
02:03:28 <kosmikus> I'm not in snowbird
02:03:32 <kosmikus> but thanks
02:03:46 <earthy> s/how's/how was/ then? :)
02:04:05 <kosmikus> I never was
02:04:07 <kosmikus> I staid home
02:04:11 <earthy> ah
02:04:12 <kosmikus> sick
02:04:34 <earthy> that's not so good...
02:04:42 <earthy> on the better side now, though?
02:04:48 <kosmikus> yes, but better home and a winner as there and not ;)
02:04:53 <earthy> ;)
02:05:17 <kosmikus> slowly getting better
02:05:22 <kosmikus> last week was terrible
02:05:30 <earthy> what'd you come down with?
02:05:38 <earthy> not a simple flu, it sounds like
02:06:13 <kosmikus> I'll give you details another time ...
02:06:17 <earthy> good to hear things're improving though
02:06:19 <earthy> (no probs)
02:07:09 <earthy> and damn, do I want to compete in ICFP next year. :)
02:07:11 <kosmikus> how's life in utrecht? any news?
02:07:18 <earthy> I'm absolutely *green* with envy :)
02:07:36 <earthy> well, Doaitse's started kicking my butt ;)
02:07:47 <kosmikus> why?
02:07:47 <earthy> `time to start writing!'
02:07:52 <kosmikus> ??
02:08:03 <kosmikus> a bit early, isn't it?
02:08:10 <earthy> he expects a draft for a first chapter of the thesis in about 2 weeks ;)
02:08:19 <kosmikus> seriously?
02:08:21 <earthy> early? I've been here for almost 1.5 years
02:08:44 <earthy> seriously. writing it as we speak
02:09:04 <kosmikus> I had a draft of *a* chapter (not the first) after 3 years and 3 months
02:09:09 <xkb> earthy, what's your thesis about?
02:09:10 <earthy> his words: `the previous batch of students I'm mostly done with... time to focus my attention on the next batch!'
02:09:21 <kosmikus> and furthermore, you're supervised by Wish, not Doaitse, aren't you?
02:09:26 <earthy> formally, both
02:09:47 <earthy> xkb: it's about integrating prooftech and compilers
02:09:53 <xkb> nice
02:09:59 <earthy> it is
02:10:04 <xkb> Do you also know Martin?
02:10:15 <xkb> Bravenboer
02:10:29 <earthy> ofcourse... he's right down the hall
02:10:31 <kosmikus> sure
02:10:54 <xkb> earthy, how's he doing?
02:11:20 <earthy> he's had a positively running start and is working extremely hard
02:11:25 <stefan__> maybe it has become Institute's policy to deliver thicker theses ... all more than 300 pages ... then you should start writing early ofcourse ;)
02:11:42 <kosmikus> ;)
02:11:46 <xkb> earthy, sounds like him allright
02:11:51 <kosmikus> Martijn's is less than 300 pages
02:12:21 <earthy> stefan__: well, Doaitse wants more published results, so things look better for the next `visitatie' (formal evaluation of the institute)
02:13:11 <stefan__> when is Martijn to defend his thesis? in a few weeks, isn't he?
02:13:14 <kosmikus> they looked alright last time, but he's probably worried because the total number of PhD students at our institute is decreasing
02:13:35 <kosmikus> 15-10, according to homepage
02:13:35 <earthy> kosmikus: exactly. so he can't really have PhD's just writing a nice thesis
02:13:52 <kosmikus> so, he should push you to write papers
02:13:56 <kosmikus> not chapter drafts
02:14:05 <stefan__> yep ... and there is only one PhD position coming available for the next year or so?
02:14:05 <kosmikus> I'd agree with that :)
02:14:17 <earthy> he's hoping to find a techreport in it and a lead for a paper ;)
02:14:30 <earthy> stefan__: something like that, in our group
02:14:47 <stefan__> so I heard yesterday ... ;)
02:15:10 <kosmikus> stefan__: had a talk with johanj?
02:15:34 <kosmikus> no position for you?
02:15:37 <stefan__> yes ... we've had a quick look at our POPL reviews
02:15:52 <earthy> he made me a nice compliment hidden as a warning though: `I see a lot of you in me... you also love everything about your field... but that is *quite* distracting...'
02:15:57 <stefan__> it's at Jur's project ... not exactly my area
02:16:35 <kosmikus> ah, that one
02:16:50 <kosmikus> no ... not what you're doing now
02:16:59 <kosmikus> still interesting in topic, though, I'd say
02:16:59 <earthy> area is not all *that* important for a PhD
02:17:10 <earthy> you will be the one to fill it in anyway
02:17:43 <kosmikus> if that's the option available to you, I'd go for it ...
02:18:30 <stefan__> it's not said that is is avaiable for *me* ... but well, there were some hints given ... ;)
02:19:23 <kosmikus> if you'd say very loud that you'd want it, I think there'd only be a *very* limited amount of students who could compete with you ;)
02:20:55 <stefan__> I'll give it some thoughts ... right now it's either that or a position in industry or something abroad
02:21:26 <stefan__> kosmikus: and you? any decisions made about your future?
02:22:18 <kosmikus> just got a mail from microsoft research today ;)
02:22:31 <kosmikus> seem like I'm going to apply there after all
02:22:46 <kosmikus> no further decisions made, though
02:23:08 <kosmikus> Bonn is still undecided
02:24:31 <stefan__> does it look like decisions are to be made about Bonn any time soon? it was a matter of budget, wasn't it?
02:25:42 <kosmikus> it's a normal german DFG grant proposal
02:25:48 <kosmikus> it should be decided upon soon
02:26:08 <kosmikus> but they don't have fixed deadlines for submission, and correspondingly, no fixed deadlines for acceptance/rejection
02:27:33 <musasabi> Is it possible to create subarrays of existing arrays in haskell (without copying) ?
02:27:35 <stefan__> and Philips is off the table?
02:28:15 <kosmikus> stefan__: has always been a backup option for me
02:28:36 <stefan__> kosmikus: and still is?
02:28:44 <kosmikus> stefan__: if other options seem likely to work out, I won't do it
02:28:59 <stefan__> kosmikus: fair enough
02:50:22 <wouter> has anyone seen a list of accepted papers for POPL?
02:55:02 <earthy> and then wishnu came in and we had a nice discussion ;)
02:55:34 <stefan__> about writing and when to start with it? ;)
02:55:55 <earthy> not really ;)
02:58:05 <kosmikus> wouter: did you submit as well?
02:59:52 <wouter> I could have, but I would have had to rush it - so we decided not to.
03:01:00 <stefan__> daan's paper isn't accepted, is it?
03:01:57 <wouter> there's a special edition of the Science of Computer Programming on aspect oriented programming, which seems like a fairly good target.
03:02:03 <musasabi> Looks like ixmap does perfom a copy :-(
03:20:59 <pesco> Moin Moin!
03:27:14 <musasabi> So it using Ptrs + unsafePerformIO the only way to get subarrays without copying?
03:27:17 <musasabi> *is
03:28:11 <earthy> um, yes?
03:29:45 <ski> subarrays, how ?
03:30:02 <ski> in IO/ST ?
03:30:07 <ski> or immutable ones ?
03:30:12 <musasabi> ski: immutable.
03:30:57 <musasabi> ski: "tailA arr = let (l,h) = bounds arr in ixmap (l+1,h) id arr" is just not scalable.
03:31:29 <ski> maybe you could use a tuple of an array and a starting and ending subindex
03:32:35 <musasabi> that could work, but is there a reason it does not work out of the box?
03:33:03 <musasabi> I would think most divine and conquer array based solutions would benefit from it.
03:34:09 <ski> ("divide" .. hehe)
03:34:36 <ski> divine*
03:35:03 <musasabi> today seems to be a good day for typoing.
03:35:56 <ski> yup
03:37:20 <ski> hmm, you were wondering why not arrays themselves has built-in ability to refer to subparts of other such ?
03:37:59 <ski> maybe it adds ineffeciency for algos not needing that ability or something ..
03:39:20 <ski> (for e.g. n-dim. arrays one would prolly need to keep both size and skip for each dimension (except possibly outermost))
03:43:45 <musasabi> ski: but multidimensional arrays are not supported - are they?
03:45:28 <pesco> I'm compiling GHC 6.2.1 and am getting "error in character literal" for the following declaration:
03:45:44 <pesco> version = tail "\
03:45:51 <pesco>     \ GHC_PKG_VERSION"
03:45:56 <pesco> Has anyone seen this?
03:47:25 <pesco> (This is under Gentoo Linux on PowerPC.)
03:47:53 <musasabi> pesco: cpp maybe?
03:48:45 <ski> musasabi : sure multi-dims are possible, just index with a tuple
03:48:52 <pesco> Not sure what you mean. -cpp is passed to the compiler.
03:49:20 <pesco> Also -DGHC_PKG_VERSION=6.2.1
03:49:35 <musasabi> pesco: I think -cpp causes the error.
03:50:35 <pesco> Probably. What do you think how?
03:54:45 <pesco> shapr!
03:55:33 <shapr> hiya pesco, wassup?
03:55:59 <pesco> shapr: Setting up Linux on my PowerBook!
03:56:10 <pesco> GHC is giving troubles.
03:56:31 <shapr> it can be picky
03:56:32 <pesco> But Ion is lovely. :)
03:57:40 <musasabi> pesco: I remember such problems but just deleted either cpp requirement or multiline stringsd.
03:57:52 <shapr> yes, ion is great
04:00:29 <pesco> musasabi: -E shows that "tail \"\\\n    \\ GHC_PKG_VERSION\"" gets expanded to "tail \"    \\ GHC_PKG_VERSION\"" by cpp.
04:08:12 <Boegel> 'lo everybody
04:08:22 <Boegel> tic, how did your project work out ?
04:11:58 <shapr> hoi Boegel 
04:12:31 <Boegel> hello shapr
04:17:06 <Boegel> tic, r u too busy or something ?
04:17:35 <shapr> lots of people stay connected when they're away from their computer
04:17:40 <shapr> like me!
04:17:45 <Boegel> they should change their nick then...
04:17:57 <shapr> not necessarily
04:17:57 <Boegel> that's a small effort
04:18:06 <shapr> there's an /away feature already
04:18:07 <Boegel> but it makes things a lot more clearer :)
04:18:10 <Boegel> like this :
04:18:28 <Boegel> ahum
04:18:31 <Boegel> damn :|
04:18:33 <shapr> you can also do /whois tic
04:18:36 <shapr> to see how long he's been idle
04:18:46 <Boegel|brb> like this :)
04:19:14 <shapr> but, nickserv, chanserv, etc all work according to your nickname
04:19:22 <shapr> so if you change it, you're not the same person
04:19:43 <Boegel> ow
04:19:46 <pesco> Also everytime you leave your keyboard, I see the nick-change. Then again when you get back on. Which I don't necessarily want.
04:19:47 <Boegel> but I don't use that
04:19:49 <Boegel> should I ?
04:20:24 <shapr> you could use the /away command
04:20:35 <kosmikus> pesco: I think ghc-6.2.1 cannot be compiled with gcc-3.4
04:20:42 <shapr> many irc clients change the color of the nickname shown according to /away status
04:20:45 <kosmikus> this should probably be fixed in the dependencies
04:20:55 <kosmikus> I wonder if ghc-6.2.2 works
04:21:06 <pesco> kosmikus: I'd say that should be fixed in ghc...
04:23:04 <Boegel> shapr, what does /away do (besides giving a message)
04:23:26 <pesco> Boegel: As far as I know, /away specifically does not give a message.
04:23:45 <pesco> Or, as far as I think, rather.
04:25:58 <pesco> Boegel: The idea is not to announce your awayness, because you can do that in-conversation if needed; otherwise it's just not interesting to most people.
04:26:23 <shapr> for me, irc is a lot like a coffee shop 
04:26:33 <shapr> I can walk in, chat for awhile, and walk out when I have to do something else
04:26:55 <Boegel> it can be irritating when you want to talk to someone specific
04:27:12 <Boegel> like me, I would like to know how tic did with his assignment
04:27:27 <ski> Boegel : if you /msg to someone that is /away, at least some clients will note this to you
04:27:38 <shapr> also, many irc clients log messages that are directly addressed to a person
04:27:51 <pesco> Boegel: In that case you should /whois tic and see if a) he has the away flag set.
04:27:54 <shapr> isomer: hey anth
04:28:20 <pesco> Also, I don't think there's anything wrong with posting "tic, are you awake?" to the channel.
04:28:54 <isomer> *sigh* one more try
04:28:57 <pesco> Because he doesn't have the away flag set, and his long idle-time doesn't tell you for sure he's away.
04:29:53 <Boegel> how do you 'unset' the away flag ?
04:30:14 <pesco> Usually, /back or simply /away again.
04:30:22 <Boegel> ow ok
04:30:59 <Boegel> this is the message I get when I execute the /away command: "Does this mean you're really back?
04:30:59 <Boegel> -
04:31:13 <shapr> yes, that means you're no longer set as away
04:31:18 <ski> that's your client speaking
04:31:33 <ski> 'tis not seen by others
04:32:09 <pesco> It's probably trying to remind you that the /away you gave was taken to mean /back.
04:32:13 <Boegel> ow sry
04:32:22 <Boegel> I'm not that familiar with IRC :)
04:32:27 <Boegel> I just use mIRC
04:32:55 <Boegel> pesco, it gives that message with _every_ /away command
04:33:03 <pesco> Hm. That's strange.
04:34:32 <ski> Boegel : you need to do something like "/away Sorry folks, I'm eating lunch"
04:34:49 <ski> just a simple "/away" is the same as "/back"
04:34:54 <pesco> Ah.
04:35:44 <Boegel> ah, like this ?
04:36:03 <ski> *** Boegel is away: I'll be right back
04:36:55 <pesco> OT: Can somebody recommend a decent audio (MP3/Ogg/...) player for Linux which is /= xmms? In particular _not_skinned_?
04:37:14 <xkb> mpg123?
04:37:15 <xkb> :P
04:37:25 <Boegel> idd ski
04:37:30 <Boegel> that's what I meant
04:37:39 <shapr> Igloo, Heffalump: congrats on ICFP!
04:38:06 <kosmikus> shapr: why not me? ;)
04:38:34 <shapr> sorry...
04:38:38 <shapr> kosmikus: congrats! :-)
04:38:45 * shapr dohs
04:40:08 <shapr> pesco: I mostly use alsaplayer, Igloo has some neat bindings for gstreamer that I'll probably switch to soon
04:41:42 <shapr> pesco: I've been using the linux RTL capabilities kernel module, jackd and alsaplayer
04:42:55 <Boegel> shapr, can you tell me what's going on ? what about ICFP ? (I'm pretty new eh :p)
04:43:12 <shapr> http://www.cis.upenn.edu/proj/plclub/contest/results.php#first
04:44:14 <shapr> ICFP first place team members are: Ian Lynagh ( Igloo ), Ganesh Sittampalam ( Heffalump ), Andres Loeh, ( kosmikus ), and Duncan Coutts ( who has been on #haskell once or twice, and I've forgotten what irc nick he used ).
04:45:13 <shapr> the second place team used Haskell and C++
04:46:17 <Boegel> what was the idea behind the contest ?
04:46:39 <shapr> http://www.cis.upenn.edu/proj/plclub/contest/task.php
04:46:41 <Boegel> ant meta language
04:48:50 <Boegel> task looks cool :)
04:48:53 <Boegel> but nog easy
04:49:00 <Boegel> og -> not
04:49:02 <Boegel> argh :s
04:49:07 <Boegel> bot not easy
04:49:20 <Boegel> a lot depends on the tactics you use I think
04:49:30 <Boegel> do you attack or explore, and so on...
04:49:53 <musasabi> Is there a reason GHC's ByteArray# is so hard to use?
04:54:39 <Boegel> kosmikus, how long did you work on the contest ?
04:57:14 <kosmikus> 72 hours were allowed
04:57:49 <kosmikus> we did not (successfully) optimize sleep requirements
04:58:20 <Boegel> hehe
04:58:34 <Boegel> how can they make sure you only worked 72 hours on it ?
04:58:49 <kosmikus> Boegel: ?
04:59:12 <Boegel> well
04:59:16 <kosmikus> by making the contest run for exactly 72 hours?
04:59:21 <Boegel> ow
04:59:34 <Boegel> sow the task was available, and from then on you got 72 hours ?
04:59:42 <kosmikus> yes
04:59:49 <Boegel> ow like that
05:00:03 <Boegel> so you already had a team by then, or not ?
05:00:12 <kosmikus> yes
05:01:09 <kosmikus> the start time of the contest is of course known before
05:02:22 <Boegel> off course :)
05:02:25 <Boegel> seems cool
05:02:30 <Boegel> and that's once a year ?
05:02:46 <kosmikus> yes
05:03:52 <Boegel> damn, so you guys must be really good since you won the thing :)
05:06:24 <kosmikus> I prefer not to comment on that :)
05:07:03 <Boegel> hehe
05:07:08 <Boegel> yow
05:07:11 <Igloo> We were screwed on the sleeping thing before we even started by it starting at the end of a working day, during which 3 of us were at a workshop
05:07:11 <Boegel> woops
05:07:17 <Boegel> wrong channell :)
05:07:37 <Boegel> so how much did you guys sleep in those 72 hours ?
05:09:03 <kosmikus> 18 - 20 hours, I'd say, but I'm not sure anymore
05:09:29 <Boegel> that ok
05:09:39 <Boegel> I thought it was worse :p
05:10:13 <shapr> hej psi 
05:10:38 <Igloo> Optimal sleeping is probably something like 6 hours twice, preferably coinciding with times when you need to run a bundle of simulations
05:11:08 <shapr> Boegel: well of course they're good, they're experienced Haskell programmers ;-)
05:11:52 <psi> shapr, tja
05:12:32 <shapr> I think three years ago I was on the same ICFP team with Igloo and Heffalump, and I learned a lot from them.
05:12:58 <Igloo> Two years ago
05:12:58 * earthy notes that the displays look remarkably like a certain game I've seen kosmikus develop
05:13:33 <Boegel> ow, there a GUI ? :)
05:13:34 <Igloo> earthy: And he made the mistake of admitting it, so got roped into writing the visualiser  :-)
05:14:01 * Boegel would like to see the GUI in action :)
05:14:32 <kosmikus> yes, I should have just volunteered to write the visualiser, without telling anyone that I had code lying around
05:14:43 <Boegel> :o)
05:14:53 <kosmikus> the GUI isn't very good, though ...
05:15:31 <Igloo> But then, neither was the simulator or meta-language really
05:15:45 <kosmikus> sufficient for most of the things we wanted to do, though
05:15:50 <kosmikus> the meta-language was ok
05:15:53 <shapr> obviously
05:15:57 <shapr> you won :-)
05:16:02 <earthy> ;)
05:16:04 <kosmikus> and we spent enough time thinking about the strategy
05:16:10 <Igloo> Yeah, but there were some really silly things we missed, like not having it keep track of direction for us
05:16:55 <Boegel> what library did u use for the GUI ?
05:16:59 <kosmikus> Igloo: don't complain. most teams didn't even think about tracking dir at all ;)
05:17:04 <Igloo> Heh
05:17:07 <kosmikus> Boegel: wxHaskell
05:17:22 <Boegel> hmmz
05:17:35 <kosmikus> Igloo: consider how they felt when they found out that you could have done that ;)
05:17:49 <Boegel> I would love to see it in action, but I don't know what I have to install and download to get it working
05:17:53 <Boegel> is there a readme ?
05:18:16 <kosmikus> Igloo: I wonder if the 1 instruction ant is a typo
05:18:38 <Igloo> ISTR some teams readmes said "We'd have loved to have keep track of direction, but it would have meant copying everything out 6 times and probably made mistakes doing it"
05:18:40 <kosmikus> Boegel: I think there are installation instructions in the tarball
05:18:56 <Boegel> oh okay
05:19:26 <kosmikus> Boegel: if you have a ghc and wxHaskell installed, then it should be relatively easy to get it running
05:19:35 <Igloo> There's a 2 instruction ant 11 from bottom in the LD
05:19:45 <kosmikus> Igloo: yes, you're right ... there were 22 hand coded entries or something
05:19:48 <Igloo> That seems unlikely to me
05:20:01 <earthy> why?
05:20:13 <earthy> a do-nothing ant might actually be relatively successful...
05:20:26 <Igloo> It will gather no food, so at best it can draw
05:20:26 <earthy> if the other ants manage to screw up royally
05:20:45 <Igloo> Well, unless the other team deliver food to the wrong anthill, which would be monumentally stupid
05:20:58 <kosmikus> position 65 has 1 instruction
05:20:59 <earthy> getting killed on the wrong anthill? :)
05:21:32 <Igloo> I don't think you can kill anything with 2 instructions
05:21:35 <Igloo> BICBW
05:21:42 <Igloo> P65 must be wrong
05:23:16 * Boegel is going to wash his girlfriends car, since she is in class right now
05:23:17 <Boegel> bye !
05:24:24 <ski> bye Boegel
05:24:30 <Boegel> bye everyone
05:24:33 <shapr> cya
05:24:36 <Boegel> *afk*
05:26:13 * kosmikus is going home
05:48:31 <shapr> hi dak
05:52:17 <shapr> bye dak
05:55:12 * Heffalump appears briefly
05:58:43 <earthy> it's a hef
05:58:49 <earthy> it's a congratulatable hef
05:59:00 <earthy> Congratulations!
05:59:17 <earthy> (oh, and Igloo, lest you feel left out: *big* Congrats as well!0
05:59:45 <Heffalump> thanks :-)
05:59:52 <earthy> impressive result ;)
06:00:52 <xkb> ehmm.. I have a .bib file, how can I use that in another paper again?
06:01:25 <Heffalump> xkb: why do you think you can't?
06:01:36 <xkb> Heffalump, I moved the papers around in directories
06:01:40 <earthy> um... by simply including it?
06:01:42 <xkb> and now I get latex error msgs
06:02:47 <xkb> I used \bibliography{nameoffilewithout.bib}
06:02:53 <xkb> and its in the same dir
06:02:58 <xkb> so that should work
06:03:25 <Heffalump> yes, it should work
06:03:50 <earthy> so what's the error?
06:04:01 <xkb> its actually a Warning :?
06:04:13 <xkb> LaTeX Warning: Citation `haskellwww' on page 1 undefined on input line 18.
06:04:16 <xkb> and so on
06:04:31 <earthy> ah
06:04:34 <Heffalump> did you run latex, bibtex, latex?
06:04:39 <earthy> that's logical
06:05:00 <xkb> eh no.. I use a *shame* ide like program for latex
06:05:14 <earthy> you probably haven't run bibtex then
06:06:31 <xkb> hmm
06:06:41 <xkb> bibtex on the .aux right?
06:06:55 <xkb> shouldnt latex finish first?
06:07:12 <earthy> um, yeah
06:07:15 <earthy> doesn't it?
06:07:20 <earthy> then there's another error...
06:07:25 <xkb> it will not go beyond the end stuff now
06:07:31 <xkb>  \end
06:08:12 <xkb> only error msg I can find is underfull box
06:09:35 <xkb> odd
06:09:48 <xkb> the other version still latex'es
06:10:48 <earthy> try to remove the .aux
06:10:54 <earthy> (it'll be regenerated anyway)
06:13:31 <xkb> is latex <tab> sensitive?
06:13:53 <Igloo> You'd expect those warnings on the first latex run. It sounds like the latex is broken
06:16:03 <xkb> sh
06:16:06 <xkb> ah
06:16:19 <xkb> I isolated the problem to a sample code I added
06:16:58 <xkb> yep
06:17:11 <xkb> forgot to close lstlisting properly
06:17:18 <xkb> strange error though
06:17:33 <Igloo> latex isn't great on errors
06:21:15 <earthy> maybe we could try to get Bastiaan to look at doing a `student-safe' version of TeX, with good error messages, Helium-style... :P
06:22:20 <Igloo> nonpareil might be interesting when it's written, although there will still be the issues of getting journals to support it
06:23:48 <earthy> http://www.it.usyd.edu.au/~jeff/nonpareil/ this one?
06:28:49 <Igloo> Yup
06:36:52 <earthy> looks both interesting and stalled. :)
06:49:23 <Igloo> Yeah, haven't head anything in a while  :-/
06:51:24 * Boegel = back
06:52:51 <Lemmih> Welcome back Boegel.
06:54:20 <Boegel> everybody always says Latex is so great, but I think the texts you produce look pretty dull
06:54:32 <Smerdy> Boegel, :O
06:54:48 <Boegel> well, it's true isn't it ?
06:54:55 <earthy> boegel: depends on the font you choose
06:55:07 <Boegel> I'm a student at Ghent university, and they like reports and papers and stuff in Latex
06:55:13 <Boegel> so I do it that way every tim
06:55:15 <Boegel> +e
06:55:18 <Smerdy> LaTeX gives you a lot of flexibility.
06:55:22 <Boegel> I know
06:55:30 <Smerdy> Don't make the mistake of only realizing the existence of one document class. :)
06:55:40 <Smerdy> You can change _everything_ about the appearance.
06:55:46 <Smerdy> I use it to make PowerPoint lookalike slide shows.
06:55:51 <Boegel> it's handy-dandy, you can concentrate on the content rather than the layout
06:55:53 <earthy> Computer Modern is a font in the Modern style, which was a font-type designed 'round 1900 in the style of the fonts of the 1700's...
06:55:53 <Boegel> but still...
06:56:01 <Boegel> Latex for slide shows ? :|
06:56:16 <Smerdy> Yes, and you'd never tell the difference except through being a font geek. :)
06:56:21 <earthy> boegel: you don't know about the latex beamer package?
06:56:24 <Boegel> font-type designed round 1900 ?
06:56:25 <Igloo> prosper.sf.net is nice for that
06:56:27 <Smerdy> (for LaTeX vs. PowerPoint)
06:56:29 <Boegel> no, I don't
06:56:37 <Boegel> i find Powerpoint good enough
06:56:41 <ibid> earthy: implemented in the 1970's :)
06:56:43 <earthy> well, it produces beautiful slideshows.
06:56:45 <earthy> ibid: :)
06:56:50 <earthy> in PDF
06:56:59 <Igloo> e.g. http://web.comlab.ox.ac.uk/oucl/work/ian.lynagh/talks/talk.pdf
06:57:13 * ibid likes concrete
06:57:30 <Smerdy> Boegel, you find it good enough because you don't need to make presentations about math. :P
06:57:48 <Boegel> we'll, I have
06:58:05 <earthy> anyway, I specifically decided to go with computer modern as the font for the rag we make for our dancegroup... as we do rococo dances, I thought the font to be fitting ;)
06:58:17 <Boegel> but then I took screenshots of Tex, of inserted them as a picture :o
06:58:33 <earthy> the horror! the horror!
06:58:41 <Boegel> :)
06:58:55 <Boegel> I succeeded in making it look good, so eh :p
06:59:18 <Boegel> I'm pretty lasy in looking for how I can make it easier
06:59:30 <Boegel> maybe I should explore more sometimes...
07:01:06 <Boegel> I'm out again
07:01:14 <Smerdy> Boegel, next time, at least use TexPoint.
07:01:20 <Boegel> I'm gonna look to formulate the basic ray trace algorithm in FunMath
07:01:27 <Smerdy> Boegel, http://raw.cs.berkeley.edu/texpoint/
07:01:34 <earthy> Argh! FunMath!
07:01:34 <Boegel> it's been like 3 months since I've used FunMath, so this could be nice
07:01:38 <earthy> heeeewwwwwww
07:01:45 <Boegel> do you know it ?
07:01:45 <earthy> get'r'off!
07:01:51 <earthy> yich
07:01:56 <Boegel> how ? :)
07:02:56 <Boegel> earthy, how do you kno FunMath ?
07:02:57 <earthy> back when I was a naive freshman, I made the mistake of taking up one of the assistant professors on his offer of handing out copies of his Ph.D. thesis, along with explanations
07:03:00 <Boegel> +w
07:03:27 <earthy> it was written using mostly FunMath, as Raymond Boute was the thesis advisor
07:03:34 <Boegel> :)
07:03:43 <Boegel> he's my thesis advisor too now :)
07:03:46 <earthy> so I still have 1993-vintage explanation of FunMath in my bookcase at home
07:03:49 <Boegel> where are you from :>
07:04:02 <earthy> so, how's the friendly german lady? :)
07:04:02 <Boegel> is it a small booklet ?
07:04:10 <earthy> it is
07:04:15 <Boegel> german lady ? I don't know ay german lady
07:04:24 <Boegel> I think I have the same booklet right next to me :p
07:04:29 <Smerdy> Would anyone here like to help me test an SML-based PHP replacement?
07:04:45 <Boegel> dus je spreekt nederlands earthy ?
07:04:46 <Boegel> :o)
07:04:54 <earthy> how many Ph.D. students does Raymond have? :)
07:05:12 <Boegel> we'll, it's no for a doctor's degree if that's what you mean
07:05:13 <earthy> atm
07:05:17 <earthy> ah... :)
07:05:22 <Boegel> it's a final year thesis
07:05:29 <earthy> 'kay. you're not lost then. :P
07:05:35 <Boegel> but he has 1 Ph.D. student at the moment
07:05:44 <earthy> yes. I met him. :)
07:05:49 <Boegel> and 2 final year students for a thesis
07:05:55 <earthy> what's his name. Wammes?
07:05:56 <Boegel> spreek je Nederlands dan ?
07:05:59 <Boegel> Hannes
07:06:02 <earthy> that's it.
07:06:11 <earthy> longish hair. plays the guitar.
07:06:11 <Boegel> you don't speak Dutch ?
07:06:12 <shapr> ik begrijp het niet
07:06:18 <xkb> lol
07:06:21 <Boegel> idd, that's him :)
07:06:22 <earthy> natuurlijk spreek ik Nederlands. *duh*. :)
07:06:29 <xkb> check his domain :P
07:06:34 <Boegel> oh ok, but let's keep it in English :p
07:06:46 <shapr> Smerdy: dude, go away
07:07:03 <Boegel> where did you met him ?
07:07:15 <Boegel> because he's helping me (us) with my (our) thesis
07:07:25 <Smerdy> shapr, ?
07:07:37 <earthy> ;)
07:07:41 <xkb> Smerdy, he want a haskell version :P
07:07:45 <xkb> wants
07:07:57 <earthy> met him in Marktoberdorf
07:08:01 <Boegel> what is wrong with FunMath ?
07:08:07 <earthy> it's unsound.
07:08:26 <Boegel> http://www4.in.tum.de/misc/summerschool/2004/index.shtml this ?
07:08:32 <Boegel> unsound ? what do you mean ?
07:08:35 <earthy> well, the 2003 variety
07:09:11 <earthy> boegel: it has (had?) the problem of allowing you to state paradoxes that lead to true=false *within* the system
07:09:54 <earthy> e.g., it allows you to define a set of all sets not including themselves.
07:10:01 <Smerdy> shapr, hello?
07:10:58 <Boegel> a set of all sets not including themselves ?
07:11:16 <earthy> yup. now, does that set include itself or not? :)
07:11:39 <earthy> funmath makes a choice
07:11:52 <Boegel> and I Boute aware of that ?
07:11:58 --- mode: ChanServ set +o shapr
07:12:07 --- kick: Smerdy was kicked by shapr (don't pick on newbies)
07:12:09 <Boegel> and how do you define a thing like that ?
07:12:10 --- mode: shapr set -o shapr
07:12:12 <earthy> the proof was once posted in FunMath on a noticeboard in Nijmegen
07:12:19 <earthy> I've seen it... a long time ago.
07:12:37 <Boegel> but that was in 1993 or something like that ?
07:12:38 <earthy> (and don't for a sec believe anything he says about Nijmegen students. they're just as lazy as you are ;))
07:12:45 <earthy> something like that. ;)
07:13:03 <Boegel> what does he say about Nijmegen students ? that the scene is up and running therev?
07:15:00 <Boegel> the 'formal' scene I mean
07:15:07 <earthy> well... ;)
07:15:10 <earthy> not really :)
07:16:26 <Boegel> what does he say then ?
07:18:46 <Boegel> ... ? :s
07:18:49 <earthy> he says that, and that students are much more willing to be formal
07:18:55 <earthy> it's not true. :)
07:19:13 <Boegel> I don't think he said that
07:19:33 <Boegel> I had classes with him between januari and june of this year
07:19:40 <Boegel> and I haven't heard him say it
07:19:47 <earthy> ah... then he's softened up
07:19:50 <Boegel> he did a few weird things, that true
07:19:56 <earthy> Sarah did
07:20:15 <Boegel> like give us the exaam of last year so we could practice
07:20:28 <earthy> that doesn't sound too weird
07:20:43 <Boegel> and then give us an exaam that's 2 levels higher than the last one :)
07:20:52 <earthy> nor that. :P
07:20:57 <Boegel> so we were pretty confident to go to the exaam, but once there :s
07:21:02 <earthy> sounds like par for the course for Boute
07:21:11 <Boegel> par ?
07:21:14 <earthy> I'm glad I never had any classes by him
07:21:29 <Boegel> he not that bad really, at least I thought so
07:21:35 <earthy> (golf term... par == the number of shots you're allowed to make to go from tee to putt)
07:21:37 <Boegel> I think he's too smart to teach
07:22:00 <Boegel> I had 1 question out of 3 somewhat correct
07:22:15 <Boegel> and the other 2 only a few lines (and probably totally wrong)
07:22:21 <Boegel> and I got a 14/20 :o)
07:22:28 <Boegel> so I don't think he's that bad
07:22:52 <Boegel> and he really did his best to explain the students something they didn't understand
07:23:07 <Boegel> but some really did no effort to understand it, but kept posing questions
07:23:22 <earthy> ah, right
07:23:34 <Boegel> so one time, he came at a point where he had no idea how to explain it differenlty
07:23:46 <Boegel> only a few students got what he was saying
07:23:53 <Boegel> the rest just didn't listen
07:24:04 <Boegel> but kept pushing him to explain it agan
07:24:20 <Boegel> do you think the FunMath system shouldn't be used ? is it a bad thing ?
07:24:28 <Cale> FunMath?
07:24:36 <Boegel> oh, here we go :)
07:24:40 <Cale> hehe
07:24:42 <Boegel> do you know it to Cale ?
07:24:58 <Cale> no, I'm sort of interested in what you're talking about
07:25:03 <Boegel> oh
07:25:04 <Boegel> we'll
07:25:14 <Boegel> FunMath is a 'system' too prove things in
07:25:18 <Boegel> on paper that is
07:25:24 <Boegel> not automatic or stuff like that
07:25:35 <Cale> okay
07:25:51 <Boegel> a universal system, in which you can prove things in a variety of domains
07:26:08 <Boegel> physics, maths, electronic systemss, ...
07:26:20 <Cale> (I'm a pure mathematics student, just to mention)
07:26:35 <Boegel> earthy, do you think that FunMath is not a good system ? or what are you saying
07:26:52 <Cale> What are the axioms?
07:27:04 <Cale> Is it consistent?
07:27:11 <Boegel> it should be
07:27:32 <Boegel> but earthy just told me that it was possible too derive true=false in it
07:27:40 <Cale> interesting
07:27:40 <Boegel> but that was back in 1993
07:27:54 <Boegel> maybe I can find a tutorial or something like that...
07:28:02 <Cale> hehe - well, you should probably agree on which version of the axioms to use
07:28:11 <Cale> Oh, I'd better run
07:28:18 <Boegel> I have different things lying around, but I'm not sure if I can share 'em here
07:28:21 <Boegel> run ?
07:28:22 <earthy> ummm... it's like set-theory before ZF ;P
07:28:30 <Boegel> ZF ?
07:28:43 <earthy> zermelo-fraenkel... they axiomatised it
07:28:50 <Cale> I have a lecture to attend in 1/2 an hour that I need to get ready for.
07:28:56 <earthy> have fun cale
07:28:57 <Boegel> ow
07:29:07 <Cale> I like ZFC. :)
07:29:11 <Boegel> maybe I can give you something on FunMath later on, but I have to look into it
07:29:25 <Boegel> so you think it has potential ?
07:29:26 <earthy> and putting it online can be tricky...
07:29:47 <Boegel> earthy, putting what online ? 
07:30:06 <earthy> ISTR my master's advisor (also a Ph.D. student of Boute) having remarked `Raymond once exhausted the entire symbolset of TeX in a paper'
07:30:36 <shapr> wow
07:30:37 <Boegel> exhausted ?
07:30:50 <Cale> NBG is also quite a nice axiomatization.
07:30:58 <Boegel> I don't get what you are trying to say
07:31:07 <shapr> oh do it in dutch :-)
07:31:08 <Boegel> (but maybe that's just my fault :p)
07:31:09 * shapr bounces
07:31:16 * Boegel bounces too
07:31:21 * Heffalump bounces three
07:31:38 * shapr wonders if that much bouncing will affect channel stability
07:31:48 <earthy> `Raymond heeft ooit de volledige symboolset van TeX nodig gehad'
07:31:49 <shapr> kepten! she kent tek much mer!
07:31:50 * Boegel feels a shake
07:31:52 * Cale bounces n, n >= 4
07:32:04 <shapr> oooh, dutch!
07:32:06 <Boegel> mathemician, tsss :p
07:32:12 * shapr bounces wildly
07:32:26 <Boegel> the entire symbolset ?
07:32:33 <Boegel> is that that bad ?
07:32:43 <Cale> http://planetmath.org/encyclopedia/VonNeumannBernausGodelSetTheory.html
07:32:48 <earthy> that's a *shitload* of symbols
07:32:54 <earthy> all with very specific meanings
07:32:55 <Boegel> he uses much more symbols than the number of symbols in TeX according to me
07:33:15 <earthy> you don't want to have to remember every specific definition for that
07:33:26 <earthy> in that sense FunMath can be eminently unpractical
07:33:27 <Boegel> yeah, but some are very familiar
07:33:42 <earthy> it's those that aren't that bite you
07:33:52 <Boegel> but if you use it in 1 domain only, i think you can limit the number of symbols to a small amount
07:34:09 <Boegel> that the disadvantage of keeping it flexible for every possible domain
07:34:22 <Cale> There are many ways to formalise mathematics.
07:34:31 <Boegel> then you should explain them when you use them
07:34:48 <Cale> Any way to do it where you explain your terminology is fine with me. :)
07:35:14 <Boegel> most students hated the course
07:35:21 <Boegel> but I found it interesting
07:35:26 <Boegel> hard, but interesting
07:35:43 <Boegel> and that's why I choose to make my final year thesis with him
07:35:49 <Boegel> I think it has potential
07:35:59 <Boegel> and he's been perfectionising it for 20 years now
07:36:02 <Boegel> or even longer
07:36:10 <Cale> It doesn't even have to have remotely the same results. (Though it's nice when you can instantiate large bodies of work like, say, group theory.)
07:38:07 <Boegel> he speeches frequently at congresses and stuff like that
07:38:33 <Boegel> that's no garante for a godd system, but still, it means something
07:39:32 <shaleh> props to the winners!!!
07:40:44 <Boegel> earthy, you think I'm making a mistake by doing my thesis with prof. Boute ?
07:41:04 <earthy> nope
07:41:22 <earthy> I just know I wouldn't want to
07:41:42 <Boegel> http://web.comlab.ox.ac.uk/oucl/research/areas/ap/ssgp/slides/boute.pdf
07:41:45 <Boegel> check page 7
07:41:53 <Boegel> there you can see some definitions in Funmath
07:42:15 <Boegel> and why wouldn't you ?
07:44:27 <SyntaxLaptop> Igloo et al. Congrats on ICFP!
07:44:38 <Igloo> Thanks  :-)
07:44:56 <shaleh> Haskell had a good showing this year.
07:45:10 <Boegel> earthy, why wouldn't you?
07:45:18 <shaleh> The OCaml project that won Judge's prize sounded damn cool too.
07:45:37 <SyntaxLaptop> way to go Haskell!
07:45:41 <Boegel> :)
07:45:44 <SyntaxLaptop> finally we'll start getting some respect ;)
07:45:48 <shaleh> (-:
07:46:00 <vegai> hm? Where are the results?
07:46:04 <Igloo> http://www.cis.upenn.edu/proj/plclub/contest/results.php
07:46:36 <shaleh> Igloo: did the judges say what they liked about your entry? or was it you simply won more heats?
07:46:52 <Igloo> Only the judges prize is at all subjective
07:48:42 <vegai> The judges hastily declare: "Java and C++ are very suitable for rapid prototyping."
07:48:48 * vegai boggles.
07:50:22 <Boegel> I'm off again, looking how to formulate the ray tracing algorithm in FunMath
07:50:22 <SyntaxLaptop> haha
07:50:25 <Boegel> bye everyone :)
07:56:17 <shaleh> vegai: they had a lightning entry in which kicked ass
07:56:51 <shaleh> vegai: fast compilers and good upfront design can lead to fast C++ coding
08:05:01 * shapr bounces
08:13:52 <bourbaki> moin
08:14:05 <Lemmih> moinmoin.
08:14:08 <shapr> hiya bourbaki 
08:15:05 <bourbaki> *bows*
08:17:30 <shapr> hej kristnjov 
08:17:35 <kristnjov> tjo
08:25:40 * shapr bounces
08:25:57 <earthy> bouncebounce?
08:26:02 <shapr> yesyes
08:33:41 <shapr> seems like other people are bouncing too
08:41:32 <bourbaki> that just seems to cause you jump ;)
08:41:41 <bourbaki> its not the rest of the world that jumps
08:42:38 <shapr> oh is that it?
08:44:10 <bourbaki> yep
08:44:17 <shapr> wow, I learned something useful today.
08:44:49 <shapr> Smile, and the world smiles with you. Bounce, and the world doesn't jump!
08:45:41 * ski 's leaving
08:45:47 <shapr> bye ski!
09:19:12 <shapr> hiya Kelt 
09:19:16 <shapr> how's code?
09:24:50 <Lemmih> Haskell is not leet anymore?
09:25:49 <shapr> haskell is far better than leet
09:26:02 <shapr> Haskell is the language of choice for discriminating hackers!
09:26:28 --- topic: set to '["Learning Haskell - http://www.haskell.org/learning.html","We put the Funk in Funktion","See logs @ http://tunes.org/~nef/logs/haskell/","related channels #haskell.se #haskelldb #darcs","http://www.haskell.org/cabal/","Haskell is the language of choice for discriminating hackers! - http://www.cis.upenn.edu/proj/plclub/contest/results.php#first"]' by shapr
09:26:37 <shapr> hiya stepcut
09:26:39 <stepcut> hey
09:27:24 <TheHunter> jsince
09:27:33 <TheHunter> oops, sorry
09:28:11 <emu> aw, Haskell is popular now.  that sucks, I will have to stop learning it and find something else.
09:28:37 <stepcut> emu: epigram maybe?
09:29:36 <shaleh> emu: heh
09:34:02 <earthy> Haskell popular? nah
09:34:17 <earthy> not nearly popular enough to jump ship ;)
09:35:20 <shapr> anyway, Epigram is there in case Microsoft switches to writing all their apps in Haskell.
09:40:56 <emu> well it says that Haskell is the choice for discriminatory hackers
09:41:26 <emu> I don't want to be known as puhrejudished
09:42:39 <Lor> Congratulations to dunkosmiloolump!
09:42:42 * Lor is a bit lagging.
09:48:05 <TheHunter> [OT] does anyone know a good cd ripper?
09:48:16 <shaleh> for what OS?
09:48:27 <TheHunter> linux
09:48:29 <shaleh> for unix the ONLY one is cdparanoia
09:48:41 <shaleh> every GUI, shell tool, etc uses it
09:48:46 <TheHunter> i know, but i mean a frontend
09:48:48 <shaleh> it kicks ass and takes names
09:49:16 <shaleh> personally, i use abcde. written in shell, kinda of a neat frontend. but definitely not for everyone.
09:49:49 <shaleh> freshmeat lists plenty
09:49:50 <TheHunter> yeah, but everyone i try seems to suck
09:49:51 <shaleh> you want want that has the hooks to run arbitrary commands, like normalize
09:50:18 <TheHunter> i used to use jack, which was nice until the author decided that i can't provide lame options anymore
09:51:14 <shaleh> suck
09:51:25 <shaleh> but then, mp3 is suck too (-:
09:51:25 <TheHunter> can abcde handle various artist cds?
09:51:31 <shaleh> TheHunter: yep.
09:51:42 <TheHunter> ok, i'll check this one out
09:51:46 <shaleh> TheHunter: it is shell, expect to hack on it. but it is fairly easy to hack.
09:51:54 <TheHunter> i don't really trust ogg for high bitrates
09:51:58 <shaleh> I started using it because for a while i was on the same channel as the author
09:52:05 <shaleh> TheHunter: why?
09:52:34 <shaleh> it consistently does well in audio reviews
09:52:42 <TheHunter> because i'm very paranoid
09:52:50 <shaleh> personally, I rip to flac and then convert that to ogg for my mobile player
09:53:18 <TheHunter> i think should start using flac, too
09:53:36 <shaleh> I get about 2.8, 2.85 albums per gig
09:54:09 <shaleh> predominantly rock and blues
09:54:20 <TheHunter> same here
09:54:21 <shaleh> different music compresses differently
09:55:23 <TheHunter> which rate do you get?
09:55:29 <shaleh> 'rate'?
09:55:34 <TheHunter> compression rate
09:55:48 <shaleh> hmm, been a while since I looked.
09:55:53 <shaleh> not sure off hand
09:56:04 <TheHunter> nevermind
09:56:04 <shaleh> typical file is about 20 - 35 MB
09:56:16 <shaleh> 50 is not unheard of
09:56:44 <shaleh> I have quite a few in the 40 - 45 range
09:57:05 <shaleh> but I also have a tendency for longer pieces. like old school metallica
09:59:00 <TheHunter> it's for example 25 MB for a 13 minute song for me
09:59:42 <shaleh> mp3 or flac?
09:59:49 <TheHunter> mp3, of course
09:59:51 <shaleh> ah
10:00:00 <shaleh> yeah, expect bigger (-:
10:00:16 <shaleh> I typically see about 1, 1.3 mg per minute with ogg
10:00:29 <shaleh> s/mg/mb/
10:00:59 <TheHunter> ok, let's give abcde a shot
10:01:26 <shaleh> back to work, chat later
10:07:06 <shapr> I like flac
10:12:45 * TheHunter feels bad about not using flac for archiving music
10:12:53 * shapr shrugs
10:12:58 <shapr> whatever works for you.
10:13:11 <shapr> not so many players support flac
10:13:23 <shapr> even fewer support ogg-wrapped flac
10:13:39 <Marvin--> man, I was positively productive at work today
10:13:43 <shapr> and flac doesn't have a standard way to include artist/album/etc such that players can easily show it
10:13:45 <shapr> Marvin--: shocking!
10:13:49 <shapr> Marvin--: there goes your week.
10:13:52 <Marvin--> changed a whole line of source code
10:13:55 <Lor> It seems to be a popular trend these days to archive cd's as flac into dvd's.
10:14:23 <musasabi> variable bitrate oggs are quite sufficient for me.
10:14:26 <TheHunter> shapr: but maybe in a few years, when i've got $$$ equipment, i'll regret it
10:15:02 <musasabi> now if we could find a good portable player for them (most models support only fixed bitrates)
10:19:02 <xkb> does the ipod support flac?
10:19:44 <andersca> no
10:20:01 <xkb> didnt they support some other lossless codec?
10:20:49 <andersca> itunes supports apple lossless
10:20:57 <andersca> dunno about if the ipod supports that, mine doesn't afaik
10:21:31 <xkb> perhaps only the > 3G
10:21:39 <shapr> The_Tick: have you seen Arthur?
10:21:57 <The_Tick> shapr: he flew away :(
10:22:00 <shapr> :-(
10:22:04 <shapr> seen any ninjas lately?
10:22:14 <The_Tick> yes, dispatched them last night
10:22:18 <shapr> cool!
10:22:19 <The_Tick> wow, a non-spoon reference
10:22:22 <The_Tick> i am impressed :D
10:22:33 <shapr> spoon references are so 90s
10:22:51 <The_Tick> ya, they are
10:22:55 <The_Tick> it was funny.. 1 time
10:23:01 <shapr> a spork is much niftier.
10:23:07 <The_Tick> :D
10:23:29 <shapr> so Mr Tick Sir, are you here to investigate the world of Haskell?
10:23:35 <The_Tick> somewhat
10:23:39 <The_Tick> i'm working on python right now
10:23:44 <shapr> ah, Python is nifty.
10:23:57 <The_Tick> was actually going to see if haskell is a good candidate for a growl binding
10:23:59 <shapr> Python is an excellent first language, and an excellent production quality language.
10:24:03 <shapr> what's growl?
10:24:09 <The_Tick> http://growl.info
10:24:18 <The_Tick> it is an os x notification epicenter
10:24:34 <The_Tick> ^^ note the word epicenter, marketing lingo :P
10:24:35 * xkb awakes at sound os os x
10:24:38 <shapr> oh, xmessage?
10:24:50 <The_Tick> more like guifications and gnotify and knotify
10:24:58 <The_Tick> except we're trying to be generic
10:25:14 <The_Tick> has perl, python, tcl, applescript, cocoa, carbon
10:25:17 <The_Tick> java somehow, etc
10:25:17 <shapr> written in C with a documented API?
10:25:31 <The_Tick> cocoa with documented *
10:25:55 <shapr> a Haskell binding should be pretty easy then.
10:26:13 <The_Tick> would anyone here be interested in making one?
10:26:34 <shapr> I know of several OSX users around here, but I'm not one of them.
10:26:46 <The_Tick> hmm
10:27:02 <The_Tick> xkb: awoke at the sound of os x :P
10:27:09 <xkb> yeah
10:27:13 <The_Tick> you use it?
10:27:19 <xkb> I do.. 
10:27:22 <The_Tick> awesome :D
10:27:25 <xkb> its my main os atm
10:27:29 <The_Tick> mine too
10:27:42 <xkb> mainly due to it being on my laptop
10:27:43 <xkb> :D
10:27:47 <The_Tick> haha
10:27:50 <xkb> and its a great os...
10:27:58 <The_Tick> ya, linux on my ibook is.. not up to par
10:28:18 <xkb> I have thought of putting linux on.. decided it was not worth the trouble
10:28:22 <The_Tick> ya
10:28:23 <The_Tick> it's not
10:28:23 <xkb> esp. with fink and all
10:28:33 <The_Tick> i dual booted for a while
10:28:43 <The_Tick> realized i was using os x through mac on linux more than linux
10:29:02 <xkb> I think I would do the same
10:29:19 <xkb> The only thing I dislike about os x is that terminal app
10:29:28 <The_Tick> i use x11+rxvt
10:29:34 <The_Tick> works well
10:29:44 <xkb> ok.. you need to have X11 running the whole time
10:29:44 <Marvin--> meh
10:29:46 <Marvin--> stupid X
10:30:00 <The_Tick> xkb: ya :(
10:30:16 <xkb> there is also some app called "The Terminal" or something like it
10:30:19 <Marvin--> and stupid nvidia friggin' card
10:30:26 <The_Tick> iTerm?
10:30:30 * Marvin-- tries with a newer version of the nv driver
10:30:31 <xkb> thats the one
10:30:35 <The_Tick> it's alright
10:30:39 <The_Tick> kinda too slow for me
10:30:42 <xkb> The_Tick, its a real mem hog though
10:30:44 <The_Tick> but i hear getting better
10:30:49 <Marvin--> iiihTerm
10:30:50 <xkb> ah.. nice
10:30:51 <The_Tick> ya
10:32:13 <xkb> Anyway.. im not much at home on the foreign language interface of haskell
10:32:33 <The_Tick> know anyone here who is and uses os x and has free time to spend on it sometime?
10:32:36 <The_Tick> hehe
10:33:35 <xkb> not out of the top of my head
10:33:37 <xkb> ..
10:35:12 <The_Tick> kk
10:35:16 <The_Tick> oh well :D
10:50:06 <lmbdwr> hey
10:50:45 <lmbdwr> someone can confirm that C structures can be abstracted as intersection types ?
10:52:04 <Oejet> Imbd: What are intersection types?
10:52:27 <lmbdwr> to me, they are composed types 
10:52:30 <lmbdwr> thats why I'm asking 
10:52:50 <lmbdwr> peoples in the litterature seems to talk about intersection types for structures/class 
10:53:37 <emu> tuples, you mean?
10:53:57 <Oejet> Or: data abe = Chimp string | Orangutang string?
10:54:03 <emu> no, that's a union type
10:54:12 <emu> sum, union, disjoint
10:54:41 <lmbdwr> I think Im talking about data abe = Chimp string * Orangutang string
10:55:04 <lmbdwr> e.g. both string have different memory spaces but are inside a single type 
10:55:21 <lmbdwr> or maybe I'm completely wrong cause Im not sure about the syntax 
10:55:26 <emu> you're talking about tuples, and yes, i would consider a C structure to be similar.  except that a C structure has an almost literal definition as the layout for a series of bits...
10:55:38 <emu> and C is not strongly-typed..
10:56:27 <lmbdwr> emu, i'm working on binary code, trying to reverse C++ compiled code, its just a little experiment project 
11:44:06 * shapr boings
11:44:35 <shapr> lmbdwr: dark wrote a partial uncc in Haskell
11:55:14 <shapr> hej mijailo__ 
11:59:11 <shapr> kristnjov: are you having internet troubles?
11:59:16 <kristnjov> indeed
11:59:20 <kristnjov> f-kin bostream
11:59:32 <shapr> they're owned by BBB aren't they?
11:59:35 <kristnjov> yes.
12:01:17 <shapr> my two days experience using BBB have been good so far.
12:01:23 <kristnjov> i'd bet
12:01:31 <kristnjov> my connection goes down pretty randomly
12:01:41 <shapr> do you know if BBB offers IPv6 tunnels?
12:02:12 <kristnjov> no idea
12:03:30 <psi> BBB is great.
12:03:49 <shapr> I get a good ping in Wolfenstein, and excellent download speed for apt-get
12:03:52 <psi> never had any problems for... 4 years?
12:03:53 <shapr> I'm happy so far.
12:04:07 <shapr> sadly, static IP is five times more expensive than what we pay now.
12:04:07 <Maddas> bredbandsbolaget?
12:04:10 <shapr> Maddas: yup
12:04:21 <shapr> are you .se too?
12:04:22 <Maddas> just wanted to say the name, it sounds so neat :-)
12:04:25 <shapr> I thought you were .ch ?
12:04:29 <Maddas> I am
12:04:34 <shapr> whew
12:05:04 <Maddas> I know BBB from when I was in Norway, the other guys in the house I was living (well, staying) in were very excited about the possibility of getting a connection fro
12:05:05 <Maddas> m them
12:05:18 <shapr> neat
12:05:26 <Maddas> But then they found out that they were living on the wrong side of the street, I think :-)
12:05:31 <shapr> dang
12:23:42 <lmbdwr> shapr, interresting, but Im not doing a decompiler, but an analyser, and my main subject is type recovery
12:25:14 <shapr> ah, ok
13:05:43 * shapr hops cheerfully
13:07:16 * Marvin-- yawns
13:08:09 <shapr> Lemmih got me interested in writing an elegant solution for http://acm.uva.es/p/v1/105.html
13:08:40 <Marvin--> gah
13:08:42 <Marvin--> my throat is sore
13:15:18 <Maddas> acm is kinda nifty
13:15:23 <Maddas> (The online thingy)
13:15:27 <shapr> yah, I agree
13:15:31 * shapr registers
13:15:44 <Maddas> We wrote entries for it in a university project :-)
13:16:06 <shapr> um, I forgot to check to see if they accept Haskell submissions
13:16:14 <Maddas> (Just twenty people or so, it was one project out of many that one could choose from)
13:16:18 <Maddas> They didn't when I participated
13:16:19 <shapr> ick, C, C++, Pascal, and Java
13:16:26 <SyntaxLaptop> pascal!!
13:16:28 <Maddas> Only C, C++, Java and Pascal IIRC. 
13:16:45 <SyntaxLaptop> how does pascal make a list with C, C++, and Java?
13:16:53 <SyntaxLaptop> maybe the most often taught languages
13:16:53 <Maddas> You can embed assembler in the C/C++ (not sure which, I don't know much C/C++ at all) to cheat, though :-)
13:16:54 <shapr> if I submit enough Haskell and epigram solutions I'm sure they'll either add a new category or delete my membership
13:18:11 <Marvin--> for some reason the language offers coincide with compiler software published by ibm who happens to be the sponsor of the acm programming contest :)
13:18:45 <shapr> wonder what that reason might be
13:19:02 <Maddas> It's not just about how often it's taught, but that's surely one reason
13:19:18 <Maddas> They also had to do a bit of work to prevent the user from meddling with the system, I think
13:19:23 <Marvin--> it's one of the reasons I've never bothered entering the contest
13:19:47 <shapr> well foo
13:19:52 <Maddas> Well, I used a language with a compiler that just compiled to C for quite a few entries :-)
13:19:56 <shapr> maybe solutions in Joy
13:19:56 <vegai> epigram? Will the learning never end? :-/
13:20:00 <tic> joy?
13:20:03 <shapr> vegai: I sure hope not!
13:20:06 <tic> how many languages are there? :
13:20:09 <shapr> not enough
13:20:18 <shapr> I've come up with some ideas for a new language...
13:20:21 <Maddas> Although I had to modify the generated source to be in one file only (I wrote a script to do that) and not depend on stuff it wasn't allowed to depend on
13:20:23 <tic> appearently not.
13:20:32 <Marvin--> I'm skeptical that they'd allow code produced by -fvia-C :)
13:20:37 <shapr> heh
13:21:05 <shapr> oh hey, I'm trying to scare up writers for Haskell Monthly
13:21:08 <Marvin--> nor pyrex
13:21:36 <shapr> I just realized I can ripoff these problems for the code puzzle column
13:22:37 <shapr> anyone interested in writing something for the inaugural issue of Haskell Monthly?
13:23:30 <shapr> is that a no?
13:24:06 <shapr> simple tutorials?
13:25:06 <shapr> profile a neat Haskell app?
13:25:19 <vegai> everyone's busy looking up the word "inaugugal", perhaps :-P
13:25:26 * shapr snickers
13:25:33 <vegai> (without my added typo)
13:26:01 <vegai> when's the deadline?
13:26:22 <SyntaxLaptop> hm. it seems that if I mount and unmount my camera, I can't mount my ipod and vice-versa
13:26:27 <SyntaxLaptop> :(
13:26:35 <shapr> vegai: don't know yet
13:26:45 * Riastradh chuckles at vegai & shapr.
13:27:11 <shapr> oh, I'd like to have a column of interviews with famous Haskellers
13:28:00 <shapr> any other suggestions for Haskell Monthly?
13:28:03 <shapr> I still want a better name
13:28:07 <shapr> thebug: what was the name you suggested?
13:28:13 <Riastradh> Ooh, ooh.
13:28:18 <Riastradh> How about 'Monthly Haskell?'
13:28:47 <SyntaxLaptop> Monty Haskell
13:30:08 <shapr> maybe it should be published once every Discordian season
13:31:12 * Boegel waves at everybody: I'm back
13:31:15 <shapr> hi Boegel
13:31:39 <Boegel> shapr, are you planning to write an article in a magazine or something ? or what is Haskell Monthly ?
13:32:15 <shapr> the OCaml community has OCaml weekly, so I decided that Haskell should have one also.
13:32:24 <Boegel> I haven't put the ray tracing algorithm in FunMath doh, I still have to catch up on FunMath a little bit
13:32:34 <Boegel> but then monthly :p
13:32:41 <Boegel> there's no magazine on Haskell yet ?
13:32:49 <shapr> well, several people told me it should probably be monthly, including Simon Peyton-Jones
13:32:58 <Boegel> who's he ?
13:33:26 <shapr> he's a nice guy
13:33:43 <shapr> search google for simon peyton-jones and haskell
13:34:42 <Boegel> oh, he made ghc, right ?
13:35:06 <Boegel> is that a microsoft product ? I had no idea :s
13:35:11 <shapr> :-)
13:35:27 <anduril1> why isn't it called Visual Haskell?
13:35:40 <shapr> I think that part isn't finished yet.
13:36:09 <Boegel> because there is no GUI stuff in it ? :p
13:37:01 <shapr> actually, I heard rumors that it worked just fine, but that microsoft hadn't released it, and then it mostly bitrotted
13:37:06 <shapr> I forget whey they didn't release it
13:37:23 <Boegel> they had a GUI library for Haskell ?
13:37:45 <shapr> they had integration with Visual Studio
13:38:05 <Boegel> oh
13:38:16 <Boegel> probably because Haskell isn't popular enough
13:38:33 <SyntaxLaptop> re: visual studio, scroll down to "projects": http://www.haskell.org/~simonmar/
13:38:44 <Boegel> and because functional programming is harder to make it work with other languages
13:39:03 <shapr> whoa nifty
13:39:08 <shapr> Boegel: no it's not!
13:39:18 <Boegel> "If you're reading this after summer 2004, I guess we failed :-)"
13:39:19 <Boegel> hehe
13:39:33 <Boegel> oh no ? have you worked with Visual Studio ?
13:39:41 <shapr> I claim that it's easier to write Haskell to C bindings than it is to write Python to C bindings.
13:39:56 <Boegel> you can code a bit in C, a bit in J#, a bit in si, a bit in la
13:40:00 <Boegel> and it works all together
13:40:09 <Boegel> I don't know Python :p
13:40:09 <Marvin--> for some definition of "works"
13:40:16 <shapr> Boegel: does it work on Linux?
13:40:22 <Boegel> lol @ Marvin
13:40:26 <Boegel> eh, I have no idea
13:40:36 <Boegel> prolly not, since it is a M$ product
13:40:38 <Marvin--> I'd hazard a guess that it wouldn't work at all on Linux
13:40:51 <shapr> Haskell, Python, and C all work just fine on Linux, Windows, MacOS X, and some others.
13:40:52 <Boegel> maybe in Wine ;)
13:41:12 <Boegel> yes, I know that
13:41:29 <Boegel> but does the .NET system work on Linux :s
13:41:31 <Boegel> prolly not
13:41:39 <Marvin--> mono works quite well
13:41:39 <shapr> even better, if something in one of those that I mention breaks, I can fix them.
13:41:45 <Boegel> and Visual Studio is built on top of the .NET framework, is it not?
13:42:33 <Maddas> shapr: Even if Windows breaks? Hah! (Sorry, couldn't resist :-)
13:42:39 <shapr> I hacked IDE support for my motherboard chipset into Linux before it was officially supported
13:42:42 <Maddas> Oh, never mind, I missed the "something in"
13:43:00 <Maddas> Cool
13:43:04 <Boegel> you're a linux guru then ? :)
13:43:21 <shapr> Boegel: actually no, I'd never hacked on the kernel before, and I knew nothing about IDE interfaces
13:43:24 <Boegel> I've never had the courage to complete switch to linux
13:43:26 <Maddas> The hardest thing I ever did was remapping caps lock to control in some driver thingy :-(
13:43:33 <shapr> I just sat down and read for a coupla days
13:43:45 <Boegel> I still work on linux :|
13:43:49 <shapr> one day for reading up on IDE, and one day for figuring out how to do kernel stuff
13:43:59 <SyntaxLaptop> Boegel: you should switch, it's not that bad :)
13:44:03 <Marvin--> Maddas: eh? why do that on the driver level?
13:44:09 <Boegel> I tried it several times
13:44:11 <Maddas> Just for fun, mainly.
13:44:17 <shapr> Windows keeps you from programming!
13:44:23 <Maddas> (And boredom, I guess)
13:44:30 <shapr> that's a crime, imho
13:44:30 <Boegel> once on my laptop, but X didn't support my graphics card (Mandrake 8.0 I believe)
13:45:02 <shapr> I can understand a baker or a butcher using windows just as a tool purely to do browsing and bookkeeping and stuff
13:45:03 <Maddas> It wasn't even really the driver itself, but some keyboard layout specification thing. 
13:45:10 <Marvin--> well, supporting secret hardware is always an uphill struggle :/
13:45:12 <shapr> but a programmer?
13:45:19 <Boegel> and I searched over a year once to get my intern ADSL modem working
13:45:22 <Marvin--> Maddas: so.. basically, xmodmap? :)
13:45:28 <Boegel> and when I got it working, I bought a router :p
13:45:30 <shapr> Boegel: anyway, I'm not picking on you, I rant about this every month or so...
13:46:02 <Boegel> heh
13:46:11 <Boegel> no offense taking shapr
13:46:23 <Boegel> I realize switching to linux could be a good thing
13:46:26 <shapr> I was forced to use Windows for awhile at my last job, until I showed them that the whole company could get more stuff done if we used Linux for development, servers, and some other stuf.
13:46:33 <Boegel> but several things wouldn't work then I think
13:46:38 <shapr> like what?
13:46:46 <Boegel> iPod, digicam, stuff like that
13:46:48 <shapr> lots of windows games don't work in Linux
13:47:00 <Boegel> and I'd have to figure out replacements for the programs I normally use
13:47:04 <Boegel> like mIRC :p
13:47:06 <shapr> I think digicam works in Linux
13:47:12 <shapr> Xchat is cooler than mIRC
13:47:17 <Boegel> hehe
13:47:18 <flaw> xchat
13:47:24 <shapr> there's even a Haskell IRC client :-)
13:47:25 <flaw> it's pretty nice
13:47:28 <Boegel> I find the GUI of linux much cooler
13:47:33 <Boegel> Gnome or KDE
13:47:37 <shapr> http://www.haskell.org/hircules/
13:47:41 <Boegel> much nicer, rounder, and shit like that
13:47:48 <Maddas> Marvin--: Oh come on, that's all the pride I have when it comes to hacking :-)
13:48:06 <Maddas> Marvin--: (Actually, I use uControl, much easier than xmodmap ;-)
13:48:16 <Boegel> it's a bit 'simple', eh shapr:)
13:48:17 <shapr> Boegel: Long ago and far away, I wasn't overly impressed with Linux until I found shell scripting
13:48:30 <Boegel> I've had classes on that
13:48:32 <Boegel> 3 years ago
13:48:37 <Marvin--> Maddas: I haven't used xmodmap for a long time either, much easier to point 'n click in gnome :-)
13:48:42 <Boegel> very simple scripts
13:48:46 <Boegel> reg expressions
13:48:48 <Boegel> vi :|
13:48:50 <shapr> you know you can write a simplistic spellchecker in a single line of shell script?
13:48:53 <Boegel> I know a bit of shell
13:49:02 <Boegel> pine, pico, ls :p
13:49:04 <flaw> vi[m] rules
13:49:19 <Boegel> vi sucks
13:49:31 * esap expects an editor war. emacs.
13:49:33 <Boegel> and sure if that is your first class when you start at the university
13:49:39 <flaw> i find myself escape slappyng while entering text in mozilla sometimes..
13:49:43 <Boegel> I thought I knew _something_ about computers
13:49:47 <shapr> I think everyone should try several different editors to find out what they like
13:49:52 <flaw> slapping
13:50:00 <Boegel> and then they give you something that acts really strange when you press the wrong key :s
13:50:03 <Boegel> I was blown away
13:50:17 * Boegel uses emacs too
13:50:22 <Maddas> maybe you were in beep mode
13:50:24 <Marvin--> we have at least one editor war a week at work :-)
13:50:26 <flaw> wimps
13:50:29 <shapr> I wrote assembly on my IBM XT and I thought I knew something about programming... 
13:50:35 <Maddas> (/sarcasm)
13:50:43 <shapr> I still get blown away on a regular basis.
13:50:45 <Boegel> I've been in several modes, believe me :p
13:50:46 <shapr> I love it :-)
13:50:49 <esap> boegel: vi doesn't do that. You can always press esc twice, then ':q!' to exit, nothing strange about that :-) :-)
13:51:31 <Boegel> it jumped in the file when I pushed space, and stuff like that
13:51:42 <Boegel> I was used to working in notepad :p
13:51:45 <shapr> I've remapped my keyboard so that I can press M-C-S-H-Sh-BS with one finger.
13:51:52 <Boegel> and all the ^ [] * stuff
13:51:59 <Boegel> damn, that was really new for me then
13:52:00 <shapr> I've bound that keycombo to an emacs command that deletes all copies of vim in a five mile radius.
13:52:18 <Boegel> lolz
13:52:25 <shapr> ok, in reality I use vim as well as emacs :-)
13:52:31 * Marvin-- gasps
13:52:43 <shapr> vim is really handy to use over high latency low bandwidth links
13:52:44 <Boegel> come to think of it, I've really learned A LOT at university in 3 years
13:52:47 * flaw fears emacs will take over his OS if he installs it
13:52:50 <shapr> when even tramp starts to choke up
13:52:54 <Boegel> and I still have a year to go :)
13:53:01 <shapr> flaw: emacs IS your OS, you just haven't realized it!
13:53:02 <flaw> FreeBS.....EMACS loading
13:53:10 <flaw> hehe
13:53:22 <shapr> Boegel: there's so much more good stuff! 
13:53:27 * esap thinks emacs core dumps should be installed in the boot sector. Probably would work fine.
13:53:41 <Boegel> I know
13:53:43 <Marvin--> shapr: I use vi over low bandwidth and vim otherwise :P
13:53:45 <Boegel> I'm missing a lot :p
13:54:01 <shapr> Boegel: well, stay interested and keep learning, you'll get there
13:54:02 <Boegel> what's the difference between vi and vim ?
13:54:10 <flaw> vim has goodies
13:54:13 <Boegel> shapr, I'm very interested
13:54:14 <shapr> For me, the journey is as much fun as the goal.
13:54:15 <flaw> and some GUIs
13:54:18 <flaw> vim.org
13:54:22 <Boegel> I only learned about Haskell last year
13:54:23 <Boegel> so :)
13:54:27 <shapr> right on
13:54:47 <Boegel> and now I'm writing my thesis on functional programming :o)
13:54:50 <shapr> have you tried Self, Joy, Mozart, Cecil, Dylan, or some of the other stuff?
13:54:52 <shapr> ah cool
13:55:08 <Boegel> are those all functional languages ?
13:55:11 <shapr> no
13:55:14 <shapr> Joy is
13:55:18 <shapr> Joy is great fun
13:55:21 <Boegel> well, I don't know any of them
13:55:26 <Boegel> I know some Prolog doh :p
13:55:31 <shapr> it's like PostScript and Haskell had a bastard child.
13:55:52 <jesse99> dylan is semi-functional
13:55:54 <shapr> prolog is cool
13:55:59 <Boegel> Java, Prolog, C(++), Pascal (if I try really hard, it's been 4 years)
13:56:07 <shapr> I've heard Mozart is semi-functional, haven't tried it.
13:56:08 * esap knows someone who writes his documents with hand-written postscript.
13:56:19 <Boegel> and then some HTML, php, asp
13:56:25 <shapr> Cecil is prototype-oriented, like JavaScript, Self, and NewtonScript
13:56:26 <Boegel> Latex
13:56:53 <Boegel> but that's no language, is it :p
13:56:57 <shapr> does anyone know of research into parallel stack-based languages?
13:56:59 <Marvin--> of course it's a language
13:57:19 <shapr> I've been thinking about writing a parallel Joy, but I'd rather learn from the mistakes of others first.
13:57:27 <Marvin--> its primary use may not be as *programming* language, true
13:59:12 <Boegel> that's what I meant, Marvin--
13:59:31 <shapr> cool postscript tricks: http://cgm.cs.mcgill.ca/~luc/randomfont.html
13:59:33 <monochrom> If all software is written in HTML, and no customer ever asks for something not expressible in HTML, ...
13:59:40 <monochrom> there would be no software crisis :)
13:59:56 <esap> monochrom: there would also be no software, I'd say.
14:00:02 <flaw> python is my favorite lang right now, but I think haskell may replace it in the near future(as my favorite)(in a year or two)
14:00:12 <shapr> this is possibly the coolest pic from that url: http://cgm.cs.mcgill.ca/~luc/Crazyas.gif every letter there is in the same font
14:01:04 <Maddas> heh!
14:01:15 <Boegel> looks nice
14:01:27 <esap> what does it mean? :-9
14:01:33 <Marvin--> Boegel: I'm pretty sure that LaTeX is Turing complete, though
14:02:02 <Boegel> so you could write full programs in it ?
14:02:18 <shapr> esap: unlike fonts that use just images, some few postscript fonts use random modification values for each letter to a) simulate handwriting or b) just make every letter unique
14:02:20 <Boegel> esap, it means : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
14:02:21 <Boegel> :p
14:04:07 <shapr> could be entertaining to have a werewolf font that is pretty boring most of the time, and only fuzzy and scary during the full moon :-)
14:04:25 <Boegel> hehe
14:04:32 <Boegel> or a Hulk font
14:04:37 <shapr> heh, yeah!
14:04:41 <Boegel> it becomes bigger and green when it's mad
14:04:42 <esap> another good use for the moonphase() function.
14:05:08 <shapr> maybe even phobic fonts that spell words like 'spider' in thin scared looking letters
14:05:37 * Boegel thinks shapr could earn some money with these ideas
14:05:52 <shapr> I have no shortage of fun and crazy ideas.
14:06:06 <shapr> just a shortage of the discipline necessary to implement them.
14:08:53 <Maddas> I have a shortage of discipline necessary to do anything I should be doing :-(
14:10:07 <Boegel> I'm searching to put my ray tracer in a functional 'design' kinda thing
14:10:19 <Boegel> now, I'm not used to designing stuff in a functional way
14:10:20 <Boegel> so
14:10:52 <Boegel> I would like to use a generic Object type, and then 'subtypes' like Sphere, Plane, Polygon
14:11:03 <Boegel> what is the best way to do it in Haskell ?
14:11:31 <Lemmih> data Object = Sphere | Plane | Polygon ?
14:11:44 <Boegel> I was thinking about something like that
14:12:09 <Boegel> but then every Object has a Material, but not every Object hasa radius
14:12:12 <Boegel> you see ?
14:12:19 <Boegel> in an OO language that's easy
14:12:24 <Boegel> Object = interface
14:12:37 <Boegel> Sphere = implementation of that interface
14:12:46 <Boegel> or Object = class, Sphere extention of that class
14:13:00 <Boegel> but how can I do this elegantly functionally ?
14:13:39 <shapr> don't use subclassing?
14:13:46 <Boegel> type Object = (Color,Type)
14:13:56 <Boegel> type Sphere = (Center,Radius)
14:13:58 <Boegel> en then
14:14:14 <Boegel> and then
14:14:17 <Boegel> *euh* :)
14:14:27 <monochrom> In an OO language that is not easy either.
14:14:39 <Boegel> sphere1 = (Color,(Center,Radius)) ?
14:14:47 <Boegel> yes it is monochrom
14:14:52 <Boegel> u use a base class Object
14:15:04 <Boegel> that has a Color (and maybe some other stuff)
14:15:12 <emu> data object = Sphere of radius * material | Plane of normal * material | Polygon of [point] * material
14:15:17 <Boegel> and every Sphere, Plane, Polygon extends that base class
14:15:17 <monochrom> In Haskell you can write corresponding type classes.
14:15:29 <Boegel> so it inherits all of the base class 'functionality'
14:16:04 <Boegel> what does 'Sphere of radius * material' do ?
14:16:09 <shapr> typeclasses do give you generic functionality that you can replace
14:16:11 <Igloo> Anyone got any recommendations for tracking ddown stack overflows?
14:16:11 <Boegel> Idon't know that syntax...
14:16:40 <Boegel> it's not really replacing I need shapr, it's adding functionality
14:16:47 <shapr> like what?
14:16:47 <Boegel> and information to
14:16:59 <Boegel> add a radius and a center isn't really functionality
14:17:23 <Boegel> emu, what does 'Sphere of radius * material' do ? I don't know that syntax
14:18:13 <shapr> you want sphere, plane, and polygon?
14:18:28 <shapr> each of those can have a texture?
14:18:33 <Lemmih> Boegel: It's Caml and is the same as: 'Sphere Radius Material'.
14:19:43 <Boegel> so there's no elegant way to make the material a general thing ?
14:20:02 <Boegel> yeah sure, every object has a material
14:20:11 <Lemmih> Why can't you do it with type classes?
14:20:19 <Boegel> my ray trace will (hopefully) support different types of objects
14:20:38 <monochrom> subtyping would be nice.
14:20:46 <monochrom> But without subtyping it is still do-able.
14:21:04 <Boegel> spheres, planes, polygons, boxes, quadrics
14:21:28 <Boegel> yeah, it's do-able, but I find it more elegant the other way
14:21:39 <Boegel> but maybe that's my OO trained mind working :p
14:21:52 <shapr> when in doubt, see what someone else wrote...
14:21:57 <shapr> have you looked at VOP?
14:22:12 <monochrom> Here is a theorem.  If your "class hierachy" won't change (e.g., homework), just use a sum type (data Blah = ... | ... | ...) and maybe spice it up with some type classes.
14:22:13 <Boegel> http://www.nobugs.org/developer/htrace/htrace.hs
14:22:18 <Boegel> that's what I'm doing :)
14:22:57 <Boegel> it's not for a homework, but for a thesis :)
14:23:08 <Boegel> so the design is pretty important
14:23:19 <monochrom> Same thing.  A program that will not be changed.
14:23:36 <Boegel> why not ? is working like that not flexible enough ?
14:24:27 <monochrom> If you have future unforseen extension in mind, it is indeed a pain to add new cases to a sum type and therefore to all functions involving that sum type.
14:24:50 <monochrom> It is easier to just add a subclass and override a few methods.
14:25:58 <Boegel> a getMaterial function shouldn't be added for every if I put the generic stuff in front, am I right ?
14:26:07 <shapr> I tend to add new cases to my sum types, that's why I always put in func x@_ = error ("func shouldn't get this" ++ show x)
14:26:17 <shapr> as my fallthrough case in pattern matching functions.
14:26:26 <monochrom> But that comes with a cost.  A class hierarchy is a lot of coding overhead if you have only a few cases.
14:26:47 <shapr> I was entertained and pleased when I discovered the x@_ trick, does everybody use that sort of thing?
14:26:50 <Boegel> so if define every object like this 'NewObject Material bleh1 bleh2'
14:27:31 <Boegel> with bleh1 and bleh2 stuff specific for that type of object, I wouldn't have to add functions for every new type, am I correct ?
14:27:32 <david___> shapr: how's that different than just x?
14:28:08 <shapr> david___: hm, maybe it's not.
14:28:47 <shapr> it sure seemed necessary at the time I came up with it...
14:28:57 <Boegel> it isn't shapr, because your using a _lazy_ language :)
14:29:30 <shapr> er, maybe the irrefutable match ~x is related to this discussion?
14:30:46 <shapr> I wonder if I could persuade Simon Peyton-Jones and Simon Marlow to write a 'Simon Says' column
14:30:48 * shapr snickers
14:31:08 <Maddas> haha
14:31:15 <Boegel> sounds nice
14:31:41 <Boegel> are you really going all the way with the Haskell Monthly stuff shapr ?
14:37:05 <Boegel> shapr ? :)
14:39:31 * Boegel scrathes his hair
14:42:55 <shapr> I do plan on starting a wiki-zine, yes.
14:43:19 <emu> ah yah, i always get syntax confused with the functional languages. they're all a mishmash of weird shifted characters
14:43:48 <Boegel> that was quick emu :p
14:44:11 <emu> unfortunately, i cannot spend every waking moment attending to irc
14:44:29 <shapr> emu: works for me ;-)
14:45:03 <Boegel> [23:31] <Boegel> are you really going all the way with the Haskell Monthly stuff shapr ?
14:45:03 <Boegel> [23:32] * gpciceri has quit IRC ("Leaving")
14:45:03 <Boegel> [23:37] <Boegel> shapr ? :)
14:45:03 <Boegel> [23:39] * Cale has quit IRC (Remote closed the connection)
14:45:03 <Boegel> [23:39] * Boegel scrathes his hair
14:45:04 <Boegel> [23:42] <shapr> I do plan on starting a wiki-zine, yes.
14:45:06 <Boegel> ow yeah ? :p
14:45:18 <Boegel> 11 min ! ! ;)
14:45:47 <shapr> I was thinking !
14:45:51 <Lemmih> shapr: What about publishing HMonthly as .ps with a nice layout?
14:46:02 <emu> shapr: it was lazy evaluation
14:46:05 <shapr> heh
14:46:15 <shapr> Lemmih: oh, what about publishing it as an .lhs ?
14:46:41 <shapr> then you can execute all the nifty code snippets.
14:47:17 <monochrom> Trojan!
14:47:23 <Lemmih> That would probably work too. I was thinking about making it available for non-Haskellers at my school.
14:47:28 <Boegel> yeah, but can you work with a nice layout then?
14:47:39 <Boegel> I also know a market for it :)
14:49:02 <shapr> both the .ps and .lhs ideas are great, but a wiki format is a lot easier to manage.
14:49:27 <Lemmih> And a lot hard to distribute.
14:49:40 <shapr> the interweb is everywhere!
14:49:53 * shapr assigns Lemmih to editor-in-chief
14:51:10 <shapr> what about an .lhs processor for MoinMoin?
14:51:11 <Lemmih> Yeah but giving people an URL isn't as convincing as an official paper.
14:51:27 <emu> Implement HasTeX
14:51:41 <Lemmih> emu: Isn't that done already?
14:51:44 <emu> the lazy typesetter's language
14:51:59 <shapr> there's lhs2tex ?
14:52:25 <Boegel> maybe you can provide it yourself shapr ? you have found your new project ! :p
14:53:00 <Lemmih> shapr: GHC understands LaTeX commands iirc.
14:53:00 <shapr> I think my project stack has already overflowed
14:53:30 <Boegel> what else do you habe in mind shapr ?
14:53:35 <Boegel> habe -> have
14:53:41 <shapr> you mean what other projects do I spend time on?
14:53:52 * Boegel gives his keyboard a slap behind the ears
14:54:00 <Boegel> yes
14:54:19 <shapr> I think .ps or .lhs is great, I just don't want to be responsible for maintaining anything with more admin overhead than a wiki
14:54:56 <Boegel> producing a ps shouldn't be that hard now shapr?
14:55:07 <Boegel> and wiki might get confusing, is it not ?
14:55:21 <Boegel> if it becomes a bit popular, you might get spamming problems and such
14:55:26 <shapr> let's see, I'm a self-employed programmer with a bunch of Python/Zope work waiting to be done, I still need to put up the IOHCC results :-P I need to move all the haskell-libs stuff into darcs repos and flush the cvs repos
14:55:35 <shapr> spamming is already a problem, even on my personal wiki
14:55:50 <Boegel> there you have it
14:55:58 <Boegel> spamming is no problem with ps and lhs
14:56:01 <Lemmih> shapr: http://www.acooke.org/jara/pancito/index.html
14:56:01 <shapr> speaking of which, I want to add some of the antiwikispam solutions to HaskellWiki and the other wikis I admin
14:56:29 <shapr> pancito is cool
14:56:33 <shapr> halipeto is too
14:57:00 <shapr> Lemmih: I bet you're talking about the latex style file though?
14:57:01 <Boegel> I'm really amazed that there isn't a Haskell magazine yet :s
14:57:22 <shapr> why?
14:57:27 <Lemmih> shapr: Yep.
14:57:35 <shapr> Boegel: start one, and there will be one :-)
14:58:57 <Boegel> I don't have the time, nor the discipline to start something like that
14:59:00 <Boegel> not alone at least
14:59:06 <shapr> neither do I
14:59:28 <Boegel> why, because there are a lot of things being developped in Haskell
14:59:30 <shapr> not like that stops me :-)
14:59:54 <Boegel> and it's a shame there's no magazine that can put those things in the spotlight a bit more
15:00:44 <shapr> Boegel: write an article!
15:00:51 * shapr assign Boegel to the spotlight column
15:04:04 <psi> is there supposed to be a standard function called iter?
15:04:13 <shapr> @index iter
15:04:13 <lambdabot> bzzt
15:04:15 <shapr> @index iterate
15:04:15 <lambdabot> Data.List,GHC.List,Prelude,List
15:04:26 <shapr> @type Data.List.iterate
15:04:31 <lambdabot> Data.List.iterate :: forall a. (a -> a) -> a -> [a]
15:05:17 <Boegel> I have no idea which project I should choose... putting FranTk in the spotlight is overdoing it I guess ?
15:05:35 <shapr> I don't thin kso
15:05:46 <Boegel> that project has been dead for a few years now...
15:05:47 <psi> shapr: what does it do?
15:05:50 <shapr> I think it's best to write about stuff you are actually interested in
15:05:56 <shapr> even if it's dead
15:06:14 <Boegel> @def Data.List.iterate
15:06:15 <lambdabot> Sorry, I don't know the command "def", try "lambdabot: @listcommands"
15:06:20 <Boegel> ow :s
15:06:30 <Boegel> it doens't know any definitions ?
15:06:33 <shapr> psi: it applies the function to the initial arg, and then to the result of each
15:06:38 <shapr> it works as a lazy list
15:07:07 <Boegel> something like
15:07:24 <Boegel> iterate (^2) 2
15:07:26 <Boegel> should produce
15:07:36 <Boegel> [2,4,16,256,..] then ?
15:07:41 <Boegel> or am I getting it wrong ?
15:07:41 <shapr> of course, iterate is a lot more fun with a fractal function
15:07:56 <monochrom> Yes.  Use (^ 2) instead.  Leave a space between ^ and 2.
15:08:08 <Boegel> oh, is that neccesary ?
15:08:14 <monochrom> IIRC yes.
15:08:31 <Boegel> IIRC ?
15:09:18 <psi> xemacs is going crazy now
15:09:18 <Boegel> shapr, maybe a comparison between wxHaskell, FranTk, gtk2hs, ...
15:09:24 <Boegel> some GUI library's ?
15:09:28 <shapr> Boegel: oh that would be spiffy
15:09:41 <Boegel> but I'm afraid I really don't have the time :)
15:09:51 <Boegel> I'm starting classes on October 1st
15:10:03 <Boegel> and in between I should work on my thesis a bit
15:10:08 <Boegel> getting ahead of things ;)
15:10:14 <Boegel> how much does it pay :p
15:10:32 <Boegel> psi, what's up with xemacs ,
15:10:33 <Boegel> ?
15:10:38 <Igloo> No space is necessary in the above
15:10:39 <shapr> about as much all the other jobs in a wiki-zine
15:10:59 <Boegel> Igloo ?
15:11:01 <Maddas> shapr: oh, you mean fame and glory await? :-)
15:11:12 <Boegel> hehe
15:11:25 <psi> Boegel: i typed in your use of iterate in the hugs window :)
15:11:29 <shapr> heh
15:11:41 <shapr> you should hit control-c
15:12:21 <psi> yeah, it's cool now, but it took a while to stop it :)
15:12:28 <shapr> it stopped by itself?
15:12:35 <shapr> kernel killed the process?
15:12:39 <psi> i hammered all sorts of keys
15:12:52 <shapr> ah, I know that feeling.
15:12:52 <Maddas> heh
15:13:14 <Boegel> it didn't stop because it has no reason to stop
15:13:28 <Boegel> try take 5 (iterate (^ 2) 2)
15:13:35 <Boegel> without try off course :p
15:14:21 <psi> that's pretty neat
15:15:14 <shapr> @type until
15:15:16 <lambdabot> until :: forall a. (a -> Bool) -> (a -> a) -> a -> a
15:15:19 <psi> i think the iter i'm looking for is different though
15:15:29 <psi> i might have it in some notes somewhere
15:15:39 <shapr> until combines iterate with a function that checks to see if we're there yet
15:17:13 <psi> aha. iter 0 f = id ; iter n f = f . (iter (n-1) f)
15:19:16 <Boegel> that's recursion...
15:19:29 <Boegel> or no
15:19:37 <Boegel> Fibonacci
15:19:40 <Boegel> :)
15:19:53 <Boegel> with a starting point you choose that is
15:21:07 * psi scratches his head
15:21:10 <psi> how is that fibonacci?
15:23:21 <Boegel> well euh
15:23:36 <Boegel> f 4 = 4.3.2.1
15:24:01 <Boegel> that's Fibonacci, or am I confusing it with something else ? :s
15:24:09 <Boegel> it's been a while since I met the man
15:24:22 * Boegel joins psi in the scrathing of the head
15:24:34 * shapr also scratches psi's head
15:24:44 <psi> 4.3.2.1 doesn't make sense
15:25:16 <shapr> g'day Mr John
15:25:30 <TheJohn> hullo.
15:27:20 <psi> Boegel: i associate fibonacci with that number sequence (1,1,2,3,5,8 etc)
15:27:49 * monochrom scratches everyone's head
15:28:07 * monochrom scratches the heads of exactly those who don't scratch their own heads.
15:28:28 <shapr> I thought only that Russell guy fit into that set?
15:29:17 * TheJohn enjoys the irony of "Haskell is the language of choice for discriminating hackers! - http://www.cis.upenn.edu/proj/plclub/contest/results.>>>>>>PHP<<<<#first"]
15:29:21 <Boegel> I mean 4*3*2*1
15:29:30 <Igloo> :-)
15:29:30 <psi> Boegel: that is factorial
15:29:45 <Boegel> ow yeah, sry :s
15:29:55 <Boegel> so iter = factorial :)
15:30:13 <Boegel> kinda :p
15:30:49 * jao find even more ironic that "Java and C++ are very suitable for rapid prototyping."
15:31:04 <flaw> TheJohn: alas, some are not given a choice... and some are lazy ;)
15:31:10 <shapr> jao: it's true, then you write the real app in Haskell
15:31:12 <Boegel> actually it's f!/n!
15:31:50 <jao> shapr :) so much for 'scripting languages'
15:32:12 <shapr> people ask me silly question while I'm unicycling, I tell them I graduated from using the training wheel.
15:32:19 * Boegel should go to sleep, because he has an appointment with the dentist in 10 hours :|
15:32:28 <psi> iter simply takes a number n and function and returns a new function which is the same as the old function applied n times
15:32:46 <Boegel> ow, I thought f was a number :)
15:32:49 <Boegel> sry bout that ;)
15:33:04 <psi> :D
15:33:14 <Boegel> no wonder the confusion
15:33:14 <shapr> psi: I think there is that function...
15:33:26 <psi> well it has to be becuase of the . operator
15:33:29 <Boegel> but still, i freshed up Fibonacci :p
15:33:49 <psi> :)
15:34:01 <Boegel> *freshened* (is that right?)
15:34:29 <shapr> refreshed?
15:35:06 <Boegel> 'freshened up' is right though, isn't it ?
15:35:18 <Boegel> in dutch: opfrissen :)
15:35:25 <Boegel> or is that too literal?
15:35:50 <shapr> well, I understood what you meant... does that count?
15:38:42 <Boegel> yep :p
15:45:14 * Boegel is going to bed, and greets the channel
15:47:44 <Boegel> bye !
15:48:03 <psi> bye
15:48:16 <shapr> bye!
16:57:51 <thebug> shapr: 11:26 < thebug> 'shapr's n00b corner' would be a good column :)
18:07:52 <yome> Hi
18:09:41 <yome> Say I have the file test.hs containing:
18:09:54 <yome> main = do x <- readFile "test.scm"
18:09:55 <yome>           return 123
18:10:10 <yome> Shouldn't calling "main" yield the value 123 ?
18:10:45 <Cale> yep
18:11:02 <Cale> more specifically, that value typed in the IO monad.
18:11:32 <yome> How could I do so 123 would be outputted?
18:12:03 <Cale> you mean like putStrLn "123" ?
18:12:11 <yome> ie using hugs, calling "main" only gives me a blank line, I don't see the returned value...
18:13:39 <Cale> you also realise that you never use x, and so that file will never be read
18:14:15 <Cale> but really, the type of main here is IO Integer, and not Integer, so it doesn't know how to print it.
18:15:07 <yome> Say I return x, shouldn't I see the content of test.scm as a string?
18:15:51 <Cale> well, depends on what Hugs does
18:16:00 <yome> blank line again...
18:16:17 <thebug> 'putStrLn x' would do more
18:16:18 <Cale> values of type IO String aren't printable
18:16:36 <Cale> You have to take a value out of the IO String and then print it.
18:16:41 <thebug> how about show?
18:18:22 <thebug> would 'putStrLn show x' work?
18:19:00 <Cale> not if x :: IO String
18:19:13 <thebug> how would you manage this then?
18:19:14 <Cale> you'd do something like x >>= putStrLn
18:19:27 <Cale> or, in do notation
18:19:34 <Cale> str <- x
18:19:39 <Cale> putStrLn str
18:20:14 <thebug> interesting
18:21:28 <Cale> x is a computation which produces a string, which isn't the same as a string
18:24:07 <yome> Cale, so say I have a function  main :: FilePath -> IO [Value]
18:24:21 <Cale> okay
18:24:35 <yome> How can I take the IO [Value] result and convert it to [Value] ?
18:25:16 <Cale> in do notation, you'd do something like
18:25:23 <Cale> vals <- main
18:25:45 <Cale> and then you can use vals as type [Value]
18:26:09 <Cale> i.e. "run the computation main and bind the result to vals"
18:29:00 <Riastradh> yome, there is no safe function that maps values of type IO a, for any a, to values of type a.
18:29:33 <yome> Ah...
18:29:54 <yome> Thing is, here  type Value = Int
18:30:23 <yome> I just want to return a list of numerical values returned by a parser.
18:33:30 <yome> So can I use any unsafe function?
18:36:54 <david___> in an ideal world, wouldn't the parser have nothing to do with IO monads? parse :: String -> something
18:38:02 <yome> david___, I guess it's like that so you can gradually parse a file instead of slurping it in one go.
23:01:29 <musasabi> morning
