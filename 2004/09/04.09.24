00:47:30 <musasabi> Are there any real examples of hxml toolkit?
00:47:56 <musasabi> I would like to get the content of a small subset of the document.
01:00:26 <Si\> musasabi; No, but you can look at the src for my serializer if you like
01:01:02 <Si\> HXT has quite a few faults atm, but it is imho the best (only complete) XML processor for Haskell
01:05:33 <musasabi> I am just looking at a simple "select all the foo-tags as an alist and return them"
01:07:58 <Si\> ok, 
01:08:12 <Si\> assuming a root tag, with a bunch of tags below if
01:08:18 <Si\> it*
01:08:36 <Si\> (getChildren .> hasLocalPart "name") t
01:08:49 <Si\> will get all the children with localpart "name"
01:32:41 <Boegel> greetings to everyone
01:33:06 <cptchaos> Boegel: good morning
01:33:11 <Boegel> Cale, are you active ? (your whois says you aren't, but you never know)
01:37:04 <Cale> Boegel: nearly active -- it's 4:36 am, so I should be sleeping.
01:43:24 <Boegel> ow
01:43:34 <Boegel> you wanted to see FunMath in action right ?
01:45:00 <Cale> I'm not even really entirely sure of what it is. I assume it's just another formal system of mathematics?
01:46:00 <Boegel> you want to see it ?
01:46:04 <Cale> sure
01:46:10 <Boegel> I'm writing the ray casting algorithm in it
01:46:18 <Boegel> it's complete yet, but you'll get the idea
01:46:24 <Boegel> http://studwww.ugent.be/~kehoste/FunMath/rayCasting.pdf
01:48:02 <Cale> so it's some functional or declarative language?
01:52:29 <cptchaos> Boegel: what is the meaning of this box prefix operator?
01:54:36 <Boegel> (box)2 is the collection of numbers from 0 to 2
01:54:41 <Boegel> so {0,1,2}
01:54:56 <cptchaos> ah, ok
01:55:04 <Boegel> it's written that way because every tuple (a,b,c) is regarderd as a function
01:55:20 <Boegel> (a,b,c)0 = a, (a,b,c)1 = b, etc...
01:55:58 <cptchaos> hrm, ok
01:57:43 * musasabi waits for ghc to finish swapping
01:59:30 <cptchaos> and what does the definition of Point 3D exactly do? (just a type definition?)
02:01:37 <Boegel> just a type definition idd
02:01:49 <Boegel> (x,y,z) is of type Point3D
02:01:53 <Boegel> but I have to go now
02:02:11 <Boegel> I probably won't be back before tonight, so...
02:02:12 <Boegel> bye !
02:02:21 <cptchaos> bye
02:02:24 <musasabi> bye
02:12:33 <musasabi> Is there any way to plead ghc to use less memory?
02:57:37 <pesco> Moin Moin.
02:58:44 <kosmikus> hi pesco
02:59:05 <pesco> Good morning kosmikus.
02:59:11 <kosmikus> thanks for the free advertisement :)
02:59:21 <pesco> No problem. ;)
03:03:44 <pesco> Btw, GHC works fine with GCC 3.4. It just doesn't compile itself because of that stupid cpp/string gap thing.
03:04:04 <pesco> Which is easy (albeit tedious) to work around by hand.
03:04:28 <bbls> pesco isn't possible to write a script to modify that automatically?
03:04:38 <pesco> Sure.
03:05:32 <pesco> But point taken, it would have probably been wiser of me to do that in the first place than to spend all that time replacing backslashes with (++).
03:06:09 <bbls> :)
03:06:15 <pesco> I'm not sure who's to blame for that problem, GHC or cpp.
03:06:33 <pesco> I'm not very proficient with cpp.
03:14:52 <kosmikus> pesco: the ghc 6.2.2 release candidates compile fine
03:15:15 <pesco> Ah, they do? That's good to hear!
03:15:19 * pesco closes the cpp manpage.
03:15:27 <bbls> :)
03:17:18 <pesco> I spent some time yesterday thinking about module dependencies wrt. interface revisions.
03:17:37 <pesco> Why don't we encode interface version dependencies in source code?
03:18:44 <pesco> Like so: "module Foo/10.3.0 (...) where", "import Foo/9 (...)"
03:19:06 <pesco> Where 10.3.0 is current.age.revision, like libtool does. For example.
03:19:42 <pesco> This could of course well be optional and (semi-) automatically filled in by the system.
03:22:32 <pesco> I feel that would make sense, as the interface used by a module is decided at programming-time, as opposed to link-/compile-time. So it appears naturally to include that information in the source code. Just like we put import and export lists in the source.
03:25:21 <bbls> pesco there are always improvments to be done :)
03:26:47 <bbls> hmm
03:26:55 <bbls> i've just restarted the computer
03:26:57 <pesco> ;)
03:27:00 <bbls> (with Hibernate)
03:27:07 <bbls> and the connection has not been lost
03:27:23 <pesco> Why would it.
03:27:28 <pesco> It can only run into a timeout.
03:27:36 <bbls> hmm
03:27:38 <bbls> probably yes
03:27:49 <pesco> Your system doesn't break the connection.
03:28:03 <bbls> i tought it closes the connections when hibernating
03:28:15 <pesco> Appearently not.
03:28:32 <pesco> Just the IRC server sends pings in regular intervals.
03:28:42 <bbls> hmm
03:28:48 <bbls> anyway something even more interesting
03:28:57 <bbls> is that my sound card doesn't get detected
03:29:12 <bbls> if the speakers aren't plugged in power socket
03:29:22 <bbls> (just that, they don't have to be ON)
03:29:31 * pesco raises an eyebrow.
03:30:10 <bbls> that's why i had to restart
03:30:21 <bbls> (because when i started they speakers where not plugged)
03:30:22 <pesco> Maybe your soundcard is powered through line-in. :)
03:30:36 <pesco> Er, line-out.
03:30:38 <bbls> but if the speakers are off
03:30:49 <bbls> then it can't do that
03:31:16 <bbls> it doesn't matter whenever the speakers are on or off. all it matters is to be plugged in power socket
03:31:23 <bbls> that's strange :)
03:31:41 <bbls> or maybe it has some kind of plug'n play
03:31:57 <pesco> Cool interpretation of the "play" part.
03:31:58 <bbls> so the systems says: ok you don't have speakers so you don't need a soundcard
03:32:04 <pesco> lol
03:32:39 <bbls> anyway it's strange..
03:56:21 <irsirius> can somebody tell me what something like :+: means?
03:56:57 <irsirius> i've already seen it but i can't find it anymore
04:05:29 <TheHunter> it's an infix data constructor
04:06:56 <TheHunter> like data Pair a = a :+: a deriving Show
04:07:35 <irsirius> ah thanks, i remember now
04:08:21 <irsirius> one more question: i have found a pdf with examples like this:
04:08:42 <irsirius> CSP{vars::Int,vals::Int,rel::Rel}
04:09:08 <irsirius> or : data Assignment =  Var := Value
04:09:43 <irsirius> i wonder if the := and {} are standard syntax
04:10:21 <irsirius> because i cant find the operator := in my textbook
04:10:52 <TheHunter> {} is standard syntax
04:11:23 <TheHunter> it's equivalent to using the layout rule. so do {a; b} means the same as
04:11:25 <TheHunter> do a
04:11:27 <TheHunter>    b
04:12:10 <TheHunter> oh, in case of CSP{...} it can't be replaced by identation.
04:12:42 <TheHunter> := is a data constructor like :+: (because it starts with a :)
04:13:44 <TheHunter> the CSP{...} is the same as data CSP = CSP Int Int Rel, except that it gives you accessor functions vars :: CSP -> Int and so on
04:15:28 <TheHunter> see for example http://www.haskell.org/tutorial/moretypes.html, section 6.2
04:18:00 <irsirius> thank you i think i understood it 
04:19:05 <irsirius> so the second : in :+: is not really necesarry?
04:19:24 <TheHunter> no
06:52:00 <shapr> good morning #haskell!
06:52:40 <irsirius> good morning shapr 
06:52:46 <Philippa> morning? Not any more...
06:53:11 <shapr> oh
06:53:15 <shapr> good afternoon #haskell !
06:53:55 <thebug> good morning shapr
06:54:03 <Philippa> OK, time I got to grips with IO - I want to load an entire (text) file into memory rather than put up with it happening lazily
06:54:25 <Philippa> (while I'm here, I also should figure out how to find out if a file exists ahead of time)
06:55:41 <shapr> there's a file exists function
06:55:43 <shapr> though I forget the name
07:02:45 <Philippa> is it posix? If so it's useless to me
07:02:58 <shapr> oh :-(
07:03:10 <bbls> Philippa why?
07:03:50 <Philippa> bbls: because I run under windows
07:03:58 <Philippa> shapr: turns out it's not, so that's OK
07:04:05 <shapr> whew
07:04:12 <Philippa> the mingw GHC builds don't include the posix libs
07:04:17 <shapr> suck
07:04:26 <shapr> plus the posix stuff on windows is exclusive to the other libs
07:04:26 <Philippa> and I'm not doing the cygwin thing
07:11:59 <bbls> hi ski
07:12:18 <ski> hello, bbls
07:12:35 <Igloo> You normally want to assume the file exists and catch IO errors to avoid race conditions, though
07:12:59 <bbls> ski how are you?
07:13:10 <ski> bbls : fine
07:13:31 <bbls> can you please enter my channel?
07:13:40 <bbls> so that we can talk there
07:13:48 <shapr> ?
07:13:56 <shapr> bbls: who are you?
07:14:11 * ski smiles a little
07:14:19 <bbls> shapr don't worry
07:14:27 <shapr> be happy?
07:14:30 <bbls> :)
07:14:35 * ski is happy
07:14:42 <ski> hi shapr !
07:15:21 <shapr> hi ski!
08:10:02 <xkb> shapr, ah you turned up again
08:25:39 <musasabi> evening
08:29:03 <musasabi> Why does gtk2hs depend on so much stuff?
08:29:24 <musasabi> That is the produced executables - not the installation itself.
08:30:13 <musasabi> "ldd a.out | wc -l" == *29*
08:31:38 <musasabi> hmm it seems that other gtk apps have similar requirements too... :-(
08:32:18 <thebug> gtk2 is a mess
08:33:10 <musasabi> btw why is all of the gtk2hs haskell library linked with the app and not only the parts the app uses? Does ghc not know how to eliminate dead code?
08:38:16 <Igloo> It could use -split-objs when building, but it doesn't
08:48:53 <musasabi> -split-objs seems to be underdocumented :-(
08:52:59 <Igloo> I think it currently has "Use it only if you know what you're doing" status, but I think that needs to change. cabal could probably do the magic for you.
08:56:19 <thebug> how exactly do you use -split-objs ? I see that I need to make a whatever_split directory, but what exactly do you do from there?
08:56:48 <Igloo> Look at how GHC's library building does it
08:57:02 <thebug> good idea :)
08:57:58 <Igloo> A combination of a successful log from http://buildd.debian.org/build.php?arch=&pkg=ghc6 and maybe the Makefiles probably mean you don't have to build it yourself to see
09:04:21 <Philippa> how do I go about it if I want to (strictly) load an entire file into memory?
09:05:07 <musasabi> @type readFile
09:05:12 <lambdabot> readFile :: FilePath -> IO String
09:05:24 <Philippa> IIRC that gives you lazy reads
09:05:30 <musasabi> not good for big files as Strings are not good.
09:05:58 <Philippa> can handle the String overhead, need a strict read though (which readFile doesn't give)
09:07:00 <Igloo> xs <- readFile f; last xs `seq` foo xs
09:07:33 <Philippa> thanks
09:10:36 <musasabi> hmm cannot test that now..
09:11:06 <musasabi> ghc does not like to play with this machine and the debian machine has little ram making building gtk2hs very painfull.
10:03:02 <musasabi> Is any of the Tk bindings alive ?
10:03:02 <musasabi> I need just a simple container displaying a [[String]] with colored row backgrounds..
10:03:24 <musasabi> even text-mode would be fine.. if it just worked..
10:10:36 <musasabi> maybe I should go to sauna to dream about something working.. (btw I got hxml toolkit to work)
10:12:27 <kristnjov> [[String]] as in [[[Char]]]?
10:15:35 <musasabi> yes, a simple grid of strings with rows colored.
10:17:20 <kristnjov> well i don't know about colouring in haskell, i was just wondering
10:18:10 <musasabi> well colouring can be done quite easily in most interfaces, but the thing would need to support some kind of easy grid widget.
10:18:19 <musasabi> that is about the only requirement.
10:19:57 <musasabi> => sauna (brb 40min)
10:21:57 <Lemmih> I would go for HTML or wxHaskell depending on the situation.
11:17:05 <Lemmih> Why is this wrong "instance (Monad m) => MonadState s (ROState s m) where ..." when ROState is defined just as StateT?
11:20:17 <musasabi> back..
11:20:24 <Lemmih> Welcome back musasabi.
11:21:27 <musasabi> html is out of question since I need to provide a "faster and nicer" alternative than the existing html UI. I could go wxHaskell way, but that would mean forcing everyone to install wxWindows..
11:21:47 <musasabi> Lemmih: probably the quantification of s.
11:27:11 <TheHunter> Lemmih: Did you forget -fglasgow-exts?
11:29:23 <Lemmih> That was it.
13:16:20 <Lemmih> God aften, mornfall.
13:19:02 <mornfall> Lemmih: huh?
13:19:38 <mornfall> Lemmih: what's "god aften"? o_O
13:22:37 <mornfall> Lemmih: hello?
13:26:01 * mornfall shrugs
13:30:04 <Lemmih> mornfall: It's danish for "Good evening". I assumed it would be readable for a swede.
13:30:20 <mornfall> Lemmih: a swede? =)
13:30:29 <mornfall> Lemmih: good evening anyway =)
13:30:48 <mornfall> just a note, i'm from slovakia, .sk (sweden is .se IIRC)
13:31:00 <mornfall> but it'd at least explain
13:31:28 <Lemmih> D'oh (-:
13:48:08 * shapr hops
13:48:24 <shapr> code is good
13:51:29 <thebug> moved on to hopping now, instead of bouncing? ;)
13:51:29 <musasabi> evening it is.
13:53:00 <shapr> konichiwa musasabi 
13:53:28 <musasabi> konbanwa shapr
13:53:29 <shapr> thebug: I've been practicing my hopping. I'm getting more height these days.
13:53:50 <shapr> not quite enough height for a park bench though
13:54:11 * musasabi hunts for Boegel
13:54:33 <thebug> it'd certainly be amusing to watch you hop over a park bench
13:55:04 <shapr> well, I probably can hop over a park bench with just my feet, but I'm talking about unicycle hopping, which is much more fun.
13:55:21 <shapr> plus, I just want to hop up onto it.
13:55:33 <thebug> that's what I was referring to -- unicycle/park bench hopping
13:55:39 <shapr> ah, ok then.
13:56:06 <shapr> I've seen videos of guys hopping directly over park benches without touching them, it's inspirational.
13:56:09 <thebug> just make sure there's no shapr's face/park bench interface when you're hopping :)
13:56:27 <thebug> I'd guess that probably wouldn't be so fun...
13:56:44 <shapr> probably not
13:56:57 <shapr> there's a neat unicycle term "UPD" short for 'UnPlanned Dismount'
13:57:49 <thebug> how about FGI -- Face/Ground Interface
13:57:59 <shapr> UPD covers that as well.
13:58:16 <shapr> I rarely fall onto anything other than my feet.
13:58:28 <shapr> sometimes I have to run out of a fall
13:58:47 <shapr> today I got a bunch of mud on the back of my shirt though.
13:59:08 <shapr> I'm trying to get my freemounting up to 100% and got my foot stuck on one of the pedals.
13:59:53 <shapr> it's been raining lots here, and the river/lake/pond has risen up to the waterside path, which is now under a few inches of water.
13:59:58 <shapr> it was fun to unicycle through that.
14:14:06 <depaulis> Is there a simple way to get color in vim when you editing, so it is easier to see what is a function and so on?
14:19:29 <flaw> ? syntax enable; colorscheme myscheme?
14:22:33 <musasabi> depaulis: with literate haskell? (normal code should just work)
14:23:25 <depaulis> flaw : well I am new to vi, but I guess you mean that I have to define a color scheme by myself?
14:23:45 <depaulis> musasabi : well its not working here :/
14:24:30 <flaw> depaulis: vi or vim? I dont know if vi has syntax coloring. with vim, I think all you _need_ to do is `syntax enable`
14:24:56 <shaleh> maybe it does not have a color mode for haskell installed?
14:24:56 <flaw> well, if you need to specify colorscheme, then just do colorscheme default
14:25:25 <flaw> maybe, I thought 6.3 had it in, but not sure if I installed it or not
14:25:38 <depaulis> flaw : `syntax enable` ? how do you mean? 
14:25:38 <flaw> (installed an hs scheme)
14:26:05 <flaw> depaulis: $ vim; :syntax enable\n
14:26:24 <depaulis> shaleh : I dont know if the system I am on have a color scheme for haskell.
14:26:30 <flaw> :syntax enable\n while in normal/regular mode or whatever its called
14:26:47 <depaulis> flaw : ok, I try and see.
14:27:36 <musasabi> depaulis: do you have syntax highlighting working for other languages in vim?
14:28:14 <depaulis> musasabi : I dont know, this is the first language I try ;)
14:28:28 <musasabi> do you have a .vimrc ?
14:29:04 <depaulis> no I dont have a .vimrc file 
14:31:09 <musasabi> depaulis: http://www.cs.helsinki.fi/u/ekarttun/.vimrc as an example (you need to change the colorscheme to something standard though)
14:31:41 <depaulis> musasabi : thanks I take a look at it. thanks for the help.
14:32:16 <musasabi> np
14:37:43 <depaulis> musasabi : "color navajo-night" is navajo-night something that I use too, or is it a file with a scheme ? If you get what I mean. 
14:39:58 <musasabi> well you can first comment it out, http://vim.sourceforge.net/scripts/script.php?script_id=271 contains that color-scheme.
14:40:31 <depaulis> Aha. 
14:40:42 <musasabi> http://www.cs.helsinki.fi/u/ekarttun/sc/Vim/sc-gvim-diff.png is a screenshot out of it.
14:42:12 <musasabi> but I would probably try out the different builtin color schemes first.
14:44:29 <depaulis> hmm.. well, if I only know where the color-scheme is stored so I know what scheme I can use.. ? I guess I can change that dir in .vimrc in someway
14:44:58 <musasabi> depaulis: you can try out the default color schemes from the "Edit" menu.
14:45:15 <musasabi> you are using *gvim* ?
14:45:56 <musasabi> (colors are prettier in X than in console, though they work in both)
14:46:17 <depaulis> I was first using vi, dont know if it is redirected to vim here, then 15 minutes back I tried vim. I could not see any change, so I guessed I used vim. 
14:46:47 <depaulis> musasabi : I am using ssh so it is console.
14:46:48 <Boegel> hellow everyone
14:46:57 <Lemmih> Hello Boegel.
14:47:23 <Boegel> @seen ctpchaos
14:47:23 <lambdabot> I haven't seen ctpchaos
14:47:27 <Boegel> @seen cptchaos
14:47:27 <lambdabot> I saw cptchaos leaving #haskell 12 hours 12 minutes 7 seconds ago.
14:47:30 <musasabi> depaulis: ok, then you don't really care much about the colorscheme settings. Does it color haskell source now?
14:48:13 <musasabi> Boegel: a simple gui-toolkit that is alive? (supporting a list of rows of [String])
14:48:49 <depaulis> musasabi : No, but I have not really done anything. I tried gvim, no color default there. But I have not yet done the .vimrc file.
14:49:17 <depaulis> musasabi : Edit menu you said.. I got to take a look at it. hold on.
14:49:50 <Boegel> hmmz
14:50:03 <Boegel> I not really into those gui-toolkits yet :)
14:50:12 <Boegel> but I'm guessing wxHaskell
14:50:27 <Boegel> that's very much alive, and has a big community
14:50:32 <musasabi> depaulis: try with the vimrc (it makes things much prettier)
14:50:32 <Boegel> haven't worked with it yet dough :)
14:50:53 <Boegel> I'm planning on making an article on some different GUI toolkits next week
14:50:59 <Boegel> 'cause I'm free then :p
14:50:59 <musasabi> Boegel: except it is complex for that and needs lots of libraries very few people have installed.
14:51:08 <musasabi> anything Tk based?
14:51:26 <Boegel> FranTk is tk based, but hopelessly outdated
14:51:33 <Boegel> I don't know any other
14:51:47 <Boegel> maybe gtk2hs ? (haven't looked into that one yet dough)
14:52:06 <Boegel> I have some links lying around, but I don't know how the corresponding toolkits are
14:52:13 <Boegel> shall I post it on the Wiki ?
14:52:36 <Boegel> where can I find the WiKi again ? :$
14:52:37 <depaulis> musasabi : I cant locate the Edit menu here ? Anyway, I am am going to use a .vimrc file and choose a color scheme I should know some name of schemes, but I dont know where to find those names, or where they are stored 
14:55:14 <musasabi> Boegel: haskell.org/hawiki/
14:55:40 <musasabi> Boegel: have you looked at the haskell.org libraries page?
14:56:03 <musasabi> depaulis: well colorschemes are very limited in text mode.. (#vim would probably know more)
14:56:34 <Boegel> I have yes, but I have others too
14:57:12 <musasabi> "the secret GUI toolkits you were not supposed to know about" ;p
14:57:44 <Boegel> ;)
14:58:03 <Boegel> now, stuff like FranTk that's outdated, or some other, more exotic stuff I guess
15:02:19 <Boegel> some people here who haven't seen FunMath at work, and would like to see it ?
15:02:27 <Boegel> @seen shapr
15:02:28 <lambdabot> shapr has changed nick to evil_shapr.
15:02:28 <lambdabot> evil_shapr is in #webwitches, #haskell.se, #haskell, #haskelldb, #joy, 
15:02:28 <lambdabot> darcs and #selectio-naturalis.
15:02:39 <Boegel> shapr, you dog :)
15:03:08 <Boegel> evil_shapr, why did you change your nick ?
15:13:22 <Boegel> some people familiar with latex here ?
15:13:39 <Boegel> I'm still looking for a symbol: a U with a . in the middle...
15:13:49 <Boegel> I found one with a + in it, but no .
15:18:39 <stepcut> heh
15:19:02 <Boegel> stepcut ?
15:19:26 <stepcut> yes ?
15:20:08 <Boegel> what do you mean with 'heh' ? :)
15:20:29 <stepcut> just seemed like a funny predicament
15:20:53 <Boegel> do you know why shapr changed his nick ?
15:20:58 <stepcut> no sir!
15:22:12 <Boegel> weird
15:26:00 <Boegel> I can't find that damned symbol anywhere :@
15:35:36 <stepcut> maybe you just have to make it up ?
15:42:53 <Boegel> how can I do that stepcut ?
15:43:05 <Boegel> but I'm pretty sure the symbol exists, because my prof. used it...
15:43:17 <Boegel> I'm gonna have to ask him I guess
16:00:29 <Boegel> I'm out to sleep
16:00:30 <Boegel> bye !
16:50:45 <roconnor> Did Haskell beat C++ in the ICFP?
16:51:04 <TheHunter> sure
16:51:11 <roconnor> amazing
16:51:27 <Lemmih> Why is that amazing?
16:51:47 <TheHunter> http://www.cis.upenn.edu/proj/plclub/contest/results.php#first
16:52:52 <roconnor> I thought C++ always wins the ICFP
16:58:51 <roconnor> Is this the first time a functional language has won the ICFP?
16:59:48 <dons> don't think so. OCaml has won a few times, I think
17:02:15 <TheHunter> haskell won 2001: http://cristal.inria.fr/ICFP2001/prog-contest/
17:03:09 <roconnor> oh
17:20:27 <Igloo> C++ is quite rare isn't it?
17:21:00 <Igloo> Someone should make a stats page, for both winning languages and how participation has varied over the years
20:04:01 <TheJohn> AH!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20:06:27 <Cale> TheJohn: You okay?
20:07:22 <TheJohn> No, i'm depressed. This is not like me? I feel sick. We only had two look a likes for the madam curry contest and hardly anyone showed up.
20:08:18 <TheJohn> taken from real genius, fyi
20:51:40 <TheJohn> what was the name of that little creature that slept inside of Jabba The Hut?
21:52:50 <musasabi> morning
22:15:39 <Nioate> TheJohn: http://www.starwars.com/databank/character/salaciouscrumb/
22:16:11 <Nioate> ?
23:20:20 <musasabi> "the next td of a td matching a predicate" with xml toolbox? Is using navtree the only possiblity?
23:28:44 <musasabi> *possibility
23:56:54 <shapr> I'm not evil today.
23:56:58 <shapr> too bad, I was having fun.
23:57:22 <lelit> shapr: it just happens, some times :)
23:58:19 <lelit> but usually gets better as time goes by :-}
23:58:29 <shapr> better == more evil?
23:58:38 <shapr> or maybe better == evil is more fun?
23:59:00 <lelit> hehe
