00:22:15 <wagle> @yow yow
00:22:16 <lambdabot> Hello.  I know the divorce rate among unmarried Catholic
00:22:16 <lambdabot>  Alaskan females!!
00:52:46 <Lemmih|School> Hello crackhead 
00:53:25 <Lemm1h> Looking for Haskell info?
02:17:33 <norpan> hmmm
02:18:09 <norpan> is there a recommended way to name modules that you expect others to want to use, for instance Org.Norpan.Module or something?
02:22:57 <Si\> there's no standard for URI style namespaces in Haskell, although there's nothing to stop you from creating them like that
02:23:24 <Si\> for the time being you should just place them where you expect them to be most well categorised
02:23:36 <Si\> e.g. XML applications should go in Text.XML.*
02:23:52 <Si\> new Data-Types should go in Data.*
02:34:52 <norpan> well this is not exactly a module that will ever be included in any standard library collection :)
02:35:50 <norpan> combinators for writing an ant for ant-wars.com (the icfp competition offspring)
02:39:54 <Boegel> hello everyone
02:40:04 <cptchaos> hi Boegel
02:40:16 <stefan_> hi Boegel
02:44:46 <Boegel> awfully quiet here again...
02:45:15 <Boegel> omg, shapr isn't here ! 
02:45:20 <Boegel> the horror !
02:45:26 <xkb> what !?!?
02:45:35 <xkb> he must be writin his mag ;-)
02:46:31 <Boegel> hehe
02:46:35 <Boegel> probably ;)
02:46:43 <Boegel> I hope I'll find time to write my article... :s
02:49:31 <yohan__> how do i use sample?
02:49:38 <yohan__> i cant find any reference on the god damn net
02:49:42 <xkb> sample?
02:49:45 <xkb> as in?
02:49:58 <yohan__> yeah i have a generator and i want to check some values it spits out
02:50:03 <yohan__> 'what'
02:50:06 <xkb> ah quickcheck again
02:50:07 <yohan__> values that is
02:50:10 <yohan__> yeah
02:50:20 <yohan__> my teacher told me to use sample, but i cant find it anywhere
02:50:54 <cptchaos> @index sample
02:50:55 <lambdabot> Text.Html
02:51:07 <xkb> yohan__, I've not yet used QuickCheck.. so can't help you there
02:51:32 <yohan__> nothing found?
02:51:33 <yohan__> k
02:52:26 <cptchaos> Text.Html is, I suppose not the module you could mean I think
02:52:38 <Boegel> @type Text.Html.sample
02:52:40 <lambdabot> Text.Html.sample :: Text.Html.Html -> Text.Html.Html
02:53:04 <yohan__> hm what
02:53:14 <Boegel> what's it about yohan__ ? does it have something to do with HTML ?
02:53:20 <yohan__> no
02:53:26 <yohan__> its one of the most used things in this language
02:54:15 <xkb> what? list constructor :D
02:56:06 <Boegel> sample is one of the most used things in Haskell ? :|
02:56:51 <yohan__> yes, every god damn lecture our teacher uses it
02:56:56 <yohan__> maybe its not a standards function
02:57:35 <Boegel> then you should ask him where to find it
02:57:37 <Boegel> what does it do ?
03:00:54 <musasabi> morning
03:01:01 <Boegel> hellow musasabi
03:01:13 <Boegel> it's noon here already, but hey :p
03:01:34 * musasabi has not yet gotten lunch => not noon ;)
03:02:04 <yohan__> module Sample where
03:02:06 <yohan__> import QuickCheck
03:02:07 <yohan__> sample gen = check (Config 5 5 (const 20) (const unlines))
03:02:09 <yohan__> 		   (forAll gen (const True))
03:02:14 <yohan__> very usefull function
03:02:19 <yohan__> err module
03:02:41 * Boegel hasn't got lunch either, but still 12 o'clock = noon
03:03:07 <Boegel> maybe you should check in the QuickCheck package ?
03:04:45 <Boegel> I can't find anything either with Google...
03:04:50 <Boegel> just ask your teacher
03:10:52 <yohan__> yes
03:11:12 <yohan__> anybody here from chalmers that knows how to use sample?
03:14:46 <Boegel> what is chalmers anyways ?
03:15:33 <xkb> A swedish university
03:15:39 <xkb> correct me if im wrong
03:18:41 <Boegel> is the person here who I talked with a few days ago about prof. Boute ?
03:18:47 <Boegel> I can't remember who it is :s
03:19:48 <Boegel> checked the logs, earthy, r u here :)
03:20:07 <Boegel> earthy has been idle 19hrs 26mins 52secs
03:20:10 <Boegel> I guess not :s
03:22:26 <pesco> Morning everyone.
03:25:16 <cptchaos> moin pesco
03:26:06 <pesco> Ah, moin cptchaos. What's up?
03:26:18 <pesco> I'm sorry, I haven't gotten around to module Comm!
03:26:33 <pesco> I'm a lazy bum. :/
03:26:45 <cptchaos> pesco: finished nearly erverything but the network code ...
03:27:00 <cptchaos> does not matter, I did not need it jet
03:27:07 <pesco> But I know how to fix the problem with accept_as.
03:27:28 <pesco> It's result type should be IO (IO something))
03:27:38 <pesco> where something is (pipe,address) I thinj.
03:27:45 <pesco> Whatever it is currently.
03:28:04 <pesco> That way you call the outer IO action first, to get accept bound to your address.
03:28:42 <cptchaos> pesco, that would be a solution, right, but maybe you should call that funktion than listen, (wich retuns an accept funktion)
03:28:43 <pesco> That's like binding a listening socket, but avoids the introduction of a seperate handle type.
03:29:00 <pesco> Yes, that's a good idea.
03:50:03 <keverets_> nick keverets
03:50:07 <keverets_> blargh.
04:32:17 <Boegel> does anybody know if Haskell has a function for solving kwadratic equations ?
04:33:11 <stefan_> Boegel: I can't remember having seen one around in the standard libraries
04:33:24 <det> "kwadratic"? :)
04:34:37 <arjanb> that's dutch english
04:34:37 <sabamacx> solveq :: Float -> Float -> Float -> Float, the first three floats being the coefficients in ax^2+bx+c, it shouldn't be difficult to write your own :)
04:35:40 <Boegel> how is it correct then arjanb ?
04:36:13 <Boegel> why should I write my own sabamacx :)
04:36:32 <sabamacx> since its only a few lines, and there isn't one that comes with the standard libraries?
04:37:04 <stefan_> Boegel: quadratic
04:37:22 <Boegel> oh, off course :)
04:37:53 <Boegel> oh, there isn't ? that's pretty strange isn't it ?
04:41:29 <Boegel> it's not that hard to write my own, but still, I find it strange...
04:42:02 <Boegel> and sabamacx, shouldn't supposed to be solveq :: Float -> Float -> Float -> (Float,Float)
04:42:14 <sabamacx> Yup :P
04:42:19 <Boegel> since a quadratic ( ;) ) equation always has 2 solutions  ?
04:42:34 <sabamacx> It doesn't always, be careful!
04:42:51 <Boegel> I know
04:42:55 <Boegel> if D=0 it isn't
04:43:09 <Boegel> but then you just give 2 equal solutions
04:43:13 <Boegel> that shouldn't be a problem
04:43:37 <Boegel> the problem lies with the case where D<0
04:43:58 <Boegel> @lambdabot solveq
04:43:59 <lambdabot> Sorry, I don't know the command "lambdabot", try "lambdabot: @listcommands
04:44:04 <sabamacx> Only since you'll be venturing into the complex domain, but we aren't scared by that :)
04:44:08 <Boegel> @type solveq
04:44:10 <lambdabot> bzzt
04:44:15 <Boegel> bzzt ?
04:44:25 <sabamacx> @type :
04:44:26 <lambdabot> bzzt
04:44:36 <sabamacx> @type foldr
04:44:36 <Boegel> ow, it doens't know :)
04:44:37 <lambdabot> foldr :: forall b a. (a -> b -> b) -> b -> [a] -> b
04:44:53 <Boegel> what does bzzt mean ??
04:45:00 <sabamacx> A buzzer sound.
04:45:10 <Boegel> hehe
04:45:14 <Boegel> lambdabot is funny :p
04:46:14 <stefan_> Boegel: http://haskell.org/hawiki/ContinuationPassingStyle
04:47:30 <Boegel> nice solution :)
05:01:51 <Boegel> still no shapr, I find that strange, don't you ? :p
05:10:55 <stefan_> kosmikus: do you keep the slides of your talk at the GH meeting some wile ago on line somewhere? (or the slides you used in Nottingham)
05:29:08 <Boegel> why is it so quiet here again? is everybody asleep or something ?
05:30:58 * Boegel scratches his head
05:45:51 <psi_> hi
05:46:06 <psi_> are type constructors actually functions?
05:48:30 <TheHunter> they can be used exactly the same way as functions, i don't know if that makes them functions
05:48:50 <psi_> yeah, i noticed that
05:52:49 <pesco> psi_: I guess it depends on how you define "function". In the usual abstract way, they certainly are.
05:53:19 <pesco> Er, I see you wrote _type_ constructors. Did you mean _data_ constructors?
05:53:42 <psi_> hm. i thought they were the same thing.
05:54:13 <pesco> In "data Foo = Bar Int", Foo is a (nullary) type ctor and Bar is a (unary) data constructor.
05:54:24 <pesco> type constructors construct types, data constructors construct datae.
05:55:05 <psi_> ah, ok
05:55:09 <psi_> i meant data constructor then :)
05:55:20 <TheHunter> i'd say data constructors are a special case of functions. Otherwise, statements like "a higher order can take functions as an argument" would make no sense.
05:55:43 <pesco> True.
05:56:32 <Si\> to anyone who knows SMBP generics; how do you create an instance of Typeable1?
05:57:33 <psi_> but you can also have data Foo = Bar | Baz. are Bar and Baz data constructors then?
05:57:38 <pesco> TheHunter, psi_: I'm not entirely sure, but I think I read that in the STG implementation, a data constructor results in something that is a function, in the implementation sense.
05:57:44 <pesco> psi_: Yes.
05:57:52 <psi_> but they aren't functions in that case
05:58:06 <pesco> psi_: Yes, nullary functions.
05:58:26 <pesco> Depends on whether you consider that a function or not.
05:58:36 <psi_> i'm not familiar with the term
05:58:52 <pesco> "A function taking no argument".
05:58:52 <Philippa> "no parameters"
06:00:34 <psi_> i see. thanks.
06:01:07 <psi_> hm. so the function (data contructor) Bar produces a value Bar of type Foo?
06:01:22 <pesco> Correct.
06:02:01 <Philippa> alternatively, given these:
06:02:09 <Philippa> data Foo = Bar | Baz Int
06:02:11 <Philippa> Bar :: Foo
06:02:16 <Philippa> Baz :: Int -> Foo
06:02:38 <Philippa> the views're pretty much interchangeable
06:03:28 <psi_> right
06:05:41 * Boegel bounces because he understands what Philippa is saying
06:05:57 * Boegel excusus for bouncing around like that, but he's still learning
06:06:19 <Boegel> *excuses*
06:06:20 <TheHunter> well, the translation rule just above section 4.2.2 in http://www.haskell.org/onlinereport/decls.html seems to imply that, technically, data constructors are not functions
06:07:37 <TheHunter> sorry, please forget what i said
06:08:21 <TheHunter> this only says what stricness flags are supposed to mean
06:10:20 <Lemmih> @seen shapr
06:10:21 <lambdabot> I saw shapr leaving #selectio-naturalis 10 hours 9 minutes 29 seconds ago
06:10:38 <Boegel> you're wondering where he is too ?
06:11:07 <Boegel> Lemmih, you're wondering where he is too ?
06:12:17 <Lemmih> Yeah.
06:14:40 <Philippa> quite possibly still in bed
06:14:58 <Boegel> he wasn't here last night either
06:34:47 <Boegel> having connection problems danja_ ?
06:39:33 <Boegel> does anybody know a website where they give a view on the different document classes in LaTeX ?
06:53:38 <Boegel> @seen anyone
06:53:38 <lambdabot> I haven't seen anyone
06:53:42 <Boegel> :o)
06:54:12 <Philippa> Boegel: I don't - what're you looking to do?
06:54:20 <Philippa> I've not done much beyond simple write-ups
06:54:37 <Boegel> making a simple but elegant LaTeX document
06:54:50 <pesco> Boegel: Look for "The Not So Short Introduction To LaTeX" I think that explains all the basics.
06:55:00 <Boegel> do you have any idea how you typeset the R letter that is used for 'real numbers' ?
06:55:13 <pesco> $\mathbb{R}$
06:55:21 <pesco> As in "math black-board".
06:55:27 <pesco> (I think)
06:55:56 <Boegel> I don't seem to have the mathbb package...
06:56:07 <Boegel> maybe I should do \use{mathbb}
06:56:13 <pesco> I think it's in asmfonts or something.
06:56:24 <pesco> \usepackage that is.
06:56:26 <Igloo> \usepackage{asmmath} I think
06:56:34 <Philippa> ams rather than asm?
06:56:38 <Igloo> IM amsmath
06:56:54 <pesco> Er. Me too.
06:56:59 <pesco> ;-)
06:57:12 <pesco> What's that! My fingers did that!
06:57:34 <Boegel> I have the package, but mathbb doesn't work
06:57:52 <pesco> Be more specific.
06:58:03 * Philippa spots a slight problem with WASH
06:58:32 <Boegel> well, LaTeX can load the package, but $\mathbb{R}$ produces an error
06:59:03 <Philippa> no way to either delete a persistent entity or check it exists without creating it
06:59:32 <Igloo> The way it repeats all computation for a session unnerves me
06:59:41 <Igloo> And it's also reliant on JS  :-(
06:59:55 <Philippa> what does it use JS for?
07:00:25 <Igloo> I haven't looked in detail, but if you don't have it it doesn't work
07:01:58 <Philippa> I'm just trying to hack up a quick wiki-clone, but if I can't do that without JS then stuff it
07:02:26 <Boegel> pesco, it gives the 'undefined control sequence' error with \mathbb
07:02:49 <pesco> Then maybe you loaded the wrong package.
07:03:08 <Boegel> I loaded amsmath
07:03:13 <Boegel> which one should I load ?
07:03:19 <Philippa> Igloo: any recommendations for an alternative?
07:03:21 <pesco> Try amsfonts, that was my initial guess.
07:03:34 <pesco> or amsfont. I can't remember.
07:03:37 <pesco> But it's something like that.
07:03:39 <Philippa> get the not so short intro
07:03:56 <Philippa> you want it if you're new to LaTeX anyway
07:03:57 <Igloo> Philippa: No, sorry  :-(
07:05:01 <Boegel> I'm not really new to LaTex
07:05:14 <Boegel> but I'm not very good at it
07:05:34 <pesco> Boegel: Ah, there it says. Page 64 of The Intro. amsfonts it is.
07:05:36 <Boegel> I also have to 'think fast' to solve problems that I could solve more elegantly
07:06:05 <pesco> I use The Intro as a reference also. Works fairly well.
07:06:23 <Boegel> thank you pesco
07:06:35 <Boegel> can you give me a link for a recent version of The Intro ?
07:06:46 <pesco> @google Not So Short LaTeX
07:06:47 <lambdabot> Sorry, I don't know the command "google", try "lambdabot: @listcommands
07:06:54 <pesco> You get the idea ;)
07:07:06 <Boegel> ;)
07:07:46 <Igloo> I thought amsmath was supposed to drag in all the ams packages. Maybe I'm misremembering
07:07:48 <pesco> You can probably judge the age of the versions you find by comparing the subtitles ("Or LaTeX 2e in ... minutes")
07:09:56 <Boegel> okay, I'll print this sucker out
07:10:00 <Boegel> seems damn handy :)
07:10:03 <Philippa> Igloo: am just looking at Network.CGI (under the heading of "I thought I saw that somewhere")
07:10:14 <tic> TNSS is good.
07:10:16 * tic has it printed
07:11:54 <Boegel> I never managed to find a good LaTeX tutorial
07:12:00 <Boegel> seems that is fixed now:)
07:14:30 <pesco> I have a nice double-sided cheat-sheet and five pages of math symbols printed as a quick desktop reference.
07:15:01 <Boegel> did you make it yourself ?
07:15:42 <pesco> No no, both found on the web. The symbol listings are ripped from a document called "Essential LaTeX".
07:16:48 <Boegel> http://web.mit.edu/olh/Latex/ess-latex.html this ?
07:16:55 <Boegel> cause there's not much math in that one...
07:18:14 <Igloo> I use symbols-a4.ps when I need to find a symbol
07:20:01 <Boegel> nice 55 pages of symbols :)
07:23:59 <Boegel> and still no shapr :p
07:29:14 <Boegel> @seen Cale
07:29:14 <lambdabot> Cale is in #haskell.
07:29:34 <Boegel> Cale, are you active ?
07:29:49 <Boegel> @listcommands
07:29:50 <lambdabot> I react to the following commands: ["all-dicts","arr","cmafihe","define
07:29:50 <lambdabot> ,"definitions","del-definition","det","devils","dict","dict-help","dummy
07:29:50 <lambdabot> ,"dump","dynamic-load","dynamic-reload","dynamic-unload","easton","echo
07:29:50 <lambdabot> ,"elements","eurohaskell","eval","foldoc","fortune","gazetteer","get-definition
07:29:50 <lambdabot> ,"goodbye","hello","hitchcock","index","info","jargon","join","karma","karma
07:29:50 <lambdabot> ","karma-","learn","leave","listchans","listcommands","listmodules","lojban
07:29:53 <lambdabot> ,"moo","more","msg","musasabi","part","prelude","quit","reconnect","resume
07:29:55 <lambdabot> ,"seen","set-fuel","shapr","state","stepcut","topic-cons","topic-init",
07:29:56 <lambdabot> topic-snoc","topic-tail","topic-tell","type","vera","web1913","wiki","wn
07:30:20 <Boegel> @musabi
07:30:21 <lambdabot> Sorry, I don't know the command "musabi", try "lambdabot: @listcommands
07:30:28 <Boegel> @musasabi
07:30:28 <lambdabot> Einar
07:30:32 <Boegel> ? :)
07:30:45 <Boegel> @shapr
07:30:46 <lambdabot> needs sleep
07:30:50 <Boegel> lolz
07:30:57 <Boegel> @stepcut
07:30:57 <lambdabot> juicy bits of code
07:31:37 <Lemmih> Boegel: Bored?
07:31:39 <psi_> @arr
07:31:40 <lambdabot> Ahoy mateys
07:36:14 <Boegel> maybe :p
07:36:23 <Boegel> no, just getting to know lambdabot
07:36:30 <Boegel> @vera
07:36:40 <Boegel> @hello
07:36:41 <lambdabot> Hello world. 
07:36:48 <Boegel> @goodbye
07:36:49 <lambdabot> Hello world. 
07:36:52 <Boegel> ? :)
07:37:05 <Boegel> @fortune
07:37:06 <lambdabot> The human mind treats a new idea the way the body treats a strange
07:37:06 <lambdabot> protein -- it rejects it.
07:37:06 <lambdabot> 		-- P. Medawar
07:37:29 <Boegel> I'm gone, watching some tv and typesetting some LaTeX :)
07:37:46 <Boegel> bye people, and thx for the hints on the LaTeX tutorials
07:37:54 <Lemmih> Be careful. TV will dull your mind.
07:38:01 <Boegel> no it won't :p
07:38:13 <Boegel> The Simpsons rule
07:38:23 <Boegel> @lambdabot The Simpsons
07:38:23 <lambdabot> Sorry, I don't know the command "lambdabot", try "lambdabot: @listcommands
07:38:29 <Boegel> @seen The Simpsons
07:38:30 <lambdabot> I haven't seen The
07:38:34 <Boegel> damn ;)
07:38:38 <Boegel> @seen The_Simpsons
07:38:38 <lambdabot> I haven't seen The_Simpsons
07:38:43 <Boegel> there goes my joke :p
07:39:09 <Boegel> bye now !
07:39:24 <Lemmih> Bye then.
07:54:36 <musasabi> hmmh
08:18:23 <emu> @seen trouble
08:18:24 <lambdabot> I haven't seen trouble
08:35:58 <TheHunter> @seen The Simpsons
08:35:58 <lambdabot> I haven't seen The Simpsons
09:05:18 <Igloo> pesco: Why the <pre>?
09:14:40 <DenizzzZ> is their any good tutorial site on haskell ? :) i have searched on google but i don't know which one is the best!.. :D
09:19:02 <Si\> http://www.haskell.org/bookshelf/#tutorials
09:44:03 <Leimy> Having a bit of a syntax issue I think
09:44:17 <Leimy> data State = (Integer, Bool)
09:44:28 <Leimy> newtype Counter a = Counter (State -> (State, a)) --takes previous value
09:44:47 <Leimy> the newtype is illegal... not sure why
09:45:30 <pesco> Igloo: You mean, why do I use it? Because with it produces exactly what I want.
09:45:36 <Igloo> No, the data is illegal
09:45:39 <Igloo> No constructor
09:45:45 <Igloo> You might mean type State =
09:45:46 <Leimy> oh snap1
09:45:48 <Leimy> hehee
09:45:57 <Leimy> yeah... that would do it
09:45:58 <pesco> Igloo:(Jumping back to you question about <pre>.)
09:46:15 <Igloo> Fair enough. The capitalisation is wrong in the page text, BTW.
09:46:43 <Leimy> Igloo: thanks!
09:46:53 <Leimy> that was really silly
09:47:24 <pesco> Igloo: Ah, that's true.
09:47:57 <pesco> Thanks for pointing that out. Huh. :)
11:11:15 <stepcut> unix question: I want my program to run some other program, and I want to tell if 'the other program' is blocking waiting for user input. Is there a good way to do that ?
11:11:53 <bourbaki> hiho
11:12:04 <stepcut> howdy
11:12:35 <kristnjov> you mean like shellex() or whatever it was called in c++?
11:12:58 <Igloo> I don't think so. Or at least, not without dong ptrace-style things
11:13:48 * stepcut is unfamiliar with shellex()
11:14:20 <Igloo> You'll be able to tell whether there is input ready on its stdin I *think*, but that's it
11:15:32 <stepcut> hrm
11:16:34 <stepcut> myprog | otherprog, and if myprog can write more than 1 line of data, then presumeably otherprog read a line from stdin, but that seems dubious due to buffering issues (it would work sometimes, but not always)
11:21:29 <stepcut> I thought the RTS had someway of telling which processes are blocked when it is doing its scheduling magic...
11:22:59 <Igloo> Threads, not processes
11:23:19 <stepcut> oh yeah
11:24:05 <Igloo> And in any case, in that situation the children could tell the parent when they were about to block. You sounded like you were going to run an arbitrary program
11:24:29 <stepcut> it *is* an arbitrary program
11:25:11 <stepcut> The 'arbitrary' programs  are not supposed to ever read stdin, so if they do, that is an error I want detect
11:26:10 <stepcut> i am thinking I may need to look at strace :-{
11:26:25 <Igloo> Does closing it before you run them do it, or is it possible to reopen it?
11:27:03 <Igloo> And you can detach them from the terminal too I think
11:27:25 <stepcut> Closing does not always cause an error. I specifically want to abort the child if it breaks the rules.
11:27:52 <kristnjov> abort the child hehe
11:28:28 <stepcut> hehe
11:29:06 <Igloo> You could wrap the read etc libc functions with an LD_PRELOADed library
11:29:20 <stepcut> yeah, that was one of my thoughts
12:24:01 <Lukhas> hello
12:32:08 <Philippa> anybody in here used Text.Html before?
13:27:43 <Boegel> hellow
13:27:49 <Boegel> still no shapr I see ?
13:27:52 <Boegel> @seen shapr
13:27:52 <lambdabot> I saw shapr leaving #selectio-naturalis 17 hours 27 minutes ago.
13:27:58 <Boegel> strange...
13:32:45 <Boegel> hellow danja
13:33:18 <TheHunter> hi Boegel, wassup?
13:39:35 <Boegel> just chillin' :p
13:40:09 <Boegel> no, I'm trying to write the ray casting (primitive ray tracing) algorithm in FunMath, but I'm experiencing some problems
13:45:27 <Boegel> mainly because I haven't worked with FunMath for over 3 months
13:46:22 <TheHunter> and that FunMath thing is only done on paper?
13:46:55 <Boegel> yep
13:47:11 <Boegel> but I think the problem is I'm writing it with Haskell in the back of my head
13:47:26 <Boegel> I'n thinking in Haskell, and trying to parse that to FunMath
13:47:38 <Boegel> the ideal way of working is the other way around :)
13:47:46 <Boegel> thinking in FunMath, and then parsing that to Haskell
13:50:10 <Boegel> Cale, are you there ?
13:50:20 <Boegel> has anybody seen 'em lately ? active I mean
13:50:54 <Lemmih> He has been idling the last 31 minutes.
13:51:19 <Boegel> I know
13:51:27 <Boegel> but that doesn't mean he's not here :)
13:51:37 <Boegel> he was idle this afternoon too
13:51:43 <Boegel> but he was here in between...
13:52:42 <TheHunter> Can FunMath be used as a programming language or is it only a specification language?
13:54:44 <Boegel> it stands above any programming language
13:54:51 <Boegel> but it is a functional system
13:55:05 <Boegel> and therefore ideal for working with Haskell for example
13:55:16 <Boegel> but you can prove stuff in it that's not meant to be programmed
13:55:32 <Boegel> for example, stuff about AND/OR/XOR ports
13:56:14 <Boegel> I know I should give an example, but I'm not sure if I'm allowed to make the things I have lying around available for everyone
13:56:23 <Boegel> I can show you my bit, but it's not complete
13:56:40 <Boegel> if you're familiar with Haskell, you might recognize some stuff
13:57:06 <TheHunter> you don't need to worry I'll steel your ideas...
13:57:38 <Boegel> there's not much stealing possible, it's just the basic ray casting algorithm :)
13:57:44 <Boegel> what do you prefer, ps of pdf ?
13:57:49 <TheHunter> :)
13:58:17 <TheHunter> pdf
13:58:26 <Boegel> one moment pls :p
14:00:35 <Boegel> I'm not sure the syntax is 100% correct, because I should have it checked
14:00:42 <Boegel> but you'll get an idea anyways ;)
14:02:04 <Boegel> http://studwww.ugent.be/~kehoste/FunMath/rayCasting.pdf
14:02:36 <TheHunter> ok, thanks very much
14:02:43 <Boegel> I'm still working on the closestIntersection, intersect and raytrace functions, so don't mind them (except for the type)
14:03:03 <Boegel> the solveq is most interesting for you I guess
14:03:15 <Boegel> bot I'm not sure the syntax is 100%
14:03:17 <TheHunter> hey, that looks a lot like haskell
14:03:25 <Boegel> off course, it's functional :)
14:03:47 <Boegel> and telling you, it may be because I'm writing it while thinking 'in' Haskell
14:04:00 <Philippa> the functional subset of most lisps doesn't look that much like Haskell
14:06:54 <Boegel> that's no only a part of the FunMath system talking
14:07:18 <Boegel> but I has a lot of means to prove things, like induction and stuff like that
14:07:25 <Boegel> type checking, ...
14:08:23 <Boegel> it uses a lot of symbols, but I'm only using few right now...
14:08:46 <Boegel> does anyone know the LaTeX commando for a capital u with a point in the middle ?
14:09:07 <Boegel> I found codes for U's with a + in it, but not with a .
14:10:48 <Boegel> so, what do you think of it TheHunter ?
14:12:07 <TheHunter> looks very similar to functional languages. With the ability to prove stuff, it can be really nice
14:12:42 <Boegel> it is really nice
14:12:49 <TheHunter> but don't ask me too much, i don't even know coq
14:13:00 <Boegel> hmmz, maybe I can show you some more...
14:13:13 <Boegel> I'm not planning to ask you anything ;)
14:15:09 <TheHunter> functional languages could use the ability to prove things in them, too.
14:15:33 <TheHunter> As long as you aren't forced to prove everything, this could be a great help
14:16:45 <Philippa> tr: "I want a better type system!"
14:17:28 <TheHunter> me too!
14:19:58 <Boegel> you aren't forced in FunMath
14:20:19 <Boegel> it's possible to prove things, so you can check if your functions do what you intended them for
14:43:59 <Nornagest> hi
14:45:17 <Boegel> hellow
14:45:18 <Boegel> :)
14:46:29 * Boegel is bored
14:46:46 <Igloo> You need to get a hobby
14:47:00 <Boegel> I have a hobby, but it's sleeping now
14:47:05 <Boegel> (my girlfriend :p)
14:47:10 <Nornagest> lol
14:47:12 <Boegel> I have lot's of hobby's
14:47:14 <Nornagest> get another hobby
14:47:25 <Nornagest> do fancy stuff with haskell ;)
14:47:27 <Boegel> 3d modelling is another hobby
14:47:38 <Boegel> only problem is, when i start with it, I can't stop anymore
14:47:47 <Boegel> and I have to go to sleep in an hour or so
14:47:58 <Boegel> so i won't start with that now :)
14:48:19 <Boegel> I could work on my ray casting thingie, but I don't feel like it right now :p
14:49:15 <Nornagest> oh come on, sleep is for kids ;)
14:50:20 <monochrom> I am a kid deep down in my heart.
14:50:39 <Nornagest> :)
14:50:42 <Nornagest> me too
14:51:32 <Nornagest> some friends and i came to the conclusion: "sleep is as gay as sitting on your stomache" ;)
14:51:52 <Nornagest> (i hope it can be translated like this)
14:51:55 <Nornagest> :)
14:53:32 <cptchaos> hm, how does it look to sit on your own stomache?
14:53:52 <Boegel> it probably painfull :)
14:53:59 <Boegel> _very_ painfull :p
14:54:15 <cptchaos> ok
14:54:33 <Nornagest> *gg*
14:55:11 <Nornagest> in fact a friend was lying on his stomache... but he said something about sitting on his stomache... so this came up :)
14:55:48 <Boegel> how much do you guys sleep at night ?
14:55:55 <cptchaos> at least I can imagine that without destroying the body's topology ...
14:55:59 <Boegel> average
14:56:14 <cptchaos> 9-10 Hours
14:56:14 <Nornagest> between 4 to 10 hrs
14:56:26 <cptchaos> (in hollydays) 
14:56:26 <Boegel> that's a lot cptchaos :o)
14:56:31 <Boegel> mine is around 8 hours
14:56:57 <cptchaos> hm, when I work study 4-9
14:57:46 <cptchaos> and to irregular to build an arrithemtic middle
15:01:10 <Boegel> 4 is way too little
15:01:17 <Boegel> that just isn't healthy :s
15:02:05 <cptchaos> Boel right, but I getting better, on the begin of my studying in Univerity it was 0-9
15:02:53 <cptchaos> so there were day's I (especially nights) were I coded Homework for mathematical numeric lectures
15:03:38 <cptchaos> at the end of the semester I was near to a physical breakdown
15:03:44 <cptchaos> ;-)
15:04:21 <Nornagest> *g*
15:04:28 <cptchaos> I would admit, you should never here more lectures than you can handle
15:06:40 <Boegel> I once slept only 6 hours in 2 days
15:06:47 <Boegel> while trying to finish a project
15:07:10 <Boegel> at the end of the last day, I found myself shaking (really shaking), and breaking into cold sweat
15:07:22 <Boegel> I even became very emotional when the project was finished
15:07:36 <Boegel> I just couldn't handle the lack of sleep
15:08:09 <cptchaos> hm, I could handle that better when I was younger
15:08:43 <Boegel> how old are you now ?
15:08:44 <Boegel> :o)
15:08:57 <cptchaos> 24 (still quite young)
15:09:04 <Boegel> I'm 20
15:09:06 <Boegel> almost 21
15:09:17 <Boegel> and I would want to experience that condition again
15:11:00 <cptchaos> so I remember an congress where I did not sleep for two nights ...
15:12:24 <cptchaos> I thing I was 19 or 18, but I would not try this again (much to strenous)
15:12:55 <cptchaos> and I needet a lot coffein
15:13:04 <cptchaos> :-)
15:13:10 <Nornagest> *g*
15:16:35 <Boegel> I hope I never have to do such crazy thing anymore... like not sleeping for 48 hours orso
15:16:49 <Boegel> once I had a weekend (3 days) where i only slept 6 hours
15:16:54 <Boegel> at a music festival
15:19:25 <cptchaos> Boegel: I hope that for me too
15:20:33 <newblistic> anyone talking
15:20:38 <newblistic> hello
15:28:22 <Boegel> woops
15:28:32 <Boegel> newblistic, yes we are talking
15:28:38 <Boegel> you're just not patient enough :p
15:29:00 <Boegel> @seen shapr
15:29:01 <lambdabot> I saw shapr leaving #selectio-naturalis 19 hours 28 minutes 8 seconds ago
15:29:01 <cptchaos> Boegel: thought the same
15:29:10 <Boegel> he's missing dudes ! :p
15:29:48 <cptchaos> didn't you say something about patience above? ;-)
15:29:57 <Nornagest> *g*
15:30:49 <Boegel> I just find it strange
15:30:54 <Boegel> he's here *all* the time
15:31:02 <Boegel> and now he hasn't been for 19+ hours
15:31:27 <cptchaos> he has been away for some days, some days ago
15:31:37 <Boegel> the horror !
15:31:38 <Boegel> :p
15:31:52 <cptchaos> *g*
15:31:57 <Boegel> we'll, i won't be here every day either, but shapr is pretty famous here
15:32:37 <cptchaos> he is the founder (an op) of this channel, IRC
15:34:11 <Boegel> I know he's an op
15:34:17 <Boegel> I didn't know he's the founder
15:34:23 <Boegel> how old is this channel ?
15:35:12 <cptchaos> don't know
15:35:22 <Boegel> @age #haskell
15:35:22 <lambdabot> Sorry, I don't know the command "age", try "lambdabot: @listcommands"
15:35:30 <Boegel> lambdabot doesn't kno either ;)
15:35:53 <cptchaos> lambdabot is not omnipotent (yet)
15:36:07 <Boegel> will it become omnipotent then ?
15:36:25 <cptchaos> maybe omniscient is the better word
15:36:31 * Boegel is looking up omnipotent
15:36:38 * Boegel is looking up omniscient also
15:37:05 <cptchaos> Boegel: where are you from?
15:37:25 <Boegel> Belgium
15:37:27 <Boegel> why?
15:37:32 <Boegel> is my English that bad ?
15:37:59 <cptchaos> no, or I can't tell, I am not an native speaker
15:38:22 <Boegel> somebody grade my English ! :p
15:38:36 <Nornagest> hehe
15:38:43 <Nornagest> where are u from cptchaos?
15:38:45 <Nornagest> <- german
15:39:05 <cptchaos> right
15:39:05 <Boegel> how old are you Nornagest ?
15:39:13 <Nornagest> 20
15:39:20 <cptchaos> or I german too
15:39:35 <Nornagest> nice to know
15:39:35 <Boegel> everybody is in his 20's in here :)
15:39:48 <Nioate> Boegel: your grammar is fine
15:39:56 <cptchaos> for great values  of twenty me too
15:40:02 <Boegel> thx Nioate, I practice a lot :p
15:40:10 <cptchaos> s/great/big/
15:40:18 <Boegel>  <cptchaos> 24 (still quite young)
15:40:30 <thebug> English generally isn't written in AOLspeak though
15:40:44 <Boegel> thebug, what do you mean ?
15:40:52 <Nornagest> *g*
15:41:04 <thebug> 'thx','u','ur', et al
15:41:36 <Boegel> ow, yeah, but that's just being easy :)
15:41:41 <thebug> true
15:41:59 <Nornagest> it's just because one's to lazy to write the whole word... and it safes time
15:42:01 <Nornagest> :)
15:42:04 <cptchaos> ah some kind of phonetic abbreviations 
15:42:06 <Boegel> we all know u = you, thx = thanks, and so on
15:49:57 <Boegel> I'm outta here, gotta catch some sleep
15:49:59 <Boegel> bye everyone !
15:50:47 <cptchaos> Boegel: bye
15:51:39 <Nornagest> bye
16:03:13 <Nornagest> good night folks :)
16:03:28 <cptchaos> good night!
22:27:33 <musasabi> morning
22:38:09 <shammah> afternoon.
22:42:59 <Lemmih> God morning.
22:43:50 <Lemmih> *Good
22:46:48 * jesse99 hmms
