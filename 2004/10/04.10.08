00:18:04 <kosmikus> good morning, #haskell
00:24:34 <ikegami--> morning
00:26:07 <ikegami--> are there people in Goteborg, Sweden?
00:26:44 <ikegami--> I'll visit Goteborg next week for a Haskell software project
00:26:49 <ikegami--> :)
02:01:01 <dblhelix> @yow
02:01:02 <lambdabot> Yow!  Is my fallout shelter termite proof?
02:01:47 <bbls> :)
02:12:38 <arjanb> shapr: wiki spam again :(
03:04:57 <shapr> @yow !
03:04:57 <lambdabot> Is there something I should be DOING with a GLAZED DONUT??
03:10:35 <shapr> good morning #haskell !
03:12:56 <Lemmih> Good morning, shapr!
03:16:55 <shapr> how's code Lemmih?
03:19:18 <Lemmih> Is it possible to spawn a new thread that'll run the hopengl windows so it doesn't kill ghci?
03:21:18 <shapr> yes
03:21:21 <shapr> at least, I think so
03:21:38 <shapr> I think forkIO should spawn a thread that can do opengl stuff
03:22:55 <Lemmih> Hm. Can't use ghci with a threaded RTS /-:
03:22:55 <TheHunter> man, those ******* spammers even remove the contents of wiki pages now
03:24:26 <shapr> TheHunter: did you see what was written at the top of ec51.org ?
03:24:41 <shapr> **************Please do not delete,I send this message only one time,in order to introduce some china website.IF you delete,I will publish every day.***************I am from china,I want to introduce some very good chinese sites to you ,so you can find something about china cluture,people.
03:25:04 <bbls> that's not totally unexpected
03:25:07 <bbls> :)
03:25:09 <TheHunter> yeah, they're writing this above each of their texts
03:25:14 <bbls> wiki is clearly an easy target
03:25:43 <shapr> seems like I better switch to banned content really soon
03:25:48 <shapr> this is too much trouble
03:25:59 <shapr> that is, banning IPs and scrubbing is a lot of trouble
03:27:31 <shapr> TheHunter: part of the irritation is that it still works for spammers if the content shows up in the 'revert'
03:27:37 <shapr> because google still finds it there
03:28:36 <TheHunter> that's not good
03:29:20 <shapr> at the last anti-spam wiki meeting on #moin, I proposed that I spraypaint my website url on spammers houses.
03:31:52 <TheHunter> is it possible to put a robots.txt file into the wiki directory, disallowing all urls containing a `?'?
03:32:25 <shapr> I'm going to try this : http://moinmoin.wikiwikiweb.de/AntiSpamGlobalSolution
03:32:30 <shapr> hopefully that's a better solution.
03:34:31 <TheHunter> that sounds good
03:46:56 <al_b> hello
03:47:20 <TheHunter> hello, al_b 
03:48:01 <al_b> just a stupid question, if I have a list like [("abc",2)("qqq",5),("zxc",88)], is there a built in function that takes in the list, and a string, and spits out the associated number?
03:48:18 <tic> like, dict? :)
03:48:28 <al_b> the data format doesn't have to be that exact type. I just have strings linked to numbers
03:48:34 <al_b> ah, thanks, I'll google it
03:48:41 <TheHunter> @type Data.List.lookup
03:48:42 <lambdabot> Data.List.lookup :: forall b a. (Eq a) => a -> [(a, b)] -> Maybe b
03:49:18 <TheHunter> you'll have to import Data.List and can then use the function lookup
03:49:42 <al_b> ahm, thanks
03:49:42 <Lemmih> Yay. I made a half transparent cube!
04:00:21 <bourbaki> hi
04:02:14 <al_b> another idiot question
04:02:24 <al_b> the lookup works, but returns a 
04:02:55 <al_b> "just <answer>". Is there anyway I can just get a straight value, without the 'Just' business?
04:03:11 <al_b> as you can probably tell, I'm not very good with haskell :)
04:03:28 <Lemmih> @type Data.Maybe.maybe
04:03:30 <lambdabot> Data.Maybe.maybe :: forall b a. b -> (a -> b) -> Maybe a -> b
04:03:35 <Lemmih> @type Data.Maybe.fromJust
04:03:37 <lambdabot> Data.Maybe.fromJust :: forall a. Maybe a -> a
04:04:18 <al_b> thanks
04:05:01 <al_b> great, thats what I'm after
04:06:11 <tromp> or you can just use patternmatching
04:06:57 <tromp> where (Just val) = something_of_type_Maybe
04:13:44 <al_b> hmm, using Hugs, I have > import Data.Maybe
04:14:08 <al_b> but following the example from http://www.zvon.org/other/haskell/Outputmaybe/fromJust_f.html , I get ERROR - Undefined variable "fromJust"
04:14:18 <al_b> endless fun :)
04:27:36 <shapr> al_b: import Data.Maybe
04:28:52 <al_b> already there :/
04:29:39 <shapr> you can ask lambdabot for symbols you're missing
04:29:42 <shapr> @index fromJust
04:29:42 <lambdabot> Data.Maybe,Maybe
04:44:00 <Lemmih> shapr: Is there an index command in GHC?
04:49:20 <xkb> should be in ghci
04:49:27 <xkb> or hugs 
04:49:40 <xkb> don't know if it is.. but it should
04:49:45 <musasabi> al_b: if you play lots with Maybe reading http://www.nomaware.com/monads/html/maybemonad.html might be a good idea. Ignore the talk about monads and look at the example.
04:50:26 <musasabi> I think I have learned to use monad transformers ^_^
05:14:30 <xerox> yo
05:14:42 <al_b_> thanks, I got it sorted
05:14:45 <al_b_> stupid mistake
05:43:41 <musasabi> Is there a way to read to Ptrs from UDP sockets (like hGetBuf) ?
05:45:53 <shapr> that sounds interesting
05:47:43 <musasabi> hmm.. recvBufFrom exists in the cvs-head ^_^
05:47:57 <musasabi> was committed 3 days ago.
05:48:03 <shapr> :-)
06:22:44 <shapr> er, is fedora effectively redhat 11 ?
06:24:21 <Cale> something like that :)
06:24:44 <shapr> I'm trying to compare the latest version for a client
06:24:48 <shapr> compare to the redhat 8.0 he has now
06:39:34 <al_b_> bg
06:39:43 <al_b_> oops, disregard that please
06:41:27 <shapr> al_b_: & !
06:43:32 <shapr> al_b_: that seems to have worked, there's suddenly no conversation on the channel
06:43:46 <shapr> al_b_: you may have to do a fg on everybody before they'll come back ;-)
06:44:09 <al_b_> uhh..
06:44:18 * shapr is joking
06:44:28 <al_b_> what'd I do? I was testing to see if freenode has disconnected me again
06:44:31 <al_b_> I know =)
06:44:54 <ibid> shapr: you ignore SIGSTOP and SIGTSTP? :)
06:45:05 <ibid> (given that you weren't backgrounded)
06:47:37 <TheHunter> is this a joke:? 
06:47:41 <TheHunter> Prelude> fromEnum $ (maxBound :: Char)
06:47:41 <TheHunter> 1114111
06:48:13 <TheHunter> (1114111 is prime)
06:48:39 <ibid> that's 10ffff
06:48:42 <ibid> ie. not a joke
06:49:07 <ibid> but the maximum value that a unicode code point can have
06:49:15 <TheHunter> ah, thanks
06:50:02 <ibid> iirc
06:52:19 <vegai> http://www.bash.org/?408913
06:56:00 <al_b_> if I have a list of bools, say [True Falso False True] etc, how can I OR all those together?
06:56:06 <Egon> where can I get the BNF of haskell?
06:56:17 <al_b_> so [F F F F] => F, [T F F F ] => T, etc
06:56:22 <Oejet_> al_b_: or.
06:56:31 <Oejet_> List.or
06:56:38 <al_b_> thats it? thanks
06:56:42 <al_b_> thats prety easy
07:08:51 <al_b_> erm, excust my ignorance, but whats the exact syntax for that>
07:09:10 <al_b_> ?  or. [True True]
07:09:35 <al_b_> gives Type[Bool] does not match a->b
07:11:06 <dblhelix> @index or
07:11:07 <lambdabot> Data.List,GHC.List,Prelude,List
07:11:30 <dblhelix> so, first of all, you don't actually need the List module: or is in the Prelude
07:11:34 <dblhelix> @type or
07:11:36 <lambdabot> or :: [Bool] -> Bool
07:11:37 <dv_> without the dot
07:11:54 <dblhelix> or [True, False] ==> True
07:12:31 <al_b_> haha, I thought the dot was part of it
07:12:32 <al_b_> cheers
07:13:34 <dv_> . is function composition (eg (not . or) makes a NOR function)
07:13:49 <al_b_> ah
07:14:04 <al_b_> I'm probbly totally out of my depth here... I'm yet another student :)
07:14:16 <dblhelix> @type (.)
07:14:18 <lambdabot> (.) :: forall c a b. (b -> c) -> (a -> b) -> a -> c
07:14:42 <shapr> @type ()
07:14:44 <lambdabot> () :: ()
07:15:04 <shapr> greetings Egon 
07:15:19 <shapr> Egon: I don't know if there's a Haskell BNF, check the online report.
07:15:20 <Egon> how are you doin shapr?
07:15:29 <shapr> Egon: http://www.haskell.org/onlinereport/
07:15:36 <shapr> Egon: life is code, and code is good.
07:24:02 <Egon> shapr why is 1001-110=11 rather than 1011l; I am having trouble with the last carry or last digit in the '9'.
07:29:52 <shapr> eh?
07:30:35 <shapr> I don't understand
07:32:10 <Egon> thats binary division shapr.
07:32:15 <shapr> ah
07:32:34 <shapr> I thought you were talking about a subtraction error in Hugs or something
07:33:04 <Egon> no.
07:33:06 <Egon> hehe.
07:34:33 <shapr> err, I'm going to unicycle... I'll be back later.
07:34:38 <shapr> I'll look at your question then.
07:36:20 <tromp> what question is that?
07:38:52 <Egon> can someone say why is 1001-110=11 rather than 1011l; I am having trouble with the last carry or last digit in the '9'.
07:39:21 <tromp> 9-6=3
07:39:30 <Egon> no shit.
07:39:57 <tromp> so u wonder why 100-11=1 ?
07:41:00 <tromp> do u see why 10 - 1 = 1 ?
07:41:03 <Egon> yeah, the left most digit is still left behind after the carries.
07:41:21 <Egon> 10-1=1 yeah
07:41:42 <tromp> but you don't see why 100 - 11 = 1?
07:41:59 <Egon> right
07:42:21 <tromp> well 0 - 1 = 1 with 1 borrowed
07:42:38 <ibid> there are no carries in subtraction, just borrows ;)
07:43:06 <tromp> then 0 - 1 - 1 = 0 with again 1 borrowed
07:43:22 <kristnjov> and i still don't get it, 0-1=-1
07:43:22 <tromp> then finally 1 - 1 = 0
07:43:24 <Egon> where does the borrow go?
07:43:57 <Egon> oh
07:44:10 <tromp> if you borrow from the next higher position then you're getting 2 in current position
07:45:06 <tromp> since -1 * 2^(i+1) and +2 * 2^i cancel
07:46:05 <tromp> so i add 2 in current position and pay for that by borrowing, i.e. subtracting extra 1 from next position
07:47:08 <Egon> what is the digit there is a zero?
07:47:56 * Egon is still quite confused.
07:48:01 <tromp> i dont understand your question
07:48:10 <Egon> sorry.
07:48:37 <tromp> do you understand borrowing in decimal system?
07:48:43 <Egon> I'm not eaxactly what goes first. is 0-1=1 with 1 borrow? where does that borrow go?
07:48:48 <tromp> 100 - 18 = 82
07:49:01 <Egon> yeah you subtract from the next left coloum.
07:49:15 <tromp> the borrow goes to the next position to the left
07:50:08 <Egon> 100-11= 0-1=1 with q1 borrow, then 1 borrow -1 =0, then lastly 1-0=0 which is the last step which is wrong.
07:50:56 <Egon> -q
07:51:19 <tromp> there is no 1 borrow -1
07:51:48 <tromp> in the middle you have 0 - 1 but with an additional - 1 borrowed
07:51:53 <tromp> so 0 - 1 - 1
07:53:11 <Egon> how can 0-1-1 be 0?
07:53:13 <tromp> so you need to borrow again
07:53:27 <tromp> the borrow gives you +2
07:53:54 <Egon> ok
07:53:56 <Egon> thanks
07:54:03 <tromp> it's no different than 100-18=82
07:54:14 <tromp> 0-8 = 2 with 1 borrowed
07:54:17 <ibid> isn't longhand subtraction taught at primary school...
07:54:20 <Egon> i think i get it now, is that happened in the 3rd position the borrow would be a 4, right?
07:54:40 <tromp> it just means you get +10 in this position and -1 in next position (the borrow)
07:55:38 <Egon> ok
07:55:50 <tromp> u don't borrow 4
07:57:08 <Egon> yes
07:57:42 <Egon> i think i get . the rule is always +10 for this position and -1 in the next position.
07:57:50 <tromp> in binary, a digit to the left is worth 2 * more
07:58:39 <tromp> so if u decrease the digit to the left by 1, you can add 2 to the currrent position
07:58:55 <tromp> that's borrowing
07:59:39 <tromp> if u allow 2 digits, then 100 = 020 = 012
08:00:03 <tromp> and clearly 012 - 1 = 11
08:04:23 <kristnjov> can anyone give me an idea about how to create all possible combinations of True/False if i have n bools to use?
08:04:56 <tromp> why does that sounds like homework:-?
08:05:01 <kristnjov> because it is?
08:05:24 <tromp> try use induction on n
08:05:26 <kristnjov> i think i know how to calculate how many different combinations there are
08:05:47 <tromp> first do n==0
08:05:57 <tromp> then from n, do n+1
08:07:18 <Egon> tromp: that means that the borrow is really just a -1 positioned over the adjacent left column?
08:07:41 <kristnjov> recursively you mean?
08:07:53 <tromp> yes, egon
08:08:28 <Egon> that makes sense I was using it as a carry.
08:10:06 <tromp> yes, kristnjov
08:10:07 <tromp> p
08:17:58 <shapr> man I love unicycling.
08:19:14 <SyntaxNinja> morning, shapr
08:19:28 <shapr> good evening Ninja Jones
08:19:51 <shapr> I think I actually called you Ninja Jones in one of my emails that went to the Simons
08:19:59 <shapr> they seemed to know who I was talking about, but didn't say anything else about it.
08:21:41 <SyntaxNinja> hahah
08:22:48 <shapr> seems like the high end academics and the students just beginning often have a sense of play
08:22:54 <shapr> but many professors seem to lose that.
08:22:55 <shapr> I wonder why.
08:27:55 <shapr> what's the MTL package in debian/unstable ghc-cvs ?
08:29:12 <bourbaki> can someone help me with arrows? that is to understand the intro and such
08:29:34 <shapr> which intro?
08:29:44 <bourbaki> on the arrow site
08:29:57 <shapr> have you read Ross Paterson's Fun of Programming chapter?
08:29:57 <bourbaki> http://www.haskell.org/arrows/index.html
08:30:07 <shapr> in my opinion, that's the best arrows intro.
08:30:08 <bourbaki> no where is that ?
08:30:24 <shapr> http://www.soi.city.ac.uk/~ross/papers/notation.html
08:30:31 <shapr> er, no
08:30:33 <shapr> wrong one
08:30:35 <shapr> http://www.soi.city.ac.uk/~ross/papers/fop.html
08:31:02 <bourbaki> thx
08:39:42 * shapr drops a spood
08:39:45 <shapr> er spoon
08:43:19 <kristnjov> what's the difference between ++ and concat?
08:45:24 <kristnjov> i'm trying to make a string such as "hi\nnew\nlines\nhereand\nthere" become a column next to another string split up into lines
08:45:33 <kristnjov> thought i could do it with a simple concat line
08:53:40 <SyntaxNinja> @type concat
08:53:42 <lambdabot> concat :: forall a. [[a]] -> [a]
08:53:44 <SyntaxNinja> @type (+)
08:53:46 <lambdabot> (+) :: forall a. (Num a) => a -> a -> a
08:53:54 <SyntaxNinja> er
08:53:56 <SyntaxNinja> #type (++)
08:54:00 <SyntaxNinja> @type (++)
08:54:01 <lambdabot> (++) :: forall a. [a] -> [a] -> [a]
08:54:20 <SyntaxNinja> so concat takes a list of lists, and outputs a list, whereas ++ takes two lists and sticks them together.
08:54:21 <kristnjov> i've already made my own function for it, thx anyways
08:54:26 <al_b_> yay
08:54:30 <Igloo> I don't understand your question, but you might want unlines
08:54:31 <al_b_> fixed the haskell prgoram
08:54:37 <kristnjov> yes, unlines is needed
08:54:44 <al_b_> only took me 3 1/2 hours :-/
08:54:47 <kristnjov> or no, it's not, not in my function :)
08:57:28 <al_b_> what function can turn an int into a string?
08:57:35 <al_b_> like itoa() in C?
08:57:39 <tromp> show
08:57:49 <al_b_> thanks
08:57:50 <kristnjov> yes, show will do
08:58:55 <tromp> also see shows
08:59:06 <tromp> @type shows
08:59:07 <lambdabot> shows :: forall a. (Show a) => a -> String -> String
09:01:30 <kristnjov> could someone please help me write a function which generates a list of Bools containing all different combinations of True/False if there are n different Bools to combine with eachother?
09:02:41 <tromp> why don't you try it for n==0
09:03:23 <kristnjov> i don't quite follow
09:03:59 <tromp> what's the right answer for n==0?
09:04:09 <kristnjov> n can't be 0
09:04:14 <kristnjov> it must be a positive integer
09:04:16 <al_b_> empty set, isn't it?
09:04:39 <tromp> i think it's nicer to include n==0 as well
09:04:41 <al_b_> this is actually a good teaching problem
09:04:52 <tromp> but you can also start with n==1
09:05:03 <tromp> what's the answer in that case?
09:05:17 <kristnjov> not(head(list of bools))
09:05:20 <musasabi> kristnjov: you want all permutations of the list?
09:05:31 <kristnjov> tromp, i don't understand what you mean
09:05:37 <kristnjov> musasabi, don't know what that word means :P
09:06:08 <kristnjov> tromp, i guess it's [True,False]
09:06:28 <musasabi> kristnjov: do you want allPossibleSequences :: [Bool] -> [[Bool]], or something else?
09:06:32 <tromp> how can you write a function if you don't know the result on input 1 ?
09:06:46 <cm_> kristnjov: http://mathworld.wolfram.com/Permutation.html
09:06:48 <tromp> and what's the answer for n==2?
09:06:49 <Igloo> He wants the 2^n possibilities, not n! permutations
09:07:12 <kristnjov> tromp, [[True,False],[False,True],[True,True],[False,False]]
09:07:16 <tromp> dont' worry i wont ask about n==3
09:07:39 <tromp> why do you have a list of lists for n==2, but not for n==1?
09:07:56 <kristnjov> i forgot it in the first example
09:08:00 <kristnjov> when n==1
09:08:12 <kristnjov> i thought it looked weird with [[True],[False]]
09:08:22 <tromp> looks fine
09:08:36 <tromp> so what wld you do with n==0?
09:08:45 <kristnjov> n can't be 0 in my program
09:08:54 <kristnjov> but i guess that would be []
09:09:02 <tromp> why not [[]] ?
09:09:07 <tromp> a list of lists
09:09:11 <kristnjov> yes, why not, doesn't matter, it can't be 0
09:09:20 <tromp> it does matter
09:09:30 <kristnjov> yes generally it does, but not in this particular program
09:09:43 <tromp> ur program becomes simpler if u can pick a simpler base case
09:09:58 <tromp> u will also understand better what goes on
09:10:07 <kristnjov> i'll check it out..
09:11:31 <tromp> every list in answer for n is duplicated in answer for n+1, once with false in front and once with true in front
09:11:59 <kristnjov> TTT
09:12:00 <kristnjov> TTF
09:12:01 <kristnjov> TFF
09:12:02 <kristnjov> FFF
09:12:05 <kristnjov> FFT
09:12:06 <kristnjov> FTT
09:12:19 <kristnjov> that's pretty much the pattern i've figured out so far
09:12:24 <kristnjov> where T == True and F == False
09:13:14 <tromp> what i said is almost a program; just translate to haskell
09:13:27 <kristnjov> what you said i don't understand
09:13:31 <kristnjov> "in answer for"?
09:13:37 <kristnjov> "in front"?
09:14:03 <tromp> just let it sink in
09:14:25 <kristnjov> :D
09:14:37 <al_b_> can I use map, with the function containing more then 1 parameter?
09:14:58 <Igloo> kristnjov: If you have the answer for n, how do you get the answer for n+1?
09:15:06 <kristnjov> through recursion i guess
09:15:43 <Igloo> No, I mean if I give you the list that is the answer for n, what are you oging to do to it to get the answer for n+1?
09:16:12 <cm_> al_b_: map (\x-> f(x,...)) [...]
09:16:16 <kristnjov> i don't know Igloo.
09:16:24 <al_b_> thanks cm_
09:16:28 <Igloo> e.g. if I say "it's [[True,False],[False,True],[True,True],[False,False]] for n == 2", what do you do to get the answer for n == 3?
09:17:11 <kristnjov> i really just don't know
09:17:26 <al_b_> copy the lot, and put 'False' in front of each inner part, then do the same thnig with 'true'
09:17:34 <al_b_> and combine the 2
09:19:10 <cm_> kristnjov: n=1: [[True], [False]]. n=2: "Create" a new list with True in front of every item combined with a list with False in front of every item
09:22:52 <cm_> kristnjov: You have the recipe to solve n given n-1. Compare with n!. fac n= n*(fac (n-1))
09:24:35 <dblhelix> kristnjov: induction, once again ;)
09:24:40 <kristnjov> yep...
09:24:47 <al_b_> cm_: can you dumb that down a bit for me please. If I have add, which is prefix and adds 2 numbers together, how can I add 4 to say each element in [1,2,3,4]?
09:25:04 <tromp> map (+4)
09:25:32 <al_b_> in my program, it isn't just a simple addition, but I want to make the example simple
09:25:53 <cm_> You can write as map (\x -> x+4) as well
09:25:54 <tromp> map ((+) 4)
09:26:49 <al_b_> ah thanks, I think I see
09:26:57 <al_b_> its 2am here and I'm a bit tired :-/
09:32:33 <kristnjov> YES i think i made the function
09:32:36 <kristnjov> thanks a lot guys!
09:34:23 <al_b_> they're great aren' they :p
09:35:58 <al_b_> sorry for the annoyance, I just have one thing to sort and this is finished for tonight :)
09:35:59 <al_b_> http://rafb.net/paste/results/C0soaG89.html
09:37:04 <al_b_> What I'm trying to do, is take in a program (list of DCodes) and 'assemble' it. calcBranchTable takes in the program and returns a list of the branch lables, and their addresses
09:37:26 <al_b_> dcodeToNum takes in a dCode, and returns its numberical value
09:37:50 <al_b_> however, for branch instructions, dCodeToNum also needs a list of the branch lables and their addresses
09:38:48 <al_b_> all I need to do is take in a program, aka a list of DCodes, and feed each of them seperatly into dCodeToNum. But also feed dCodeToNum another arguement. And I can't see what I'm doing wrong tonight :-/
09:39:47 <tromp> you are applying x to calcBranchTable prog)
09:40:21 <al_b_> so have I got brackets in the wrong place?
09:42:12 <tromp> looks like it
09:42:23 <musasabi> al_b_: "dCodeToNum (x (calcBranchTable prog) )" is the problem probably.
09:42:44 <musasabi> al_b_: you probably want "dCodeToNum x (calcBranchTable prog)"
09:42:45 <tromp> make it dCodeToNum x (calcBranchTable prog)
09:42:52 <tromp> :-P
09:44:04 <al_b_> thats changed the error, but its not out of the woods yet :)
09:44:55 <al_b_> http://rafb.net/paste/results/Ivyn7F94.html
09:46:17 <tromp> where is int arg for calcBranchTable :: [DCode] -> Int -> [BranchAddress]
09:46:17 <tromp>  ?
09:46:26 <al_b_> argh
09:46:28 <al_b_> dammit
09:46:29 <al_b_> of course
09:46:33 <al_b_> thanks a lot! :D
09:48:56 <al_b_> yes, it works. Thanks! If I ever wino lotto, you all get cars :p
09:50:23 <tromp> can i get a bike instead:-?
09:51:06 <al_b_> sure
09:51:24 <al_b_> depending on how much I win, monster trucks may be an option as well
09:52:06 <al_b_> this assembler, is _tiny_ in terms of lines of code, but writing it damn nearly killed me :-/
09:58:45 <al_b_> thanks again
10:55:35 * TheHunter is playing paddleball
11:22:05 <CosmicRay> shapr: I got your e-mail about the diffs
11:22:12 <CosmicRay> shapr: I thought syntaxninja had already committed them
11:24:01 <SyntaxNinja> ?
11:24:15 <CosmicRay> SyntaxNinja: shapr e-mailed me asking for my diffs to cabal
11:24:33 <SyntaxNinja> yup. they even have your name on them
11:24:34 <CosmicRay> SyntaxNinja: for the purposes of committing them to darcs
11:24:48 <SyntaxNinja> also, shapr, you should be sure you pull because I did some -Wall stuff yesterday
11:25:06 <SyntaxNinja> where has marvin-- been hiding?
11:27:50 <CosmicRay> caught in an infinite loop with marvin++
11:30:27 <marcot> Are haskell types defined dinamic or staticly?
11:30:55 <SyntaxNinja> haskell is statically typed
11:31:15 <SyntaxNinja> it infers the types at compile time when you don't put them in the code
11:31:55 <marcot> SyntaxNinja: thanks.
11:35:26 <SyntaxNinja> marcot: no problem.
11:47:46 <CosmicRay> heh
11:47:52 <CosmicRay> that was a quick question
11:50:40 <SyntaxNinja> if only they were all so easy to please ;)
11:52:52 * CosmicRay should be insulted at that :-)
11:56:42 <SyntaxNinja> that wasn't directed at you d00d
11:56:47 <CosmicRay> I nkow
11:56:51 * CosmicRay is just b0red
11:56:58 <SyntaxNinja> :P
11:57:07 <CosmicRay> though I finally discovered the magic of unsafePerformIO $ newIORef.
11:57:08 <CosmicRay> phew.
11:57:40 <Lemmih> Isn't that kinda evil?
11:57:44 <SyntaxNinja> omg
11:57:50 <CosmicRay> yes.
11:58:17 <CosmicRay> it was either that or use FFI to accomplish it in C
11:58:21 <CosmicRay> which would be more evil :-)
11:59:55 <Lemmih> I used a MVar within a StateT in my DC library.
12:02:10 <stepcut> what is a good way to do string substitution in haskell (simple 's/word/w0rd/' type stuff)
12:04:00 <stepcut> Text.Regex seems to only handle matching... I could write something using parsec, but that seems like overkill...
12:05:25 <Lemmih> You need anything else than matching?
12:05:56 <stepcut> substitution, maybe I should just use matchRegexAll and do the substitition myself ?
12:06:24 <Oejet_> stepcut: That seems unreasonable.
12:06:40 <stepcut> Oejet_: yes, I am starting to think it is...
12:07:16 <Lemmih> Why?
12:07:18 <Oejet_> I have seen some regex libraries somewhere...don't remember where though.
12:07:34 <stepcut> Oejet_: oops, I missed the un- portion of your message
12:07:49 <phubuh> it should be fairly easy to bind pcre, no?
12:08:02 <stepcut> Oejet_: it is not especially fast, but I only need to match on ~12 lines, and it uses standard libraries...
12:08:28 <phubuh> hm: http://repetae.net/john/computer/haskell/hsregex/
12:08:48 <Oejet_> http://www.dcs.gla.ac.uk/~meurig/regexp/
12:09:22 <stepcut> phubuh: that first link is basically Text.Regex
12:09:45 <phubuh> it does contain a pcre binding, but it doesn't do substitution :/
12:11:31 <stepcut> phubuh: if there is no good (complete) pcre binding, then I will probably need to make one some time, but *fairly easy* is still probably a day or three to get it written, debugged, and packaged
12:12:15 <stepcut> And, if there was some *better* way, I didn't want to overlook it :)
12:15:47 <stepcut> I wonder how string substition is handled internally in sed, etc, anyway. Maybe they just use the DFAs for matching, and the substition stuff is just some conveniece functions wrapped around the matching code...
12:32:23 <Lemmih> What's 'glEnable(GL_BLEND);' in HOpenGL?
12:32:48 <bourbaki> Lemmih: maybe alpha blending?
12:34:08 <Lemmih> I meant where can I find the varible GL_BLEND in HOpenGL.
12:34:33 <bourbaki> Lemmih: ah ok :) no idea though what are you writeing?
12:36:06 <Lemmih> It's just a toy program.
12:39:10 <Lemmih> It's a modified Nehe lesson where I'm trying to make the black parts of an image transparent.
12:40:21 <bourbaki> Lemmih: has nehe haskell tuts now also?
12:40:46 <Lemmih> Not really. I've only translated the first 7 lessons.
12:41:25 <bourbaki> Lemmih: oh cool i think ill install hogl tomorrow now that i have lx again
12:41:50 <Lemmih> hogl?
12:41:55 <bourbaki> i had some problems with ghc and hogl on win since it gets shipped with a ready to use version though its quite old
12:41:59 <bourbaki> hopengl :)
12:42:09 <Lemmih> d'oh
12:42:49 <Lemmih> Damn it. I can't find it.
12:44:07 <bourbaki> Lemmih: will you put these lessons on the net some where?
12:44:27 <bourbaki> i still think it would be cool to have a functional render engine
12:44:57 <Lemmih> I'm not sure where I should put them.
12:45:45 <bourbaki> maybe you could send them to nehe?
12:46:55 <Lemmih> Yay. Found it.
12:47:03 <bourbaki> :)
12:47:51 <joao> Hello!
12:48:01 <Lemmih> Hey joao
12:48:20 <joao> What's up?
12:49:23 <bourbaki> shapr: still there?
12:49:24 <Lemmih> Hacking, as always.
12:50:11 <bourbaki> TheHunter: still available?
12:50:44 <joao> TheHunter is the answer-man :)
12:50:47 <bourbaki> :)
12:51:02 <bourbaki> maybe someone else can help me im reading that arrows and computations paper
12:51:10 <joao> Does anyone has experience with data types invariants?
12:51:10 <Lemmih> bourbaki: I'm modified some of the lessons so they wouldn't really fit together with the other tutorials.
12:51:49 <bourbaki> and there is a line on currying saying alpha (beta, gamma) delta =~ beta -> alpha gamma delta
12:52:01 <bourbaki> Lemmih: hm maybe the wiki then?
12:52:38 <bourbaki> my question now is what is alpha and delta? beta and gamma are the parameters to the function right?
12:58:50 <dblhelix> joao: do you have a copy of Okasaki's Purely Functional Data Structures lying around?
12:59:02 <joao> dblhelix, no...
12:59:25 <joao> searching...
12:59:44 <dblhelix> I've you have access to a library or something that provides it, I can surely recommend it
12:59:59 <joao> What I need, actually, are ideas to implement data type invariants (and function invariants, too), in Haskell
13:01:14 <dblhelix> IIRC, Okasaki's book uses both ML and Haskell ... it contains a nice introductory chapter to data-type invariants
13:02:35 <gintas> Okasaki's book uses ML in the text, bus has an appendix with most programs converted to haskell
13:07:02 <dblhelix> bourbaki: a b d ~= a (b, ()) d
13:07:14 <dblhelix> bourbaki: a is function space
13:07:41 <SyntaxNinja> Igloo, shapr, or CosmicRay around?
13:07:48 <dblhelix> bourbaki: (->) b d ~= (->) (b, ()) d
13:07:50 <SyntaxNinja> I want to bounce a cabal idea off of someone
13:08:07 <dblhelix> bourbaki: b -> d ~= (b, ()) -> d
13:09:20 <bourbaki> dblhelix: do alpha is a function and gamma and delta are domain and codomain?
13:09:23 <dblhelix> bourbaki: likewise, b -> d ~= b -> () -> d
13:11:00 <dblhelix> bourbaki: well, alpha is not *a function*, but the function-space type constructor; so, (alpha beta delta) is *the type* of a function that has type beta as its domain and type delta as its codomain
13:11:28 <bourbaki> dblhelix: that is what i meant thank you
13:11:36 <dblhelix> bourbaki: but, of course, you can generalize alpha to any type constructor of kind * -> * -> *
13:12:21 <bourbaki> i think i could have spared a lot of work if i had a look at arrows earlier :)
13:12:50 <bourbaki> all i need now are 2 things a grafical graph editor for haskell
13:13:06 <bourbaki> and some classes that implement topology :)
13:13:19 <dblhelix> bourbaki: f.i., substituting (,) for a,: (b, d) ~= ((b, ()), d)
13:14:11 <dblhelix> arrows are quite nifty, yeah ... have fun with them :)
13:14:15 <bourbaki> dblhelix: is there anything in arrows that builds the product of two arrows on the codomain side?
13:14:29 <bourbaki> i need to read that paper and then the yampa papers
13:14:53 <bourbaki> there are some cool things in yampa i was told that can change a network of arrows from within itself
13:16:04 <bourbaki> i think i might need something that is the dual of >>> though
13:16:07 <CosmicRay> SyntaxNinja: yes.
13:16:27 <dblhelix> bourbaki: do mean something like (&&&)?
13:16:33 <dblhelix> @index (&&&)
13:16:34 <lambdabot> bzzt
13:16:42 <dblhelix> mmmm
13:16:54 <bourbaki> dblhelix: i need something that chops a concated arrow
13:17:19 <dblhelix> bourbaki: (&&&) :: (Arrow a) => a b c -> a b d -> a b (c, d)
13:17:20 <bourbaki> dblhelix: something like a coproduct
13:17:27 <SyntaxNinja> CosmicRay: so my idea is that relationship between preprocessed sources and ./setup sdist (which creatse a source tarball)
13:17:42 <SyntaxNinja> sometimes, you want the generated sources in the tarball, sometimes not
13:17:59 <CosmicRay> SyntaxNinja: I may not be the right person here since I don't know what exactly preprocessed sources are :-)
13:18:03 <SyntaxNinja> so I was thinking that we coul duse a flag --include-preprocessed-sources (or something)
13:18:05 <SyntaxNinja> meh
13:18:10 <SyntaxNinja> you know what preprocessing is, no?
13:18:16 <CosmicRay> not in the context of haskell.
13:18:21 <CosmicRay> is it cpp?
13:18:22 <kristnjov> neither do i
13:18:30 <kristnjov> php uses preprocessing, doesn't it?
13:18:34 <bourbaki> dblhelix: >>> combines 2 arrow to one arrow where they are applied sequencially what i need is a thing that returns 2 arrows if the arrow put in was a concaternation of 2 arrows
13:19:29 <SyntaxNinja> CosmicRay: OK nevermind... basically...
13:19:41 <SyntaxNinja> there are a number of preprocessors for Haskell, for instance cpphs and happy.
13:19:45 <SyntaxNinja> happy is a parser-generator
13:19:47 <SyntaxNinja> (like yacc)
13:19:47 <CosmicRay> ahh.
13:19:53 <dblhelix> bourbaki: I don't remember having seen something like that; I'm sorry ...
13:20:01 <SyntaxNinja> so you mgiht have Foo.y which, when you run happy on it, it'll produce something like Foo.hs
13:20:02 <CosmicRay> it's a pretty expansive definition then.
13:20:04 <CosmicRay> ok.
13:20:31 <SyntaxNinja> so sometimes when you distribute a source tarball, you want to include Foo.hs, so that they don't need "happy" for instance
13:20:37 <CosmicRay> SyntaxNinja: wouldn't you just have sdist include whatever is in the source tree?
13:20:41 <SyntaxNinja> so anyway, I'm just brainstorming on that.
13:20:47 <bourbaki> dblhelix: i think that will need some extra stuff i need that cause i want to be able to convert a graph to an arrow thingy that is compilable and vicaversa
13:20:54 <CosmicRay> SyntaxNinja: so, for instance, if their standard "make clean" would wipe away Foo.hs, you wouldn't include it, but if they keep both, you would?
13:21:17 <SyntaxNinja> CosmicRay: I'm inclined to make them specify exactly what they want in the source tarball, rather than grabbing things like the CVS directory or what-have-you
13:21:20 <dblhelix> bourbaki: the coproduct notion for arrows is provided by the ArrowChoice class, but I don't think it gives you what you are looking for
13:21:37 <bourbaki> dblhelix: sec let me chack
13:21:39 <CosmicRay> SyntaxNinja: so the source tarball is something other than tar -zxvf foo.tar.gz foo?
13:21:41 <CosmicRay> s/x/c/
13:21:58 <CosmicRay> w00t.  Syslog.hs works :-)
13:22:11 * CosmicRay finally has some useful Haskell stuff cooking :-)
13:22:23 <bourbaki> dblhelix: hm well ||| does look quite like what i am looking for
13:23:24 <SyntaxNinja> CosmicRay: yeah
13:23:32 <SyntaxNinja> at least for the "simple" tools.
13:24:23 <SyntaxNinja> CosmicRay: the idea with the "simple" tools is to use "just the right amount of magic" as simon marlow put it; there's a lot we can figure out on our own from a little bit of information.
13:24:55 <bourbaki> dblhelix: what i need is a b d -> (a b c, a c d)
13:25:58 <CosmicRay> SyntaxNinja: I suppose for sdist what you would want then is the maximum level of preprocessing that you can do without sacrificing portability
13:26:19 <CosmicRay> SyntaxNinja: so you probably would run happy but not hscpp which may remove ifdefs that are inmplementation-dependant
13:26:34 <SyntaxNinja> exactly
13:26:41 <SyntaxNinja> but I'm wary of doing it on a per-preprocessor basis, actually.
13:26:51 <SyntaxNinja> hmmmm
13:27:15 <dblhelix> bourbaki: I'm afraid I can't help you with that ... off the top of my head, that is
13:27:51 <bourbaki> dblhelix: i think i will need some extra structure for that
13:28:03 <bourbaki> dblhelix: and first i need to understand all the other things :)
13:28:09 <dblhelix> bourbaki: I'm quite sure you will
13:28:34 <bourbaki> dblhelix: but thats not that bad i will make it a similar structure to a path in a graph
13:29:33 <TheHunter> hey bourbaki, i'm back
13:29:41 <dblhelix> bourbaki: gotta go now ... good luck and have fun ;)
13:29:58 <bourbaki> dblhelix: bye bye :)
13:30:00 <TheHunter> i'm afraid you can't do that decomposing thing in yampa
13:30:20 <bourbaki> TheHunter: i think ill recode some of the stuff
13:30:56 <bourbaki> TheHunter: i need that decomposeing stuff to be able to update the graph when that arrow stuff changes its own network
13:31:08 <TheHunter> ok, but the type for that thing was wrong
13:31:18 <bourbaki> TheHunter: why?
13:32:32 <TheHunter> a b d -> (a b c, a c d) means that the arrow b => d can be decomposed in b => c and c => d for each c. It should have an existential type, ie. there is only one such c
13:33:17 <TheHunter> data ArrowComp a b d = forall c. AComp (a b c) (a c d)
13:33:31 <bourbaki> TheHunter: hm sounds reasonable
13:33:36 <TheHunter> decompose :: a b d -> ArrowComp a b d
13:34:28 <TheHunter> don't be bothered by the `forall', it really means `exists'
13:34:57 <bourbaki> TheHunter: yep thought so and if it doesnt exist you get something like (id, a d b)
13:36:53 <bourbaki> TheHunter: cause id x = (>>> (<<< x))
13:37:36 <bourbaki> is there any editor for graphs written in haskell?
13:37:39 <TheHunter> @type  \x -> (Control.Arrow.>>> (Control.Arrow<<< x))
13:37:40 <lambdabot> bzzt
13:38:08 <bourbaki> i think there is something like <<< already i just abused  that ;)
13:38:33 <TheHunter> @type  \x -> (Control.Arrow.>>> (Control.Arrow.<<< x))
13:38:35 <lambdabot> \x -> (Control.Arrow.>>> (Control.Arrow.<<< x)) :: forall a
13:38:35 <lambdabot> 							  b
13:38:35 <lambdabot> 							  c
13:38:35 <lambdabot> 							  d
13:38:35 <lambdabot> 							  b1.
13:38:35 <lambdabot> 						   (Control.Arrow.Arrow a) =>
13:38:37 <lambdabot> 						   a b c -> (b1 -> a c d) -> b1 -> a b d
13:38:50 <TheHunter> that doesn't have a meaningful type
13:39:06 <TheHunter> anyway, have you looked at the yampa source yet?
13:39:17 <bourbaki> nope im reading on arrows atm
13:39:47 <bourbaki> does yampa provide an editor?
13:39:54 <TheHunter> they write about some actually simple - looking stuff already requiring dependent types.
13:40:08 <TheHunter> no cool haskell editor yet :(
13:40:24 <bourbaki> well i would really like to do that
13:40:45 <bourbaki> a friend of mine is writeing a small graph editor in java but i hate java and dont have it on my box
13:41:45 <bourbaki> the idea is that you can model the graph for the arrows and write the code in the same app
13:42:20 <TheHunter> i had that idea already, too, but it seems very much work
13:43:06 <bourbaki> my friend uses some java graph lib i forget the name all the time
13:43:12 <bourbaki> but it seems pretty decent
13:43:44 <bourbaki> i will need that for what i wanna do
13:43:44 <TheHunter> yep, java is an horrible language but has many libraries, haskell is the opposite
13:43:52 <bourbaki> yeah :(
13:44:02 <bourbaki> at least i have found a channel where alot of normal ppl are :)
13:44:40 <SyntaxNinja> bourbaki: which?
13:44:44 <bourbaki> normal = java haters ;)
13:45:06 <SyntaxNinja> TheHunter: we're working on the libraries :)
13:45:28 <bourbaki> to me java is exactly like c++ just without the good stuff and the lack of dynamic support which would make it a lot better
13:47:14 <bourbaki> but there isnt even a good free graph editor
13:48:13 <thebug> plus, despite having multi-gigahertz machines, JVMs are still -s l o w-
13:48:39 <bourbaki> yes
13:48:53 <thebug> that's not saying that the language itself is somehow slow (how can any language be slow?</rhetorical>), just that many many of the implementations are
13:49:10 <bourbaki> i wonder why all ppl want java and i am always pissed when i see that another good project is done in java
13:49:38 <bourbaki> thats just the net hype ...
13:50:08 <TheHunter> to be fair, the vm really isn't an argument against java (maybe wrt space usage, but i don't know about that).
13:50:09 <bourbaki> and platform independance i guess
13:50:39 <TheHunter> (for all but the most performance-critical applications, that is)
13:50:56 <bourbaki> what i dont like about java is that it runs on a vm without being able to run dynamic code
13:51:11 <bourbaki> i had a good paper on java and lisp
13:51:20 <bourbaki> if anyone is interested in that i will search the link
13:51:40 <TheHunter> some paul graham rant?
13:51:59 <bourbaki> http://www.norvig.com/java-lisp.html
13:52:59 <bourbaki> hm not really sure i think that was a report of some uni i cant remember
13:53:27 <bourbaki> http://www.cs.unm.edu/~williams/cs257/lisp-java.pdf
13:53:32 <TheHunter> i bet there are some people in this channel who can do this problem in less than half an hour
13:54:18 <bourbaki> did you know that god writes in lisp ;)?
13:56:33 <bourbaki> anyway i need a good graph editor
13:56:47 <bourbaki> all editors cost a hell of a lot money or arent good
13:58:09 <bourbaki> i was already thinking about writeing my own graph editor and sell it in a low price segment like 100 usd or such
14:00:55 <bourbaki> TheHunter: did you want to write you app from scretch?
14:02:28 <TheHunter> bourbaki: i never really planned on writing such a thing, i was just thinking "hmm, that could be kinda cool"
14:02:44 <TheHunter> have you looked at http://pigale.sourceforge.net/ ?
14:03:03 <bourbaki> sec i think i have heared about it let me look at it
14:04:21 <TheHunter> i don't know it, just found it through freshmeat
14:04:47 <bourbaki> ah yeah i have had a look at it
14:05:05 <bourbaki> my prob is that im not much of an app coder :(
14:05:17 <bourbaki> i suck at drag and drop and clicky stuff
14:08:38 <bourbaki> TheHunter: what would you like to include in such a thing?
14:12:52 <TheHunter> first of all, it wouldn't really make sense to do it before there is a decent haskell editor. I have no idea how helpful a graphical representation of programming idioms it, because I haven't seen anything like that yet.
14:13:28 <bourbaki> i want to combine it with arrows
14:14:07 <bourbaki> that is you can give edges names (the ones of arrows) and then implement them in the editor
14:15:04 <TheHunter> yeah, something like that.
14:15:46 <bourbaki> that would make a debugger cool also :)
14:46:56 <kristnjov> isn't there a function called choose? such as choose(1,10)?
14:47:55 <kristnjov> can't find any documentation on it
14:51:05 <tromp> what should it do?
14:55:16 <kristnjov> well if i want to use it something like frequency [(1,"hi"),(9,show choose(1,9)]
14:55:17 <kristnjov> get it?
14:56:08 <kristnjov> i believe john hughes told us about that function during one lecture
14:56:09 <Boegel> hello everyone
14:56:16 <kristnjov> hi dr nick
14:56:24 <bourbaki> hello single one ;)
14:56:38 <Boegel> hi everybody :)
14:57:09 <tromp> i don't get it at all:(
14:57:17 <Boegel> how are the guys from the accident doing ?
14:57:29 <kristnjov> what accident? functional programming? :O
14:57:33 <Boegel> can someone give the link to that webpage again ?
14:58:11 <Boegel> no, the accident where Stallman was involved in
14:59:47 <Boegel> http://www.wiggy.net/tmp/accident/ this was it
15:05:36 <shapr> d00d
15:06:06 <tromp> dood is dutch
15:07:40 <shapr> there's a nice dutch girl here tonight
15:07:56 <shapr> visiting northern sweden for a month
15:08:30 <tromp> on holiday?
15:08:44 <shapr> studying
15:08:47 <bourbaki> :)
15:08:54 <tromp> not haskell, i bet:(
15:09:01 <shapr> no, though she did study miranda :-)
15:09:14 <bourbaki> what did i wrong that i dont have any nice dutch girls here ?
15:09:19 <shapr> heh
15:09:27 <shapr> she has a boyfriend ;-)
15:09:39 <bourbaki> well thats not a problem ;)
15:10:17 <Oejet_> bourbaki: No, not if he is all the way down in Dutchland.
15:10:30 <bourbaki> Oejet_: right ;)
15:10:45 <bourbaki> though i live next to the netherlands
15:10:47 <tromp> dutchland? is that like swedesland?
15:11:44 <Oejet_> tromp: Genau.
17:06:50 <CosmicRay> good evening
17:06:57 <bourbaki> evening?
17:07:31 <CosmicRay> evening, Central US timezone 
17:07:33 <CosmicRay> 7PM
17:07:45 <CosmicRay> time to watch Bush squirm in 50 minutes :-)
17:08:17 <bourbaki> ah right!!!!
17:08:18 <bourbaki> thanks
17:08:33 <CosmicRay> are you in Germany?
17:08:36 <bourbaki> cool i nearly missed it
17:08:37 <bourbaki> yes
17:08:59 <CosmicRay> do you catch it on CNN or does some somestic station carry it?
17:09:15 <bourbaki> ill watch CNN international
17:09:25 <bourbaki> cause then it wont be translated
17:09:44 <CosmicRay> they would translate it?  don't most Germans understand English?
17:10:25 <bourbaki> nope
17:10:34 <bourbaki> germany translates everything
17:10:42 <CosmicRay> huh.
17:10:45 <bourbaki> games series and anything
17:11:50 <CosmicRay> bourbaki: isn't English taught in schools?
17:12:03 * CosmicRay curious
17:12:10 <bourbaki> of course but most dont even are able to read or speak german :)
17:12:24 <bourbaki> you get it at the 5th class in school
17:12:31 <CosmicRay> ah
17:12:35 <CosmicRay> heh
17:12:38 <bourbaki> and you should at least have 10 years of school
17:13:17 <CosmicRay> I would love to visit Germany sometime.
17:13:37 <CosmicRay> I have a friend in Halle and many of my ancestors are from Germany, Switzerland, and the Netherlands originally
17:13:42 <bourbaki> why is that what makes you interested?
17:13:56 <bourbaki> ah i see
17:14:21 <CosmicRay> actually I would like to visit Europe too
17:14:30 <CosmicRay> there's just so much more history there
17:14:42 <bourbaki> heh yes :)
17:15:27 <bourbaki> im not really interested in history though
17:15:27 <CosmicRay> it's a little mind-boggling sometimes that there are cities there thousands of years older than the oldest buildings on this continent
17:15:40 <bourbaki> :)
17:15:52 <bourbaki> yeah thats true
17:16:09 <bourbaki> and i like this old style better then the skyscrapers
17:16:15 <CosmicRay> yeah, me too
17:17:51 <bourbaki> CosmicRay: what will be the topic of todays discussion?
17:18:20 <CosmicRay> bourbaki: we don't really know -- they are taking questions from the audience
17:18:35 <CosmicRay> bourbaki: so it goes wherever the audience is interested
17:18:45 <bourbaki> CosmicRay: oh thats gonna be intersting though i think that the questions are filtered:)
17:19:04 <CosmicRay> yes, they are
17:19:08 <CosmicRay> approved in advance
17:19:21 <bourbaki> thats no good imho
17:19:25 <CosmicRay> as close as it gets to spontaneity this year
17:19:27 <CosmicRay> I agree
17:19:39 <CosmicRay> it was far less scripted last time
17:19:45 <bourbaki> politics differ alot in the us and here in germany
17:20:06 <CosmicRay> yeah
17:20:12 <CosmicRay> ours are less comprehensible surely :-)
17:20:32 <bourbaki> i mean we have our own problems but politics is a lot tougher here i think
17:20:59 <CosmicRay> how so?
17:21:04 <bourbaki> sometimes when im at home in the morning im watching the debats that they broadcast live
17:21:24 <bourbaki> well press is a lot tougher here on politics i think
17:21:48 <bourbaki> and the ppl say what they think and they are often pissed and babble
17:21:50 <jesse98> the press herre is quite hard on bush
17:21:57 <bourbaki> and we have more variety in parties
17:22:09 <CosmicRay> jesse98: where is "here" for you?
17:22:18 <jesse98> us
17:22:29 <CosmicRay> I don't think the press is hard on bush really
17:22:32 <bourbaki> well i think here in germany no politician would have been reelected if he would have lied like that
17:22:35 <flaw> depends on which press
17:22:49 <CosmicRay> flaw: yeah well the Village Voice may be :-)
17:22:55 <bourbaki> he wouldnt have to go on tv and such there was just no use
17:22:56 <jesse98> he didnt lie any more than blair lied
17:23:20 <bourbaki> i dont care :) blair is just bushs dog
17:23:43 <bourbaki> and imho he lied
17:23:59 <CosmicRay> bush could so not handle question time
17:24:01 <jesse98> what does that make schroeder? chirac's dog? :-)
17:24:06 <CosmicRay> heh
17:24:36 <jesse98> you cant call it a lie if the guy saying it believed it to be true
17:24:50 <CosmicRay> jesse98: 50 years of franco-german calm may come to an end thanks to you :-)
17:24:58 <jesse98> ha
17:25:07 <bourbaki> ... well here you would say if its not sure its good for them
17:25:35 <bourbaki> and attacking iraq made anything worse terror wise
17:25:47 <jesse98> you can make a strong case that bush exaggerated the quality of the intelligence, but to say that he flat-out lied is irresponsible imo
17:25:49 <bourbaki> and there was no connection to alquaida and saddam
17:25:58 <bourbaki> cause saddam was against religion
17:26:09 <bourbaki> that was a flat lie
17:26:24 <CosmicRay> and the thing is -- bush and cheney STILL SAY IT
17:26:26 <bourbaki> saddam was actually good for the war against terror
17:26:34 <jesse98> you'll note that saddam played up the religuous angle a lot after gulf war 1
17:26:35 <CosmicRay> their own government knows it's a lie
17:26:42 <bourbaki> no
17:26:45 <jesse98> and saddam hated us a hell of a lot mroe than AQ
17:26:56 <bourbaki> saddam and bin laden are enemies
17:27:11 <bourbaki> heheheheh :) no i dont think so
17:27:17 <jesse98> you've never heard that cheery saying "the enemy of my enemy is my friend"?
17:27:21 <bourbaki> saddam was a controlled threat
17:27:37 <bourbaki> all weapons he got he got from the us germany france and uk
17:27:51 <jesse98> the sanctions were very clearly collapsing and saddam had maintained enough of his WMD program to very quickly restart it
17:28:04 <bourbaki> and saddam is a problem housemade by the us like afghanistan also
17:28:36 <jesse98> ahh, i see, we aid saddam for a very years while he's fighting iran and that means we're responsbile for everything he does?
17:28:47 <jesse98> s/very years/few years
17:28:55 <bourbaki> the us has a special way to deal with partners
17:29:08 <bourbaki> that is support them and let them bleed for their interests
17:29:29 <jesse98> rofl, and eurpose never played real politik eh?
17:29:31 <bourbaki> and then when the partners are exhausted in the wars retriet and lean back
17:30:03 <bourbaki> i think europe has seen a lot of more shit then the us
17:30:15 <jesse98> no doubt
17:30:23 <bourbaki> 2 worldwars ie
17:30:43 <bourbaki> and of course eu also plays fould games but not at the scale the us does
17:30:56 <jesse98> course those wars are also solely europe's fault (barring the regional conflict in asia)
17:31:01 <bourbaki> thats just because the us has a lot of more money though i guess
17:31:40 <bourbaki> i think that bush broke a lot of sympathies in the last years
17:32:00 <bourbaki> and things like that biometric passport stuff piss me off also
17:32:11 <bourbaki> its just totally useless
17:32:28 <jesse98> i'm not so sure about that, france (and now germany it seems) have been sticking their thumbs in the eye of the US for decades now
17:32:37 <bourbaki> the us (germany also) does a lot of things under the cover of anti terror things which done have anything to do with is
17:32:41 <bourbaki> it
17:33:04 <bourbaki> hehe :) we have how so?
17:33:34 <jesse98> well france leaving nato was a biggie
17:33:59 <bourbaki> france left the nato :)?
17:34:23 <jesse98> it's not exactly a secret bourbaki, french diplomats have stated more or less openly that they want to create a counter-weight to the US
17:34:40 <bourbaki> they actually left?
17:34:47 <jesse98> yes they did leave, later they re-joined under but not as full memebrs
17:35:02 <jesse98> de'gaulled pulled france out of nato
17:35:10 <bourbaki> didnt heared that
17:35:17 <jesse98> sheesh bourbaki
17:35:22 <bourbaki> and of course there needs to be an opposition to the us
17:35:37 <bourbaki> and of course there needs to be a world court and so
17:35:40 <jesse98> well if you're opposed to us policies you're not a us ally...
17:35:56 <bourbaki> but thats a good thing
17:36:05 <jesse98> or I should say if you're reflexivly opposed to us policies you arent a us ally
17:36:07 <bourbaki> thas how our political system works
17:36:27 <bourbaki> its not a fight to the death where you say if your not on my side your my enemy
17:36:40 <jesse98> fine, but if france and germany are reflexivly opposed to us policy I dont see how bush made things very much worse
17:36:49 <bourbaki> you can be an ally if you dont share the same oppinion
17:37:21 <bourbaki> he attacked iraq and now has a country that has a lot of religious fanatics
17:37:55 <bourbaki> cause the majoirity is fanatically islamistic so if they will vote exatcly the ppl the us doesnt want will be elected
17:38:05 <jesse98> yes, allies can differ, but france disagrees with almost every major us policy
17:38:42 <jesse98> buy a clue bourbaki, plenty of muslim countries have held elections and the only place they would have won is algeria
17:38:52 <jesse98> fundamentalists would have won that is
17:39:07 <jesse98> even in pakistan the fundamentalists cant cobble together a majority
17:39:10 <bourbaki> we will see what happens :)
17:39:28 <bourbaki> pakistan isnt that bad
17:39:45 <bourbaki> not all of these contries want to kill all of you:)
17:40:00 <bourbaki> there was a debate here in germany yesterday or so
17:40:06 <jesse98> pakistan has a strong fundamentilist sector though
17:40:11 <bourbaki> and they agreed to win the heart and the heads of these ppl
17:40:24 <jesse98> more so then most muslim countries that are (somewhat) democratic
17:40:31 <bourbaki> not to shoot them cause if you do that you just get more suicide bombers
17:40:39 <jesse98> were they for mom and apple pie too bourbaki?
17:41:02 <bourbaki> imho the us tries to solve too much by killing and war
17:41:35 <jesse98> yeah right, talking to people like saddam will certainly work...
17:41:38 <bourbaki> if you would have spend all the money from the war for schools in iraq and afghanistan in the first place it would never have come so far i think
17:41:55 <jesse98> you're wonderfully naive bourbaki
17:42:05 <bourbaki> no it would not but talking to bush doesnt help either
17:42:16 <bourbaki> what you have to do is to talk to the folk of these contries
17:42:29 <bourbaki> that also helped in the israel palestinensian war
17:42:48 <bourbaki> and it was quite quiet before bush was there
17:42:49 <jesse98> taking to AQ, or the taliban, or to stalin, or to the shining path, etc etc isnt going to work
17:43:09 <bourbaki> you are generalizing
17:43:22 <bourbaki> there are 0.0001% AQ the rest are normal ppl
17:43:32 <jesse98> no, there are groups that simply cant be reasoned with: their goals are too far-reaching for that
17:43:49 <bourbaki> that want to live a live in peace and are just misinformed and get bombed out of their houses by the us boms
17:43:52 <bourbaki> bombs
17:43:58 <jesse98> yes, but if an unreasonable group (see the taliban) controls a country it doesnt matter what the mass of people are like
17:44:05 <bourbaki> you have to try to look form their point of view
17:44:37 <bourbaki> i think that alot of us citisens are misinformed also from our point of view
17:44:46 <jesse98> you mean the view poing of an afgan girl who cant go to school or even see a doctor?
17:44:53 <bourbaki> maybe we are misinfromed also but thats why i watch CNN and BCC
17:45:09 <bourbaki> yes that point of view
17:45:29 <jesse98> us citizens get plenty of your pt of view, the democrats and most of the elite media are very euro in otlook
17:45:33 <jesse98> outlook
17:46:07 <bourbaki> i cant say anything about that but kerry and bush arent that far apart form each other
17:46:28 <jesse98> they in fact are, but kerry has to hedge his positions to be electable
17:46:56 <bourbaki> the differences are maginal
17:46:57 <jesse98> if kerry campaigned as a euro he would be buried
17:47:28 <bourbaki> he wants to ally again thats positive and hes not bush :)
17:47:42 <bourbaki> thats why id vote him
17:47:56 <bourbaki> but there are so little things that get discussed in these discussions
17:48:07 <bourbaki> i mean iraq is one point of like a million things
17:48:10 <jesse98> bush wants allies too and he has them, he's just not willing to pretend to be friends with countries that are completely unwilling to help
17:48:18 <bourbaki> here iraq and afghanistan arent that important
17:48:59 <bourbaki> well but thats what you have to do
17:49:07 <bourbaki> thats what diplomacy is all about
17:49:27 <bourbaki> you always have to keep in touch and talk
17:49:36 <bourbaki> if you like the ppl or not
17:49:44 <jesse98> so bush decides its essential to take out saddam, half of europe agrees, hald disagrees, what should bush have done?
17:50:09 <bourbaki> i think the situation was quite different
17:50:14 <jesse98> how?
17:50:24 <bourbaki> he wanted to invade and didnt ask should we do that
17:50:30 <bourbaki> but he asked hows helping
17:50:37 <bourbaki> thats a fundamental difference
17:50:56 <bourbaki> and he didnt showed the countries the evidence
17:51:21 <jesse98> he went to the UN, he got a security resolution that threatened steps up to and including war, what more do you want?
17:51:41 <bourbaki> i want to see the intelligence
17:51:47 <jesse98> and note that the french and germany intelligence agencies both believed saddam had wmd
17:51:59 <bourbaki> and i also demand that the un gets access to the intelligence satelites
17:52:36 <bourbaki> well i tell you they both would have known if he had cause if he had he would have got if from one of 4 contries
17:52:38 <jesse98> satellites arent going to tell you that that installtion over therre is a bomb plant bourbaki
17:52:43 <bourbaki> namely germany france us or uk
17:53:23 <bourbaki> well its a blame either way
17:53:37 <jesse98> and as I said whether saddam had wmd is not the issue, everyone who counted conceded that ot
17:53:39 <bourbaki> on the one hand the us intelligence has failed utterly
17:53:45 <jesse98> so what more could bush have done?
17:53:46 <bourbaki> or they flatly lied
17:54:03 <bourbaki> saddam was good for the us
17:54:10 <bourbaki> just bad for the ppl in that country
17:54:17 <jesse98> as did britains intelligence, frances, germany's, and russias
17:54:24 <bourbaki> but they had the chance to do something after the 1st gulfwar
17:54:31 <jesse98> they were all duped by saddam who wanted people to think he had wmd
17:54:40 <bourbaki> germany and france didnt do anything
17:55:03 <bourbaki> and i havent heared anything about the bnd saying saddam has anyweapons
17:55:32 <bourbaki> the bnd here says actually nearly nothing
17:55:49 <jesse98> i know that chirac publically said that he thought saddam had wmd, i'm pretty sure the german govt felt the same way
17:56:17 <bourbaki> all they said in the last days is that they want to win that war by winning the hearts of the folk of these contries
17:56:49 <bourbaki> hehe well all i can say is that i have not read or heared that
17:56:54 <jesse98> yeah, and they want to help the poor, and keep old people out of the snow
17:57:10 <bourbaki> yes and that way you get friends
17:57:11 <jesse98> very courageous positions to take no doubt
17:57:28 <bourbaki> and these ppl will then not cover terrorists
17:57:43 <bourbaki> because they say that these contries that helped them are good honest ppl
17:58:25 <jesse98> right, they wont fret at all about the terrorists who take a rather different tack: shooting anyone who turns them in or is suspected of ratting them out
17:59:05 <jesse98> a little good will is clearly more important that your family being butchered like animals
17:59:51 <jesse98> i can see some poor iraqi: hmm, on the one hand these americans are awfuly good fellows, on the other hand these terrorists will shoot me and my family if I look at them funny
18:00:45 <jesse98> gonna go watch the debate i guess
18:01:08 <jesse98> read some of that european history bourbaki, god knows there's plenty of it :-)
18:28:44 <CosmicRay> bush: "I hear there's rumors on the Internets"
18:28:55 <bourbaki_> :)
18:28:57 <CosmicRay> I hope we don't reelect this guy.
18:29:05 <CosmicRay> he just said that very sentence
18:29:05 <bourbaki_> beware the internets ;)
18:29:08 <CosmicRay> heh
18:30:19 <bourbaki_> whats a darft?
18:30:27 <bourbaki_> *draft
18:30:28 <CosmicRay> bourbaki_: forced military service
18:30:33 <bourbaki_> ah ok
18:30:47 <CosmicRay> bourbaki_: we last had that during the vietnam war in the early 1970s
18:31:02 <bourbaki_> we still have that
18:34:15 <bourbaki_> i wonder what bush is writeing down of if is drawing comics of kerry :)
18:34:26 <bourbaki_> /s/of/or
18:35:55 <CosmicRay> bourbaki_: probably:  nu - cle - ar, over and over, for practice
18:36:06 <bourbaki_> :)
18:38:13 * CosmicRay uploads missingh
18:39:18 <bourbaki_> missingh?
18:39:49 <CosmicRay> bourbaki_: http://quux.org/devel/missingh
18:56:19 <bourbaki_> 200k thats a lot of money is that considered middle class?
18:57:20 <CosmicRay> NO
18:57:22 <CosmicRay> err sorry
18:57:24 <CosmicRay> had capslock on
18:57:25 <CosmicRay> no
18:57:27 <bourbaki_> :)
18:57:43 <CosmicRay> that's the wealthiest 5%
18:58:07 <bourbaki_> was shocked for a sec :)
18:59:09 <CosmicRay> average income in the US is less than $50,000 per person
19:01:20 <bourbaki_> :)
19:01:35 <bourbaki_> i wonder why they then quite the kyoto protocol :)
19:02:20 <jesse98> the senate voted 99-1 against kyoto when clinton was president bourbaki_
19:02:38 <bourbaki_> still no good
19:02:51 <jesse98> yeah, but its not like you can blame bush for it
19:03:18 <bourbaki_> ah :)
19:03:52 <tuomov> $50000 is a lot..
19:04:00 <bourbaki_> yep a hell of a lot
19:22:30 <bourbaki_> can the president in the us pick the judge for the supreme court?
19:26:18 <wagle> nominates.
19:26:57 <jesse98> he nominates them and the senate has to confirm them (which they dont always do)
19:27:09 <bourbaki_> ah ok
19:55:08 <bourbaki_> more women vote for bush :)?
19:57:13 <bourbaki_> nighto
23:01:16 <Helicopter> in "(\x -> x + ( (\y -> y+2) eek ) ) eek", is eek evaluated once or twice ?
23:02:02 <ez4> it's evaluated once
23:02:10 <ez4> lazily
23:02:31 <Helicopter> is it still evaluated once even if it is of type IO Something ?
23:02:53 <ez4> yes
23:03:44 <Helicopter> so, when I say "do c <- hGetContents h; putStr head lines c; putStr head lines c", the file is read only once ?
23:04:04 <Helicopter> I forgot the $'s I think
23:04:52 <ez4> yes
23:05:35 <Helicopter> very interesting
23:05:42 <Helicopter> as a newbie, it looked like inefficent code
23:05:53 <Helicopter> argh grammar
23:06:24 <Helicopter> I believe I recently understood Monads to the extent I am not terrified anymore
23:07:40 <ez4> i still have difficulty with more complex stuff than io monads, so i would not be the person to help you with that
23:07:53 <Helicopter> heh no worries
23:08:54 <Helicopter> does it make sense to try to use monads in C code ?
23:09:19 <ez4> i don't think so, because C doesn't have first class functions
23:09:37 <ez4> there are examples of monads in ML and Scheme, though
23:09:59 <Helicopter> if you pass function pointers around, is that not enough ?
23:11:32 <ez4> function pointers can't store data.  you most likely need to implement a closure as a structure containing a function pointer and a data pointer
23:12:33 <ez4> but with monads you have functions that link to functions, which would make it very difficult to figure out when to free the closures
23:14:13 <Helicopter> ah, is that because when the binding occurs, you need somewhere to store the value before performing the next computation ?
23:15:47 <ez4> binding is OK.  however i might also have some free variables i need to use
23:16:48 <ez4> actually, in thinking about it binding doesn't work well either
23:16:56 <Helicopter> it doesnt
23:17:39 <ez4> in your original example, c is bound in the first use of "putStr head lines c", but not the second
23:18:05 <Helicopter> not ?
23:19:35 <ez4> hGetContents h >>= \ c -> putStr head lines c >> putStr head lines c
23:19:42 <ez4> that's the non-sugared version
23:20:37 <ez4> the result of the first action get's bound to c in the second, but the third has no binding associated with it
23:20:50 <Helicopter> how is it resolved then ?
23:20:58 <Helicopter> oh
23:21:10 <Helicopter> you mean binding doesnt occur twice,\; it's already bound
23:21:17 <Helicopter> ?
23:21:20 <ez4> in haskell it is
23:21:23 <Helicopter> yes
23:21:39 <ez4> in C, you can't have nested functions like you can in Haskell
23:21:48 <Helicopter> in C, I dont know how you can make it such that c is still resolved to something
23:22:25 <ez4> because you can't have nested functions it wouldn't work
23:22:27 <Helicopter> I suppose I can resort to some kind of manually managed heap with RTTI
23:23:14 <ez4> RTTI?
23:23:19 <Helicopter> reflection
23:23:39 <Helicopter> run time type info
23:24:19 <Helicopter> that way I can manage to make C slower than haskell....
23:24:37 <ez4> i think you'd also need to simulate environments because of binding issues
23:25:03 <Helicopter> while I am at it, why don't I manually implement OO in C as well heh
23:25:06 <ez4> you'd be writing a small functional language interpreter in C to do it
23:25:54 <Helicopter> so that's what a closure is.
23:26:43 <ez4> yeah, a closure is a function pointer + data
23:27:08 <ez4> they are often used in C to implement undo
23:28:27 <Helicopter> what do you think of the massive traffic on the haskell vs ocaml in "wc" implementation speed ?
23:29:07 <shrimpx> people got too much time on their hands?
23:29:17 <ez4> i haven't seen it.  is it really a big deal?
23:29:38 <Helicopter> About 10-15 different implementations have been discussed
23:29:53 <Helicopter> it's just that ocaml is a magnitude or so faster
23:29:59 <shrimpx> someone should just use the FFI to write it in C
23:31:11 <Helicopter> shrimpx: that'd be ok if that was the real project, but if you resort to FFI that soon and quickly, what else can you trust with haskell ?
23:31:17 <shrimpx> i think resorting to unboxed ints and strict annotations and such defeats the purpose of coding in haskell. if it's slow, it's slow :) let's hope ghc will get faster
23:32:08 <Helicopter> I think haskell could really use a commercial compiler vendor.
23:32:29 <ez4> did anyone offer an implementation in clean?
23:32:45 <Helicopter> ez4: I think the shootout includes almost all languages
23:32:54 <ez4> where is it?
23:32:58 <Helicopter> let me dig 
23:33:47 <Helicopter> I think this is it
23:33:47 <Helicopter> http://shootout.alioth.debian.org/craps.php
23:34:05 <Helicopter> this is wc
23:34:05 <Helicopter> http://shootout.alioth.debian.org/bench/wc/
23:34:40 <Helicopter> heh clean is #2
23:35:37 <ez4> clean is faster than ocaml!
23:35:48 <shrimpx> at this particular benchmark
23:35:59 <shrimpx> and with this particular implementation :)
23:36:00 <shrimpx> etc
23:36:40 <ez4> clean is very fast overall.  it shows how fast haskell could be.
23:36:51 <shrimpx> yay nhc98
23:36:55 <Helicopter> heh
23:37:11 <Helicopter> well, ghc beats java perl and python. That is pretty neat by itself imho
23:37:42 <shrimpx> those 3 languages are not known for their speed :)
23:38:14 <Helicopter> sun claims that java is actually lightning fast !
23:38:33 <shrimpx> perl and python are interpreted... and it's unclear if the JIT kicked in on the java one
23:38:38 <shrimpx> heh
23:38:47 <shrimpx> not in my experience :)
23:39:03 <ez4> yeah, java has to warm up before it gets fast
23:39:05 <Helicopter> g++ is only slightly faster than ghc
23:39:55 <Helicopter> the C++ code doesnt look that bad
23:40:30 <Helicopter> 4k buffering std::streambuf
23:40:33 <ez4> it would be nice to have hand optimized assembly to compare these with
23:40:57 <shrimpx> there should be an expresiveness shootout
23:41:10 <shrimpx> and a scalability one
23:41:15 <Helicopter> heh, it may end up being slower than gcc since you would have a hard time finding the guys who understand the pipeline as well as the compiler
23:42:12 <ez4> i don't think gcc is that good, but intel's is
23:42:26 <Helicopter> gcc is pretty good
23:42:32 <shrimpx> for some reason i thought i saw ghc doing really well in the shootout a long time ago... hmm
23:42:43 <shrimpx> ez4: ya, intel's compiler rules
23:42:49 <Helicopter> see this
23:42:49 <Helicopter> http://www.digit-life.com/articles2/insidespeccpu/insidespeccpu2000-part-h.html
23:42:57 <Helicopter> I was surprised by gcc
23:44:36 <shrimpx> that url doesn't work for me
23:45:37 <Helicopter> weird
23:45:59 <Helicopter> who br0ke da intarweb ?
23:46:14 <ez4> smlnj's implementation of wc is slower than it needs to be
23:46:55 <shrimpx> the code is uber convoluted compared to the C++ one :)
23:47:41 <Helicopter> it says translated from the ocaml version
23:50:43 <shrimpx> haha, nhc98 kicks ass at hello world
23:51:56 <Helicopter> and g++ sucks at it
23:52:22 <Helicopter> almost 3 times slower than gcc
23:52:37 <Helicopter> cout << "Hello world" << endl
23:52:39 <Helicopter> lol
23:52:40 <shrimpx> all that method dispatching in the iostream crap
23:53:18 <Helicopter> haha java is #5 from the bottom
23:53:20 <shrimpx> i bet cout << "hello world\n"; would speed it up significantly :)
23:53:33 <Helicopter> 33 seconds hah
23:53:33 <shrimpx> haha
23:53:41 <shrimpx> wtf
23:54:13 <Helicopter> it's incredible
23:54:30 <Helicopter> 31 secs for gcj
23:54:40 <Helicopter> what cpu is this
23:55:40 <shrimpx> he may mean centisecs or millisecs instead of secs? shrug
23:57:00 <musasabi> morning
23:57:21 <Helicopter> it takes 20millseconds in python on my amd1600
23:58:52 <ez4> i'm going to sleep. g'night
