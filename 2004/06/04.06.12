05:31:49 <Marvin--> hmm, where is the syntax ninja when we need him
05:42:02 <Marvin--> @listcommands
05:42:03 <lambdabot> I react to the following commands: ["all-dicts","arr","cmafihe","define
05:42:03 <lambdabot> ,"definitions","del-definition","det","devils","dict","dict-help","dummy
05:42:03 <lambdabot> ,"dump","dynamic-load","dynamic-reload","dynamic-unload","easton","echo
05:42:03 <lambdabot> ,"elements","eurohaskell","eval","foldoc","fortune","gazetteer","get-definition
05:42:03 <lambdabot> ,"goodbye","hello","hitchcock","index","info","jargon","join","karma","karma
05:42:03 <lambdabot> ","karma-","learn","leave","listchans","listcommands","listmodules","lojban
05:42:06 <lambdabot> ,"moo","more","msg","musasabi","part","prelude","quit","reconnect","resume
05:42:07 <lambdabot> ,"seen","set-fuel","shapr","state","stepcut","topic-cons","topic-init",
05:42:08 <Marvin--> @index pathSeparatorStr
05:42:09 <lambdabot> topic-snoc","topic-tail","topic-tell","type","vera","web1913","wiki","wn
05:42:11 <lambdabot> bzzt
06:47:01 <Lemmih> Why isn't this valid Haskell code?
06:47:22 <Lemmih> with d (attr,nest) =
06:47:22 <Lemmih>   let values a =
06:47:22 <Lemmih>     case a of
06:47:22 <Lemmih>       []         -> []
06:47:22 <Lemmih>       ((n,v):xs) -> (n,run dataValue v):values xs
06:47:23 <Lemmih>   in generateFromXml (values attr ++ d) nest
06:49:04 <Lemmih> I get a parse error at line 3 (at the 'c' in 'case').
06:49:48 <Igloo> You have to indent the c beyond the v in values
06:51:42 <Lemmih> thx.
10:14:18 <cbus> ö
10:14:21 <cbus> oopsie
10:26:08 <Igloo> Did I completely imagine a discussion about GHC on AMD64 recently?
10:27:42 <Igloo> Oh, found it. I wonder why google couldn't.
10:28:04 <Smerdyakov> Breach of contract
10:28:06 <shapr> good evening #haskell!
10:29:28 <shapr> wassup?
10:40:02 <shapr> @fortune
10:40:02 <lambdabot> Show me a sane man and I will cure him for you.
10:40:02 <lambdabot> 		-- C.G. Jung
10:43:07 <shapr> y0 bringert 
10:43:09 <shapr> wassup?
10:43:58 <bringert> just got home from EuroHaskell :)
10:46:12 <shapr> how was it?
10:46:24 <bringert> met some really cool people there
10:46:31 <shapr> neat!
10:46:53 <shapr> I heard EuroHaskell was where a bunch of crazy people got together and talked about cerebrally challenging stuff.
10:47:32 <bringert> I wrote some code today!
10:47:39 <shapr> w00!
10:47:46 <bringert> where is the ninja?
10:47:54 <bringert> I have code for him
10:48:29 <bringert> Marvin-- and I did some cabal hacking
10:49:01 <bringert> enough to install XmlRPpc in GHC, except package dependency resolution
10:49:17 <shapr> whoa, nifty
10:49:32 <shapr> you have a repo up?
10:49:54 <bringert> for the cabal code?
10:49:56 <shapr> yup
10:51:24 * bringert sent the url to shapr, want to keep webserver off google
10:51:41 <bringert> ask me if you want it
11:06:18 * shapr bounces joyfully
11:06:23 <shapr> EuroHaskell was FUN!
11:07:07 <andersca> yeah
11:23:27 <phubuh> hi!
11:24:15 <ragzter> hi phubuh
11:35:06 <Philippa> shapr: cool
11:35:28 <Igloo> Is EuroHaskell over now?
11:37:30 <andersca> yes
11:49:30 <phubuh> i think i kind of wish arr wasn't in the Arrow class
11:49:38 <phubuh> but i'm probably completely lost
11:50:06 <Riastradh> arr is a terrible name.
11:50:07 <Riastradh> @arr
11:50:07 <lambdabot> I'll keel haul ya fer that!
11:50:16 <Riastradh> Why do you wish that?
11:50:29 <andersca> @yow
11:50:29 <lambdabot> Why are these athletic shoe salesmen following me??
11:52:21 <phubuh> well, my arrows aren't represented as haskell functions at any level, so i'm not sure how to implement arr.  but i suspect that i misunderstand arrows
11:54:41 <phubuh> hm, the input and output types of my arrows don't have any useful values
11:55:14 <Riastradh> Um, so your arrows can't take useful values or produce useful values?
11:57:38 <phubuh> er, yes, it does sound insane.  let me think about this for a while
12:00:36 <bringert> phubuh: did you like John's arrows talk?
12:00:54 <phubuh> bringert: hi!  yes, it was great, though i didn't quite grok it :)
12:01:36 <phubuh> i'm thinking about modelling gstreamer as arrows from input media type to output media type
12:03:11 <phubuh> something like fileReader :: Component FileName Media, oggDecoder :: Component Media Media, ossSink :: Component Media (IO ())
12:03:31 <bringert> that sounds like a good idea
12:03:37 <andersca> phubuh: that's interesting
12:04:11 <Igloo> Oh, if you make a nice gstreamer wrapper please let me know!
12:04:20 <phubuh> Igloo: sure :)
12:04:50 * Igloo currently just has a bit of FFI around the functions I need
12:05:27 <phubuh> i can't model them as monads, i think, because Media values are never actually created, and i don't think that will work considering (>>=) :: m a -> (a -> m b) -> m b
12:05:48 <phubuh> Igloo: oh, cool!  can i have it? :-)
12:05:58 <Igloo> Do you have darcs?
12:06:01 <phubuh> yup
12:06:45 <Igloo> I don't think it's very exciting as I only use a handful of functions. Also, the C library uses a lot of ... types that aren't representable, but I think there are alternatives for all of them
12:07:04 <phubuh> but arr is bugging me now, since i don't know what to do if someone types, say, arr (id :: Media -> Media)
12:08:20 <Igloo> http://urchin.earth.li/darcs/ian/hgstreamer
12:08:44 <phubuh> great, thanks
12:10:20 <Igloo> Hmm, Hmm, I seem to be missing a CString repo. I'll sort one after I've eaten
12:12:00 <Igloo> Oh yeah, and I currently just use Ptr a rather than representing GStreamer's type hierarchy in some way
12:14:24 <phubuh> i'm growing a suspicion that gstreamer can't actually be an Arrow
12:21:03 <Igloo> oh?
12:26:48 <phubuh> my model was that the gstreamer arrows were gst_elements and that (>>>) simply calls gst_element_connect or whatever it's called
12:27:20 <phubuh> but that only works if all the arrows are gst_elements, and i can't ensure that, because of arr
12:29:05 <Cale> well, you'd need to be able to define arr in such a way that it produces gst_elements
12:29:21 <phubuh> yeah
12:30:52 <phubuh> i could probably do that for some calls to arr, but not for, say, arr (\_ -> "hello")
12:31:17 <phubuh> obviously the solution is to rewrite gstreamer in haskell :-)
12:33:10 <phubuh> i think i could discard the Media type and let fileSource :: String -> IO Component, oggDecoder :: Component -> IO Component, and ossSink :: Component -> IO ()
12:36:04 <phubuh> bah, and i was hoping to learn about arrows :-)
12:37:24 <phubuh> another thing i'm hoping to do is give the gstreamer components interesting static types
12:39:00 <phubuh> so that fileReader "foo" >>= oggDecoder >>= mpegDecoder would be caught at compile-time
12:39:28 <Igloo> That's unlikely to be useful in practice as I suspect most people will just use spider
12:39:55 <Igloo> Oh, actually, spider >>= spider might still be able to give you an error
12:42:40 <stepcut> 11 hours, 6 minutes, 3 seconds, and counting :p
12:43:06 <Riastradh> ...what are you timing, stepcut?
12:54:35 <phubuh> argh
12:54:39 <phubuh> stupid imperative gstreamer
12:54:44 * phubuh whines
13:03:38 <Igloo> :-(
13:05:22 <phubuh> i don't see an easy way to copy pipelines, and gst_element_link mutates the element
13:05:49 <Igloo> Why do you need to be able to copy pipelines?
13:06:30 <Igloo> And gst_element_link doesn't alter the pointers you have, does it? I don't think I see the problem
13:08:29 <phubuh> i want the interface to be functional, e.g., let src = makeFileSource "foo" in do { run (src >>= someSink); run (src >>= someOtherSink) }
13:09:34 <Igloo> That should work, no? makeFileSource "foo" will be run twice, of course, but that's what you need to happen
13:09:44 <phubuh> ooh
13:10:14 <phubuh> ah, yes
13:33:59 <andersca> http://ridley.csbnet.se/gallery/eurohaskell/p1010026 - john hughes as you've never seen him before
13:35:45 <Igloo> :-)
13:37:59 <stepcut> damn, 802.11 telephones are expensive
13:38:42 <SyntaxLaptop> that's so awesome
14:03:37 * SyntaxLaptop pushed a buncha changes to Cabal.
14:06:21 * Marvin-- yawns
14:08:44 <shapr> yow!
14:10:08 <Marvin--> yo
14:10:13 <Marvin--> safely back in the north?
14:19:51 <shapr> yup, I survived the flying
14:25:44 <Lemmih> Is there any current documentation about HOpenGL besides http://www.haskell.org/HOpenGL/newAPI/?
14:26:44 * Marvin-- looks at Igloo's code
14:27:17 <Igloo> hgstreamer? I wouldn't recommend that  :-)
14:27:59 <Marvin--> no, the mem stuff
14:28:25 <Igloo> Ah, right
14:29:52 <Igloo> phubuh: Oh, http://urchin.earth.li/darcs/ian/cstring is the cstring repo. Sorry, forgot I was going to create it and got distracted
14:31:27 <Marvin--> I really wonder why they don't have constant space usage in both cases
14:32:17 <Marvin--> of course, the non-USESMEM doesn't have to keep track of its state at all, whereas the USESMEM version has to carry it around, but since it's never modified, I don't see why that shouldn't get optimized
14:32:53 <Igloo> The same thing happens if both cases use the state and the state changes
14:33:34 <Igloo> This is a cut-down ant simulator. The problem was that if I tried to get the scores from teh final state teh space exploded
14:33:48 <Marvin--> but do you use the state for producing the commands?
14:33:48 * Igloo swaps his 'e' and 'h' keys over
14:33:55 <Igloo> Yes
14:33:57 <Marvin--> hm
14:34:04 <Marvin--> that's odd, then
14:36:04 <Marvin--> dear god I'm tired
14:36:22 <Marvin--> three days of europython and then three days of eurohaskell
14:36:35 <Igloo> :-)
14:37:42 <Marvin--> shapr: btw, who was the poor guy who got flamed by Guido in the lightning talks?
14:38:10 <shapr> I missed the lightning talks
14:38:14 <shapr> I slept through them
14:38:16 <Marvin--> oh
14:38:39 <shapr> one thing Lunar^ suggested, next time let's have a free day between confs
14:38:51 <Marvin--> yeah, I know
14:39:20 <Marvin--> but the thing is, then you lose some of the people that might've gone to both had there not been a free day
14:39:47 <Marvin--> like the europython people you talked into coming
14:39:55 <phubuh> which makes it harder to advocate haskell :)
14:40:23 <shapr> that's true
14:44:11 <Igloo> Will there be such an adjacency next time? I assumed the reason it happened this time was both Europython and lots of Haskellers being in Sweden, which is presumably unlikely next time
14:44:36 <andersca> we'll see :)
14:44:58 <shapr> Igloo: it seems likely that Europython will happen in Gothenburg again next year
14:45:10 <Igloo> Oh, how come?
14:45:14 <shapr> so I think it's likely that this schedule will be repeated
14:45:30 <shapr> for political reasons in the EuroPython organizers group
14:47:06 * stepcut looks forward to EurohOp
14:47:13 <Igloo> :-)
14:48:23 <andersca> shapr: varfÃ¶r Ã¤r du inte i #haskell.se?
14:54:49 <stepcut> hrm, it seems like firefox 0.9 is noticable faster than 0.8, i wonder if I am imagining it
14:54:51 <Marvin--> there's way too much politics involved in europython, especially for such a low-cost, geek-filled conference
14:54:55 <shapr> stepcut: oh, Lunar^ gave a talk about hOp at EuroHaskell, it was a cool talk!
14:55:01 <shapr> Marvin--: yes, I completely agree.
14:55:03 * Igloo yeeks at the age of some of my bugs
14:55:51 <stepcut> shapr: maybe I will be able to attend next time
14:56:10 <stepcut> shapr: maybe I will even be able to get my employer to pay :p
14:56:41 * Igloo doubts I will as I'll probably be feeling even poorer and even more timeless
14:57:08 <shapr> stepcut: sounds great
15:02:10 <stepcut> haha
15:02:14 <stepcut> Mercury is a highly efficient, purely declarative logic/functional programming language. It might lack the syntactic brevity of Haskell, but our error messages are a joy to behold.
15:02:39 <stepcut> Unlike some declarative languages, you don't need a Rosetta Stone and a twisty mind to understand what the Mercury compiler tells you
15:03:05 <stepcut> (from the mecury teams icfp2004 page)
15:05:41 <Igloo> kosmikus|away: Are you here? Did you ever get nhc98 to compile with gcc 3.3?
15:25:05 <an9n> hi all!
15:25:19 <shapr> y0 y0
15:25:33 <an9n> are yu back home?
15:25:46 <shapr> yup, I survived the flight
15:25:50 <an9n> good
15:25:52 <shapr> the unicycle drew many stares as usual
15:25:58 <an9n> hahaha
15:26:02 <shapr> how was EuroHaskell day three?
15:26:23 * an9n awaits the x86_64 GHC eagerly
15:26:45 <shapr> hiya Maikovich 
15:26:57 <an9n> shapr, don't know, I've been wrestling ith my pure 64bit installation today
15:27:17 <shapr> an9n: oh, I want one of those. I heard dons is the x86_64 GHC expert.
15:28:14 <an9n> shapr, well, ther is no _64 release out yet. I saw somewhere that Simon Marlow (?) was working on it
15:29:30 <Igloo> Did you see the link to unregisterised amd64 Linux binaries I sent to a list earlier today?
15:29:42 <an9n> Igloo, nope
15:30:21 <Igloo> http://www.haskell.org/pipermail/glasgow-haskell-users/2004-June/006760.html if you're interested
15:30:39 <an9n> ok thanks!
15:31:00 <Igloo> I'd be interested to know if it works for you, and what distribution you're using
15:31:37 <an9n> Igloo, I'm on Gentoo at the moment ... I can tell you GHC takes a while to compile (^^;
15:32:05 <stepcut> ghc takes forever on a FreeBSD 600MHz, 128MB ram, machine
15:32:07 <Igloo> That's (one of the reasons) why I don't use Gentoo  :-)
15:32:42 <stepcut> there is point in time where it spends 10 minutes swapping to disk, because 'ar' sucks up 700+ MB of memory
15:32:43 <an9n> Igloo, I've got a FC2 backup system on a second drive as well
15:33:26 <an9n> stepcut, yeh. I've got amd64 so I guess I'm lucky then (^^)v
15:34:16 <stepcut> i am going to upgrade the ram in my GFs computer so I have have her old RAM and bump myself upto 512+ MB
15:34:18 <an9n> 128MB is definately too little memory!
15:35:07 <stepcut> an9n: agreed, even compiling my own apps with ghc, ld often sucks up 200+ MB 
15:35:45 <stepcut> i need a quick and easy way to make some $$
15:36:17 <an9n> stepcut ... but on the other hand, I've only used more than 500M twice. Used swap once (on my old system) So I guess you dont need more than 500 even for a lot of compiling.
15:36:22 <Smerdyakov> stepcut, become a PhD student.
15:36:47 <an9n> stepcut, get rich quick? I can introduce you to my nigerian friends ...
15:36:48 <stepcut> Smerdyakov: I think that would reduce my income, not increase it
15:37:12 <stepcut> an9n: how do you think I got so poor in the first place!
15:37:14 <Smerdyakov> stepcut, you never said anything about your current situation. You just asked how to make some $$!
15:38:14 <stepcut> Smerdyakov: becoming a PhD student does not sound like a very quick process either...
15:38:28 <Smerdyakov> It's relatively quick if you plan ahead.
15:39:27 <an9n> stepcut, I know I know! Grab a few software patents, like tripple click, and middle click and go to court!
15:40:19 <stepcut> well, let me revise my statement a bit: I would like a way to make 2000 additional $ in the next 4 weeks in a manner that won't interfer with my day job or sleeping 
15:40:44 <an9n> stepcut, software patent law suits coming to a court near to you in europe soon! 
15:40:53 <Igloo> Would you be able to perofrm your day job from a prison cell?
15:41:10 <stepcut> Igloo: nope, the company is totally not down with telecommuting
15:41:18 <Igloo> That's harder then
15:42:01 <stepcut> Igloo: agreed
15:42:16 <Smerdyakov> stepcut, why that specific amount and time frame?
15:42:54 <Smerdyakov> stepcut, actually, you can probably get close to that amount of you do well at www.topcoder.com.
15:43:24 <an9n> brb
15:43:27 * an9n is away: I'm away (gone at 13th Jun, 00:43:36)
15:43:31 <stepcut> Smerdyakov: those are just rough estimates
15:48:18 <stepcut> Smerdyakov: looks interesting
15:50:11 <stepcut> might make a good excuse to actually learn C++, Java, and C#
15:51:03 <stepcut> all this job experience writing O'Caml code, probably isn't the best resume builder :p
15:54:01 <Marvin--> if you want a job writing O'Caml it's pretty good... :)
15:55:45 <stepcut> Marvin--: well, I have mixed feelings. I supose its useful if I want to become a PhD student as Smerdyakov suggests, but less useful if I want to work at someplace like Qualcomm
15:57:16 <Smerdyakov> Why would you want to work as "a programmer"?
15:57:57 <stepcut> Smerdyakov: please expand on that...
15:58:11 <Smerdyakov> Why would you want to do a job where you write programs that other people tell you to write, and nothing else?
15:58:26 <stepcut> Smerdyakov: I wouldn't
15:58:58 <Smerdyakov> OK, then knowing particular programming languages ahead of time shouldn't be so important.
15:59:51 <stepcut> Smerdyakov: I don't disagree
16:00:14 <Smerdyakov> What do you want to do at Qualcomm?
16:02:20 <stepcut> Smerdyakov: Well, Qualcomm is big enough, that there are probably a bunch of interesting problems to solve. But at the same time, because they are big, they probably have that HR filter that looks at irrelavant stuff like X years of experience in language Y
16:02:52 <Smerdyakov> What kinds of problems? What concrete skills would you expect to exercise in the hypothetical job?
16:02:55 <stepcut> So even though have X years of experience in language Y would not actually make me a better candidate, it might still be a requirement to get the positionin the first place
16:05:04 <stepcut> If I did apply at Qualcomm, I might do it to get back into hardware, and learn VHDL
16:05:16 <Smerdyakov> So you would be a hardware designer?
16:05:29 <Smerdyakov> Your job would be to design hardware that does what people tell you it should do?
16:05:56 <shapr> well, how else to find direction?
16:05:59 <stepcut> Smerdyakov: sure..
16:06:04 <shapr> only bosses can tell people what to do.
16:06:12 <shapr> programmers are not supposed to have their own volition.
16:06:15 <Smerdyakov> shapr, people can tell people what to do. That's what we do in research.
16:06:27 <Smerdyakov> We tell ourselves what to do based on hunches on what will succeed.
16:06:31 <shapr> I'm sorry, I'm a programmer. no volition.
16:06:48 <Smerdyakov> And then we retain intellectual control over the results of our efforts, in stark contrast to being an engineer at a corporation.
16:07:15 <shapr> I like the open source approach, get paid to write stuff that you give back to the community.
16:07:27 <Smerdyakov> shapr, indeed. That's what we do.
16:07:44 <stepcut> Smerdyakov: Well, I don't disagree that I might rather be a PhD student than an employee
16:07:45 <Smerdyakov> There's a big difference between seeing a need for an artifact and creating it, and being told by your boss that you must create a certain artifact.
16:08:17 <shapr> so, we should write more open source!
16:08:23 <shapr> or become self-employed
16:08:29 <shapr> where you have your own direction
16:08:39 <opet> my own direction?
16:09:04 <opet> I wouldn't write software at all. somebody'd pay me sit around an listen to music all day :)
16:09:06 <stepcut> Smerdyakov: I actually don't mind my current job. I actually have a fair amount of control of what I do.
16:09:22 <Smerdyakov> stepcut, but basically no control over the final product, right?
16:09:51 <stepcut> Smerdyakov: actually, I have a fair amount of control over that in many cases
16:09:53 <shapr> opet: I actually enjoy writing open source
16:10:13 <Smerdyakov> stepcut, the fact that it's not all cases and not all control should be disturbing. :P
16:10:13 <shapr> though I didn't get as much done during EuroHaskell as I had hoped.
16:10:30 * an9n returns (I'm away [27m 3s]) (total away time: 27m 3s)
16:10:31 <shapr> should... that's doing what my parents told me, right?
16:10:35 <an9n> shapr, agree!
16:11:05 <an9n> shapr, but hey, it's a _social_ event eh?
16:11:31 <shapr> I tend to divide my urges into should, want, and need. that being parental programming, personal desires, and physical necessities.
16:11:42 <shapr> an9n: yes, and it was fun too.
16:11:59 <shapr> the monad is a really cool pub
16:11:59 <Smerdyakov> shapr, I don't attach the same meaning to "should."
16:12:39 <an9n> shapr, daytime it's a lunch room really. Moonlightning as pub at events
16:13:10 <shapr> ah, that's why there are eight microwaves, right?
16:13:20 <an9n> shapr, correct!
16:13:51 <stepcut> Smerdyakov: I disagree... I would not want to work at a for-profit venture where all members could do whatever they wanted
16:15:44 <Smerdyakov> stepcut, I do not want to work at a for-profit venture, period.
16:16:24 <stepcut> Smerdyakov: ok. But I do
16:16:58 <Smerdyakov> stepcut, I believe that nonprofit venture are healthier/more fulfilling.
16:17:07 <shapr> I like buying stuff.
16:17:24 <Smerdyakov> shapr, buying stuff and profit are not unavoidably connected.
16:17:29 <an9n> I like receiving profits more than making them
16:17:47 <shapr> my definition of rich is not having to think hard before buying new hardware :-)
16:17:56 <Smerdyakov> Profit is an amount of money/goods/whatever above what is necessary to pay for expenses.
16:18:06 <Smerdyakov> Everything you need to buy in your life can be counted as an expense, if reasonable.
16:18:07 <stepcut> Smerdyakov: I find the process of making profit interesting at this point in time...
16:18:14 <an9n> shapr, that decides it, _I'm definately not rich_
16:18:28 <shapr> neither am I
16:18:33 <Smerdyakov> stepcut, I conjecture that you and most others find it so do to mental illness that is encouraged by our society.
16:18:41 <Smerdyakov> s/do to/due to
16:18:48 <shapr> I think you're confused.
16:19:16 * an9n is confused about who is confused
16:19:25 <shapr> I think Smerdyakov is confused.
16:20:14 <shapr> but this is just my opinion, I would like to see a working society that's not based on profic
16:20:16 <shapr> profit
16:20:19 <stepcut> Smerdyakov: could be, but that does not change the fact that I find it interesting
16:20:48 <Smerdyakov> stepcut, I would compare what you're saying to "the fact that smoking is a bad idea doesn't change the fact that I'm addicted to it."
16:21:03 <Smerdyakov> stepcut, sure, it would be difficult for you to change, but there would be great benefits from doing so.
16:21:29 <shapr> anyway, how're those monads?
16:21:43 <shapr> hiya eno, is your nickname from Brian Eno?
16:22:31 <stepcut> Smerdyakov: well so far, you have only presented that there *could* be benefits, not that there *would* be
16:23:07 <Smerdyakov> stepcut, the benefits come in part from avoiding stressful situations of competition.
16:23:23 <shapr> so, john hughes' arrows talk was extraspiffy
16:23:47 <eno> shapr: right
16:24:10 <stepcut> Smerdyakov: so there is no competition in the academic world?
16:24:26 <Smerdyakov> stepcut, I don't mean to present the academic world as an example of what I'm advocating now.
16:24:36 <shapr> eno: so, are you learning Haskell?
16:24:41 <stepcut> what would be an example then?
16:24:54 <Smerdyakov> www.anarchismfaq.org :)
16:24:57 <eno> i've read some
16:25:06 <shapr> andersca: do you know who has a copy of the debugged SimArrow.hs ?
16:25:34 <eno> yeah still learning
16:25:42 <shapr> eno: do you have any questions?
16:26:13 <eno> no specific question yet
16:26:34 * Smerdyakov must go.
16:26:39 <shapr> Smerdyakov: I think you should write a working simulation of Anarchism in Haskell, I'd very much enjoy interacting with that.
16:27:42 <shapr> eno: ok, if you think of some specific examples, feel free to ask them
16:28:24 <stepcut> I am not convinced that suppressing hierarchy is beneficial or possible
16:28:50 <shapr> I agree, but a working simulation of anarchism would be fun to frob
16:28:57 <eno> shapr: sure thanks
16:29:20 <shapr> SimPol... where you design your country and let it compete against other systems
16:29:25 <shapr> or design your politics
16:29:44 <shapr> might be too SimPol-istic
16:29:59 <shapr> so, I hear there's an eval for Haskell now
16:30:21 <shapr> stepcut: instance Arrow Politics where ... ;-)
16:31:43 <stepcut> we should make a video game called anarchy. It will be like space invaders, except without the shooting and bomb dropping
16:32:44 <shapr> er, how does that work?
16:32:49 <shapr> or is that the point?
16:35:47 <stepcut> well, Smerdyakov suggested that it was desirable to eliminate stress and competition. But I think that would be as interesting as space invaders where nothing actually happens...
16:36:07 <shapr> I do rather enjoy stress and competition 
16:36:17 <shapr> if I lose, I know there's more to learn
16:36:21 <shapr> if I win, I know I've learned well
16:36:40 <shapr> so competition seems to be a win-win situation for me.
16:36:52 <stepcut> Exactly. But perhaps we are just addicted to stress and would actually be happier if we weren't... 
16:37:05 <stepcut> it's possible, but I have not seen any compelling evidence :)
16:37:34 <shapr> well, rich kids have no stress and no competition, but they usually turn out to be spoiled
16:38:01 <shapr> sometimes it does give a smart kid extra time to do brilliant things, but not often.
16:38:27 <shapr> I actually like this SimPol idea
16:38:31 <shapr> I think I'll write a short story about it
16:38:47 <stepcut> perhaps being spoiled is a way to introduce more stress into their lives ?
16:39:48 <shapr> "In a society of programmers, the political candidates create a simulation of the current economy, and demonstrate how their proposals would benefit society"
16:40:45 <shapr> Test Driven Development, as applied to Government.
16:41:18 <stepcut> in any case, it seems hypocritical to advocate the reduction of stress and competition, and encourage me to check out topcoders.com...
16:42:57 <stepcut> err, topcoder.com
16:43:53 <stepcut> so, it seems they only take submissions in C++, C#, VB, and Java
16:44:13 <stepcut> I don't plan to use VB
16:45:04 <stepcut> I wonder what the state of C# for linux is
16:45:50 <shapr> aobut the same as VB for linux I suspect, meaning, it requires wine.
16:46:01 <stepcut> well, i think mono has C# supporpt
16:46:11 <shapr> does mono use wine?
16:46:17 <stepcut> no...
16:47:03 <stepcut> the C# standard was submitted to ECMA
16:47:13 <stepcut> mono is a "clean room" implementation i think
16:47:18 <shapr> cool
16:47:26 <shapr> that increases my interest
16:47:46 <stepcut> http://go-mono.com/
16:48:15 <stepcut> I wonder which language would be best to learn: C++, java, or C#
16:48:34 <stepcut> which blows the least ;)
16:49:17 * an9n is away: Auto-away after 30 mins idle (gone at 13th Jun, 01:49:26)
16:49:29 <maihem> I got a book on C#, it looks better than Java (not counting the .NET class library)
16:50:20 <eno> for some reason i like the naming conventions in Java better than C#
16:50:54 <eno> C# generic implementation seems to be better than java though
16:51:13 <maihem> yeah, Java naming conventions are *only* conventions, C# seems to make it law for some things (from what I can tell).
16:51:15 <stepcut> I suspect Java and C# are better choices (at least for a competition)
16:51:30 <eno> i view lots of the C# improvement over java as just sugar
16:51:43 <stepcut> does C# have any code macro facilities
16:51:56 <tautologico> hi
16:52:00 <shapr> hi
16:52:04 <shapr> @hello
16:52:04 <lambdabot> Hello world. 
16:52:19 <SyntaxLaptop> shapr: !
16:52:21 <stepcut> @stepcut
16:52:22 <lambdabot> juicy bits of code
16:52:30 <eno> stepcut: C# got some tag feature to help code generation, but no macro
16:52:32 <tautologico> is it possible to create a dll (or .so) with ghc ?
16:52:47 <shapr> y0 SyntaxLaptop 
16:52:49 <shapr> wassup?
16:53:04 <shapr> tautologico: yes, but I don't remember the details, look at the ghc-users lists
16:53:07 <maihem> C# still has the annoying "references are only pointers without arithmetic operations" problem of Java - ie, you cannot write a set of classes that prevents holding a reference after a certain time - so closing files is ugly, etc.
16:53:59 <tautologico> I saw something about DLLs in the manual (which mentions it as not working and unsupported) but nothing about .so libs in unix
16:56:01 <SyntaxLaptop> shapr: nomuch. got tPP out of the library again.
16:56:19 <stepcut> I suspect neither C# nor Java support proper tail recursion?
16:56:33 <shapr> SyntaxLaptop: w00
16:56:44 * shapr uses tracer bullets on Plone
16:56:49 <shapr> full auto!
16:57:51 <SyntaxLaptop> shapr: how's the unicycle?
16:58:17 <shapr> picturesque
16:58:36 <shapr> it survived the flights just fine, though I still got lots of surprised looks when I carried it around.
16:58:50 <SyntaxLaptop> hehe
16:58:54 <SyntaxLaptop> how's your study of it going?
16:59:48 <eno> stepcut: http://weblogs.asp.net/sbchatterjee/archive/2003/07/17/10195.aspx
16:59:54 <shapr> I reached the infinite ride just in time to fly south. My next goal is regular freemounting.
17:00:50 * SyntaxLaptop doesn't understand, but it sounds like progress
17:02:29 <SyntaxLaptop> ahh tea
17:02:44 <shapr> also, I'm checking prices on cokers
17:02:44 <shapr> SyntaxLaptop: how's code on your end?
17:03:10 <shapr> SyntaxLaptop: oh, I had great fun talking to John Hughes
17:03:10 <shapr> no new progress towards a combined version of QuickCheck, I forgot to ask about ReactiCheck
17:03:29 <shapr> oh, John's demo code was an arrow based prototype of a discrete yampa, unlike the current continuous simulation
17:03:39 <stepcut> any news about the nhc for PalmOS
17:03:52 <shapr> nah, I forgot to email Athony Sloane et al
17:04:18 <shapr> oh, chucky had some good suggestions
17:04:44 <shapr> he suggested a Haskell 98+ standard that at least outlined the 'standard extensions'
17:06:33 <SyntaxLaptop> shapr: sounds cool!
17:06:39 <SyntaxLaptop> code on my end isn't too bad. unit testing now :)
17:09:54 <shapr> SyntaxLaptop: oh, I had a brilliant thought... my blog is actually written for me! I need to implement all the things I've written/suggested, otherwise I should stop saying how great they are :-)
17:14:42 <shapr> hi D-my 
17:16:18 * shapr bounces
19:00:32 <TheHunter> @eval (repeat "dammit")
19:00:54 <lambdabot> out of fuel - use @resume to continue
19:01:01 <TheHunter> @resume
19:01:03 <TheHunter> sorry
19:01:04 <Lemmih> haha
19:01:20 <TheHunter> @eval (take 10 $ repeat "dammit")
19:01:21 <lambdabot> out of fuel - use @resume to continue
19:01:21 <lambdabot> [dammit, dammit, dammit, dammit, dammit, dammit, dammit, dammit, dammit
19:01:21 <lambdabot>  dammit]
19:01:29 <Lemmih> `rm * .o`?
19:02:00 <TheHunter> @eval (take 18 $ repeat "dammit")
19:02:00 <lambdabot> [dammit, dammit, dammit, dammit, dammit, dammit, dammit, dammit, dammit
19:02:00 <lambdabot>  dammit, dammit, dammit, dammit, dammit, dammit, dammit, dammit, dammit
19:02:40 <TheHunter> @moo
19:02:41 <lambdabot>          (__)
19:02:41 <lambdabot>          (oo)
19:02:41 <lambdabot>    /------\\/
19:02:41 <lambdabot>   / |    ||
19:02:41 <lambdabot>  *  /\\---/\\
19:02:42 <lambdabot>     ~~   ~~
19:02:44 <lambdabot> ...."Have you mooed today?"...
19:04:04 <TheHunter> is there any channel here to discuss y'know social problems?
19:04:33 * Lemmih is thinking about porting the tutorials on nehe.gamedev.net to Haskell.
19:06:04 <TheHunter> hey, what happened to the lambdabot AI?
20:00:35 <dons> moin #haskell
