00:50:56 * stepcut plays with blender
00:51:09 <Jerub> o_O
00:51:27 <Jerub> stepcut: I have heard it is the vi of graphics editing.
00:51:43 * stepcut wonders what the emacs of graphics editing is then
00:52:31 <stepcut> unfortunately, my 6 year old video card is a bit behind the curve :p
00:54:23 <Jerub> ;)
00:54:29 <Jerub> 6?
00:54:30 <Jerub> hmmm
00:54:38 <Jerub> I wonder how old a matrox G400 is
00:54:54 <stepcut> well, that's the card I have
00:55:03 <stepcut> i think i got it around 6 years ago atleast...
00:55:19 <stepcut> 1998...
00:55:37 <stepcut> PCI :)
00:55:46 <Jerub> '99
00:56:08 <Jerub> http://www.gzplanet.com/resource/res_g400.html
00:56:27 <stepcut> ah, only a mere 5 years old then :p
00:57:22 <Jerub> I was considering getting an upgrade so I could do video-in, but found instead I can just grab a box that does video->vga
00:58:59 <stepcut> i was thinking of getting my GF a newer AGP 3D card and sticking the G400 in my freebsd dev box for playing with hopengl. Currently I am using Mesa for my 3d "acceleration"
01:04:41 <stepcut> oops, it crashed
01:05:58 * stepcut goes to bed
02:55:58 * shapr bounces
02:58:39 <Jerub> no!
02:58:40 <Jerub> stop!
02:58:45 <Jerub> you'll break the internet!
02:58:56 <shapr> it's not that fragile!
03:08:04 <Jerub> its the queens birthday long weekend here.
03:08:07 <Jerub> and I'm bored.
03:08:14 <shapr> want to write some code?
03:08:24 <Jerub> shapr: depends, what kinda code?
03:08:30 * shapr dunno
03:08:31 <shapr> um
03:10:33 * shapr isn't awake yet
03:40:09 <bringert> Lunar^: get home yet?
03:40:30 <bringert> are your hOp slides available online?
03:40:49 <bringert> if so, would it be posible to put a link to them in the wiki?
03:53:50 <Hyp3rion>     ....
03:53:50 <Hyp3rion>   ,`    `.
03:53:50 <Hyp3rion>  :   \    :
03:53:50 <Hyp3rion>  :   /\   :
03:53:50 <Hyp3rion>   .      ,
03:53:50 <Hyp3rion>    `....`
03:55:15 <polli_> klockan är lambda
03:55:21 <polli_> ops
03:55:28 <polli_> the clock is lambda :)
03:55:48 * Hyp3rion blushes: 'Forgove me...'
03:56:05 <bringert> hey, that would be a cool lamdbabot plugin, an ascii art clock
03:56:20 <bringert> where it's always lambda time
03:56:43 <polli_> :)
03:56:47 <Hyp3rion> :-)
03:58:19 <bringert> hmm, what would be the largest discrepancy you'd get between the real and displayed time, if you always display a (rotated and/or flipped) lambda
03:58:56 <shapr> Hyp3rion: whoa, nifty ascii art, looks like the EuroHaskell logo
03:59:01 <bringert> and you can choose which parts are the hour, minute and second hands
03:59:07 * shapr laughs
03:59:10 <shapr> bringert: brilliant idea!
03:59:23 <Hyp3rion> yea... with 24 stars...
03:59:31 <Hyp3rion> :-( +1 missing
03:59:46 <shapr> 1 missing?
04:00:19 <Hyp3rion> shapr - 25 member states now :-/ tho still 12 stars. /me wrong
04:06:39 <shapr> it looks like you have 20 separate chars there, I dunno if the colons should count as two
04:07:09 <shapr> anyway, it looks neat
04:09:12 <shapr> right, time to unicycle
04:24:25 <bringert> @seen SyntaxNinja
04:24:25 <lambdabot> I saw SyntaxNinja leaving #haskell 1 day 13 hours 54 minutes 47 seconds
04:24:25 <lambdabot> ago.
05:02:15 <seafood> Is there an ocaml irc channel on a server somewhere?
05:04:09 <vegai> seafood: yes
05:04:20 <phubuh> #ocaml right here on freenode
05:05:52 <seafood> are there any other haskell channels on other servers that are as popular as this one?
05:06:06 <phubuh> nope, probably not
06:07:17 <vegai> you folks now merd? http://merd.sf.net
06:07:27 <vegai> (what a terrible name for a language ;/ )
06:07:39 <seafood> merd!
06:09:36 <seafood> That would actually have been funny if I'd written, "Merde!"
06:12:47 <vegai> it looks like ruby and haskell had a daughter
06:13:00 <vegai> and I'm not sure if they're married
06:13:44 * shapr bounces happily
06:14:08 <shapr> wassup folks?
06:14:49 <vegai> I'm contemplating on a pile of merd
06:15:16 <vegai> there, the worst joke of the week ;)
06:16:24 <shapr> oy
06:24:20 <shapr> both galeon and fire* have their sucky bits, and I don't want to hack on C source
06:24:23 <shapr> I want a Haskell browser.
06:27:57 <phubuh> hOp will need one sooner or later
06:28:03 <shapr> yes!
06:28:12 <shapr> hej phubuh, how did you like EuroHaskell? was it worth the drive?
06:28:19 <phubuh> definitely, it was great
06:28:29 <shapr> I've written down some good and bad points on my latest blog entry
06:28:52 <shapr> I think I should have figured out faster that tutorials and sprints don't mix well in the same room
06:30:19 <phubuh> where's your blog again?
06:30:43 <shapr> http://shapr.homelinux.net/~shae/blog/
06:32:35 <phubuh> yeah, i did expect a little more code, but meeting and talking was really what i was looking forward to the most
06:32:56 <shapr> yah, I expected more code too
06:34:30 <shapr> the meeting and talking was the most important part, I agree
06:34:54 <shapr> I was hoping we'd have some pair programming so I could steal useful coding habits from bringert, andersca, etc
06:34:57 <Igloo> I get roughly black-on-black when I mouseover a link, shapr
06:35:12 <shapr> yah, the CSS does need improving
06:35:22 <shapr> but I'm probably switching from PLog to BLob anyway
06:35:28 <phubuh> i really enjoyed monaden :)
06:35:39 * Igloo smiles at the sign
06:35:39 <shapr> yah, the Monad student pub was *really* fun.
06:35:58 <shapr> Igloo: lots of cool signs at EuroHaskell
06:36:58 <Igloo> Aha
06:37:02 * Igloo discovers the next button
06:37:38 <Philippa_> hopefully I'll be able to make it next year
06:37:48 <shapr> Philippa_: cool!
06:37:55 <shapr> bring your boss too!
06:38:14 <shapr> gmh might like the unicycle ;-)
06:38:34 <Igloo> What are the K, I, Y signs on?
06:38:41 <shapr> on the different rooms
06:39:17 <Philippa_> shapr: dunno how easy it'll be to get gmh along, but hey
06:39:24 <shapr> "We have booked the rooms ES63, E6209 (S), E6211 (K), E6213 (I) and E6215 (Y), which are all on the sixth floor." <-- from the EuroHaskell wiki page
06:40:10 <shapr> all the FP people got a kick out of the signs 
06:40:25 <shapr> John Hughes and Aarne Rante specifically mentioned that
06:42:02 <shapr> Lemmih: hey, are you coming to EuroHaskell next year?
06:42:56 <shapr> I really liked the open source t-shirt idea (though my t-shirt is somewhat smudged)
06:43:09 <Philippa_> crap
06:43:27 <shapr> not right now, thanks.
06:43:28 <Philippa_> oh, wait, that works OK, *phew*
06:43:46 * Philippa_ is having one of those braindead moments when you think your system doesn't cater to a special case it actually handles fine
06:44:45 <shapr> phubuh: how long did you guys drive one way?
06:45:06 <phubuh> hm, about 500 kilometers i think
06:45:18 <shapr> wow, how much time did that take?
06:45:32 <phubuh> about eight hours
06:45:49 <shapr> yow!
06:46:00 <Lemmih> shapr: Definitely. If I'm not totally tied up in my studies at that time.
06:52:03 <shapr> spiffy
06:52:16 <shapr> I strongly suspect that next year will be in the same place.
07:03:26 <shapr> coding coding coding, keep them doggies coding, rawIDE!
07:03:48 * shapr has the urge to start an IDE called rawIDE and use that for the motto
07:04:17 <Igloo> :-)
07:10:28 <Philippa_> doggies as in dogfood, eating your own?
08:02:32 <shapr> hiya titanstar 
08:02:37 <shapr> Philippa_: haha! that's great
08:02:47 <shapr> titanstar: looking for Haskell info?
08:02:58 * shapr bounces cheerfully
08:03:06 <shapr> spenatmannen: hey, did you show up at EuroHaskell?
08:06:47 <titanstar> shapr: hey
08:07:11 <titanstar> shapr: i'm considering using haskell for a personal project, so i decided to check out what the community looked like
08:08:54 <phubuh> the community's awesome
08:09:05 <phubuh> you missed eurohaskell though :)
08:13:26 <shapr> titanstar: the community looks nice, wanna see the pictures?
08:13:55 <titanstar> :)
08:14:02 <titanstar> this irc channel will do fine :)
08:14:05 <shapr> ok
08:14:30 <shapr> titanstar: if you've seen the learning page, other useful sites are the Haskell Wiki, lambdabot, and ... something else that I've forgotten.
08:14:38 <shapr> oh yes, the Yet Another Haskell Tutorial is good.
08:15:00 <phubuh> by the way, shapr, did you get this guy's name? http://ridley.csbnet.se/gallery/eurohaskell/p1010004
08:15:48 <titanstar> shapr: yup, browsing the wiki now - there seem to be plenty of learning material around
08:15:53 <shapr> sure, that's Michael Salib from MIT
08:16:08 <shapr> he gave the StarKiller talk at EuroPython, he wants to add static typing and type inferencing to Python
08:16:11 <phubuh> cool, thanks
08:16:13 <phubuh> oh, nifty
08:16:51 <shapr> he also said something about the Haskell community not being as friendly as the Python community during his talk
08:17:00 <shapr> so I had to swoop down upon him like a pack of friendly bunnies
08:17:04 <phubuh> pfft
08:17:21 <shapr> anyway, he's a really cool guy
08:17:41 <shapr> I ended up inviting him to come and spend some vacation time at our house in Boden
08:19:20 <shapr> oh, and these guys are PyPy and psyco people: http://ridley.csbnet.se/gallery/eurohaskell/p1010003
08:19:47 <shapr> that's Holger Krekel and Armin Rigo
08:20:19 <phubuh> aha, i didn't get to talk to them
08:21:41 <shapr> there are still one or two names I'm not sure about
08:22:10 <shapr> who's this guy between bjorn and Lunar^? http://ridley.csbnet.se/gallery/eurohaskell/p1010008
08:22:10 <phubuh> does that include the guy in the red shirt you were talking to about .NET?
08:22:19 <shapr> oh, I know who he is
08:22:32 <shapr> though I'm trying to remember his name at the moment...
08:24:02 <shapr> anyway, what's this middle guy's name again? http://ridley.csbnet.se/gallery/eurohaskell/p1010019
08:24:10 <shapr> bjorn told me, but I forgot...
08:25:37 <phubuh> no idea
08:26:01 <shapr> jonas svensson maybe? I don't think that's right. I know he's staff at chalmers though.
08:26:44 <shapr> hej chucky!
08:27:12 <shapr> chucky: is this jonas svensson in the middle here? http://ridley.csbnet.se/gallery/eurohaskell/p1010008
08:27:27 <spenatmannen> shapr, No... I forgot... I'm looking throgh the pictures though =)
08:27:50 <shapr> the picture of John Hughes on the unicycle seems to be the most popular. I am unsurprised.
08:27:59 <phubuh> :)
08:28:59 <chucky> shapr: I have no idea.
08:31:41 <Spark> :)
08:31:42 <shapr> hey, I know this guy on the right here: http://ridley.csbnet.se/gallery/eurohaskell/p1010070 ;-)
08:34:39 <shapr> oh, I can add comments that give names for some of these pictures
08:35:49 <phubuh> holy god i look scary in thay picture
08:36:47 <phubuh> someone should photoshop in some, um, pupils
08:37:16 <shapr> phubuh: you always have that "inner light" look. I can see the code leaking out of your head ;-)
08:40:07 <shapr> speaking of which, what sort of code are you working on lately?
08:40:15 <shapr> titanstar: have any Haskell questions?
08:47:30 <phubuh> well, this'll get me lynched for sure, but i'm actually working on a common lisp implementation in squeak smalltalk
08:48:57 <phubuh> and on the side, i'm working on a stack-based forth-like language that compiles into brainfuck
08:48:57 <phubuh> you'll notice that i have a thing for cool languages :-)
08:48:57 <phubuh> the brainfuck thing is really really painful to debug
08:49:32 <shapr> sounds like fun
08:50:14 <phubuh> yeah, mostly
08:50:21 <Smerdyakov> phubuh, have you noticed that having that definition of "cool languages" tends to lead to not getting any work done? :P
08:50:34 <phubuh> Smerdyakov: but i'm getting lots of work done
08:50:49 <phubuh> the work is useless, but hey
08:50:55 <Smerdyakov> That's the problem. :P
08:51:59 <phubuh> i'm still young enough to prioritize fun over work :)
08:52:37 <phubuh> but then, it's questionable whether debugging http://www.phubuh.org/~phubuh/bah.txt (which is generated from a three-token program to divide 30 by 10) counts as 'fun'
08:52:37 <phubuh> er, http://www.phubuh.org/~phubuh/bah.bf
08:54:46 <Smerdyakov> I think it's problematic if you need to differentiate between fun and work.
08:55:39 <phubuh> me too
08:57:23 <phubuh> work, for me, is high school, which i don't really like, but i'll hang in there for two years so i can attend a good university, which seems like fun
08:59:08 <Smerdyakov> Do you have special high schools for talented students in Sweden?
08:59:53 <phubuh> not that i know of
09:00:32 <Smerdyakov> I'm sure that would go against the socialistic turn of the country, but that's too bad.
09:02:14 <phubuh> i'm not really talented at high school stuff anyways.  at least my grades don't seem to think so
09:03:02 <shapr> I'm fond of stack-based languages
09:03:31 <phubuh> yeah, you're into joy, right?  i haven't tried that, but i should
09:03:52 <shapr> DEFINE approxEqual == 100.0 / rotate [0 =] [pop] [dup rolldown - swap /] ifte > .
09:04:06 <shapr> @eval joy + + 1 1 1 .
09:04:06 <lambdabot> (line 1, column 7):
09:04:06 <lambdabot> unexpected "+"
09:04:06 <lambdabot> expecting space or simple term
09:06:41 <shapr> I've forgotten how the joy code in lambdabot works
09:06:49 <Lemmih> @eval [1..4]
09:06:49 <lambdabot> (line 1, column 4):
09:06:49 <lambdabot> unexpected "."
09:06:49 <lambdabot> expecting simple term
09:07:21 <phubuh> @eval joy 1 1 1 + + .
09:07:21 <lambdabot> (line 1, column 13):
09:07:21 <lambdabot> unexpected "+"
09:07:21 <lambdabot> expecting space or simple term
09:59:20 * bringert has just seem some amazing abuse of Haskell
09:59:38 <Jerub> bringert: show us?
10:00:33 <bringert> s/seem/seen/
10:00:45 <bringert> I was grading haskell exams with ludde
10:00:51 <Jerub> oooh
10:00:51 <Jerub> ;)
10:00:56 <ludde> :)
10:01:05 <bringert> most of them were pretty good though
10:01:12 <Jerub> non-functional programmers programming in haskell?
10:01:18 <bringert> not really
10:01:32 <bringert> most of them learnt Haskell as their first language
10:01:46 <Jerub> bringert: 5 line solutions for things that can be done in 2 characters?
10:01:56 <bringert> some
10:01:59 <phubuh> 2 character solutions for things that should be done in 5 lines? :-)
10:02:12 <bringert> don't think we had any of those
10:02:31 <bringert> you could do that whole exam in 7-10 lines of code
10:02:50 <ludde> we should count how many lines the person that had the shortest # used.. :)
10:03:00 <bringert> :)
10:03:18 <bringert> oh, we never wrote up the example solutions
10:03:25 <ludde> oh yeah
10:03:33 <ludde> i can fix that
10:04:45 <ludde> we could invite our students to this channel :) i saw that some of them used IRC
10:05:25 <ne1> Free answers for those who join #haskell? :)
10:05:41 <bringert> :)
10:06:21 <Jerub> I had a haskell exam once that was 'open-world'
10:06:36 <bringert> including asking other people?
10:06:36 <Jerub> sat us down in a lab for 2 hours with an active internet connection
10:06:56 <bringert> was cooperation ok?
10:07:09 <Jerub> bringert: yeah, basically the teacher said "please, don't do that, you'll waste so much time and never get to finish the exam"
10:07:15 <Jerub> and cooperation wasn't okay.
10:07:20 <ne1> You were fooled.  You were firewalled, and all answers you got from the internet were really spoofed by the prof.
10:07:36 <Jerub> ne1: I only used the lecture notes
10:08:01 <ne1> Haha you were not easy to fool.
10:08:43 <ne1> I should arrange such a spoofed open-world exam some time.
10:09:35 <bringert> using bots to simulate the #haskell regulars?
10:09:52 <Jerub> * shapr boings
10:10:06 <ne1> yeah, and spoofing search engines and search results, false web pages, etc
10:10:33 <phubuh> make the proxy pass all haskell code through Remorse.hs
10:10:55 <bringert> haha
10:10:56 <ne1> Example session.  <Jerub> @type (+)  <lambdabot> (+) :: () -> () -> Bool
10:11:31 <bringert> why not put a fake hugs/ghci on the system too
10:12:08 <bringert> Prelude> pi
10:12:08 <bringert> 3
10:12:25 <phubuh> for some random students, instead of faking #haskell regulars, it could just redirect #haskell to #java
10:12:31 <bringert> :)
10:14:14 * bringert is going to print John's t-shirt now
10:14:54 <bringert> shapr: when you see him wear that at ICFP, feel proud
10:24:11 <bringert> SyntaxLaptop: I have code for you
10:44:48 <SyntaxLaptop> bringert: cool
10:49:07 * bringert is a little busy right now, but I'll be happy to discuss the code later
10:49:20 <bringert> Marvin-- and I did those changes
10:59:53 * phubuh wonders what's up with the autotools book dissecting some completely tangential C library, detailing its linked list implementation
12:44:47 <SyntaxLaptop> mmmmm coooofeeeeee
12:45:23 * stepcut should gets some coffeeeeee and fooooood
12:45:37 <stepcut> shave and shower
12:45:38 <stepcut> etc
12:50:48 <SyntaxLaptop> stepcut: big date?
12:55:15 <shapr> @yow !
12:55:16 <lambdabot> ..  I think I'd better go back to my DESK and toy with
12:55:16 <lambdabot>  a few common MISAPPREHENSIONS...
12:56:23 <SyntaxLaptop> so can anyone tell me how to view a specific patch in darcs?
12:56:27 <SyntaxLaptop> I'd like to dump it to a .diff file
12:57:14 <shapr> er, I know you can...
12:57:28 <shapr> view I'm sure of, dump I am not
12:57:49 <SyntaxLaptop> how do you view
12:57:58 * shapr tries to remember
12:58:33 <shapr> oh, I have a good question, I have cvs, svn, arch, and darcs repos scattered around my disk, any suggestions for organizing them?
12:59:36 <stepcut> hrm...
13:01:01 <stepcut> what? no monotone repos? slacker...
13:02:07 <shapr> :-P
13:04:10 <SyntaxLaptop> shapr: we have a little svn->tla script at Aetion.
13:04:16 <SyntaxLaptop> it's not perfect, but it sometimes does the job :)
13:04:39 <Igloo> Ooo, ooo, svn2darcs script was on the list recently!
13:06:06 <SyntaxLaptop> shapr: you should pick a vc system... like me!
13:06:07 * Igloo has no ideas other than putting them all in one place
13:08:45 * shapr chooses SyntaxLaptop as his vc system.
13:08:57 <SyntaxLaptop> so I resorted to "darcs send" to get the patch :)
13:08:58 * Igloo was going to make a joke along similar lines  :-)
13:09:03 <SyntaxLaptop> bah. you guys can't parse.
13:09:05 <shapr> Igloo: haha, beat you to it :-P
13:09:11 * shapr snickers
13:09:16 <Igloo> No, I just thought the better of it  :-Ã¾
13:10:13 <SyntaxLaptop> man. bringert and I implemented the same thing in Cabal yesterday, it seems :(
13:10:23 <SyntaxLaptop> but I think I've mostly merged them.
13:10:23 <shapr> well, at least you know it's a good idea
13:11:09 <SyntaxLaptop> yeah, it's always interesting to see someone else implement something that you implemented on the same codebase.  how we made the same or different decisions.
13:39:17 <TheHunter> df -h
13:39:26 <TheHunter> sorry
13:39:46 <Heffalump> hehe, people are reading the dunkosmiloolump source
13:39:49 <Heffalump> I wonder how confusing it is
13:43:14 <Lor> I gave up trying to write an arrow combinator ant library. It was just too hard to get labels done in a pretty way.
13:46:02 * esap just used a state monad.
13:46:23 <Lor> Not pretty enough. :)
13:46:41 <Lor> I wanted to use variables just as in ordinary code.
13:47:29 <esap> Well there was 'x <- label' which would create a variable pointing to current location. 
13:48:08 <esap> maybe not pretty enough, but it works.
13:48:35 <phubuh> why does http://www.phubuh.org/~phubuh/tcp.hs cause a broken pipe on the second message sent after a client has disconnected?
13:52:52 <phubuh> oh, i guess it's because the getChanContents thread tries to write to a closed socket
13:57:43 <phubuh> i wish i could kill a Chan
13:57:58 <phubuh> er, no i don't
14:13:09 <Heffalump> Lor: really? I thought it would solve the problems I had with labels in a monad
14:14:16 <Lor> With monads there are other problems besides the labels.
14:14:29 <Lor> At least with the approach I took.
14:14:29 <Heffalump> well, my main problem was gathering the code
14:14:51 <Heffalump> but labels themselves were basically fine
14:14:57 <Lor> I could of course have tried a _really_ imperative approach where each node is created only when needed and then memoized.
14:15:05 <Lor> I'm trying that with scheme right now.
14:16:50 <Lor> My problem was that labels are a fundamentally different thing from other variables.
14:17:30 <Lor> If "sense Ahead Foe" returns a boolean, it means that the following paths have to be duplicated for each value. This happens by calling the continuation twice with two different values.
14:18:21 <Lor> But the value that "label" returns is not at all like that: it only serves as a binding construct, it doesn't split control paths or anything.
14:19:07 <Heffalump> ah, I see
14:19:23 <Heffalump> the approach I took was not to make the code being constructed an implicit part of the monad
14:19:32 <Lor> No CPS?
14:19:39 <Heffalump> nope
14:19:54 <Lor> I don't see how you can do that at all.
14:20:38 <Heffalump> why?
14:20:46 <Heffalump> (read the dunkosmiloolump source :-)
14:20:50 <Lor> My basic approach (as a monad) was data Ant a = Ant (a -> Node) -> StM Node (where StM is the state monad that takes care of allocating new nodes and giving them identifiers).
14:24:08 <Lor> Ah, but you have a very low-level approach.
14:25:05 <Lor> It's very much like what I used in my ocaml-based language: simply compound statements packed together.
14:25:46 <Lor> What I want is a real programming language: one where I can use value constructors and destructors to make things clearer and abstract away.
14:26:20 <Lor> So "sense" should definitely return a boolean, not take two expressions as explicit parameters.
14:33:46 <esap> The specification had all the details worked out already, I just used that interface.
14:34:23 <Lor> Well yeah, it's a low-level approach.
14:34:58 <Lor> I now intend to make a language that very much looks like scheme but compiles into a state machine.
14:35:36 <Lor> You get _tail_ recursion only. That suffices to keep things finite. :)
14:37:44 <esap> True, it's low level. You can only make things higher level when there is something in common.
14:38:04 <Lor> ...with what?
14:38:56 <esap> I mean, two things that have some aspect that's common to them. Then you can refactor that and raise the level of abstraction.
14:39:56 <SyntaxLaptop> w0000t.  lots of Cabal hacking.  it's very close to working.
14:40:00 <SyntaxLaptop> speak of the devil..
14:40:06 <Lor> A realistic ant has lots of things to abstract away from.
14:40:13 <Lor> Subroutines, at least.
14:40:42 <esap> yes, of course [but monads do provide most of that by default already].
14:41:01 <Lor> I had a thingy called "probe" which was given a set of directions, and a set of condition-branch pairs, and it returned a piece of code that scanned all those directions and if one of the conditions matched, it would execute that, _parameterized_ by the direction where it was found.
14:42:48 <SyntaxLaptop> bringert: you've got mail
14:42:53 <esap> I had a thing that would work exactly like ordinary 'move', but would also bounce from walls and mark the direction where it came from.
14:43:48 * Lor still curses himself for wasting a day with a GUI. No, _two_ GUIs.
14:44:12 <Lor> I wish I had realized that you can get sufficient precision even with a character display.
14:44:29 * esap just wrote a PPM writer and used pnmtoxwd and xwud.
14:44:34 <Lor> Using color characters never came to my mind.
14:44:52 <Lor> Uh, but how did you debug?
14:45:23 <Lor> I wanted something where I could see how the ants would behave, and I could go one step at a time, seeing the states of individual ants.
14:45:30 <esap> used 'system' to view the ppm every 10 rounds or so.
14:46:01 <SyntaxLaptop> who maintains cvs.haskell.org, ooi?
14:48:08 <Lor> But this character-based visualizer is just beautiful: http://www.cl.cam.ac.uk/users/pes20/icfp-contest-2004/
14:49:01 <bringert> SyntaxLaptop: cool, thanks. will try out your merged version
14:50:22 <Lor> When you want to draw 10000 polygons several times a second, the overhead of language bindings becomes meaningful.
14:50:45 <SyntaxLaptop> bringert: cool.  don't think you'll be able to use "darcs pull", btw.
14:51:02 <bringert> because of conflicts?
14:51:14 <SyntaxLaptop> yeah.
14:51:25 <bringert> sounds I just "darcs get" a brand new one?
14:51:40 <SyntaxLaptop> yeah
14:52:08 <phubuh> bah
14:53:30 <bringert> SyntaxLaptop: where's your repo again?
14:54:24 <SyntaxLaptop> bringert: darcs get http://www.syntaxpolice.org/darcs_repos/library-infrastructure/
14:55:36 <SyntaxLaptop> (always available from the libraryInfrastructure home page, which will probably be moved to haskell.org/cabal soon)
14:57:33 <bringert> SyntaxLaptop: you're right, we split the Utils module because of currentDir
14:59:07 <SyntaxLaptop> OK. once we have Distribution.Make, there may be other reasons to split it
14:59:22 <SyntaxLaptop> feel free to redo that patch if you want.  for now, it may not be worth it.
15:00:46 <bringert> our moveSources also took source and desitnation dir arguments, but we only took one list of modules
15:00:59 <SyntaxLaptop> ahh
15:01:12 <SyntaxLaptop> I think it'll need two lists, though it doesn't use them now...
15:01:20 <SyntaxLaptop> maybe because filename Foo.hs might actually be Main.o
15:01:25 <SyntaxLaptop> but I'm not sure.
15:02:02 <bringert> hmm, yes, maybe
15:03:07 <SyntaxLaptop> moveSources is evolving to be kinda evil, I feel... at the very least, it should be called copySources
15:03:12 <SyntaxLaptop> but we'll see.
15:07:45 <bringert> need to move machine to kitchen, brb
15:09:10 <SyntaxLaptop> hmm. kitchen... food.
15:30:06 * SyntaxLaptop gets food. back in an hour or so
15:32:25 <shrimpx> heh that library-infrastructure code has tabs in it
17:11:50 <SyntaxLaptop> bringert: did you get a chance to look at the code?
19:18:50 <Lemmih> Why can't I find a binding to the PNG library?
19:36:32 <Riastradh> Lemmih, look harder; your brain is a good place to look, along with FFI documentation.
20:27:34 * stepcut orders some vibration motors
20:28:00 <Riastradh> *bvvvvt*
20:29:45 <stepcut> in unrelated news, I think I want to produce and air an infomercial
20:30:50 <stepcut> but I am not sure what to sell yet
20:33:31 <Riastradh> Arrows!
20:33:39 <stepcut> "For just 5 easy payments of $29.95 you can learn haskell in my fun and easy video series"
20:33:58 <stepcut> "You'll have the biggest Monads on your block!"
20:35:27 <stepcut> "Do you want your own house, yacht, or beowolf cluster? Of course you do! With the skills you will learn in my haskell course, and 10 million dollars, you can get all these things AND MORE!"
20:38:53 <blackdog> "Destroy your lucrative career as a Java programmer: Learn Haskell!"
20:40:16 <clausen> how about a spiritual add?
20:40:58 <clausen> "the purity of haskell helped me to deal with the kids, work and the stress of a fast-pace life"
20:43:43 <blackdog> there must be a way to use haskell to sell exercise equipment. they've used everything else.
20:44:16 <stepcut> "I used to be a fat lazy slob, but now, thanks to haskell, I am fully functional..."
20:44:46 <Riastradh> '...and I can still be lazy!'
20:44:51 <stepcut> hehe
20:45:41 <clausen> well, feel free to write some ads for Clausen Profit Systems :)
20:45:49 <clausen> members.optusnet.com.au/clausen/profit
20:46:07 <Riastradh> Free?  No, it'll cost you.
20:46:26 <clausen> I'll send you a cheque for well over $0
20:51:24 <Riastradh> clausen, have you tried sending those emails out to anyone?  You might perform a valuable social service by taking money away from those too stupid to handle it.
20:51:42 <clausen> Riastradh: just to friends :)
22:01:00 * stepcut is getting addicted to blender3d
22:01:57 <Riastradh> Stick your finger in it.  That should terminate your addiction expediently.
22:50:37 <shapr> yeeow
23:10:57 <stepcut> fun fun fun!
23:11:07 <shapr> and now, a business meeting
23:11:47 * stepcut was thinking of going to bed, but ok...
23:54:06 <dons> ls
23:54:12 <dons> oops.. :)
