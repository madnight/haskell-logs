01:25:17 * timbod is back (gone 08:16:19)
03:22:55 <mij> i'm looking for a library to write cgi programs, someone can help ?
03:26:03 <ludde> wash ?
03:30:21 <mij> ok i try it
06:50:26 <TheHunter> @moo
06:50:27 <lambdabot>          (__)
06:50:27 <lambdabot>          (oo)
06:50:27 <lambdabot>    /------\\/
06:50:27 <lambdabot>   / |    ||
06:50:27 <lambdabot>  *  /\\---/\\
06:50:28 <lambdabot>     ~~   ~~
06:50:30 <lambdabot> ...."Have you mooed today?"...
08:41:03 * timbod is away: I'm busy
10:15:46 <TheHunter> @arr
10:15:46 <lambdabot> Aye Aye Cap'n
10:20:01 <Marvin--> wtf is #haskelld?
10:23:53 <andersca> @moo
10:23:54 <lambdabot>          (__)
10:23:54 <lambdabot>          (oo)
10:23:54 <lambdabot>    /------\\/
10:23:54 <lambdabot>   / |    ||
10:23:54 <lambdabot>  *  /\\---/\\
10:23:55 <lambdabot>     ~~   ~~
10:23:57 <lambdabot> ...."Have you mooed today?"...
10:28:35 * TheHunter is listening to Eric Clapton - River of Tears
10:33:19 <Spark> lol
10:33:22 <Spark> extra escapes
11:57:51 <SyntaxLaptop> how's ICFP?
11:58:27 <Marvin--> not at all. this year too. *grmbl*
11:59:28 <Riastradh> My team seems to be doing fine.
11:59:52 <mij> when is the deadline ?
12:01:05 <arjanb> tomorrow 16.00 GMT
12:01:12 <Riastradh> Twenty one hours.
12:02:24 <arjanb> minus sleep and such, still 11 hours left for coding :)
12:02:38 <mij> sleep is for loosers :)
12:03:32 <arjanb> if it's was only for 24 hours i would agree
12:57:33 * timbod is back (gone 04:16:30)
14:20:11 <SyntaxLaptop> damn. haskell people are too smart and too numerous. if I reply in detail to every HPS email, I'll never get to hacking
14:24:04 * Jerub laughs
14:29:27 <Lemmih> HPS?
14:31:42 <SyntaxLaptop> Haskell Packaging System? or Cabal now, but that name isn't quite known yet
14:31:49 <SyntaxLaptop> I guess I should start being consistent.  I hate naming stuff.
14:32:02 <Riastradh> I still like the LAB idea.
14:32:23 <Riastradh> Haskell LABS -- the Haskell Library and Application Build{er,...} System
14:32:49 <Riastradh> It makes a nice file extension, too.
14:32:53 <Riastradh> That's important.
14:34:36 <SyntaxLaptop> Riastradh: I know... Cabal is what I got a consensus on, though.
14:34:53 <Riastradh> What does it stand for?
14:35:13 <Riastradh> Curried Application Builder And, um...Libraries...?
14:35:38 <SyntaxLaptop> The Haskell Cabal: A Common Architecture for Building Applications and Libraries
14:36:48 <Riastradh> That sounds too long-windedly dull.
14:36:56 * Riastradh arbitrarily spouts criticism.
14:37:01 <Riastradh> *spout*spout*spout*
14:37:04 <SyntaxLaptop> bah
14:37:07 <SyntaxLaptop> yr lucky I don't kickban you
14:37:33 <SyntaxLaptop> Malcolm liked that it sounds like the opposite of what we're trying to acchive
14:39:01 <det> SyntaxLaptop: I thought haskeleton was the clear winner!
14:39:45 <det> SyntaxLaptop: Cabal is my second choice however :)
14:39:58 <SyntaxLaptop> det: that was my favorite, but I have to get consensus from the simons + malcolm wallace + ross patterson (the cabal?) and they disliked that one least
14:40:15 <SyntaxLaptop> ah well, I actually like it, so that's all that really matters
14:40:30 <SyntaxLaptop> well, plus it's accurate, plus it's an actual name.
14:40:31 <det> SyntaxLaptop: but you are aware I will require a nickel for every distribution for Cabal ?
14:40:57 <SyntaxLaptop> there's actually still room to name the over-all architecutre that the Cabal is a part of
14:41:05 <SyntaxLaptop> det: hmm. I thought it was shapr's idea? ;)
14:41:34 <det> SyntaxLaptop: yeah yeah, I never get my due.
14:41:52 <det> SyntaxLaptop: shapr was haskeleton (which hapens to be my favorite)
14:45:14 <det> Riastradh: .lab or .labs?
14:45:27 <det> Riastradh: what if they wish to support DOS!?
14:45:31 <Riastradh> det, .lab -- it's the builder.
14:45:42 <det> ahh
14:55:40 <dirwood> would anyone be able to help me out with parsing an if statement?
15:01:37 <Lemmih> Sure.
15:08:08 <dirwood> not quite sure how to explain it, but i pm'd the basics
16:16:01 <stepcut> every rose has its thr0n! just like every night has its dawn!
16:17:58 <SyntaxLaptop> hi stepcut
16:19:44 <stepcut> hey
16:19:55 * stepcut is reading about set theory
16:21:17 <Smerdyakov> It's usually a bad sign when software engineers read about set theory. :P
16:21:27 <desrt> uh
16:21:32 <Pseudonym> It's a worse sign when they've never read about set theory.
16:21:36 <desrt> all software engineers are forced to read about set theory
16:21:44 <desrt> if they want to be accredited
16:21:49 * stepcut was a computer engineer
16:22:04 <desrt> in ontario, anyway
16:22:15 <Pseudonym> Smerdyakov: That sounds like "It's a bad sign when airline pilots practice aborted landings."
16:22:21 <stepcut> hehe
16:22:41 <desrt> s/ aborted landings//
16:22:57 <Pseudonym> Good point.
16:24:05 <Smerdyakov> desrt, software engineering accreditation is far from standard.
16:24:34 <Smerdyakov> What I meant was that someone who mostly just writes code is probably feeling wistful for his school days if he is reading about set theory.
16:24:42 <desrt> Smerdyakov; i'd like to think that they all agree that set theory is important :)
16:25:12 <Smerdyakov> desrt, in your dreams.
16:25:23 <desrt> i _did_ say "i'd like to think" :)
16:25:44 <Pseudonym> Which doesn't imply that the thought is only present in dream-like states.
16:25:58 <Pseudonym> Actually, it doesn't imply the thought is present at all.
16:26:04 <Pseudonym> Merely the desire for the thought.
16:26:06 <desrt> exactly :)
16:26:39 <desrt> and the desire is present outside of dreams, thank you :)
16:27:08 <d3z> anyone up for an efficiency question?  (I'm busy with the ICFP contest, though).
16:27:37 <stepcut> d3z: screw efficiency, just breed more ants...
16:27:42 <stepcut> or something...
16:28:02 <d3z> true, maybe I'll ask my question later.  Or quickly...
16:28:38 <d3z> In a strict language, it helps to build lists up in reverse, and then reverse them at the end.  Is this better or worse in Haskell, if I need to keep the whole list evaluated and in memory anyway?
16:30:41 <Smerdyakov> There usually won't be any difference in lazy vs. strict.
16:32:13 <d3z> I just realized that the data is more helpful when reversed, anyway.
16:32:14 <Iter> morning jerub.
16:32:26 <Iter> opps, wrong channel.
16:33:04 <d3z> It's just that with lazy, append can be heap friendlier.  Tail recursing works best with strict, and other recursion working better with lazy, and all...
16:33:53 <Pseudonym> In a lazy language, list concatenation is effectively O(1).
16:33:55 <Smerdyakov> Accumulation of lists in reverse order is almost always associated with tail recursion.
16:34:04 <Pseudonym> Right.
16:34:15 <Pseudonym> And tail recursion is sometimes better.
16:36:07 <Pseudonym> Just having a look at how I did it in lambdabot.
16:36:21 <Pseudonym> I used a combination of building lists in reverse and using CPS.
16:36:34 <Pseudonym> Damn that's ugly.
16:36:38 <Pseudonym> Works, though.
16:37:08 <Pseudonym> Why on earth did I use CPS?
16:37:56 <Pseudonym> Maybe it was to test the efficiency of the eval/apply model. :-)
16:53:55 <Riastradh> What model does GHC use now?
16:55:11 <Pseudonym> Eval/apply
16:57:22 <Riastradh> Didn't it change at one point?
16:57:52 <Pseudonym> Yes, it was previously push/enter, but then they discovered that eval/apply was more GC-efficient.
16:58:31 <Pseudonym> Intuitively, pushing arguments onto a stack then calling a closure would _seem_ to be more efficient.
16:58:47 <Pseudonym> However, it turns out that if you're pushing unboxed arguments, explaining this to the GC turns out to be hard.
17:03:37 * timbod is away: I'm busy
17:13:33 <Riastradh> Pushing arguments onto a stack?  Um, what about registers?
17:14:22 <Pseudonym> The push/enter vs eval/apply dichotomy only applies to calling closures.
17:14:28 <Pseudonym> Not statically-bound functions.
17:14:36 <Riastradh> Oh, OK.
17:15:08 <Pseudonym> And the problem only applies because Haskell is based on lambda calculus.
17:15:45 <Pseudonym> Calling "f x y z" where f is a variable is a problem because it is unknown at compile time how many of the arguments f needs to reduce itself.
19:09:35 <Lemmih> @arr
19:09:36 <lambdabot> Shiver me timbers!
19:09:50 <Pseudonym> Does anyone here have a copy of Conceptual Mathematics handy?
20:06:29 <tmoertel> Pseudonym: yes
20:07:39 * tmoertel has no idea how long ago Pseudonym asked the original question, however
20:29:25 <Pseudonym> Ah, good.  Wondering if you could check something please.
20:29:49 <Pseudonym> There are two kinds of factorisation problems mentioned.  One is a "choice problem".
20:30:03 <Pseudonym> That's where you have f and g and you want to find h such that f . h = g
20:30:04 <Pseudonym> I think.
20:30:09 <Pseudonym> a) Is that right?
20:30:14 <Pseudonym> b) What's the other kind of problem called?
20:35:02 <Pseudonym> Google is, sadly, no help./
21:18:47 <Habs24> Active channel.
21:19:02 <Riastradh> Boo.
21:19:21 <SamB> Habs24: well, it is 12:18 some places...
21:19:30 <Riastradh> This is ICFP contest weekend, by the way, and there are only twelve hours left.
21:19:48 <SamB> that does seem more relevant ;-)
21:22:08 <Habs24> woo hoo.
21:22:11 <Habs24> The what contest?
21:22:19 <Riastradh> http://www.icfpcontest.org/
21:22:26 <Habs24> Can you just tell me?
21:22:38 <Habs24> I really don't want to open another program.  It slows down my computer.
21:22:57 <Riastradh> The ICFP is the International Conference on Functional Programming.  There is a contest each year that precedes the conference.
21:23:12 <Habs24> Fun.
21:23:19 <Riastradh> ...ctional.
21:23:19 <Habs24> What's the prize?
21:24:25 <Habs24> I take it, there is no prize.
21:24:26 <Habs24> :(
21:24:38 <Riastradh> The first prize is $1000 & free conference registration for two student team members, and the judges say something cool about the language you chose; the second prize is $300 and registration for one student member, as well as something kinda cool about the language; and a couple of other prizes for different places (lightning division & judges prize).
21:24:51 <Riastradh> s/judges prize/judge's prize/1
21:25:09 <Riastradh> Judges', even.
21:27:05 <Habs24> $1000?!
21:27:08 <Habs24> It's a national contest!
21:27:12 <Habs24> It should be 100,000!
21:27:50 <Riastradh> International.
21:28:20 <Habs24> If it was the Microsoft VB contest, it would be 5 times more.
21:28:25 <Habs24> (If such a contest exists)
21:29:56 <Pseudonym> If you manage to solve the problem in VB, you deserve $5000 at least, I think.
21:30:58 <Habs24> so, they say something cool about your language.
21:31:00 <Habs24> Big deal.
21:31:45 <Pseudonym> You get much kudos, too.
21:33:16 <Habs24> Oh wow.
21:33:25 <Habs24> Is this from VIP?
21:48:43 <vegai> more VIP than some
22:01:40 <stepcut> there needs to be more programming competitions with cash prizes
22:02:15 <Riastradh> the problem with that is that the people with all the cache have no interest in programming quality.
22:02:17 <stepcut> so I can become a professional programming contester
22:02:22 <Riastradh> s/the/The/1
22:02:27 <Riastradh> s/cache/cash/1
22:02:47 <Riastradh> It's getting late and the caffiene from four cups of tea today is really dragging me down...
22:03:01 <stepcut> well, I would be willing to accept: (1) beer (2) bitches-n-hoes or (3) cash-money
22:03:38 <Riastradh> Er, I _think_ it was four cups...II cna't remember...
22:03:47 * stepcut had some really good tea today
22:04:05 <Riastradh> Ugh, I hate to think what the code I'm working on right now will look like when I see it in the mnornng.
22:04:08 <stepcut> there is a tea house that recently openned up. 100+ teas, no coffee
22:04:14 <Riastradh> ...bleh...
22:04:20 * Riastradh cant' tpye.
22:04:24 <ozone> stepcut: there's an idea for a prog contest
22:05:02 <Riastradh> ...maybe that's why my code isn't working...
22:05:17 <ozone> The 1st Annual Dahhhhr-Sumbeyatch-and-Hoes Programming Contest
22:05:26 <stepcut> hehe
22:07:08 * stepcut plays with (non-functional) metapost some more
22:07:21 <Riastradh> I _hope_ caffiene is the only drug that's operating on me...
22:17:48 <det> .. hope?
22:52:56 <Pseudonym> Has anyone heard of Specware?
22:54:26 <Pseudonym> Or SLANG, for that matter.
22:55:00 <Riastradh> SLANG, the Squeak VM implementation language or something?
22:55:15 <Pseudonym> No, SLANG the category-theoretic program specification language.
22:55:37 <Riastradh> Then no.
22:56:43 <blackdog> Riastradh: what approach did you take for ICFP?
22:57:07 <Riastradh> blackdog, that's classified until ten hours from now.
22:58:45 <blackdog> :) Fair enough. I wrote a little compiler and a simulator... i started working on a GA harness, but I really don't know how to set them up so that they're effective. (Also, it's a pretty big search space...)
23:36:41 <bringert> morning
23:36:44 <bringert> three days left
23:36:47 <bringert> @eurohaskell
23:36:49 <lambdabot> less talks, more code!
23:36:49 <lambdabot> http://www.haskell.org/hawiki/EuroHaskell
23:36:49 <lambdabot> EuroHaskell - Haskell Hackfest - June 10-12 - Gothenburg, Sweden
23:47:56 --- mode: irc.freenode.net set +o earthy
23:48:10 --- mode: ChanServ set -o earthy
