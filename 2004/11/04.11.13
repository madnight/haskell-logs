00:09:25 <Oejet_> Morning to you all.
00:09:53 <kolmodin> Morning
00:11:19 <Lemmih_> Good morning, fellow countryman.
01:34:38 <xkb> @yow
01:34:38 <lambdabot> What I need is a MATURE RELATIONSHIP with a FLOPPY DISK...
01:42:47 <kristnjov> @yow
01:42:48 <lambdabot> Is it FUN to be a MIDGET?
01:42:59 <kristnjov> @yow
01:42:59 <lambdabot> Let's send the Russians defective lifestyle accessories!
02:21:31 <mornfall> moin moin
02:24:36 <Oejet_> mornfall: G'day to you, Sir.
02:35:54 <mornfall> =)
02:36:14 <mornfall> Oejet_: To you too, Sir.
02:48:32 <bourbaki> moin
03:08:49 <Boegel> hello everyone
03:09:36 <Lemmih> Hey Boegel.
03:10:38 <bourbaki> Boegel gimme pic
03:12:15 <Boegel> bourbaki, be patient :)
03:12:32 <Boegel> I'm having some problems with my laptop, I think my network card is broken
03:12:44 <Boegel> so I have to exchange files with my desktop with a cd-rw :s
03:13:13 <bourbaki> and im going nuts about this damn package installation of latex packages in cyg
03:14:14 <bourbaki> i need to go and eat something bbl
03:15:25 <Boegel> bourbaki: http://studwww.ugent.be/~kehoste/thesisPublic/perlin/
03:15:39 <Boegel> it's not 100% correct yet, but the result won't change much
03:16:07 <Boegel> the texture you see is created with sum (1/f * noise (f*intersectionPoint) )
03:16:19 <Boegel> with f from 1 to 16 I believe
03:56:53 <bourbaki> moin
03:59:22 <Boegel> hello bourbaki
03:59:31 <Boegel> should I show you the link again ?
03:59:40 <bourbaki> please yes
03:59:46 <Boegel> bourbaki: http://studwww.ugent.be/~kehoste/thesisPublic/perlin/
03:59:58 <bourbaki> didnt get it when i left now i have stomach ache from eating too much ...
04:00:01 <Boegel> bourbaki: the texture you see is created with sum (1/f * noise (f*intersectionPoint) )
04:00:34 <bourbaki> where f is?
04:00:44 <Boegel> with f from 1 to 16
04:00:53 <Boegel> perlin suggested it to get such a texture
04:01:08 <Boegel> f = 1,2,4,8,16 
04:01:16 <bourbaki> ah ok did you scale the texture up to get positive values only?
04:01:24 <Boegel> yes
04:01:35 <Boegel> otherwise I wouldn't get such bright pixels
04:01:39 <bourbaki> very nice now go for fogging :)
04:01:56 <Boegel> if oyu look closesly in the first image, you'll see some strange pixels
04:02:04 <Boegel> I have to figure out what causes that
04:02:41 <Boegel> and also, I want to use the improved noise implmentation suggested by Perlin
04:02:46 <bourbaki> you should do one texture where you have 3 noises one for each colour channel
04:02:51 <Boegel> it should be quicker, and it uses less randomness
04:03:00 <Boegel> bourbaki, I could try that :)
04:03:21 <bourbaki> then youll get this plasma looking effect
04:04:04 <Boegel> lemme try it :)
04:04:10 <bourbaki> sure
04:04:46 <Boegel> first, I'll try to reset my router, maybe my I'll have connection again then on my laptop
04:04:47 <Boegel> brb
04:06:06 <Boegel> it doesn't work :(
04:06:12 <Boegel> I think my network card is broken :'(
04:16:51 <Boegel> and I'm having problems booting in linux too :(
04:25:33 <kristnjov> .
04:34:40 <bringert> trying to compile current Cabal from darcs: 
04:34:42 <bringert> module `Distribution.PreProcess.Unlit' is defined in multiple files: ./Distribution/PreProcess/Unlit.hs
04:34:42 <bringert>                                                                      ./Distribution/PreProcess/Unlit.hs
04:34:49 <bringert> that look strange
04:34:55 <bringert> looks rather
04:36:14 <bringert> hmm Distribution.PreProcess.Unlit is included twice on the ghc command line
04:51:08 <Boegel> hello #haskell (again)
04:52:57 <bourbaki> wb
04:53:11 <bourbaki> got a plasmaball yet?
04:53:25 <Boegel> I'm having a lot of problems with my network connection ... :s
04:53:31 <Boegel> bourbaki, I'm working on it ;)
04:57:30 * pesco jumps out of the shadows.
04:57:32 <pesco> Booh!
04:58:04 * Boegel founds his heart pounding like hell
04:58:12 <Boegel> s/founds/finds (doh)
05:00:45 <Boegel> is it known that Windows has problems with reading png files ? in explorer, the images are all fucked up, but when I open them with Paint Shop Pro they look like they should
05:01:12 <pesco> That's a feature, not a bug.
05:06:03 <pesco> Boegel: What are your making plasma balls for?
05:06:16 * pesco pats his plasma rifle.
05:06:39 <Boegel> pesco, because bourbaki asks me too :p
05:06:49 <Boegel> pesco, no, I'm testing my perlin noise function
05:07:08 <Boegel> http://studwww.ugent.be/~kehoste/thesisPublic/perlin
05:09:53 <shapr> whee!
05:10:33 <pesco> Ah, I made a Perlinnoise function too, some time ago.
05:11:13 <pesco> But I think I never used it anywhere. :(
05:11:55 <pesco> I really should stop programming and study mathematics exclusively. I write program modules that I never use. *sigh*
05:12:16 <pesco> I'm in a melancholic mood this week.
05:12:23 <shapr> me too
05:12:39 <pesco> Interesting. Do you know why you are?
05:12:46 <shapr> You could publish the modules you write, then others could use them.
05:12:56 <shapr> For me it's at least partially seasonal.
05:13:17 <shapr> It's cold and dark here, and my photosynthetic side is trying to hibernate.
05:13:49 <pesco> Aha. This is actually my kind of season. I think. I like the cold. And the sun is shining right into my eyes currently.
05:14:08 <shapr> The best therapy for me is to spend enough time outside, preferably exercising.
05:14:18 <pesco> Yes yes, probably.
05:14:30 <shapr> Sadly, the sunset is nearly here, and I just woke up.
05:15:40 <bringert> dammit, never hand-edit URLs in email
05:15:56 <bringert> (that was a note to self)
05:16:24 <shapr> hej bringert 
05:16:30 <bringert> hej shapr
05:16:39 * bringert just woke up too
05:18:20 <shapr> I gotta wear a suit tonight.
05:19:05 <shapr> There's a f√∂retagarna gala
05:20:28 <pesco> shapr: The problem with publishing my modules is that I'm such a perfectionist.
05:20:51 <pesco> However, as a first step, I will now publish Perlin.lhs and see what comes out of it. *g*
05:21:12 <pesco> Even though it does include vector space classes and such.
05:21:33 <pesco> And probably has crappy efficiency.
05:21:54 <pesco> And is complete junk in tons of other things.
05:22:17 <tuomov> I'm always melancholic, with short burts of joviality
05:22:22 <tuomov> +s
05:22:25 <pesco> Aaarh help me i am in hell.
05:23:09 <tuomov> but I don't like autumn
05:23:16 <tuomov> it's so boring outside
05:23:21 <tuomov> and I don't like summer, because it's hot
05:23:23 <tuomov> winter's cool
05:23:33 <shapr> pesco: what about doing the unit-test first approach? If you write tests for your software ahead of time, then when the tests pass you can release it.
05:23:48 <shapr> I keep thinking about moving to Jamaica
05:24:40 <pesco> shapr: The problem is not that my software doesn't work, but that it's not _polished_.
05:25:34 <shapr> You could keep all of your software in publically available repos, and then polish it as much as you want.
05:25:48 <pesco> That's a good idea.
05:25:55 <pesco> I'm considering that.
05:26:45 <shapr> I'm trying to move all of my prototypes into a publically available repo.
05:27:09 <shapr> I have a bunch of five to fifty line files that test out an idea.
05:31:46 <pesco> I'm creating "The Laboratory", a directory to store all my experiments.
05:32:27 <jedi`> hey all
05:32:31 <pesco> Maybe it will contain subdirectories "Abandoned" and "Failed" :)
05:32:35 <jedi`> i am having problems with indentation
05:32:41 <jedi`> can anyone see why i have this problem?
05:33:09 <jedi`> printlines x = do
05:33:09 <jedi`>    if x < 0
05:33:09 <jedi`>       then putStrLn "NO"
05:33:13 <pesco> Is this a mental or physical issue?
05:33:15 <jedi`> thats basically all thats in my file
05:33:17 <pesco> ;-)
05:33:21 <jedi`> why do i get a compiler error :S
05:33:40 <Lunar^> jedi`: There is always an else in Haskell
05:33:55 <jedi`> I get a parse error, possibly incorrect indentation?
05:34:03 <jedi`> aha
05:34:05 <Lunar^> jedi`: It's a pure functionnal language, so every expression must have a value
05:34:12 <jedi`> yep i agree
05:34:20 <pesco> jedi`: Possibly "when" is the function you want.
05:34:27 <Lunar^> jedi`: add "else return ()" or use when
05:34:37 <jedi`> yep
05:34:40 <jedi`> that fixes it heh
05:34:43 <jedi`> cool :)
05:34:54 <Lunar^> jedi`: look at putStrLn type
05:34:58 <Lunar^> @type putStrLn
05:35:05 <lambdabot> putStrLn :: String -> IO ()
05:35:21 <pesco> Also, change the text to "OH GOD NOOOO!". Sounds more dramatic.
05:35:26 <pesco> ;-P
05:35:29 <jedi`> lol
05:35:31 <Lunar^> jedi`: Thus you must have an "IO ()" on both side of the if
05:35:42 <jedi`> im trying to write a program that prints out a triangle of *'s
05:35:44 <Lunar^> jedi`: That's the type of "return ()"
05:35:45 <jedi`> ie 3 would be
05:35:50 <jedi`> *
05:35:51 <jedi`> * *
05:35:53 <jedi`> um
05:35:55 <jedi`>  *
05:35:57 <jedi`> * *
05:35:58 <jedi`> yeah
05:35:59 <jedi`> heh
05:36:09 <jedi`> thats 2 haha, but u get what i mean
05:36:41 <pesco> Heh, that's a funny problem.
05:36:47 <jedi`> tis :)
05:37:12 <pesco> Do you only want to print the vertices or whole lines of stars?
05:37:24 <shapr> salut Lunar^ 
05:37:25 <jedi`> it has to be a triangle
05:37:31 <jedi`> ie 4 would be
05:37:39 <jedi`>    *
05:37:42 <jedi`>    *  *
05:37:48 <jedi`>  *     *
05:37:52 <jedi`> *     *
05:37:55 <jedi`> hahaha
05:38:00 <jedi`> yeah, something like that
05:38:09 <jedi`> the last line would have  *  *  *  *
05:38:11 <jedi`> but yeah
05:38:16 <Lunar^> salut shapr
05:38:19 <pesco> Ok.
05:38:32 <Lunar^> shapr: Magnifique HC&AR, ne trouves-tu pas ?
05:42:14 <jedi`> http://pastepad.com/?pad=b1
05:42:19 <jedi`> im getting indentation error again :\
05:43:54 <pesco> This time your indentation _is_ wrong. The else must be indented wrt. "if".
05:44:15 <shapr> Lunar^: oui, c'est ca. J'ecris en Ltu.
05:44:17 <pesco> Because otherwise it's seen as a new action in the do expression.
05:44:56 <Lunar^> shapr: It's very cool to see an active Haskell community like this
05:45:05 <shapr> I agree, I'm thrilled.
05:45:58 <shapr> Not much happening on lambda-the-ultimate.org lately.
05:46:16 <Lunar^> shapr: darcs is now 1.0, and really start to buzz
05:46:29 <shapr> yes, and DarcsWiki is getting lots of traffic.
05:46:40 <Lunar^> shapr: I'm quite happy about ICFP contest also
05:46:59 <shapr> I may have to pass the wiki on to someone else if the traffic keeps increasing this much.
05:47:13 <Lunar^> shapr: I would like to make a set of combinators for real assembly, like the winners did
05:47:32 <shapr> I haven't read their entry yet.
05:47:38 <shapr> but it sounds cool.
05:47:43 <Lunar^> shapr: Maybe it should be hosted on darcs.net :)
05:47:47 <shapr> maybe so.
05:48:01 <shapr> I'm sure Mark Stosberg wouldn't mind.
05:48:08 <Lunar^> shapr: They made some combinators to produce ant assembly
05:48:26 <Lunar^> shapr: Thus allowing them to do an EDSL ant programming language
05:48:54 <shapr> Sensible approach.
05:49:10 <shapr> Lunar^: hey, I saw a unicyclist who reminds me of you, because he has the same intensity.
05:49:18 <shapr> Yoggi in Toulouse
05:49:25 <xerox> ant assembly?
05:50:13 <Lunar^> xerox: ICFP 2004 programming contest
05:50:23 <Lunar^> shapr: Did you went to Toulouse ?
05:50:36 <Lunar^> urg... bad english...baaad
05:50:49 <xerox> ant-wars ?
05:52:43 <shapr> Lunar^: no, but the unicycle community makes their own videos. http://83.226.177.116/~shae/unifilms/ and http://83.226.177.116/~shae/unifilms/yogi.jpg
05:53:27 <Lunar^> shapr: waow, freeakin'
05:54:24 <shapr> I'm getting interested in some french music from Yoggi's film :-)
05:54:39 <Lunar^> shapr: It's cool that you've finally got an RSS feed in Plog
05:55:02 <shapr> yes, and I have en marge in my rss reader.
05:55:19 <shapr> Any comments on my blog entries so far?
05:55:33 <Lunar^> not blogging that much lately, I've been busy with some exams last weeks
05:55:40 <shapr> I think the Internal Computing idea is interesting.
05:56:20 <Lunar^> failed deeply on algorithmics, didn't know how to transcript my thought
05:56:37 <shapr> My current theory is that some systems will become simple enough and powerful enough that we won't need computers to use them.
05:56:53 <shapr> that sucks
05:58:17 <Lunar^> shapr: I've spread around your "Free software programming is the best massively multiplayer online game"
05:58:37 <Lunar^> Maybe that's why I'm nont playing :)
05:58:55 * shapr laughs
06:01:43 <shapr> Programming has a deeper system than any of the games I've seen. And I think math is deeper than programming, because it has less constraints.
06:02:08 <shapr> I wonder if writing fiction is the deepest, since you only require internal consistency then.
06:02:56 * esap thinks maths has much better internal consistency than fiction.
06:04:16 <shapr> Lunar^: you have any french musical groups you could recommend?
06:04:21 <ibid> fiction does not require internal consistency; it only requires the appearance of internal consistency :)
06:05:23 <Lunar^> shapr: Sure, but it depends on what kind of music you like
06:05:39 <shapr> Do you know Spook and the Guay? or Awkword?
06:05:45 <tuomov> so's the case maths. only the attempt at verification is a little more thorough.
06:06:11 <Lunar^> shapr: Spook and The Guay rocks :)
06:07:19 <jedi`> sorry got dc'ed before
06:07:25 <jedi`> anyone know why i am getting compiler error?
06:07:58 <Lunar^> jedi`: align then and else
06:08:10 <shapr> Lunar^: yes, I'm particularly interested in more like Spook and the Guay.
06:08:24 <ibid> tuomov: fiction is just a bag o' magician's tricks compared to maths :)
06:08:48 <shapr> Yoggi used Au Taquet in one of his films, and I want more! - http://83.226.177.116/~shae/unifilms/11_Au_TAQUET_10Mo.wmv
06:09:31 <Lemmih> jedi`: You have to use the do notation or explicit (>>) when expressing sequenced IO actions.
06:09:36 <jedi`> also
06:09:44 <jedi`>    if (guess = 34) 
06:09:44 <jedi`>       then do
06:09:44 <jedi`>          putStrLn "Good work sport!"
06:09:44 <jedi`>       else do
06:09:44 <jedi`>               putStrLn "Wrong answer - try again!"
06:09:47 <jedi`> is that correct
06:10:24 <shapr> Is this gorgeous or what? http://gallery.unicyclist.com/yoggi/100_0053
06:10:33 <Lemmih> jedi`: No. Use (==) to test for equality.
06:10:57 <jedi`> i did that
06:10:59 <jedi`> i get an error as well
06:11:13 <kristnjov> is it correctly indented?
06:11:22 <jedi`> thats what id like to know hehe
06:11:48 <tuomov> it probably isn't
06:11:57 <Lemmih> jedi`: Maybe you could post the code somewhere.
06:12:01 <tuomov> the do notation is very picky about if indentation
06:12:05 <tuomov> can't indent normally
06:12:50 <jedi`> ah ok
06:13:18 <jedi`> http://pastepad.com/?pad=b2
06:13:20 <jedi`> there it is :)
06:13:24 <kristnjov> jedi`, i don't think you need the "do" parts
06:13:26 <kristnjov> or do you?
06:13:42 <kristnjov> anyways, the line after "then do" i believe is inproperly indented
06:14:21 <Lemmih> jedi`: 'else' should be more indented than 'if'.
06:14:24 <jedi`> got it :)
06:20:58 <xerox> coerent indentation is required like in python ?
06:23:02 <Janni> Hi
06:25:29 <Lunar^> xerox: It's even more important in Haskel
06:25:40 <xerox> !
06:25:49 <Lunar^> xerox: The indentation means something in Haskell
06:26:12 <Igloo> I don't see how it's more important
06:26:23 <Igloo> Adn technically it's not required - you can use braces and semicolons if you want
06:26:24 <Lunar^> xerox: whereas in Pyhon, the ':' delimits block
06:26:29 <Janni> I have problems understanding the "type system" used by wxhaskell. It seems to simulate conventional inheritance as used by typical OO imperative languages. Let me give you an example, maybe it's s.th. common, and you can refer me to some documentation or at least give me some keyword...
06:27:24 <Lunar^> Igloo: yeah, not _more_ important
06:28:59 <Janni> type MDIParentFrame a = Frame (CMDIParentFrame a); type MDIChildFrame a = Frame (CMDIChildFrame a); data CMDIChildFrame a
06:29:12 <Janni> Does that look familiar for anyone of you?
06:29:17 <Janni> s/for/to
06:30:49 <shapr> Janni: looks like you're making a gui with subwindows.
06:31:09 <shapr> Janni: do you still play lots of soccer?
06:33:20 <Janni> Not too much :)
06:33:50 <Janni> You do have a file where you have entries like "Janni: Play's lots of soccer", don't you? :)
06:34:19 <shapr> no?
06:34:28 * shapr grins
06:34:40 <Janni> And when that person looks into the channel after years you immediately look up that file ("do I have a Janni in here, ah yes, he play's lots of soccer")
06:34:48 * shapr laughs
06:34:50 <Jan_w> haha
06:35:21 <Jan_w> Janni: and you lookup shapr and see he likes to ride a unicycle..
06:35:46 <Janni> _And_ of course likes to BOUNCE.
06:35:50 <shapr> I don't know if I had a unicycle the last time Janni spent time here.
06:36:09 <Janni> No you didn't, but I heard of it yesterday or so...
06:36:42 <shapr> mmm, http://www.scannedinavian.com/images/uni-hop.jpg
06:36:51 <Janni> But it was only _rumors_, people telling me about it. You already heard? Yes, someone told me he's riding a UNICYCLE
06:37:03 * shapr laughs
06:37:08 <Jan_w> really coolphoto
06:37:13 <Igloo> Gee, if you're gonna ride it like that you might as well have /no/ wheels
06:37:34 <Janni> :)
06:37:35 <Jan_w> Igloo: Like a pogo stick :)
06:37:40 <shapr> Well, part of the fun is hopping while moving.
06:38:09 <shapr> Some people can jump up onto cars while rolling. But I'm not that good yet.
06:38:21 <Janni> I'm sure shapr did his dream come true. Moving by bouncing
06:38:31 <Igloo> :-)
06:38:31 * shapr snickers
06:38:48 <Igloo> Is there any sort of suspecnsion other than the give of the tire?
06:38:51 <Jan_w> shapr: tigger's don't run, they bounce ? :)
06:39:40 <shapr> Igloo: Nope, but you can change the tire pressure to change the handling. Low pressure means good traction and more work to pedal. High pressure means less traction but easier going.
06:40:25 <shapr> Most people use between 18 and 25 psi in a 24"x3" tire like I have, but I use something over 30 because I'm a very heavy unicyclist.
06:40:37 <Igloo> So, so F1 unicycles would have under-seat buttons to change pressure as you approach and leave a corner?  :-)
06:40:44 <shapr> Jan_w: Tiggers run and bounce!
06:40:54 <shapr> Igloo: That's a fascinating idea.
06:40:59 * shapr thinks about that.
06:41:07 <Janni> Oh I finally found documentation about the "type system". It was hidden very well...
06:42:02 <shapr> Janni: I think I'm just lucky to know a lot of interesting people. In that case you don't need a file, you just remember stuff about people.
06:42:30 <Janni> Oh, I have to note that. Seems interesting...
06:42:48 <Jan_w> Well if you spend time on #haskell, you're bound to meet interesting people :)
06:43:13 <shapr> yes, I agree.
06:44:40 <Janni> I like being on #haskell. But the main motivation to come here is when I'm programming in Haskell, and I didn't for the last months unfortunately...
06:45:34 <Janni> But finally I'm earning money with Haskell. (Have to tell it again, til everybody knows)
06:45:39 <shapr> w00!
06:45:57 <Janni> I'm programming some kind of 3D CAD Program in Haskell, using wxhaskell and OpenGL...
06:46:03 <shapr> nifty!
06:46:22 <Igloo> Cool - who for?
06:46:33 <Janni> For my uncle in Korea, who runs a buisness, selling machines that make holograms into glass blocks.
06:46:44 <Janni> In black/white or rather white/translucent
06:46:46 <Igloo> Oh, nifty
06:47:55 <Janni> My program is to read DXF-files (already implemented), edit them (most of the work) and transform the data into some kind of scatter plot (Punktwolke ger.)
06:48:04 <Janni> (partly implemented)
06:48:13 <Janni> The best is, it will be free software
06:48:48 <Janni> It's like fairy tales come true for me.
06:50:14 <shapr> that's great!
06:50:56 <xerox> agreed!
06:53:29 <Janni> The only bad thing is, that I don't get wxhaskell run in FreeBSD with OpenGL support, so I have to program under Windows...
06:56:48 <xerox> what do you use to program under win32 environment? 'm really interested
06:56:57 <Janni> vim
06:57:13 <xerox> and ghc?
06:57:15 <Janni> yes
06:57:32 <Janni> wxhaskell can only be used with GHC AFAIK
06:57:34 <Lunar^> Janni: or Mac OS X
06:58:18 <Lunar^> Janni: WxHaskell on Mac OS X is quite slow, but the OpenGL integration works well AFAIK
07:00:04 <Janni> I don't really know why it doesn't work on FreeBSD then (Mac OS X is based on FreeBSD). I get everything compiled with OpenGL support and pure Haskell OpenGL programs (not using wxwindows) work, as well as pure wxwindows openGL programs.
07:00:32 <Janni> But when I try an openGL program using wxhaskell nothing is painted, where the GLCanvas should be
07:02:40 <BrunoLuigi> hello people
07:02:49 <BrunoLuigi> anyone knows sockets in haskell?
07:04:47 <BrunoLuigi> pleeease
07:04:52 <BrunoLuigi> I need help :(
07:05:01 <xerox> i can't help :(
07:05:20 <Janni> BrunoLuigi: Is anyone hurted?
07:05:43 <BrunoLuigi> nope
07:06:19 <BrunoLuigi> I passed 3 days trying to make sockets works
07:06:20 <Janni> OK, then I think you will find someone helping you in time...
07:06:39 <Janni> Did you try some example programs?
07:06:53 <BrunoLuigi> I didn¥t find any
07:07:11 <BrunoLuigi> do you know where I can find examples, a forum, anything?
07:08:05 <Janni> http://www.cs.chalmers.se/Cs/Grundutb/Kurser/afp/lab2-hints.html
07:08:13 <BrunoLuigi> thanks
07:08:22 <BrunoLuigi> sorry for bothering you k?
07:08:43 <Janni> It's the first thing I found with google, don't know if it's very good. But you should definitely learn to use search enginges
07:08:48 <Janni> No problem
07:19:42 <bourbaki> damn i hope that the ozone hole will grow qick im so freezing my ass off
07:21:53 <bourbaki> anyone of you ever used the latex beamer package?
09:19:03 <Asta> hello
09:19:07 <pesco> Hello
09:19:18 <Asta> hi pesco
09:19:38 <pesco> Greetings, how are you? Got any Haskell questions?
09:19:49 <Asta> not yet :)
09:19:59 <Asta> right now I'm looking at parsec
09:20:08 <Asta> I want to make a simple parser
09:20:14 <pesco> Alright. Parsec's wonderous. What are you parsing?
09:20:30 <Asta> just some terms/1st order logic formulas
09:20:44 <pesco> I see.
09:20:53 <Asta> I need to define some rules for the identifiers
09:21:16 <Asta> something like vars are lower-case, function upper case, haven't decided yet
09:21:46 <Asta> but the tricky part is that I'd rather not store the strings themselves
09:21:58 <pesco> Ah. Hm. What would you like to store instead?
09:22:06 <Asta> I want to use ints
09:22:15 <pesco> Why's that?
09:22:23 <Asta> because of efficiency issues
09:22:42 <Asta> I'm going to compare the identifiers a lot
09:22:57 <Asta> and I'd also like to use them as keys in a finite map
09:23:21 <pesco> Are you sure this is going to be an efficiency bottleneck?
09:23:50 <Asta> well sometime ago, everyone was talking about how slow lists were
09:24:07 <pesco> Remember that string comparison mostly involves only the first few characters in the string.
09:24:34 <Asta> yes you are right there...
09:24:54 <Asta> but
09:25:15 <Asta> if I used Ints, I'd make those fields strict
09:25:36 <Asta> and could probably have them unboxed (there's a flag for that)
09:25:39 <Lemmih> Premature optimizations can kill a project.
09:26:03 <pesco> The question is, do you need to avoid every theoretically extraneous CPU cycle in the given circumstances?
09:26:05 <Lemmih> Usually you shouldn't worry about it unless it becomes a real problem.
09:27:22 <Asta> well I guess I can make my datatype parameterized on the identifier type
09:27:26 <pesco> Right, clear code that is works quickly is usually better than optimizing something which isn't a bottleneck in the end at all. Unless of course, you're doing this to exercise your skills. ;)
09:27:40 <pesco> s/is/that/
09:27:42 <Asta> all I need is the identifiers to be in Ord and Show
09:27:58 <Asta> and just use Strings for now
09:28:16 <Asta> I had another motivation for using ints...
09:29:12 <Asta> It would be quite easy to generate new identifiers
09:29:34 <Asta> I'd just need to (+1) last id
09:29:52 <Asta> and then I interpret the same formula with different dictionaries
09:30:23 <Lemmih> Using 'succ' is less error prone than ((+) 1), IMO.
09:30:29 <Asta> or that :)
09:31:01 <Asta> the idea is that I would have two diferent kinds of identifiers
09:31:18 <Asta> Ints, internally
09:31:24 <Asta> wich are trivial to generate
09:31:35 <Asta> and then the Identifiers for the end user
09:31:43 <Asta> which could be generated in different ways
09:33:44 <Asta> right now I was just not sure how to parse, say,   a => (x <=> f)   as 1 => (2 <=> 3)
09:33:52 <Asta> I need to maintain a state somehow
09:34:14 <Asta> anyway, I haven't read parsecs docs yet
09:35:13 <Asta> but I guess you're right, maybe I'll stick with strings fot now...
09:35:15 <Asta> brb
09:43:02 <Asta> can't I end up with lots of unevaluated strings around?
09:43:16 <Asta> since when comparing it might never use the whole string
09:43:56 <Asta> wouldn't that be bad?
09:49:41 <pesco> Asta: Worry about this when/if it becomes a problem.
09:50:04 <Asta> pesco: ok 
10:25:44 <basti_> back
10:26:09 <Lemmih> Welcome back basti_
10:26:34 <basti_> bourbaki in the house?
10:26:43 <bourbaki> yep
10:27:10 <basti_> i could scan the paragraph about subcoalgebras from my book
10:27:29 <bourbaki> cool thatd be nice
10:27:35 <basti_> and about algebras.
10:27:42 <basti_> knock the wood that my scanner is alive.
10:28:00 <bourbaki> sure :) maybe im gonna buy that book also if its good though i have so many unread books here already ;)
10:29:21 <basti_> its working.
10:29:27 <bourbaki> woohoo
10:30:05 <basti_> scsi oldschool
10:30:17 <bourbaki> :)
10:30:20 <basti_> i-view can't scan.
10:30:23 <basti_> photoshop.
10:30:41 <basti_> even if it's cannons for sparrows =)
10:31:01 <basti_> ∞startup∞
10:31:12 <basti_> -lookatwatch- -yawn-
10:31:48 <basti_> uhm
10:31:50 <basti_> ugly.
10:32:49 <basti_> better.
10:34:19 * basti_ waits.
10:36:00 <basti_> got them.
10:36:22 <bourbaki> :)
10:37:49 <basti_> scaled, saving
10:39:41 <basti_> okay.
10:39:43 <basti_> dcc?
10:40:11 <basti_> bourbaki?
10:40:25 <bourbaki> yes sec natures calling
10:40:29 <basti_> k
10:40:41 <basti_> let her roar.
10:41:28 <bourbaki> thx
10:41:33 <basti_> =)
10:42:41 <basti_> we will have a huge blob of a pizza today.
10:43:31 <bourbaki> hmmmm pizza
10:43:42 <bourbaki> id like to have a pizza also :)
10:43:52 <bourbaki> how come youll get so much pizza today?
10:43:57 <basti_> the dough is rising but my s.o. is still phoning.
10:44:17 <bourbaki> dough?
10:44:25 <basti_> dough.
10:44:33 <basti_> the stuff under the tomato smudge.
10:44:35 <basti_> base.
10:44:43 <bourbaki> ah
10:44:53 <bourbaki> self made ppizza :)
10:44:57 <basti_> yep.
10:45:02 <basti_> we're the pizza dream team
10:45:13 <bourbaki> i got no owen
10:45:25 <basti_> 20 minutes work, 10 minutes cooking.
10:45:30 <basti_> + dough rising.
10:45:33 <basti_> thats bad.
10:45:45 <basti_> not even a microwave/bbq combination?
10:45:59 <bourbaki> not no wave as well
10:46:13 <basti_> mmh.
10:46:21 <bourbaki> i have  awater heater :)
10:46:26 <basti_> oh.
10:46:26 <basti_> =)
10:46:31 <basti_> you can make tea then.
10:46:35 <basti_> and yum yum.
10:46:36 <bourbaki> right
10:46:40 <basti_> you know yum yum?
10:46:44 <bourbaki> sure :)
10:46:54 <bourbaki> im mr ramen :)
10:46:55 <basti_> its majesty the noodle soup.
10:47:12 <basti_> and then there's japanese noodle snacks.
10:47:25 <basti_> with lots of cumin.
10:47:27 <basti_> or hot like hell.
10:47:32 <basti_> or chinese ones ooow.
10:47:33 <bourbaki> but i make my own combination of spices
10:47:39 <basti_> oh :)
10:47:51 <bourbaki> everything you can buy in shops here inst spicy
10:48:05 <basti_> not?
10:48:08 <basti_> ...
10:48:13 <tuomov> the inventor of instant noodles should be awarded a nobel peace prize or something :)
10:48:22 <bourbaki> i bought one of the spiceiest sauces on the internet and eat now like 4 drops of it per pizza slice :)
10:48:34 <basti_> lol
10:48:40 <bourbaki> tummov iq nobel prize ;)
10:49:06 <bourbaki> there is even more spicey sauces and even capsaicin crystals
10:49:12 <bourbaki> but they are too expansive
10:49:16 <basti_> insane.
10:49:20 <bourbaki> www.firegirl.com
10:49:41 <basti_> i bet the crystals etch glass or something
10:49:42 <bourbaki> i even eat habaneros on sandwiches :)
10:50:02 <bourbaki> the thing is its not a chemical burn that you experience when you eat it
10:50:06 <basti_> youre not born in thailand or something? ;)
10:50:07 <basti_> i know.
10:50:12 <basti_> its some receptor agent.
10:50:15 <bourbaki> its if at all just slightly exoterm
10:50:18 <bourbaki> yep
10:50:24 <bourbaki> a vaniloid :)
10:50:28 <basti_> ah.
10:50:38 <basti_> i heard its a ligand to heat receptors.
10:50:45 <bourbaki> nope not born in thailand just like to eat spicey
10:51:03 <bourbaki> well yes the thing is that these channels also react to heat
10:51:06 <basti_> okay.
10:51:18 <bourbaki> that is if you eat a hot slice of pizza it burns more
10:51:25 * basti_ THINKS he likes to eat hot too
10:51:34 <basti_> oh.
10:51:50 <bourbaki> but the heat is not due to the capsaisin itself maybe just because you start to heat up as a secondary effect also
10:51:51 <basti_> synergy
10:51:58 * basti_ shrugs
10:52:02 * basti_ no biologist
10:52:08 <bourbaki> me neither :)
10:52:32 <basti_> Dave's Insanity Hot Sauce (The Original)
10:52:32 <basti_> 	pad	Dave's Insanity Hot Sauce (The Original)
10:52:40 <basti_> woh
10:52:44 <bourbaki> its just that your body "thinks" that itd burn ;)
10:52:45 <basti_> sounds nice.
10:53:03 <Philippa_> oh, that stuff?
10:53:21 * basti_ will one day dare to try something like that
10:53:34 * basti_ knows tabasco well
10:53:45 <basti_> where on the scale would tabasco be?
10:53:49 <bourbaki> hehe i can drink tabasco :)
10:53:53 <bourbaki> thats like 5 on the scale
10:54:16 <basti_> mmh okay.
10:54:27 <basti_> i wouldnt say tabasco is insanely hot too but it has some spice.
10:54:49 <basti_> I've just bought a glass of peperoni that i would judge to be pretty pretty hot.
10:54:50 <bourbaki> thats the sauce i usually use
10:54:50 <bourbaki> http://www.pepperworldhotshop.de/viashop/storefront/start.asp?katalogid=5
10:55:14 <basti_> "raw heat"?
10:55:24 <basti_> which is number 5?
10:55:28 <bourbaki> heh when i try to spice pizza with tabasco its just tasteing of vinegar :)
10:55:39 <bourbaki> sec theres a table let me have a quick look
10:56:09 <basti_> btw. is the definition scan worth anything to you?
10:56:37 <bourbaki> hm i just tried to understand the notion of a coalgebra
10:56:54 <bourbaki> its a bit queer compared to the ones i knew before :)
10:57:04 <basti_> thats hp gumm live.
10:57:34 <bourbaki> :)
10:57:59 <bourbaki> hm cant find the table atm
10:58:14 <basti_> so whats the name?
10:58:41 <bourbaki> http://www.pepperworld.com/basics/brenn-o-meter.htm
10:58:53 <bourbaki> here it is :) the burn o meter ;)
10:59:28 <basti_> =)
10:59:36 <bourbaki> as i thought tabasco is 5 with about 15k on the scale :)
10:59:44 <bourbaki> oh no 2.5-5k
10:59:57 <bourbaki> and the sauce i use is 500k-1kk :)
11:00:05 <basti_> mmmh.
11:00:10 <basti_> wrong planet syndrome ;)
11:00:21 <bourbaki> ill buy one of the pizza store i usally go to 
11:00:34 <basti_> i have to visit southeast asia once...
11:00:39 <bourbaki> and maybe hell name a pizza after me ;)
11:00:49 <basti_> for or of?
11:00:55 <bourbaki> a collegue at the old ...
11:00:59 <bourbaki> of :)
11:01:22 <basti_> oh cooktime
11:01:29 <bourbaki> company i worked had a thai wife and he said that the kids there eat chillis with peanuts :)
11:01:39 <bourbaki> :) kk see you laters
11:02:22 <bourbaki> damn they rise the prices all the time :( and i need more of it :)
11:41:51 <basti_> megapizza
11:42:50 <pesco> Mmm. Soyfood.
11:42:58 <basti_> soyfood?
11:43:07 <pesco> I'm eating soy food.
11:43:10 <basti_> oh.
11:43:59 <pesco> As long as it's not soycaf and soybeer as well... ;-)
11:54:31 <bourbaki> soy food reminds me of shadowrun
11:54:37 <bourbaki> or gibson
12:10:56 <bringert> hi stepcut
12:11:19 <stepcut> hi!
12:11:32 <bringert> I have played with the haskelldb build system, hopefully the cvs version should build for you now
12:11:43 <stepcut> cool!
12:11:52 <bringert> if not, let me know
12:12:14 <bringert> also fixed a nasty optimizer bug the Lemmih found
12:12:25 <bringert> I'm surprised it hasn't shown up before
12:12:33 <stepcut> I am reading the book 'Database system implementation' and I think it is about to tell me how to programmatically rewrite sub-selects into joins, when possible...
12:12:41 <stepcut> which optimizer bug is that ?
12:14:38 <bringert> it was posted to the haskelldb-users list recently, restrictions would were pushed into the wrong branch of binary ops
12:14:45 <stepcut> eek
12:15:01 <bringert> code said: | noneIn2   = Binary op (pushRestrict (Restrict x query2)) query1
12:15:13 <stepcut> heh
12:15:15 <bringert> but it should have been: | noneIn2   = Binary op (pushRestrict (Restrict x query1)) query2
12:16:00 <stepcut> any ideas on dealing with that problem I found when joining two tables that have identical column names ?
12:17:14 <bringert> no, unfortunately
12:17:31 <bringert> it's a pain
12:17:34 <stepcut> yeah
12:18:04 <bringert> anyway, time for south park and booze
12:18:27 <stepcut> I am hoping the book I am reading will have enough information so that I can write a better optimizer
12:18:52 <stepcut> It has a bunch of information about practical relational algebra and optimizations
12:19:25 <stepcut> for example, it extends relational algebra to deal with bags instead of sets, and to handle more standard SQL operators
12:19:52 <stepcut> I am hoping to write a stand-alone proof-of-concept RA -> SQL generator, and if that works out well, fold it into haskelldb
12:30:42 <dash> Hmm
12:30:59 <dash> what is the difference between the ST and the StateT monad
13:19:25 <Philippa_> dash: ST does state via references, StateT is a monad transformer that provides one 'chunk' of state
13:26:54 <bourbaki> why cant i download the haskell logo to my handy?
13:27:18 <Igloo> Can anyone tell me the ocaml for "main = print foo" please?
13:28:52 <bourbaki> Igloo why dont you ask in ocaml?
13:29:14 <WebGuest> bourbaki: hi, have you seen beoleg?
13:29:34 <bourbaki> WebGuest whats a beoleg?
13:30:33 <TheHunter> @seen Boegel
13:30:33 <lambdabot> I saw Boegel leaving #Haskell 8 hours 17 minutes 41 seconds ago.
13:30:46 <bourbaki> moin thebug
13:30:49 <bourbaki> er TheHunter
13:31:00 <TheHunter> moin
13:31:23 <WebGuest> bourbaki: you've been talking with boegel, right?
13:31:31 <bourbaki> WebGuest yes
13:31:56 <WebGuest> bourbaki: has he gotten a plasma sphere yet?
13:32:20 <bourbaki> not that i know of why?
13:32:41 <WebGuest> did he mention some wolfgang dude?
13:33:31 <bourbaki> nope wolfgang who?
13:33:34 <bourbaki> heidrich?
13:34:03 <WebGuest> wolfgang8k or something
13:34:30 <bourbaki> the only wolfgang i know is wolfgang heidrich hes done some lighting stuff and such
13:34:40 <bourbaki> RT on gfx boards
13:34:53 <WebGuest> maybe it was wolfman8k
13:35:12 <bourbaki> never heared of that man or woman
13:35:33 <WebGuest> what do you think the odds are of that being a woman?
13:35:43 <bourbaki> you never know
13:36:00 <WebGuest> i know
13:36:40 <bourbaki> and?:)
13:36:42 <WebGuest> @seen Cale
13:36:42 <lambdabot> I saw Cale leaving #haskell 4 days 7 hours 51 minutes 46 seconds ago.
13:48:44 <desrt> @shapr
13:48:44 <lambdabot> Sorry, I don't know the command "shapr", try "lambdabot: @listcommands"
13:48:49 <desrt> wow
13:54:42 <stepcut> lambdabot forgot some stuff :(
13:54:45 <stepcut> @stepcut
13:54:46 <lambdabot> Sorry, I don't know the command "stepcut", try "lambdabot: @listcommands
13:54:47 <stepcut> :(
14:04:43 <dash> Hmmmm 
14:04:55 <dash> are there no adjustable-size arrays in haskell
14:05:08 <dash> DiffArray looks awesome except for being fixed-size
14:13:42 <Boegel> hello everyone !
14:13:53 <bourbaki> hi
14:13:59 <WebGuest> boegel: hey!
14:14:02 <Boegel> bourbaki, sorry I couldn't show you my plasma image
14:14:10 <Boegel> I haven't been able to get online all day
14:14:13 <bourbaki> np
14:14:18 <Boegel> my ISP had some problems with their network
14:14:22 <WebGuest> boegel: how goes your raytracer?
14:15:26 <Boegel> WebGuest, check my website: http://studwww.ugent.be/~kehoste
14:15:45 <WebGuest> boegel, it's me, wolfman8k. i'm on vacation
14:16:30 <WebGuest> SHIT DUDE!
14:16:31 <WebGuest> GOTTA GO
14:16:47 <WebGuest> bbl man
14:16:59 <Boegel> what the hell :)
14:17:19 <Boegel> bourbaki: http://studwww.ugent.be/~kehoste/thesisPublic/perlin/perlinPlasma.png
14:17:35 <bourbaki> Boegel :) nice
14:17:51 <Boegel> idd
14:17:59 <Boegel> I like it very mutch :)
14:18:03 <Boegel> thanks for the hint :)
14:18:12 <bourbaki> your collegues project looks interesting also
14:18:33 <Boegel> I haven't been able to solve the few problems I still have with perlin noise, but i hope I will be able to do that tomorrow
14:18:35 <Boegel> bourbaki, idd
14:18:53 <bourbaki> whats the prob?
14:18:56 <Boegel> I have invited him to ask questions here, but he won't for some reason
14:19:14 <Boegel> bourbaki, http://studwww.ugent.be/~kehoste/thesisPublic/perlin/perlinNoLight.png
14:19:21 <Boegel> there are some weird pixels in this image
14:19:28 <Boegel> and some other (efficiency) stuff
14:19:45 <bourbaki> cant see anything strange there
14:21:50 <dash> Also, how do i create an empty array
14:23:03 <Boegel> bourbaki, there are some bright red pixels in the darker bits
14:23:28 <Boegel> anyway, I have to go
14:23:39 <Boegel> join my girlfriend in bed to get some sleep :)
14:23:44 <Boegel> goodnight everyone !
14:23:49 <bourbaki> sleep?
14:24:12 <Boegel> bourbaki, yeah, sleep :p
14:24:14 <Boegel> bye !
14:24:18 <bourbaki> i think i know why 
14:24:25 <bourbaki> the pixels are there
14:24:29 <Boegel> tell me, quick :)
14:24:36 <bourbaki> but im not gonna tell you :)
14:24:40 <bourbaki> until tomorroe
14:24:40 <Boegel> :o
14:24:42 <bourbaki> -e+w
14:24:50 <Boegel> okay then, I'll hold :p
14:24:52 <bourbaki> ;)
14:24:55 <Boegel> c u !
14:24:56 <bourbaki> nighto
14:25:23 <goron> @seen shapr
14:25:23 <lambdabot> shapr is in #haskell.se and #haskell.
14:25:42 <goron> shapr: tja
14:42:03 <br1> I'm doing:
14:42:10 <br1>  when (n > 0) $ do print 9
14:42:22 <br1> How can I save the ugly $ ?
14:43:34 <Igloo> when (n > 0) (do print 9)
14:43:45 <Igloo> You don't need the do there if that's all you have
14:43:49 <br1> but if it's also a do block?
14:44:03 <Igloo> Put the ) at the end of it
14:44:44 <norpan> you don't need the "do" if you just have one monadic statement
14:44:44 <br1> but that's worst than the $.  Is the $ usually put?
14:45:04 <br1> I know.  The example was bad:
14:45:09 <Igloo> It was you claiming it's ugly, not me  :-)
14:45:16 <Igloo> I'd use a $ even with only one statement
14:45:19 <br1> alternar n a b = when (n > 0) $ do
14:45:19 <br1>                             let (c, a') = runActor a 0
14:45:19 <br1>                             print c
14:45:19 <br1>                             alternar (n-1) b a'
14:45:19 <norpan> just put ( and ) around the whole block instead of $ if you dislike it
14:46:20 <br1> I don't dislike the $ more than the (), but I suspected there was a way to do it without both.
14:47:41 <br1> It seems not. :D  Thanks.
14:47:57 <Asta> br1: while (n>0) do foo where foo = do ...
14:48:14 <Asta> forget the 1st do
14:48:48 <Asta> not claiming it's better, but has no $ nor () 
14:49:37 <br1> It's not better, but it's clever. :)
14:52:26 <br1> You can also do (n > 0) `when` do, but it doesn't read right.  I'll just keep the $.
15:52:59 --- topic: '["The Nov 2004 HC&A Report is released! - http://haskell.org/communities/","Learning Haskell - http://www.haskell.org/learning.html","We put the Funk in Funktion","See logs @ http://tunes.org/~nef/logs/haskell/","related channels #haskell.se #haskelldb #darcs","http://www.haskell.org/cabal/","Haskell is the language of choice for discriminating hackers! - http://www.cis.upenn.edu/proj/plclub/contest/results.php#first"]'
15:52:59 --- topic: set by ksbot on [Wed Nov 10 14:16:59 2004]
16:00:03 <marcot> Where can I get doc about the socket development in haskell?
16:01:53 <dons> http://www.haskell.org/ghc/docs/latest/html/libraries/network/Network.Socket.html
16:03:41 <marcot> dons: thanks man!
16:04:55 <dons> hi marcot :)
17:33:55 <marcot_> Can I declare the type of a constructor?
17:36:34 <Igloo> Yo do as part of the data declaration
17:36:51 <Igloo> data Foo = Bar Int   means   Bar :: Int -> Foo
17:37:35 <marcot> Igloo: thank you.
17:40:54 <marcot> Igloo: can I write this in the code?
17:41:01 <marcot> Igloo: data Shape a = Circle a
17:41:13 <marcot> Circle :: a -> Shape a
17:41:17 <marcot> ?
17:41:22 <Igloo> No
17:41:31 <marcot> Igloo: Why?
17:41:43 <Igloo> There'd be no point
17:46:22 <marcot> Igloo: ok, thank you.
18:15:11 <shapr> oy
18:15:57 <Igloo> Hey hey
18:17:16 <shapr> too much laphroaig
18:17:36 <Igloo> Say what now?
18:18:50 <shapr> irish whiskey
18:19:16 <Igloo> Ah
18:20:33 <shapr> I have on a very nice suit, and my hair is in pigtails =)
18:20:51 * Igloo sends the Debian buildds good vibes
18:21:00 <Igloo> Err, OK  :-)
18:44:08 <dons> just added an input-reading thread to yi. feels very zippy now
18:44:18 <dons> next is to try a ui-drawing thread
18:44:35 <dons> (shapr will be happy about all this, I think)
19:43:46 <mayhem> hi peoples
19:43:50 <Lemmih> Hey mayhem
19:43:57 <mayhem> can someone explain me in short and precise terms what is a linear continuation ?
19:44:04 <mayhem> i grabbed some papers about it but all fails to explain it in 1 sentance
19:46:27 <dion123> hello .. I am getting Undefined variable "fromInt", although fromInt exists in Prelude. Any answers?
19:47:00 <pesco> @index fromInt
19:47:00 <lambdabot> bzzt
19:47:06 <Lemmih> There's no 'fromInt' in the Prelude.
19:47:07 <pesco> @index fromIntegral
19:47:08 <lambdabot> GHC.Real,Prelude
19:49:53 <dion123> then y when u type "fromInt (some Int) (operator) Float" on the shell gives an answer but when u include it inside a file it gives u the previous error? :/
19:50:08 <heatsink> the shell?
19:50:22 <heatsink> which interactive interpreter?
19:50:28 <dion123> yes
19:50:36 <dion123> hugs
19:51:40 <heatsink> strange, there is a "fromDouble" but no "fromFloat"
19:51:53 <heatsink> dion123: use fromIntegral; it's more portable
19:52:14 <pesco> maybe fromInt is a Hugs primitive that's wrongly exposed?
19:52:30 <Lemmih> dion123: 'fromInt' is deprecated.
19:52:52 <pesco> Ah, oh. There we go.
19:52:56 <dion123> Lemmih, hmmm meaning?
19:53:23 <pesco> Don't use it. It's pointless in the presence of fromIntegral anyhow.
19:53:32 <Lemmih> dion123: It has been replaced by 'fromIntegral' but it still kept around for some reason.
19:55:14 <dion123> Lemmih, pesco, heatsink thanks for your time
19:55:31 <Lemmih> No problem.
20:56:59 * stepcut reads about halipeto again
21:29:18 <Etaoin> I shouldn't worry about leaving cyclic-referring structures should I? the garbage collector is smart enough.
21:34:25 <heatsink> right
21:35:17 <Etaoin> I fear I am forever scarred by python's reference counting scheme
21:37:58 <stepcut> haha
21:59:39 <heatsink> python has cyclic gc too
22:00:02 <heatsink> but personally, I try not to rely on it
22:03:11 <Etaoin> it does now, but I learned it when it didn't have cyclic gc.
22:29:38 <Lunar^> damn!
22:29:51 <Lunar^> http://www.osnews.com/story.php?news_id=8862
22:51:04 <stepcut> Lunar^: you're famous now :)
22:51:12 <Lunar^> stepcut: damn
22:51:35 <Lunar^> stepcut: I had to write an update to fill the 6 months blank in the dev lOg
22:52:16 <stepcut> haha
22:52:21 <Lunar^> I don't feel very well about hOp being mentioned now. Especially that the article doesn't say anything about House
22:52:27 <stepcut> heh
22:53:03 <Lunar^> anyway
22:54:15 * stepcut goes off to bed
22:54:19 <Lunar^> same :)
23:22:27 <dash> is it bad if i enjoy writing point-free functions
23:23:15 <Lemmih> I wouldn't say so.
23:23:30 <dons> it's bad if you enjoy writing C functions
23:25:10 <dash> this is my latest: extendStore = curry ((gets store >>= (//)) . uncurry zip)
23:25:45 <dash> i am unhappy with having to call curry/uncurry though.
23:26:43 <desrt> is there a monad . operator?
23:27:00 <desrt> wait.  dumb question :)
23:27:36 <desrt> what i really meant is: is there an operator that lets you wrap a monad function in a non-monad function
23:27:46 <dash> desrt: hmm
23:27:50 <dash> there's liftM
23:27:55 <desrt> for example something that would let me say a <- read `mdot` getLine
23:27:56 <dash> but maybe that is the reverse?
23:28:50 <dons> not sure if it helps, but I often use: return . f =<< inputFun
23:29:06 <desrt> mdot a b = b >>= (return . a)
23:29:14 <desrt> ya...
23:29:26 <desrt> basically what i want, ya
23:30:01 <dons> the main loop of yi: sequence_ . fn =<< getChanContents ch
23:30:17 <desrt> dunno yi
23:30:32 <dons> http://www.cse.unsw.edu.au/~dons/yi.html
23:30:35 <dons> send me patches!
23:30:41 <desrt> heh
23:30:43 <desrt> oh
23:30:46 <desrt> is this hemacs?
23:31:13 <dons> what use to be hemacs, until we realised that it infringed on Hebrew Emacs
23:31:27 <dons> also, too many people thought it was some emacs elisp code
23:31:28 <Etaoin> desrt: isn't mdot the same as liftM?
23:31:38 <desrt> what happened to U+1D123 or whatever it was?
23:31:53 <dons> check the logo ;)
23:31:59 <desrt> oh
23:32:02 <desrt> that's what it looks like?
23:32:08 <dons> actually, that's the 'yi' character
23:32:14 <desrt> it was never in my font :)
23:33:23 <desrt> Etaoin; liftM is correct
23:33:31 <desrt> thanks :)
23:34:10 <desrt> it deserves a nice operator
23:34:11 <desrt> like ..
23:34:43 <desrt> or ... i suppose
23:37:27 <dash> >>.
23:37:48 <desrt> more like <<.
23:37:56 <desrt> since it goes in that direction
23:37:57 <dash> well yeah
23:38:10 <dash> hmm
23:38:12 <desrt> <.< maybe
23:38:18 <dash> >_<
23:38:18 <desrt> a dot inside a bind :)
23:38:20 <dons> i'd like <.< but maybe that is taken (?)
23:39:19 <desrt> ghc-asm: don't know how to mangle assembly language for: powerpc64-unknown-linux
23:39:21 <desrt> heh.  it starts :)
23:39:47 <dons> cool.
23:39:55 <dons> now, regex hacking!
23:40:06 <desrt> i made the mistake of doing the splitter before the mangler
23:40:13 <dons> crazy stuff
23:40:19 <dons> mangler's probably not too hard
23:40:27 <desrt> then i realised that ghc has some hard-wired logic that says the splitter runs after the mangler (ie: if the mangler doesn't run, the splitter doesn't run)
23:40:37 <dons> oh, didn't know that
23:40:37 <desrt> so now i have to write a mangler.  ugh
23:41:08 <desrt> ya.. if you toss GhcUnregisterised=yes in build.mk then it doesn't run any perl
23:41:45 <desrt> i hope wolfgang isn't already working on the mangler
23:41:50 <dons> no no. just add some cases to the mangler.
23:42:06 * desrt plans on adding a stub :)
23:43:05 <desrt> this actually doesn't look too difficult
23:53:00 <desrt> ugh.  ok.  way difficult :P
