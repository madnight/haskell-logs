00:28:31 <earthy> 3:34 < KH> ah, ik zag jit in de logs van http://www.camp-wireless.org/ ;))
00:28:57 <shapr> oh YEAH?
01:18:22 <Lemmih> D'oh!
01:27:29 <earthy> sigh
01:27:44 * earthy hates copy-pastes that go haywire
01:27:51 <earthy> I was wondering were that had ended up
01:33:36 <shapr> hiya bringert 
01:35:18 <bringert> hi shapr
01:36:11 <shapr> wassup?
01:38:03 <bringert> just got back to work after a lazy weekend
01:38:10 <bringert> and you?
01:38:18 <shapr> the same
01:38:28 <shapr> trying to get the week started 
02:03:03 <Gowilla> hmm. Mornings, evil things.
02:14:03 <Lemmih> Hey Marvin--
02:14:32 <Marvin--> g'day
02:16:21 <bourbaki> hi
02:16:41 <shapr> y0
02:30:36 <shapr> foo!
02:30:51 <bourbaki> bar
02:31:34 <shapr> I'd rather be writing Haskell code instead of debugging this multilingual catalog.
02:32:13 <Lemmih> Write some Haskell code to debug the catalog, maybe?
02:32:33 * shapr thinks about that
02:32:42 <shapr> would be difficult, since the catalog is in Python
02:33:57 <shapr> would be motivating though :-)
02:40:05 * bringert is writing C
02:43:41 <earthy> what, calligraphing the letter?
02:43:51 <bringert> :)
02:43:53 <bringert> I wish
02:44:20 <earthy> ;)
02:49:18 <shapr> hi paolino, looking for Haskell info?
02:50:18 <shapr> hey asmodai, written any Haskell code lately?
02:50:37 <asmodai> shapr: No man.
02:50:45 <asmodai> shapr: Too busy on my compiler and toolchain stuff.
02:51:36 <earthy> :)
02:51:58 <shapr> Igloo: hey, did you say the new ghc-cvs is in incoming?
03:32:32 <shapr> I'm not sure if this is a kernel bug or not, but doing ATAPI DMA reads from two CDROM drives at the same time on the same IDE interface causes me lots of irq timeouts
03:37:59 <Spark> is there a correct ide chipset out there? :)
03:38:16 <Marvin--> no, PC hardware sucks
03:38:48 * Marvin-- idly wonders why the kernel felt it necessary to load the ac_adapter and battery acpi modules on this desktop computer
03:39:32 <shapr> lelpsicologo: scary!
03:39:43 <lelpsicologo> yep!
03:41:33 <Spark> ive never used the kernel module loader
03:42:20 <lelpsicologo> shapr: so you digest italian! :-)
03:43:56 <Marvin--> Spark: eh? you compile everything builtin or what?
03:45:14 <shapr> lelit: just a little bit.
03:53:54 <Spark> nah i insert hte modules myself
03:57:43 <Marvin--> oh
03:57:49 <Marvin--> I use hotplug and discover to do it for me :)
03:59:44 <Spark> i always found that acting up for me
03:59:50 <Spark> it would stop loading my sound modules and stuff
03:59:58 <Spark> so i just stick everything i want in /etc/modules :)
04:07:28 * shapr bounces
04:08:05 <Igloo> shapr: It'll be in the archive by now
04:10:13 * shapr cheers and installs
04:13:16 * Marvin-- swears at the ungodly amount of junk in his room
04:13:36 <Spark> its ok to be ungodly once in a while :)
04:13:47 <Spark> you have to appreciate mortality to govern it
04:14:02 <Marvin--> it never ceases to amaze me how much crap I never get around to throw out
04:15:07 <Marvin--> feh, note to self, before running aptitude update on the laptop, it's a good idea to give it some kind of network access
04:15:59 <shapr> hoi arjanb 
04:17:48 <arjanb> goedemorgen shapr
04:17:54 <shapr> wassup?
04:22:25 * shapr bounces cheerfully
05:31:43 <shapr> @seen JaffaCake
05:31:44 <lambdabot> I saw JaffaCake leaving #haskell 6 days 23 hours 11 minutes 23 seconds ago
05:42:54 <Marvin--> woot, bubble wrap
05:50:47 <SyntaxNinja> y0y0
05:50:59 <shapr> greetz SyntaxNinja 
05:51:31 <SyntaxNinja> hohum... I think I almost pushed your changes to the repo, but I got interrupted, then I forgot. but I promise I will!
05:52:40 <bour> is there any paper written in 1337? :)
05:58:57 <Marvin--> hey syntax
05:59:45 <Marvin--> SyntaxNinja: you're right, of course, that we should create ~/.ghc-packages in register too (and in any other command that uses it, too), feel free to fix ;-)
06:00:31 <SyntaxNinja> will do.
06:04:07 <Marvin--> I was thinking about cvs.h.o access, why would I need an account? Can't we set up an apply-if-trusted-gpg-signature thingy like the darcs manual talks about?
06:04:26 <SyntaxNinja> hm.
06:04:33 <SyntaxNinja> haven't looked at that. what kind of server does it use?
06:04:37 <Marvin--> procmail ;)
06:05:32 <Marvin--> the neat thing is that darcs would automatically apply signed patch bundles from trusted people (i.e. if the key is in a certain keyring) and forward unsigned or untrusted patch bundles to the repo admin, i.e. you
06:05:40 <Marvin--> at least that's the way I understood it
06:05:56 <SyntaxNinja> sounds pretty cool.
06:06:15 <SyntaxNinja> I'll look into that. though I dont' know if there's a mail server on c.h.o
06:06:27 <SyntaxNinja> sounds like it might be harder to maintain than an account ;) 
06:07:06 <Marvin--> hrm, good point
06:10:28 <Igloo> That's what I do, with http://urchin.earth.li/~ian/darcs.minstrel if it's any help
06:13:33 <Marvin--> o.O what on earth is "named field punning"?
06:14:34 <bringert> using the same name for fields in different data constructors, I believe
06:15:05 <Marvin--> no, that's allowed... "named field punning" apparently existed in H1.4 but was removed in H98
06:15:17 <shapr> SyntaxNinja: it's pretty easy to admin actually
06:15:18 <Marvin--> or do you mean same name, different types?
06:16:08 <bringert> I was thinking of different types, but now I'm not sure :)
06:16:44 <shapr> what the heck is "generalised algebraic data types" ?
06:17:08 <bringert> more general algebraic data types :)
06:17:10 <SyntaxNinja> shapr: OK.
06:17:12 <shapr> :-P
06:17:44 <Marvin--> I'm trying to find it in the H1.4 report, but I don't know what I'm looking for, so it's kinda hard
06:17:48 <Igloo> I imagine it would have the same result type but different input types
06:18:09 <Igloo> So effectively it puts all the types that have that name into a class
06:18:26 <shapr> ooh, - threaded RTS: I/O multiplexing simplification & speedup
06:18:32 <earthy> lookup http://www.haskell.org/definition/from12to13.html and then search for pun
06:18:40 <Igloo> But I can't remember the real answer
06:18:46 <earthy> the example is pretty clear
06:19:24 <Marvin--> earthy: yes, I just found it
06:19:46 <Marvin--> looks pretty nifty, any idea why it was removed? Was it deemed too confusing?
06:20:09 <Marvin--> I've always been annoyed by having to say Foo{bar=bar, feh=feh, urgh=urgh}
06:21:09 <SyntaxNinja> someone was talking about packaging WASH  a week or two ago. did anything ever come of that?
06:22:25 <Marvin--> dunno
06:25:32 * Igloo ooos at g-h-u
06:25:47 <Marvin--> heh
06:25:53 <Igloo> Looks like my life might be about to get fun again  :-)
06:26:06 * Marvin-- boggles at the immaturity levels on d-d
06:26:19 <SyntaxNinja> Marvin--: #d-d or d-d@?
06:26:24 <SyntaxNinja> or both?!
06:26:26 <Igloo> Part of me worries that ij really is that stupid
06:26:39 <SyntaxNinja> man. whenever people say "ij" I tihnk they're talking about me.
06:26:41 <Marvin--> SyntaxNinja: mainly d-d@ :)
06:26:54 <Marvin--> not in this case, you're not that stupid ;)
06:27:04 <SyntaxNinja> cool. thanks.
06:27:10 <Igloo> I can only hope he's deliberately missing the points
06:27:26 <Marvin--> I really really don't get it
06:27:48 <Marvin--> "This isn't Debian so I won't make this free software, just because I can, nyah."
06:28:19 <Marvin--> here I thought we were doing Debian because we like free software, not the other way around
06:28:29 <SyntaxNinja> so did Peter T. have any particular reason he distributes all of WASH in separate tarballs? shapr?
06:29:04 <shapr> eh?
06:29:17 <shapr> oh, I think so he can update the bits separately
06:29:23 <Marvin--> "completely new back-end (post-STG) based on a C-- intermediate language, including a largely rewritten native code generator."  whoa!
06:29:35 <Marvin--> niftiness
06:29:44 <shapr> yes!
06:29:58 <Igloo> Oh, I've just realised, that probably means I'll have to package c-- too
06:30:32 <shapr> -f-via-c-- ?
06:32:08 <shapr> SyntaxNinja: some of the WASH bits aren't web related at all, like the email parsing libs
06:32:22 <SyntaxNinja> yeah
06:32:33 <SyntaxNinja> I don't think I would want to maintain them as separate packages
06:32:54 <Igloo> Should they be separate library packages? Or are they very WASH specific?
06:32:58 <Igloo> And if the latter, could that be fixed?
06:33:12 <shapr> probably, no, and yes?
06:33:55 <Igloo> You're not allowed to answer the third question if the precondition doesn't hold  :-)
06:33:56 <SyntaxNinja> my instinct would be to package them together and see if anyone complains
06:34:30 <shapr> I doubt anyone would complain, at least not in the first six months.
06:34:35 <shapr> except maybe ibid  :-)
06:34:40 <Marvin--> don't forget that with cabal dependency management, splitting them up in separate packages might be a lot simpler than it would be today
06:35:03 <bringert> wash is quite large, so a possible complaint might be the installed size
06:35:12 <Igloo> Unless the reason is you're waiting for cabal to make it easier, I'd complain (on principle rather than because I actually have a use for the libraries now)
06:35:14 <SyntaxNinja> Marvin--: yeah. maybe once cabal comes out we can package them separately
06:35:26 <Igloo> Ah, OK
06:35:31 <bringert> then again, who uses wash in embedded systems or anything where size matters?
06:36:01 <Igloo> It matters if someone wants to write something that uses the e-mail parser but doesn't want to have to drag the whole of WASH in
06:36:01 <SyntaxNinja> I'm doing this on work time, so I can't use my normal excuse of the cabal precondition :)
06:36:05 <Marvin--> whining about installed size is, for the most part, silly these days
06:36:23 <Marvin--> (exceptions are of course embedded systems, and things like d-i that has to fit on "#&%!# floppies)
06:36:29 <SyntaxNinja> Igloo: yeah, but then let's let them complain about it, then maybe I'll split out the things that need to be split out?
06:37:24 <SyntaxNinja> one reason to split up the packages would be if they build-depend on each-other
06:37:28 <Igloo> I'd follow PT's splitting unless you think it's wrong. But I also wouldn't spend time on it if it will be wasted when cabal exists
06:37:44 <SyntaxNinja> ie if package A has to be registered before package B can be built
06:37:57 <SyntaxNinja> or cause evil makefile hell
06:38:04 <Igloo> (and if you think it's wrong, see if he will agree)
06:38:20 <earthy> schweet code: http://groups.google.com/groups?q=SEPARATEDBY&hl=en&lr=&ie=UTF-8&selm=ccmdf8%24as5%241%40oyez.ccc.nottingham.ac.uk&rnum=3
06:39:23 <SyntaxNinja> but that's like... 5 different packages
06:41:06 <Igloo> $ apt-cache search lib perl | grep "lib.*perl" | wc -l
06:41:06 <Igloo>     741
06:42:37 <Igloo> And indeed libemail-valid-perl is one such  :-)
06:42:59 <Marvin--> that'll get you obsolete versions too, won't it?
06:43:00 <Igloo> As is libemail-find-perl for that matter
06:43:10 <Marvin--> $ grep-available -P -e lib.*perl -c
06:43:10 <Marvin--> 524
06:44:15 <Igloo> apt-cache search lib perl | grep "lib.*perl" | sed "s/ .*//" | sort | uniq | wc -l    is also 741. It will be including stable, testing and unstable though
06:44:25 <Marvin--> heh
06:44:26 <Igloo> Anyway, lots  :-)
06:45:02 <Igloo> (including as in names from, not reporting each one 3 times or anything, due to the uniq)
06:45:03 <Marvin--> yes, lots, what was your point?
06:45:18 <Marvin--> that we've got some catching up to do?
06:45:20 <Igloo> That "< SyntaxNinja> but that's like... 5 different packages" isn't an issue
06:45:28 <Marvin--> heh
06:45:55 <shapr> http://research.microsoft.com/Users/simonpj/papers/gadt/index.htm
06:46:13 <Marvin--> *wobbly* types
06:49:03 <SyntaxNinja> isn't an issue for you, maybe, but I"m lazy. I think I'll make it 5 different packages, t,hough, since my boss is telling me I can take the time to do so.
06:52:22 <shapr> hey! I think wobbly types can fix the CGIArrow problem!
06:52:38 <Marvin--> GADTs look pretty nifty
06:53:29 <Igloo> Hmm, if we do get lots of libraries it might be worth thining of some autobuilding magic for GHC releases
06:53:49 <edwinb> "Wobbly types" is a great name.
06:53:51 * edwinb downloads
06:54:53 <shapr> edwinb: it's right down your alley as well
06:55:00 <shapr> it takes from the dependent types world
06:55:22 <Marvin--> Igloo: is there any GADT stuff in that ghc-cvs package of yours?
06:55:37 <Igloo> Dunno, you tell me  :-)
06:55:44 <shapr> yah, the debs are up, grab 'em
06:55:44 <Igloo> It's whatever was in CVS when I made it
06:56:21 <Marvin--> well I've installed it, but it won't swallow my code, so I'm installing ghc-cvs-doc to see if there's any flags other than -fglasgow-exts that I need
06:56:22 <Igloo> If it's there but I didn't enable it then let me know
06:56:40 <Igloo> The flag ought to be in the manpage I'd have thought
06:56:48 <Marvin--> oh, good point
06:57:10 <Igloo> Can't see one
06:57:28 <Marvin--> neither can I
06:57:44 <Marvin--> well, Simon did say that it was still in development
06:57:48 <Igloo> I also don't remember seeing a commit message about it
06:57:48 <Marvin--> so maybe it's on some branch somewhere
06:57:48 <shapr> yup
06:58:01 <Marvin--> pity, I wanted to play with it :-)
06:58:08 <edwinb> shapr: Just had a quick look. They look pretty nifty...
07:25:07 <Marvin--> huh, wonder where ftp.no.d.o went
07:26:39 <Marvin--> or indeed, ftp.d.o
07:28:28 <Igloo> ftp.uk.debian.org exists
07:32:07 <Marvin--> hrm, must be something with my routing or name server or something
07:32:58 <Igloo> No, f.d.o didn't work for me either
07:33:03 <Igloo> (or at least oneof them didn't)
07:34:33 <Marvin--> well I can't find ftp.uk.d.o either
07:35:39 <Igloo> Oh, OK  :-)
07:36:05 <Marvin--> I can't reach ftp.d.o, ftp.se.d.o, ftp.no.d.o, ftk.uk.d.o...
07:42:29 <Marvin--> I can ping my name servers, though... wonder what on earth is wrong
07:43:02 <neologism> .o is not a TLD
07:43:21 <Marvin--> neologism: .d.o is an abbreviation of .debian.org :)
07:43:37 <neologism> oh ;)
07:43:43 <neologism> that might explain a lot ;)
07:43:52 <neologism> btw: traceroute might shot
07:43:53 <neologism> show
07:43:57 <Marvin--> $ host www.debian.org
07:43:57 <Marvin--> ;; reply from unexpected source: 193.11.224.21#53, expected 193.11.224.20#53
07:43:57 <Marvin--> ;; Warning: ID mismatch: expected ID 6233, got 5930
07:43:57 <Marvin--> ;; connection timed out; no servers could be reached
07:43:59 * Marvin-- boggles
07:44:35 <Igloo> Broken DNS server cluster?
07:44:49 <Marvin--> seems like it
07:45:18 <Igloo> ftp.no.debian.org = 158.36.2.10    ftp.uk.debian.org has address 195.224.53.39   if you actually want to get things done, anyway  :-)
07:45:50 <Marvin--> nah, I'm not really in a hurry
07:45:54 <Marvin--> I wonder where the breakage is, though
07:46:02 <Marvin--> it seems to resolve .se and .com just fine
07:55:27 <Gowilla> when will ICFP registration open?
10:18:31 <shapr> yow!
10:18:47 <shapr> unicycling is so much fun...
10:19:29 <Marvin--> I seem to recall hearing you say that once or twice before, yes :-)
10:19:41 <Cale> @yow
10:19:42 <lambdabot> Here I am at the flea market but nobody is buying
10:19:42 <lambdabot>  my urine sample bottles..
10:19:53 <nainef> lol
10:20:24 <shapr> I just got back from an hour of unicycling around the nearby school parking lot, trying to learn how to jump up onto curbs. I can't get more than a handspan off the ground so far.
10:21:09 <shapr> hiya nainef, how's code?
10:21:50 <nainef> hey
10:22:03 <nainef> code is... is... code
10:22:07 <nainef> heh
10:22:12 <shapr> written anything nifty lately?
10:22:43 <nainef> um, well I just finished the OS I was writing in HASKELL :)
10:22:49 <nainef> j/k
10:22:51 <nainef> heh
10:22:52 <shapr> awww
10:22:55 <nainef> lol
10:23:09 <Marvin--> looked at hOp, have you?
10:23:14 <shapr> yah, I was wondering that
10:23:21 <nainef> no I'm just attemping to learning too many things at once
10:23:28 <shapr> Lunar^: how to make hOp hardware independent?
10:23:50 <Marvin--> yes! software should be independent of hardware, that would solve sooo many of my problems :/
10:24:00 <shapr> I really like Frank Atanassow's haircut.
10:26:50 <SyntaxNinja> so should the wash libraries go right into /usr/lib?
10:27:55 <Igloo> The GHC ones should either go into /usr/lib/ghc-6.2.1/ or /usr/lib/packagename/
10:28:39 <Igloo> Are filename collisions going to happen if there is a libhaskell-foo2 and libhaskell-foo3 package? (2, 3 are major library versions)
10:28:49 <Igloo> dpkg -L nhc98
10:28:50 <Igloo> Bah
10:29:02 <shapr> humbug!
10:29:19 * stepcut reads about GADT
10:29:38 <stepcut> not to be confused with the j-pop band, GACKT
10:29:52 <Marvin--> gack
10:30:06 <Igloo> I think packagename is nicer on balance myself, anyway. And possibly even mandated by policy
10:30:41 <Marvin--> but then you can't have installations for multiple ghc versions at the same time...
10:30:51 <Marvin--> unless you do /usr/lib/packagename/ghc6.2.1/ of course
10:31:04 <stepcut> SyntaxNinja: are you attempting to cabalize wash ?
10:31:08 <Igloo> packagename is libhaskell-wash-ghc6
10:31:36 <Igloo> You can't have 6.2 and 6.2.1 at the same time, but you can't have those versions of GHC either, so that's OK
10:33:02 <Igloo> (I think we decided on the order of the components at one point, but I might have it wrong; should check before putting packages in Debian)
10:34:13 <Igloo> Oh, I used libwxhaskell-ghc6 for WXHaskell, so that's probably what we agreed. I'm not sure not having haskell in it is a good idea, though
10:34:38 <stepcut> Igloo: if it was an ocaml package it would go: libwash-ocaml and libwash-ocaml-dev, dunno if that helps
10:35:52 <Igloo> *nod*, that matches the perl ones too. But in both cases there is only 1 language implementation in Debian
10:37:52 <stepcut> agreed
10:38:42 <Igloo> stepcut: Where would the files go?
10:38:56 <stepcut> the library files ?
10:40:10 <stepcut> /usr/lib/ocaml/$OCAMLVERSION
10:41:06 * nainef reads haskell tutorials
10:41:08 <stepcut> cabal+debian+wash/cgi == happy stepcut
10:41:56 <Igloo> OK, and what happens if you want foo v2 and foo v3 installed at the same time? Or is the version also part of the filename?
10:42:48 <Igloo> Or can ocaml just not do that?
10:42:54 <stepcut> you can't
10:43:06 <stepcut> in ocaml that would be a bit of a pain 
10:43:13 <Igloo> Ah, OK
10:43:47 <Igloo> Actually, don't we have package-version (in the cabal senses of the words) in the paths anyway?
10:44:12 <Marvin--> yes, I think that's the idea
10:45:26 <stepcut> ocaml uses md5sums to determine if the interface of a library has changed, if some bottom level library changes, everything library that directly or indirectly depends on it has to be recompiled or you will get an 'inconsistant interface' error when you try to build a program that uses them
10:45:43 <stepcut> its quite a pain actually :)
10:45:44 <Igloo> So we could have something like /usr/lib/ghc6-libs/cabalpackage-cabalversion.a and /usr/lib/ghc6-libs/imports/ oh, errr, help!
10:46:17 <Igloo> Is base,text,... going to appear in the imports path before cabal?
10:46:32 <Igloo> Otherwise I don't see how this, or indeed cabal, is going to work
10:46:56 <Marvin--> Igloo: I'm not following
10:47:11 <Igloo> OK, /usr/lib/ghc-6.2.1/imports/Data/Array/Base.hi exists, right?
10:47:40 <Igloo> But with cabal I could have two versions of one package (or two diffewrent packages?) both having a Data.Array.Base
10:48:13 <stepcut> Is it really practical to have two versions of one package installed?
10:48:32 <Igloo> The last spec I saw said it is possible
10:49:01 <stepcut> you mean, the last cabal spec?
10:49:03 <Igloo> Anyway, I think /usr/lib/ghc6-libs/imports/cabalpackage-cabalversion/Foo/Bar.hi is what we want
10:49:07 <Igloo> Yes
10:50:45 <stepcut> so, let's say, library B depends on library A 1.0, and I also have library A 2.0 installed. If I right a program that has uses library A 2.0, does that mean I can not use library B ?
10:50:54 <Igloo> Yes
10:51:55 <stepcut> what if library B could be built against A 1.0 and A 2.0, should both version be built and installed? So that I can use library B regardless of whether I am using A 1.0 or A 2.0 ?
10:52:37 <Igloo> I don't think you can do both without giving them different versions, but I'm not the best person to be answering these questions  :-)
10:53:20 <stepcut> it seems to me like you either need to dictate that only one version at a time be installed *or* you need to mix-and-match every possible combination...
10:55:20 <stepcut> I guess I should complain on the list ?
10:55:46 <Marvin--> Igloo: I don't think cabal roots directories under /usr/lib/ghc at all
10:55:47 <stepcut> I am also concerned about the phrase 'how can we safely ignore dependancy information we don't understand'
10:56:29 <Marvin--> right now I think it does /usr/lib/package-version/libHSpackage.a and /usr/lib/package-version/Foo/Bar.hi
10:56:36 <Igloo> Marvin--: Oh, I guess if they aren't registered with cabal it doesn't matter actually
10:57:44 <Igloo> stepcut: I suggest reading http://www.haskell.org/cabal/proposal/x254.html (and probably the rest of the proposal too) before doing so as I may be misremembering important details
10:58:19 <Igloo> Marvin: Those are cabalpackage and cabalversion, right?
10:58:52 <Igloo> If so Debian will have to change something, but I think just putting a $compiler/ after lib/ is best
10:59:13 <Marvin--> uh, does it matter? The package.conf keeps track of the paths
10:59:40 <Marvin--> hmm, what does the Policy say about what a package is allowed to put in /usr/lib and what not?
11:00:17 <Igloo> Consistency is nice, and if we leave it as-is the packages will be installing their files on top of each other
11:01:35 <Marvin--> eh?
11:01:41 <Igloo> eh what?
11:01:49 <Marvin--> I'm not following
11:01:59 <Igloo> I build package for ghc6 and ghc5
11:02:06 <Igloo> Both want to install /usr/lib/package-version/libHSpackage.a and /usr/lib/package-version/Foo/Bar.hi
11:02:12 <Marvin--> ah
11:02:22 <starkaudio> *ping*
11:04:12 <Marvin--> yes, I know, I've been wondering about that too, I do think it's better to root things under /usr/lib/ghcsomething
11:05:39 * Igloo contemplates a ghc6.4 package and ghc meta-package
11:06:38 <Igloo> Hmm, although it will mean a lot of extra space used in the archive
11:10:23 <Marvin--> are the ghc packages that large?
11:11:16 <Igloo> They currently account for 632M, but that should drop when m68k finishes building 6.2.1-4 and it goes into testing
11:11:31 <Cale> nainef: how are you finding Haskell so far?
11:12:38 <Marvin--> Igloo: some time next year, IOW ;)
11:13:30 <Cale> nice
11:13:32 <Igloo> I actually expected it to be done by now, so I'm slightly worried
11:14:27 <Igloo> But maybe it's multitasking
11:14:52 <stepcut> can ghc be built as a cross-compiler ?
11:15:09 <stepcut> i want to build i386-freebsd binaries on an i386-linux machine
11:15:29 <Igloo> Do you want to port GHC, or just a few programs?
11:16:13 <stepcut> I want to compile wash/cgi programs, but my ISP uses freebsd
11:16:40 <Igloo> Oh, you'd need an RTS compiled for FreeBSD anyway
11:16:47 <Igloo> I don't believe it's currently possible
11:17:07 <stepcut> ok, I have an freebsd box, but it only has 128 megs of RAM :)
11:17:19 <opet> pkg_add -r is your friend :)
11:17:47 <stepcut> and wash+haskelldb programs need 150MB+ just to link
11:18:10 <Igloo> Ouch
11:18:25 <Igloo> Learn about object splitting and give Daan a patch  :-)
11:18:30 <shapr> dynamic linking is looking pretty helpful
11:18:38 <stepcut> compiling ghc is the worst though, at one point in time, ar uses 700MB+
11:18:44 <Igloo> Oh, I'm an idiot
11:18:54 <Igloo> WASH /= WXHaskell  :-)
11:18:58 <stepcut> I had a hard time getting ghc to compile until I released that it was using all my RAM+swap :)
11:19:06 <shapr> I have 4gb of swap, it worries me when a compile starts to use a significant portion of that
11:19:13 <stepcut> I had to add a second swap partition :)
11:19:18 <stepcut> (well, swap file)
11:19:49 <stepcut> its much better to have a 4GB ram disk, than 4gb swap partition I have found...
11:19:51 <shapr> I wish I could tell ghc to dynamically resize to use as much ram as it can, but no swap
11:20:12 <shapr> sadly, I only have 512mb of ram
11:20:31 <nainef> cale, I'm liking it
11:20:57 <stepcut> we have some dedicated build machines with dual-processor xeon's and 4gb of ram... very nice to work with :)
11:21:10 <nainef> wow
11:23:57 <Gowilla> we're getting one of those soon
11:23:59 <stepcut> well, divide one $4k build machine amongst 12 people and its actually a good deal for the company -- less time spent waiting for hour long compiles to finish. 
11:26:39 <Igloo> shapr: Isn't your non-GHC memory usage fairly constant?
11:26:51 <Igloo> If so just set 512M-that as the maximum
11:27:19 <stepcut> Igloo: via ulimit or something?
11:27:53 <stepcut> Igloo: or via an RTS flag?
11:28:05 <Igloo> Via +RTS -MxxxM  (I might mean -H)
11:28:33 <stepcut> I need to retire so I can spend more time learning haskell
11:28:48 <nainef> heh
11:30:06 <stepcut> for example, I would like to be able to understand page 10 of this paper: http://research.microsoft.com/Users/simonpj/papers/gadt/gadt.ps.gz
11:30:26 <stepcut> I am about 20% there, I think
11:30:34 <stepcut> maybe less
11:31:24 <stepcut> The GADT stuff looks really neat
11:31:26 <stepcut> btw
11:32:40 <Igloo> stepcut: Did you read 4.4 first?
11:32:56 <Igloo> And probably other bits too
11:35:19 <stepcut> Igloo: I meant more in a general sense. I still don't understand what all the syntax means in those diagrams, nor have I been able to find a place that explains it all
11:35:51 <stepcut> aside from understanding it, I can not even read that page out loud
11:35:51 <Igloo> Well a lot of the syntax is specific to this paper
11:36:41 <Igloo> In general it says roughly the bottom is true whenever all the things on top are true
11:36:41 <stepcut> right, but a lot is not
11:38:02 <stepcut> actually, that page isn't too bad
11:39:28 <stepcut> but when it comes to that style of notation and category theory, I have a large number of gapping holes in my understanding
11:39:30 <Igloo> The surrounding text ought to explain most of it. For example, 4.3 tells you how to read  Gamma |- downarrow t : tau
11:40:12 <Igloo> Ah, category theory I have very little knowledge of, but I wouldn't have thought there was much in that paper
11:40:26 <stepcut> Igloo: yeah, this paper does a  better job of explaining the terminology than many others I have read
11:40:45 <stepcut> Igloo: there is not any in this paper
11:41:14 <stepcut> the paper just meant as one illustration of why I need to retire in order to have more time to understand haskell
11:41:21 <stepcut> category theory is another
11:41:36 <Igloo> *nod*, IKWYM  :-)
11:42:00 <Igloo> And I haven't even got a job yet  :-)
11:44:34 <stepcut> that reminds me...
11:44:37 * stepcut gets back to work
12:20:05 <Marvin--> "What long, drawn out, flammage enhanced, pot calling the kettle dayglo orange, what is good for the goose is good for the gander, blah blah blah, yackety smackety, it's my ball and I am taking it home with me, so that's how it is, how to win friends and influence people discussion are we talking about?"
12:20:08 * Marvin-- laughs
12:25:27 <Marvin--> oh this is rich
12:26:03 <Spark> heh ive got that book
12:26:05 <Spark> its comedy
12:26:32 <Spark> i dunno what i did with it though, i cant find it
12:26:41 <edwinb> which book is that?
12:26:45 <thebug> anybody for some bikesheds?
12:31:51 <Spark> how to make friends and influence people
12:31:58 <thebug> :)
12:31:59 <Spark> actually no thats a different one
12:32:06 <Spark> mine is called...
12:32:13 <Spark> how to make anyone like you, or something
12:32:27 <edwinb> i see...
12:32:36 <Spark> anyway its just a load of shite which is either obvious, or the guy has pulled out of his arse
12:34:56 <Lemmih> wb bringert
12:35:15 <bringert> thx
12:35:45 <bringert> that's how long it takes to walk home from work
12:35:54 <bringert> when did I leave?
12:36:05 <Marvin--> half an hour ago, I think
12:37:03 <bringert> hmm, I'm getting slow
12:37:25 <bringert> otoh, I was looking at the pretty sky most of the time
12:37:35 * bringert is easily amused
12:41:06 <Marvin--> blessed art the easily amused
12:45:11 <Spark> the sky is always better than the ground :)
12:45:31 <Spark> birds have the right idea
12:47:35 <starkaudio> Always when I leave my desk, irc picks up... :)
12:49:20 <Riastradh> bringert, did you ever figure out in Darcs how to get it to elaborate on conflicts & other patch problems?
12:51:12 <SyntaxNinja> stepcut: to answer your question, I"m not trying to Cabalize WASH. I'm just packaigng it for Debian, for now at least.
12:53:53 <SyntaxNinja> stepcut: we had a long and involved conversation at ghc-central with Ross Patterson and the simons about different versions being available and what-have-you.  The short answer is that a single program can only have a single version of any particular library installed.
12:54:22 <SyntaxNinja> as to whether cabal will build a different binary package for each dependency, I'm not sure. that partly depends on the impolemnetation of HC-PKG which isn't completely specified yet.
12:55:02 * Riastradh prods bringert.
12:55:41 <Marvin--> SyntaxNinja: what's a "program" in this scenario?
12:56:50 <SyntaxNinja> Marvin--: any set of stuff that gets compiled together. GHC can't handle having different versions of the same package in this case.
12:57:07 <Marvin--> so program = package
12:59:21 <SyntaxNinja> no, not necessarily
12:59:24 <Igloo> Woo! Success!
12:59:34 <SyntaxNinja> it might be a library, or any executable the end-user is building
12:59:59 <Marvin--> er.
13:00:07 <Marvin--> executables are linked statically anyway, aren't they?
13:00:36 <Marvin--> I mean, compiling an executable is fire-and-forget, stick it in /usr/bin and you're done, right?
13:01:56 <SyntaxNinja> but it still can't be compiled with two different versions of the same package, right?
13:02:42 <Marvin--> oh, you're talking about the executable's *dependencies*
13:02:48 <SyntaxNinja> yeah
13:02:55 <Marvin--> hm, what happens when you have both ghc5 and ghc6 installed?
13:03:00 <Marvin--> this could get messy
13:03:22 <SyntaxNinja> what does cabal do? it picks ghc6 unless you configure it otherwise
13:03:43 <Marvin--> well, what about ~/.ghc-packages
13:04:01 <Marvin--> if you use both ghc5 and ghc6 you need two separate files
13:05:03 <Igloo> Try .ghc6.2.1-packages, then .ghc6-packages, then .ghc-packages?
13:05:06 <Marvin--> and what about the Debian PoV, by default we install in /usr/lib/package-version, why do we do that? Why not /usr/lib/ghc6/package-version or somewhere else rooted under /usr/lib/ghc6something?
13:05:52 <SyntaxNinja> yeah, probably. I think that ~/.ghc-packages is just a placeholder until HC-PKG has --user capabilities built in.
13:06:10 <Marvin--> okay, fair enough
13:06:13 <SyntaxNinja> then HC-PKG figures out where it keeps the file, based on its own version in relation to the compiler.
13:06:32 <bringert> Riastradh: no, but I didn't try much either
13:06:57 <Marvin--> maybe I should put my entire $HOME in darcs
13:06:58 <bringert> have any advice?
13:07:12 <Marvin--> would make it a lot easier to move files to and from the laptop
13:07:32 <SyntaxNinja> Marvin--: I've been thinking about that lately too. I tried to put my blog in darcs, but bad things happened
13:07:41 <Marvin--> bad things?
13:07:42 <Riastradh> Bad thingS?
13:07:49 <SyntaxNinja> as for where to put packages under /usr/lib, I don't really care.
13:08:01 <SyntaxNinja> ask igloo, he's in charge there :)
13:08:22 <SyntaxNinja> bad things because the blog software traverses all directories looking for .txt files to display
13:08:33 <SyntaxNinja> (including _darcs) I don't know why I didn't anticipate that.
13:08:38 <Marvin--> heh
13:09:03 <Marvin--> _darcs is as ugly as CVS, I wish it was .darcs instead :/
13:09:48 <Marvin--> /usr/lib/ghc$ghcversion/packages/$package-$pkgversion is nice and deep :-)
13:10:27 <SyntaxNinja> so Igloo, in your packages, how do you indicate where to put libraries? do you hard-code /usr/lib/ghc-6.2.1 in your "install" target?
13:10:59 <SyntaxNinja> then make the package depend on ghc=6.2.1, then if you upload a new version of GHC, you'll go and fix both the dependency and the location?
13:12:14 <Igloo> I think GHC decides to put it there itself when I tell it --prefix=/usr
13:12:29 <Igloo> Or do you mean my library packages?
13:13:01 <Igloo> That's just hat, and wxh in H-E, currently I think
13:13:36 <SyntaxNinja> yeah, your library packages. how do you do it w/ hat?
13:13:50 <SyntaxNinja> WASH doesn't have any kind of configure script.
13:14:32 <Igloo> I /think/ hat decides to put it there itself too
13:15:00 <SyntaxNinja> curses
13:15:06 * SyntaxNinja shakes fist at WASH
13:15:10 <Igloo> Oh, actually, ICBW
13:15:13 * Marvin-- conjectures that that wasn't the answer SyntaxNinja was hoping for ;)
13:15:16 <Igloo> Let me finish eating and I'll check  :-)
13:15:26 <Igloo> But it might well use ghc -print-libdir or whatever it's called
13:15:49 <SyntaxNinja> oooh
13:15:55 <Marvin--> there's a -print-libdir?
13:15:57 <Marvin--> cool
13:16:20 <Marvin--> that's very useful in cabal
13:19:01 <SyntaxNinja> is the name of the package available in debian/rules in a variable OOI>
13:19:02 <SyntaxNinja> ?
13:21:01 <Igloo> Euch, hat goes through some horrible contortions, presumably to cope with ancient ghcs (that it probably doesn't still work with  :-)  )
13:21:24 <Igloo> But I then just use "ghc{5,6} --print-libdir" where I need, e.g. postinst
13:21:45 <Marvin--> SyntaxNinja: you can use dh_listpackages
13:22:29 <SyntaxNinja> ahh OK
13:23:28 * Igloo should check CVS to see if it still does that and give MW a patch if so
13:23:56 <SyntaxNinja> libUtility.a is such a useful name.
13:24:04 <Marvin--> haha
13:24:20 <SyntaxNinja> I was going to make this package name into wash-utilities
13:24:24 <SyntaxNinja> or should it be wash-utils?
13:24:49 <Marvin--> libwash-utilities-ghc6?
13:25:08 <Igloo> What (do you think|will) the cabal package name will be?
13:25:48 <Marvin--> (see, we should allow dashes in package names)
13:25:56 <Igloo> :-)
13:26:08 <SyntaxNinja> Marvin--: don't try to convince ME, go convince the simons
13:26:30 <Marvin--> what arguments did they have *against* dashes, again?
13:26:54 <Marvin--> @seen JaffaCake
13:27:01 <Marvin--> feh
13:27:06 <SyntaxNinja> nothing in particular, I think they just wanted HC-PKG to parse versions after the dash like HC-PKG --remove foo-1.2
13:27:15 <Marvin--> and they still can
13:27:19 <SyntaxNinja> I can't remember exactly
13:27:27 <SyntaxNinja> just double check with them that package names can have dashes
13:27:27 <Igloo> The problem is that -s also seperate tags, right?
13:27:29 <Marvin--> just use eager regexp matching
13:27:33 <Igloo> So choose another character for that?
13:27:41 <Marvin--> oh god, the stupid tags
13:28:02 <SyntaxNinja> Igloo: what would wash's cabal name be... this sounds like a party game
13:28:09 <Marvin--> either that or use underscore for separating name and version, like Debian
13:28:27 <Igloo> Ah, yes, I think that would be the nicest solution
13:28:40 <SyntaxNinja> libwash-utils-ghc6
13:28:52 <SyntaxNinja> hmm
13:29:01 <Marvin--> wash-utils_1.2-some-stupid-tags
13:29:13 <SyntaxNinja> now I remember why I keep refusing to package things until cabal is done
13:29:20 <SyntaxNinja> if only I could get work to pay me to finish cabal instaed of package wash
13:29:40 <Igloo> If possible it would be nice to check with PT about what names he wants as it would be good for Debian package names to match cabal package names
13:36:03 <SyntaxNinja> heh. line seen in WASH makefile:
13:36:03 <SyntaxNinja> HMAKE=		ghc --make			# hmake
13:36:45 <Igloo> :-)
13:37:26 <Marvin--> yeah, well...
13:37:28 <monotonom> haha
13:37:36 <Marvin--> I've never ever used hmake
13:38:37 <Marvin--> does hmake handle .hsc and stuff?
13:40:06 <SyntaxNinja> I dont remember
13:42:35 <Marvin--> well, it does make sense to put make stuff in a separate program, I've always thought that ghc --make was silly
14:00:40 <SyntaxNinja> hm. maybe I will wait until Cabal is done
14:00:54 <SyntaxNinja> it's so frustrating to have to re-code things in a makefile that I already did in cabal
14:01:33 <SyntaxNinja> does WASH need any particularly fancy things? any fancy preprocessors, for instance?
14:01:50 <SyntaxNinja> does anyone know offhand if the thing that's shaping up to be cabal 0.1 will handle WASH?
14:02:04 <SyntaxNinja> maybe I should just cabalize WASH instead of packaingg it for debian
14:04:31 <Marvin--> why not do both
14:04:41 <Marvin--> oh wait, that'd mean packaging cabal, too
14:05:18 <SyntaxNinja> yeah, doing both would be best :)
14:13:00 <Igloo> Syn: You're looking at how WASH works and are in charge of the cabal project, and you're asking /us/ if cabal 0.1 will handle WASH?  :-)
14:13:11 <SyntaxNinja> heh
14:13:27 <SyntaxNinja> well, I'm only looking at one part of wash right now, haven't got an overview of the entire thing yet
14:21:41 * shapr swears viciously at Plone's I18NCatalog
14:21:49 * shapr stabs with murderous intent
14:22:17 * shapr burns the code and poisons it with (burnt) arsonic (sic).
14:36:16 * Marvin-- viciously quotes Igloo
14:36:41 <Igloo> Hmm?
14:38:53 <Marvin--> QuotesPage hadn't been updated recently, so I fed the poor thing
14:40:21 <Igloo> Oh, I see :-)
14:42:55 <Igloo> Bah, now you've got me reading the thing  :-)
15:11:40 <Marvin--> haha
15:36:52 * Lemmih tries to summon SyntaxNinja by sacrificing a side-effect and some CPU time.
16:27:07 <det> Lemmih: oh yeah, you've seen what sacrificing side-effects has done for the C camp, and CPU time for the python :p
16:36:50 <monotonom> For the effect of both, try Java.
16:55:56 * Pseudonym yawns
16:56:24 <Igloo> Yo Pseudonym
16:56:37 <Pseudonym> Yo and stuff.
16:57:03 <Riastradh> Yo Yo Ma!
16:57:27 <Pseudonym> Indeed.
16:57:37 <Riastradh> Quite.
17:01:21 * Pseudonym met Paul Tortelier once
17:01:45 <Pseudonym> I dunno why I shared that.
17:01:55 <Riastradh> ...who?
17:02:05 <Pseudonym> Another cellist.
17:02:08 <Pseudonym> Who is dead now.
17:04:20 <Riastradh> Does that imply that Yo Yo Ma is also dead, or was that 'who' clause inessential to the sentence?
17:04:52 <Pseudonym> The "who" clause is actually a separate sentence.
17:04:59 <Pseudonym> Yo Yo Ma is not dead that I am aware of.
17:05:01 <Riastradh> Technically, there was no sentence, so that's a moot point.
17:05:07 <Pseudonym> Indeed.
17:05:15 <Pseudonym> Well...
17:05:24 <Pseudonym> OK, I think the second clause counts as an utterance.
17:05:29 <Pseudonym> Hmmm.
17:05:54 <Riastradh> Everything is made much simpler by considering your blatherings to be 'Paul Tortelier is another cellist who is dead now.'
17:06:34 <Pseudonym> Yes, I was using a dangling clause as a rhetorical device to indicate an afterthought.
17:06:45 <Pseudonym> If it's good enough for Joyce, it's good enough for me.
17:06:57 <Riastradh> ...who?
17:07:04 <Pseudonym> James Joyce.
17:07:14 <Riastradh> Ah.
17:07:28 <Riastradh> No, I'm not about to repeat myself with '...who?' thrice, in case you were waiting.
17:07:38 <Riastradh> ..
17:07:41 <Riastradh> Yeek.
17:07:51 <Pseudonym> Maybe I should name someone else you're unlikely to recognise, like... Ofra Hanoy,
17:07:52 <Riastradh> That was a keyboard malfunction.
17:08:14 <Riastradh> Ofra Hanoy is yet another cellist, Pseudonym.
17:08:22 <Pseudonym> Right.
17:08:25 <Pseudonym> Who is not dead.
17:08:51 <Pseudonym> Ofra Hanoy has notoriously bad technique, by the way.
17:09:40 <Pseudonym> Harnoy
17:09:45 <Pseudonym> Why did I say "Hanoy"?
17:10:23 <wagle> can you say something like 1 < x < 5 in haskell, or do you have to say (1 < x) && (x < 5)
17:10:24 <Riastradh> Presumably because your 'r' key is stuck.
17:10:37 <Pseudonym> wagle: You don't need the parentheses.
17:10:37 <Riastradh> It was appaently contagious.
17:11:26 <wagle> dont need the whitespace either..  heck I should just write it in machine code
17:12:06 <Pseudonym> Right!
17:12:16 <Pseudonym> wagle: To answer your question, no, Haskell has nothing like that.
17:12:19 <Igloo> Technically you could say 1 < x < 5 if you had a Num Bool instance (except the operator is non-associative), but the answer you want is you have ot use the latter
17:16:46 <wagle> some languages actaully have 1 < x < 5 mean what you should expect (and not the Num Bool braindamage)
17:17:12 <Pseudonym> Miranda, for example.
17:17:54 <ibid> and python, apparently
17:18:15 <Igloo> That would mean it has to be syntax, though
17:19:12 <wagle> in a list comprehension, how do you bind new variables?
17:19:35 <Pseudonym> [ x | y <- ys; let { x = f y } ]
17:19:50 <wagle> ah..  the brackets
17:19:56 <Pseudonym> Braces.
17:21:08 <Igloo> , not ;
17:21:18 <wagle> want [ x | x <- xs , let {y = f x } , (1 < y) && (y < 5) ]
17:21:42 <wagle> doesnt appear to work
17:22:19 <Igloo> And you only need braces in the case where you want to have a fixity declaration at the end of the binding or something don't you?
17:23:10 <Igloo> Prelude> [ x | x <- [1..10] , let y = x + 1 , (1 < y) && (y < 5) ]
17:23:10 <Igloo> [1,2,3]
17:23:31 <wagle> nevermind, it was s stupid syntax error
17:23:41 <dons> mm.. coffee
17:25:26 <wagle> i had so many syntax errors in my "where", then "let" on my way to getting it right, that i assumed it was still complaining about the let
17:25:34 <bourbaki> hi
17:26:01 <Lemmih> Hey
17:26:47 <TheHunter_> hi
17:56:50 <shapr> fooey
17:56:58 <Pseudonym> @arr
17:56:59 <lambdabot> Yeh scurvy dog...
17:57:02 <bourbaki> hi
17:58:54 <shapr> y0
17:58:57 <shapr> @fortune
17:58:57 <lambdabot> 	Two brothers, Mort and Bill, like to sail.  While Bill has a great
17:58:57 <lambdabot> deal of experience, he certainly isn't the rigger Mort is.
17:59:04 <shapr> oy
17:59:06 <shapr> that's a bad pun.
17:59:13 <shapr> hola tautologico 
17:59:19 <tautologico> hola
17:59:25 <shapr> greetings from the arctic circle.
17:59:28 <tautologico> como estas ?
17:59:33 <tautologico> wow...
17:59:37 <shapr> ¿muy bien, et tu?
17:59:50 <tautologico> bien tambien
17:59:57 <tautologico> what are you doing there ?
18:00:09 <shapr> I live here.
18:00:27 <shapr> mostly I do programming and unicycling here.
18:00:53 <tautologico> what city ?
18:01:54 <shapr> I live in Boden, Sweden.
18:01:57 <shapr> where do you live?
18:02:05 <Smerdyakov> Bodens is not as cool as Baden-Baden.
18:02:08 <tautologico> Joao Pessoa, Brazil
18:02:14 <bourbaki> boden is german for ground
18:02:35 <Smerdyakov> tautologico, you are a PhD student in formal methods, right?
18:02:38 <Riastradh> @yow
18:02:39 <lambdabot> HAIR TONICS, please!!
18:02:53 <tautologico> Smerdyakov, not PhD yet
18:02:54 <shapr> what does Joao Pessoa mean?
18:03:18 <tautologico> shapr, it's a name... the city was named after a guy that was killed 
18:03:20 <Smerdyakov> tautologico, "PhD student" means you are working to get a PhD.
18:03:39 <tautologico> Smerdyakov, then yes :)
18:03:49 <Smerdyakov> tautologico, do you know what your thesis will be yet?
18:03:59 <Smerdyakov> tautologico, and why did you stop going to #sml? ;)
18:04:26 <shapr> hiya juhp 
18:04:53 <tautologico> I didn't stop going there, it's just that I haven't logged to freenode in a while
18:05:25 <shapr> nifty: http://en.wikipedia.org/wiki/Jo%E3o_Pessoa
18:06:05 <shapr> ~900,000 in that city and the suburbs.
18:06:14 <tautologico> yep
18:06:17 <shapr> I think we have 25,000 with this city and the suburbs.
18:06:23 <shapr> as long as we count the reindeer..
18:06:46 <shapr> the elk around here must count for something.
18:07:06 <shapr> sounds like a neat city
18:07:13 <Smerdyakov> tautologico, do you know what your thesis will be yet?
18:07:24 <shapr> greenery in the city and universities too!
18:08:03 <tautologico> Smerdyakov, nope, maybe I end up doing something different, implementation of functional languages perhaps
18:08:21 <shapr> have you seen Epigram?
18:08:26 <shapr> it's a nifty language
18:08:50 <tautologico> shapr: it is a nice city... sunny, beautiful beaches, etc... 
18:08:59 <Smerdyakov> Right now I think I would like to do an operating system based on program verification instead of static checking.
18:09:03 <tautologico> I've seen it yesterday, very interesting... dependent types
18:09:18 <Smerdyakov> er, instead of _dynamic_ checking
18:09:29 <shapr> I like the interactivity.
18:09:38 <shapr> Epigram is more interactive than Python :-)
18:10:56 <shapr> greetings yauz
18:12:02 <shapr> I like the GADTs
18:12:24 <Cale> So do I, they seem neat :)
18:12:34 <bourbaki> gadt?
18:12:35 <Cale> I want to be able to play with an implementation
18:12:38 <shapr> yes, me too
18:12:42 <tautologico> any eclipse users ?
18:12:52 <monotonom> yes
18:12:54 <shapr> hopefully Igloo will have time to build a new ghc-cvs deb when GADTs hits the repo
18:13:11 <tautologico> monotonom, do you use the haskell plugin ?
18:13:11 <bourbaki> whats GADTs?
18:13:17 <monotonom> Not yet.
18:13:39 <shapr> http://research.microsoft.com/Users/simonpj/papers/gadt/index.htm
18:13:42 <shapr> that's GADTs
18:13:50 <tautologico> I've seen that paper
18:14:50 <shapr> I wonder if that can get around John Hughes' CGI Arrow problem.
18:14:54 <bourbaki> sounds complicated:)
18:15:17 <Igloo> Hmm, I wonder if it's worth reporting a GHC concurrency test failing given this:
18:15:20 <Igloo> $ time ssh pergolesi.debian.org "sleep 5; echo -n done"
18:15:20 <Igloo> done
18:15:20 <Igloo> real    0m2.952s
18:18:15 <lmbdwr> Igloo, haskell ssh ?
18:18:23 <lmbdwr> its really existing ? ;)
18:18:52 <Igloo> No, that's normal ssh. The point is it manages to execute the sleep 5 in 3 seconds...
18:19:08 <Smerdyakov> Why are you complaining? ;)
18:19:11 <tautologico> GADTs will be in 6.4 ?
18:19:54 <stepcut> tautologico: only if they have time (but it is a goal...)
18:20:20 <stepcut> GADTS look pretty sweet
18:21:09 <bourbaki> can someone give me a short intro to what GADTs is good for?
18:22:02 <Cale> bourbaki: do you understand the algebraic data types currently in Haskell?
18:22:15 <Pseudonym> And do you know what phantom types are?
18:22:21 <bourbaki> no :)
18:22:26 <Smerdyakov> And have you ever danced with the devil in the blue moon light?
18:22:52 <shapr> I thought it was "the pale moonlight" ?
18:22:54 <Pseudonym> And I want to know, have you ever seen the rain?
18:23:22 <Smerdyakov> shapr, I didn't take the trouble of getting my creative license for nothing!
18:23:45 <shapr> "Tell me.... Have you ever danced with the devil in the pale blue moonlight" -- Joker
18:23:56 <Smerdyakov> Well, we were both right!
18:24:03 <shapr> yup
18:24:05 <Pseudonym> And both wrong.
18:24:07 <Smerdyakov> HUGS!
18:24:13 <Pseudonym> GHCi!
18:24:20 <shapr> Epigram!
18:24:38 <Cale> Monogram!
18:25:17 <Pseudonym> Isogram!
18:25:30 <Smerdyakov> The Count of Monte Cristo!
18:26:13 * shapr counts
18:26:27 * Pseudonym doesn't count in the grand scheme of things
18:26:39 <Smerdyakov> [pun barrier]
18:26:45 <Smerdyakov> No puns may cross the barrier.
18:27:11 <Cale> Aww, you're spoiling all the good scheme-related puns.
18:27:14 <Pseudonym> Quantum puns are allowed to tunnel across it.
18:27:52 <Smerdyakov> Cale, this was my express intent.
18:29:10 <Pseudonym> @wiki DerivingFromSpecifications
18:29:11 <lambdabot> http://www.haskell.org/hawiki/DerivingFromSpecifications
18:29:34 <Pseudonym> Interestingly, GADTs provide a mechanism for implementing some of the stuff that couldn't be implemented there.
18:30:24 <Pseudonym> I said: "Unfortunately, Haskell's type system can't express this, and probably never will."
18:30:29 <Pseudonym> Boy was I wrong.
18:31:04 <Smerdyakov> This will be appearing next to the Valenti VCR quote in the year 3000 "great gaffs from prehistory" edition.
18:31:16 <Pseudonym> Except that I don't count.
18:31:42 <tautologico> so, where should the entry for the eclipse haskell plugin go in the wiki ?
18:31:58 <Igloo> Nothing would ever be done if there weren't people saying it is impossible. If I were you I'd be trying to take the credit  :-)
18:32:55 <Smerdyakov> Wiki spam is the latest Internet crime against humanity.
18:33:29 <Jad[busy]> argg
18:33:38 <Jad[busy]> Smerdyakov, since when this has been happenin ?
18:34:12 <Smerdyakov> Jad[busy], I don't know. I revert 3 pages a day at www.hprog.org because they have long lists of links to commercial stuff put into them.
18:35:21 <Jad[busy]> any way to prevent that ?
18:35:31 <Smerdyakov> Black lists on naughty hosts
18:35:50 <Jad[busy]> I haven`t faced such things on my wiki @linux.com.lb 
18:35:52 <Jad[busy]> "yet"
18:36:05 <Jad[busy]> Smerdyakov, spammers frequently change ips
18:36:12 <monotonom> What, people putting spams into wiki?
18:36:20 <Smerdyakov> Jad[busy], you seem not to be using Moinmoin.
18:36:30 <Jad[busy]> Smerdyakov, nope.
18:36:32 <Smerdyakov> Jad[busy], I think the spam is made by automated wiki finders, so your software may not being searched yet.
18:36:53 <Smerdyakov> monotonom, that's right.
18:36:58 <Jad[busy]> Am interested in their patter matching algorithm :P
18:37:06 <Jad[busy]> s/patter/pattern
18:37:29 <Smerdyakov> It should be pretty easy.
18:37:49 <Jad[busy]> Not if it automatically finds new wiki patterns
18:38:10 <Smerdyakov> I'm thinking they just find particular software.
18:38:15 <Smerdyakov> Pre-coded with how to detect it.
18:39:13 <Jad[busy]> The best thing you could do: is find a spammers ip, check the pages it is loading and try to change stuff in the wiki so that the next time the spammer doesn`t catch you.
18:41:34 <Jad[busy]> http://simon.incutio.com/archive/2004/04/27/wikiSpam
18:41:43 <Spark> greetings from the erotic circle
18:41:53 <Spark> oh, i was scrolled up
18:41:57 <Spark> how disappoiting
18:42:32 <Riastradh> Yes, scrolling up is a very disappointing act.
18:44:10 <bourbaki> night
