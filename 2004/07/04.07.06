02:16:10 <jesse> is ghc without -fglasgow-exts straight haskell98?
02:16:45 <Marvin--> yes and no
02:17:00 <Marvin--> you don't need -fglasgow-exts to get to the hierarchical libs
02:17:17 <jesse> well, thats an adendum to the report right?
02:18:01 <Marvin--> no, it's not formalized at all yet
02:18:21 <jesse> oh, thats it though?
02:18:49 <jesse> assuming no more specific extention options are used
02:19:07 <Marvin--> I can't think of anything else
02:19:27 <Marvin--> don't take my word for it though :)
02:20:49 <jesse> alright, thanks
02:38:33 * Marvin-- wrestles parsec
03:08:12 <Marvin--> feh
03:10:28 <Marvin--> I need coffee
03:10:36 <reffie> don't we all
03:13:20 <Marvin--> stupid parser
03:13:21 * Marvin-- grumbles
03:19:15 <lambdawar> oi oi
03:49:59 <shapr> good morning #haskell!
03:52:23 <andersca> heyhey
03:53:52 * shapr bounces cheerfully
03:55:54 <shapr> delYsid: so, are you thinking of hacking on Haskell a bit more?
03:56:30 <shapr> Si\: how's HAIFA?
03:56:34 * shapr is AWAKE!
03:58:56 * Marvin-- growls at ctags
03:59:36 <shapr> Marvin--: write a shell script wrapper that checks to see if it's .lhs or .hs ?
04:01:12 <shapr> gutentag Joachim
04:06:52 <Marvin--> no, turns out the problem wasn't in ctags (I applied the haskell patch and compiled it myself), but that I'd forgotten to update the vim plugin
04:07:51 <Marvin--> there
04:07:52 <Marvin--> sweeet
04:09:03 <Marvin--> hm, that patch could use some work, it doesn't particularly like hierarchical libs
04:10:28 <Si\> shapr: HAIFA is on hold while I write my XSchema parser/validator/type mapper
04:10:43 <shapr> ok
04:10:47 <Si\> I really should find myself a repository
04:10:52 <shapr> you want a darcs repo?
04:11:13 * Marvin-- ponders cleaning this up and sending a patch to syntax
04:11:38 <shapr> I've been thinking about the SOAP question, especially since it dovetails nicely with the John Hughes/stepcut CGI/Unix pipe arrows problem.
04:11:46 <Si\> nah, CVS will do for now
04:12:20 <shapr> you know what they say in the rebel subversion channels... don't give in to the darcside!
04:12:33 <Si\> Well my plans are (along with a team at Uni) to next year create a Haskell implementation of OWL
04:13:05 <Si\> OWL is a layer above WSDL, which allow querying of individual Web-Service ontologies
04:13:24 <Marvin--> wow, this is a big patch
04:13:45 <Si\> so essentially you can string several computational units together for some form of transaction or query
04:14:01 <Si\> ala Monad's, which is why Haskell is ideal to do it in
04:15:43 <Si\> But first I need a lower level declarative language for individual Web-Service description, which is why I gotta implement Schema, so I can implement WSDL
04:15:54 <shapr> sounds good
04:16:15 <shapr> do you have a repo out there? or is this owned by your school? or what?
04:16:41 <Si\> I'll probably set up on Savannah
04:16:49 <Si\> Not using S/F, too slow
04:16:58 <shapr> yah, I agree.
04:17:45 <Si\> I can't use Darcs or Subversion yet, my Uni collegaues have barely figured out CVS so far :)
04:20:53 <Si\> How popular do you think I'll be if I GPL everything I do?
04:21:46 <karingo> Higher than those who do not release source code.
04:21:50 <Marvin--> do you own the copyright?
04:21:52 <shapr> well, you'll be popular with us :-)
04:22:08 <shapr> Si\: anyway, darcs is a *lot* easier to deal with than cvs or subversion
04:22:33 * Marvin-- sends a large patch bundle to syntax, muahaha
04:23:04 <shapr> except that darcs is written in Haskell, so it can be difficult to build a binary on some random linux distro
04:23:06 <Si\> I know that, you know that, but you have to understand Students and especially Academics are pretty slow on the uptake when it comes to new technology
04:23:34 <shapr> that's funny, I thought they were the guys who designed and built new technology :-)
04:23:40 <shapr> man, I'm in the wrong community!
04:23:47 <Si\> you're having a laugh
04:24:21 <shapr> I think humans in general are slow on the uptake. They tend to learn what they must learn to do their job, and not much more after that.
04:24:34 <Si\> Most people at Uni haven't got past Internet Explorer yet ;)
04:24:38 <shapr> Maybe that's just my cynical side talking.
04:24:48 <Marvin--> shapr: it's called realism, not cynicism :)
04:24:53 <shapr> right, ok then.
04:25:17 <Si\> Anyway, I'll set up on Savannah and we'll see how things go
04:25:19 <XTL> Offers for the Axi's and more people asking about the cube. I used most of my morning looking up things in a huge load of small cardboard boxes.
04:25:35 <XTL> And then the rain hit. Hard.  Guess I'm staying home again.
04:26:28 <shapr> XTL: I'll see if I can get someone to pick up the NeXT in the next coupla weeks, if not, I'll release my 'first come' option.
04:27:03 <shapr> did you end up learning more about Monads last night? :-)
04:27:33 <XTL> shapr: Ok. Of course it would be nice to get that 250eur ;)
04:28:11 <shapr> wow, someone is offering you 250e for the NeXT et al?
04:28:17 <XTL> I undesrtood a nice chunk of that tutorial, I think. I also realized I need a huge load of practice.
04:28:44 <XTL> The next kit, yes. I thought I mentioned. And pickup. And 20e further for the 700/rx.
04:28:50 <shapr> yah, monadic programming is a lot like OOP, once you get a handle on the basics, some practice can clear up everything.
04:29:54 <XTL> Now the sun shines and looks like nothing happened unless you go outside and wade a bit.
04:36:05 * shapr hacks some C code
04:38:51 <andersca> shapr: C can be fun
04:39:33 <shapr> happily, it was a very small hack
04:39:44 <shapr> I keep meaning to write alsaplayer bindings in Haskell
04:39:53 <shapr> I should learn the FFI
04:50:02 <shapr> wow, I killed zsh
04:50:26 * shapr decides YaST isn't so bad after all
04:56:55 <musasabi> Are there any more papers like "A Poor Man's Concurrency Monad" ? It seems that they are bringing me nearer and nearer getting the saveable state...
04:58:50 <shapr> how related?
05:01:10 <shapr> man, we need one of these for #haskell: http://lukhas.free.fr/images/emacs-big.jpg
05:01:16 <shapr> Lukhas: hey, how did you create that?
05:01:40 <Lukhas> shapr: lemme find the scripts :)
05:01:52 <XTL> shapr: What is that?  I mean what group does it represent?
05:02:01 <shapr> that's #emacs
05:02:18 <shapr> http://www.haskell.org/hawiki/HaskellUserLocations
05:02:20 <XTL> Ah, a channel. Funny I didn't think of that.
05:03:10 <Igloo> Don't we already have an xearth one of them?
05:03:14 <shapr> surprisingly, I'm the most northerly denizen of #emacs
05:03:24 <shapr> Igloo: yah, but not a spiffy graphic like that
05:03:53 <Igloo> Ah, well that's just a matter of feeding xearth (DIM xplanet these days?) a different graphic isn't it?
05:04:24 <shapr> I dunno
05:05:07 <Lukhas> xplanet, actually
05:05:24 <musasabi> shapr: more about concurrency with monads.
05:05:37 <musasabi> Currently I am quite interested howto make IO play nice.
05:05:44 <shapr> musasabi: have you read the Concurrent paper, and the Hair Shirt Retrospective?
05:05:53 <andersca> I have a domain!
05:06:04 <shapr> there's also the OI comonads, and various discussion about cutting the role of IO into smaller pieces.
05:06:10 <shapr> andersca: what is it?
05:06:22 <musasabi> sounds interesting... any links?
05:06:23 <andersca> andersca.org
05:07:20 <shapr> concurrent paper is linked from the ghc Control.Concurrent docs
05:07:21 <Lukhas> how original :p
05:07:37 <shapr> Hair Shirt Retrospective discusses the idea of commutative concurrent monads
05:07:47 <Heffalump> yes, I know
05:07:54 <shapr> the comonad stuff is on the HaWiki
05:08:03 <musasabi> thanks, I'll look those up.
05:08:20 <shapr> the discussions about splitting IO I've seen on the mailing lists and here on the channel
05:10:16 <shapr> so, you people gonna add yourself to HaskellUserLocations ?
05:10:48 <Lukhas> shapr: scripts at http://lukhas.free.fr/emacs/xplanet 
05:10:52 <XTL> I should figure out the coordinates.
05:10:56 <Lukhas> warning, hardcoded path inside :)
05:11:18 <shapr> Lukhas: thanks!
05:12:48 <Lukhas> after that, it's just a matter of cronjob to generate the pictures via earthmap.sh, earthmap-small.sh and europe.sh
05:13:06 <Lukhas> and uploading them (thanks to sitecopy)
05:23:06 <shapr> XTL: I just googled for my town and the words latitude or longitude
05:23:31 <shapr> ten seconds to find the numbers for the hotel six blocks away.
05:37:21 <shapr> ibid: btw, what's up with GZigZag these days?
05:41:29 <shapr> the only good thing I can say about the current patent madness is that my kids will have a wide open field to explore.
05:44:58 <shapr> hi firefly, wassup?
05:55:18 * shapr throws lambdas
05:55:31 <shapr> anyone used HsDns?
05:56:37 * thebug throws a \ at shapr
05:57:36 <shapr> oh no! I've been captured!
05:57:47 * shapr quickly alpha renames himself out of danger
05:57:50 <thebug> bwahahaaaa
05:59:28 <shapr> foo, I can't get HsDNS to build
05:59:36 <shapr> hsc2hs complains bitterly
06:05:10 <thebug> woah, ghc produces enormous executables on powerpc
06:09:52 <shapr> gutentag TheHunter
06:11:47 <TheHunter> guten Tag, shapr
06:11:57 <TheHunter> how's code?
06:12:01 <shapr> code is good!
06:12:07 <shapr> though I'm doing sysadmin work atm
06:21:42 <bourbaki> hi
06:21:47 <shapr> hi bourbaki 
06:22:14 <XTL> thebug: So it does on Irix/mips. 
06:22:38 <XTL> Well, that binary that was linked somewhere.
06:23:37 <shapr> hiii SyntaxNinja!
06:23:55 <thebug> XTL: so ... very large binaries on risc machines then :)
06:24:01 <SyntaxNinja> hihi shapr
06:24:41 <XTL> thebug: Or less popular platforms.  Gcj still beats it easily, IIRC :)
06:25:39 <Igloo> Non-splittable platforms I suspect
06:37:14 <shapr> bonjour Skal
06:39:54 * musasabi remembers folks with 50+mb hello worlds with gjc and mips
06:43:22 <Marvin--> SyntaxNinja: hey, I mailed you a patch
06:56:09 <SyntaxNinja> Marvin--: thanks. I'm at work, haven't looked at it yet. ooi, when was the last time you pulled before that patch?
06:59:28 <Marvin--> SyntaxNinja: I read your mail, pulled, hacked some more and then sent it
06:59:45 <Marvin--> so it should incorporate your latest changes
07:10:40 <SyntaxNinja> OK...
07:22:02 <SyntaxNinja> I hacked some last night and did build depends and some other fields.
07:22:17 <SyntaxNinja> I'm guessing you didn't pull those yet. I'll resolve conflicts, it shouldn't be TOO bad :)
07:26:09 <Marvin--> SyntaxNinja: eh? the patch I pulled had parseCommaList, parseDependency and stuff
07:26:33 <Marvin--> (though I had to make a slight change to parseDependency that I'm not really comfortable with)
07:27:34 <shapr> hei esap 
07:27:43 <SyntaxNinja> Marvin--: hm. OK.
07:28:10 <SyntaxNinja> so you have the patch "extra libs and build depends. fixed version parser"
07:29:40 * shapr swears at SuSE
07:29:52 <Marvin--> mainly, it's about implementing parseDescription
07:30:02 <Marvin--> in terms of a splitLines function
07:52:20 <SyntaxNinja> Marvin--: OK. Sounds great. I'll look at it ASAP.  Thanks a lot!
07:52:27 <SyntaxNinja> I've been annoyed at this problem for a while now :)
07:54:26 <Marvin--> I fear the bikeshed discussion that's bound to happen when we release though
07:55:38 * shapr burns the shed and blows the nuke plant
07:58:10 <Igloo> Any particular bikeshed discussion?
07:59:35 <Marvin--> well, what cabal is all about in general, and the syntax of the description file in particular :)
07:59:42 <SyntaxNinja> Igloo: folks seem overly-interested in the description file syntax :)
08:00:15 <Igloo> Ah, that one
08:01:06 * Igloo doesn't care as long as I don't need to write loads of XML crap or anything  :-)
08:01:19 <SyntaxNinja> heh
08:02:18 <Igloo> Did a clean target get created incidentally? It occured to that that an alternative would be symlink trees if not
08:03:57 <SyntaxNinja> yeah, I think we'll make a clean target.
08:12:43 * Igloo realises you could support all three possibilities relatively easily, but doesn't say so for fear of getting thwacked  :-)
08:14:31 <Marvin--> I still think it's stupid to have a parser at all, since the haskell compilers have perfectly nice parsers
08:15:14 <Igloo> I thought you were one of the pro-rfc822 people
08:16:41 <Marvin--> I am, if you interpret "pro" as "if we can't do it directly in haskell, rfc822 is what I want"
08:16:58 <Igloo> Ah, OK
08:17:09 <norpan> what are you doing?
08:17:27 <Marvin--> I still think it's better to put it all in the Setup.hs file, but if people desperately want a separate description file, then I think rfc822-based is simplest and best
08:17:36 <Marvin--> norpan: working on cabal
08:17:49 <Igloo> You can have a separate description file that's a separate module
08:17:59 <norpan> cabal, what is that
08:18:04 <Igloo> LIP
08:18:30 <SyntaxNinja> www.haskell.org/cabal
08:18:51 <norpan> nice
08:19:31 <SyntaxNinja> Marvin--: I'm actually a proponent of putting everything in Setup.hs, but I've been over-ruled, and I do see the advantages to having a separate file.
08:20:33 <Igloo> I'm definitely a separate file fan as I can see the data getting lost in the middle of an increasingly complex Setup.lhs
08:21:09 <Igloo> But I don't think that rules out either having an imported module for the data or the data #included in
08:21:50 <Igloo> Well, requiring CPP would be a bit ugly, and the import would constrain the filename. But other than that
08:57:44 --- topic: '["Learning Haskell - http://www.haskell.org/learning.html","We put the Funk in Funktion","See logs @ http://tunes.org/~nef/logs/haskell/","Donate your brain! - hawiki/UsingHaskellWikiMaterial","related channels #haskell.se #haskelldb #darcs","http://www.haskell.org/hawiki/EuroHaskell","May 2004 HC&AR: http://www.haskell.org/communities/","http://www.haskell.org/cabal/"]'
08:57:44 --- topic: set by shapr on [Fri Jun 25 02:34:22 2004]
08:58:08 --- topic: '["Learning Haskell - http://www.haskell.org/learning.html","We put the Funk in Funktion","See logs @ http://tunes.org/~nef/logs/haskell/","Donate your brain! - hawiki/UsingHaskellWikiMaterial","related channels #haskell.se #haskelldb #darcs","http://www.haskell.org/hawiki/EuroHaskell","May 2004 HC&AR: http://www.haskell.org/communities/","http://www.haskell.org/cabal/"]'
08:58:08 --- topic: set by shapr on [Fri Jun 25 02:34:22 2004]
09:02:56 <Janni> Hi.
09:03:13 <Cale> hello
09:03:21 <thebug> hello Janni! Enjoying the netsplits today?
09:03:47 <Cale> I'm enjoying them - used one to kill off a ghost :)
09:04:22 <Smerdyakov> More fun than using NickServ, eh?
09:04:28 <Cale> yeah
09:04:30 <Cale> heh
09:08:37 <Janni> Can I somehow achieve s.th. like referencial comparison? I mean, I need to have unique object which I need to test for identity (not equality)
09:08:57 <Heffalum1> wdym 'for identity'?
09:09:36 <Janni> When programming imperative OOP, I can compare two objects by reference.
09:09:49 <Heffalum1> OIC.
09:09:54 <Igloo> Use a monad to generate them with unique tags
09:09:55 <Janni> I test, if they are the same, not equal
09:09:56 <Heffalum1> by equality you meant structural equality.
09:10:10 <Janni> Yes.
09:10:12 <Heffalum1> you can get weak reference equality with some GHC extensions IIRC
09:10:40 <Janni> Igloo: OK. I needed just this catchword. Thx
09:10:41 <Heffalum1> the definition of Haskell means that strong reference equality is impossible to obtain
09:10:51 <Heffalum1> (except as Igloo said)
09:10:53 <Igloo> But GHC could potentially unify things
09:11:19 <Heffalump> oh, might you have two objects that are structurally equal but you want different identities for?
09:12:14 <Janni> No.
09:12:14 <Igloo> Oh - then why don't you want structural equality? Efficiency?
09:12:14 <Janni> I need to make a reference to another object.
09:12:20 <Heffalump> speed?
09:12:34 <Heffalump> make depth-first search of something with cycles terminate
09:12:37 <Heffalump> those are the typical reasons
09:12:49 <Janni> Later I need to test if the reference is referencing to object x.
09:14:57 <Janni> OK. From the beginning. I have a great tree, where nodes may reference other nodes. The offset of the referenced note will be written when the tree is written. So I need to find out the offset of the referenced node.
09:15:39 <Heffalump> I don't quite follow.
09:17:00 <Janni> Heffalump: Hm. The tree contains many nodes where quite many nodes are references to others.
09:17:38 <Cale> Referential equality doesn't mean much in Haskell.
09:17:53 <Janni> The tree might be changed (adding/removing) nodes, but the references shall persist.
09:17:57 <Janni> Cale: I know that.
09:18:42 <Igloo> So you want to know if the reference is pointing at the node currently in that position or not?
09:18:57 <Igloo> Then I'd use unique numbers generated by a monad
09:19:29 <Janni> Igloo: Yes, I thought about that. But I don't know if I have to program that by myself...
09:20:09 * Janni thinks, he hasn't explained very well what his problem is..
09:20:19 <Igloo> I don't know if there is a Uniques Monad in the HLs, but it's just a state monad anyway
09:21:19 <Janni> A yes, there is a module Data.Unique
09:21:32 <Janni> Sorry for having bothered you. I should have found it by myself
09:22:22 <Igloo> That relies on you being in the IO monad, though
09:22:40 <Cale> well, it's embedded in the IO monad, not sure if you want something more like a State monad representation of that.
09:23:49 <Janni> I'm "being" in the IO monad a lot anyway...
09:31:42 <norpan> IO is the place to be
09:32:00 <Heffalump> only for those who are not pure at heart
09:32:05 <norpan> old McMonad had a name, IO  IO IO
09:32:51 <andersca> norpan: not like that
09:33:01 <andersca> "I'll have a McMonad & co"
09:33:12 <norpan> McMonad & do
09:33:50 <thebug> supersize that
10:05:40 <musasabi_> code using IO for not IO is unclean and evil ;P
11:17:06 <shapr> I'm getting several scans a second on my microsoft-ds port, all from different hosts. Is there some new MS virus around?
11:18:14 <stepcut> shapr: i highly doubt it :p
11:18:36 <shapr> oh, sunday: http://slashdot.org/article.pl?sid=04/07/06/0845202&mode=thread&tid=109&tid=126&tid=172&tid=185&tid=187&tid=190&tid=201
11:18:45 <Jad> shapr, seems so
11:18:54 <Jad> too much junk traffic on my network
11:19:37 <shapr> on sunday someone released a Bagle/Beagle variant that includes its sourcecode.
11:19:52 <shapr> open source virus writers ... assimilate!
11:21:16 <Jad> any virus written in haskell arround ?:P
11:21:25 <shapr> I hope not.
11:21:50 <Jad> ya ofcrourse
11:22:00 <Jad> virus writers are lousy programmers
11:22:03 <Jad> + evil
11:22:04 <shapr> it would be nice to write a virus cleaner that listens for infection attempts, then tries to login into the infectee and shuts it down.
11:22:59 <Riastradh> How would it 'listen' for infection attempts?
11:23:10 <Jad> that`s not always possible
11:24:18 <shapr> Riastradh: easy, wait for someone trying to connect to the microsoft-ds port
11:24:33 <SyntaxNinja> is there a "sequence" that operates on functors?
11:24:34 <shapr> I'm getting several a second right now, from all over the world.
11:24:38 <shapr> SyntaxNinja: like what?
11:25:10 <shapr> SyntaxNinja: what would it do?
11:25:26 <SyntaxNinja> just something like (Functor col, Monad m => col(m a) -> m (col a)
11:25:28 <SyntaxNinja> )
11:25:32 <monotonom> Virii written in Haskell are considered "memory hogs", "impractical", and "too much category theory".
11:25:38 <SyntaxNinja> heh
11:26:03 <monotonom> "You can't call it a virus if you can't predict its memory usage!"
11:26:23 <SyntaxNinja> It can't be a virus if it can't perform IO!
11:27:37 <monotonom> You may like to look at a paper on "traversal" by Moggi and others.
11:28:06 <Marvin--> SyntaxNinja: err, hasn't this been discussed on at least one of the haskell lists at least once very recently?
11:28:06 <monotonom> Pardon the flood...
11:28:11 <monotonom> @InProceedings{moggi1999:_mon_shap_fun_trav,
11:28:11 <monotonom>   author =       "E. Moggi and G. Bell{\`e} and C. B. Jay",
11:28:11 <monotonom>   title =        "Monads, Shapely Functors and Traversals",
11:28:11 <monotonom>   booktitle =    "{CTCS}'99 Conference on Category Theory and Computer Science",
11:28:11 <monotonom>   year =         1999,
11:28:11 <monotonom>   editor =       "Martin Hofmann and Giuseppe Rosolini and Dusko Pavlovic",
11:28:13 <monotonom>   volume =       29,
11:28:15 <monotonom>   series =       "Electronic Notes in Theoretical Computer Science",
11:28:17 <monotonom>   address =      "Edinburgh, United Kingdom",
11:28:19 <monotonom>   publisher =    "Elsevier",
11:28:21 <monotonom>   file =         "traversal-monad.pdf",
11:28:23 <monotonom>   url =          "http://www.disi.unige.it/person/MoggiE/ftp/ctcs99.pdf"
11:28:27 <monotonom> }
11:28:36 <monotonom> I was not awake. I should have just pasted the url.
11:29:20 <shapr> that would be too easy.
11:29:56 <Marvin--> http://www.haskell.org//pipermail/haskell-cafe/2004-June/006318.html
11:30:51 <shapr> mon_shapr
11:30:52 <shapr> hey mon!
11:31:25 <ibid> shapr: the name has been buried a long time ago
11:31:29 <SyntaxNinja> hm
11:31:39 <ibid> shapr: it was then renamed gzz and later fenfire
11:32:21 <shapr> yes, I discovered that
11:32:32 <shapr> and then the founding developer left...
12:04:42 <ibid> shapr: tuomas wasn't really a founding developer
12:04:47 <ibid> but close :)
12:05:16 <shapr> ah, ok
12:05:28 <ibid> he got burned out by many stuff, the last being hush-hush stuff about patents
12:06:31 <shapr> I can understand that.
12:06:44 <ibid> join #fenfire on ircnet :)
12:15:29 <esap> Hmm.. is it possible to use something that requires constraints as arguments to mkM (from the Generics library)?
12:16:00 <esap> s/arguments/argument/
12:33:16 <stepcut> arg, stupid whitespace
12:43:45 <Cale> stepcut: have your editor expand tabs to spaces
12:50:22 <stepcut> Cale: well, the problem was I wrote "-d " instead of "-d" in the argument to execFile, and the receiving end got all confused and gave misleading error messages
12:51:06 <Cale> ah, okay
12:51:50 <Cale> that's a funny problem to have -- I wonder how it was parsing its arguments
12:52:03 <stepcut> dunno
13:01:53 <bourbaki> esap are you there?
13:07:24 * esap blinks.
13:08:14 <esap> bourbaki: what's up?
13:08:18 <bourbaki> esap have you got a min?
13:08:31 <esap> sure
13:23:31 <shapr> so, anyone has sfs-client installed?
13:25:41 <bourbaki> sfs?
13:26:19 <shapr> http://www.fs.net/sfswww/
13:34:46 * shapr is slightly confused
13:50:47 <XTL> There. I guess orwell was down for a while.
13:51:07 <Riastradh> Freenode is being borkulous.
13:56:31 <Marvin--> what else is new
13:57:48 <Riastradh> The sky is grey...
13:57:51 <monotonom> I am new.
14:09:51 <XTL> Me going to sleep this early is new.
14:11:53 <wagle> really!  its only 2pm!
14:13:04 <monotonom> 2pm is very late for sleeping.  You're supposed to go to sleep 4am --- a whopping 10 hours ago!!
14:18:53 <wagle> actually, he said early, so you mean "a whopping 14 hours from now!!"
14:19:58 <Marvin--> SyntaxNinja: did you get a chance to look at my patch?
14:24:01 <SyntaxNinja> Marvin--: no, I'm still at work.
14:24:23 <SyntaxNinja> but heading home soon.
14:24:25 <SyntaxNinja> time zones...
14:24:43 <Marvin--> gotta hate them ;-)
14:25:28 <SyntaxNinja> yummy
14:25:51 <SyntaxNinja> while you're apparently hacking, I'm apparently sleeping and working.
14:26:52 <Riastradh> Sleeping and working aren't mutually exclusive, eh?
14:27:35 <Igloo> The "apparently"s give that sentence a very strange flavour to me
14:28:00 <Riastradh> I wonder what he's _really_ doing...
14:28:05 <SyntaxNinja> apparently, while you're hacking, I'm sleeping or working
14:28:17 <SyntaxNinja> yeah, I didn't plan the sentence well ahead of time and didn't feel like correcting it.
14:28:28 <Marvin--> apparently
14:35:42 * SyntaxNinja home &
16:02:02 <SamB> why do you suppose System.Posix.IO.fdRead has type Fd -> ByteCount -> IO (String,ByteCount) (and, in particular, the String)?
16:03:23 <stepcut> well remember that a string is really a [Char], so it can hold binary data too. And the ByteCount is how many you want vs how many you got
16:03:27 <stepcut> that is my guess
16:03:33 <Cale> Yeah
16:04:41 <Cale> see read(2) in the man pages on any unix system. I'm pretty sure it will work just like that.
16:06:05 <SamB> well, yeah. but, Char is supposed to be in *unicode*
16:06:25 <SamB> random bytes are *not* in unicode.
16:06:29 <andersca> what would you rather have it return?
16:06:39 <andersca> hmm, Byte8 I guess
16:08:57 <SamB> well, yeah. only it is called Word8
16:09:48 <andersca> ah, yeah
16:11:12 <Cale> does GHC support unicode yet?
16:11:34 <shapr> not for source code
16:11:42 <dnm> Hey shapr.
16:12:19 <shapr> whoa spiffy: http://www.lmcs-online.org/
16:12:34 <shapr> a free online e-journal with an awesome editorial board
16:12:35 <SamB> Prelude> Char.ord (maxBound :: Char)
16:12:41 <SamB> 1114111
16:14:27 <shapr> lmcs has Wadler, Pierce, Abadi, Barendregt, Hennessy, Setzer, and Stuckey on the Ed board, among many others.
16:14:27 <shapr> hiya dnm 
16:14:33 <SamB> but my hugs seems to be broken, so I won't bother showing what happens when you try that in hugs...
16:14:40 <shapr> I've wanted to try writing papers on basic stuff like encoding information in types.
16:15:52 --- mode: irc.freenode.net set +n
16:16:03 <SamB> shapr: the problem with that is that it is way to easy to overrun the stack
16:16:43 <shapr> with type encodings?
16:19:40 <SamB> shapr: I was playing with natural numbers in the type system...
16:23:45 <shapr> SamB: like Peano numbers?
16:24:42 <SamB> shapr: exactly.
16:24:57 <shapr> does it blow the stack much?
16:27:21 <SamB> well, I hadn't actually got to trying to do anything with them, besides playing with them in ghci, and they don't have to get big before the stack overflows...
16:31:33 <wolfman8k> anyone have a direct link to the pdf of "Yet Another Haskell Tutorial"?
16:32:10 <Heffalump> what's wrong with filling in the web form?
16:32:33 <wolfman8k> are you Hal Daume? :O
16:32:47 <Heffalump> I'm sure you could find that out for yourself if you really care.
16:33:15 <Smerdyakov> If you ever meet Hal Daume on the road, kill him.
16:33:26 <wolfman8k> :o
17:05:27 <SamB> do file handles get closed when they are GC'd?
17:28:33 <Igloo> I believe so, but laziness can mean that happens later than you'd want
17:31:28 <Heffalump> won't be lazy unless you use hGetContents or similar, will it?
17:32:44 <SamB> I really don't care all that much, I was just wondering ;-). it is nice, after all, to know what one might be leaking, and how, is it not?
17:36:24 <Smerdyakov> I'll tell you what you're leaking for six dollars.
17:38:46 <Igloo> Heff: Think not
17:39:35 * Igloo finally tracks down his problem after far too much effort. Oh for a decent tracer...
17:41:52 <SamB> really, I just prefer that file descriptors not be lost irretrievably ;-)
19:55:40 * Lemmih looks at mod_haskell.
21:12:45 * SyntaxLaptop smiles upon Marvin--
21:30:04 <Hyp3rion> Good morning #haskell ^_^
21:31:22 <Riastradh> I suppose it is technically morning here...
21:32:25 <Hyp3rion> just half to seven
21:33:01 <Riastradh> It's 0.35 here.
21:33:14 <Hyp3rion> oh
21:33:19 <Hyp3rion> US!
21:33:56 <Riastradh> Indeed.
21:37:53 <SamB> hmm, I want nicer parser combinators...
21:40:53 <SamB> more lazy, to be exact...
22:11:01 * SamB wonders why the "instance IO Monad" declaration in GHC.IOBase doesn't use thenIO for >>
22:15:23 <SamB> is there really a type RealWorld in dotnet?
