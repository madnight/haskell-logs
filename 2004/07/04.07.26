03:12:34 <shapr> good morning #haskell!
03:12:52 <cm> hi
03:12:55 <Lemmih> Yo
03:12:58 <shapr> what's going on?
03:13:18 <Lemmih> I just got back from unicycling.
03:13:41 <shapr> cool!
03:13:49 <shapr> what kind of unicycle do you have?
03:14:03 <Lemmih> And I'm thinking of buying a new saddle.
03:14:22 <Lemmih> shapr: eh.. the kind with one wheel.
03:15:42 <shapr> 20" wheel?
03:16:01 <shapr> the Kris Holm velo saddle is very comfy.
03:16:25 <Lemmih> I have no idea. It's actually my brothers but he don't use it anymore.
03:17:23 <Lemmih> But it's older than me so it's kinda worn out.
03:17:27 <shapr> heh
03:17:43 <shapr> I need to buy a new tire for mine, I've worn the tread off the center of the tire.
03:54:05 <lelit> what is unicycling? a safer model of bicycle?-)
03:54:19 <shapr> yes, with only one wheel, there's less to get in the way.
03:55:00 <edwinb> Sounds like a fun way to travel
03:55:52 <shapr> it has some great advantages. Most recently, I now fit into clothes I was planning to throw away.
03:56:08 <edwinb> I was just thinking it'd be a stylish way to come in to work ;)
03:56:09 <lelit> uh, but is it usable where there are moderated hills?
03:56:47 <shapr> yes, unicycling works fine on hills, and it's even better exercise there.
03:56:53 <lelit> some photos? :)
03:56:57 <shapr> in fact, there's a sport called Mountain Unicycling.
03:57:02 <lelit> yup!
03:57:04 <shapr> of me? or anyone on a hill?
03:57:20 <lelit> just to get an idea...
03:57:47 <Lemmih> Where are the pictures of EuroHaskell'04 located?
03:57:51 <shapr> aww, seems andersca's EuroHaskell gallery is down.
03:57:56 <andersca> yeah, web server is down
03:58:08 <andersca> there was a power outage this thursday
03:58:11 <andersca> I'm working on getting it back up
03:58:35 <shapr> lelit: http://www.scannedinavian.org/~shae/foto/shaecycle.jpg http://www.scannedinavian.org/~shae/foto/unicycle.jpeg
03:59:05 <shapr> that's me and my unicycle.
03:59:16 <lelit> uh, *much* simpler than what I supposed! :-)
03:59:58 <shapr> http://mg.b4net.lt/tmp/photos/europython-2004/view?image=p6090052.jpg
04:01:12 * lelit wonders about what kind of brakes.... :-]
04:01:33 <shapr> usually you don't need brakes, but for coming down mountains you can purchase brakes
04:02:46 <lelit> it must be a fun excercise! 
04:03:20 <shapr> my next unicycle will be a coker, with a 92cm wheel http://members.tripod.com/~unicycling/cok2.jpg
04:03:24 <shapr> yes, it's much fun!
04:05:03 <shapr> with short cranks you can get up to 40km/h on a coker.
04:05:26 <lelit> sorry, what's "cranks"?
04:06:46 <shapr> the piece that connects your foot place to the center of the wheel.
04:07:13 <shapr> with longer cranks you have more leverage, so it's good for tricks, with shorter cranks it's easier to pedal fast.
04:07:14 <lelit> ah, ic
04:07:39 <lelit> it's "pedale" in italian :)
04:07:58 <shapr> hm, neat
04:30:34 <shapr> hiya Si\, wassup?
04:31:31 <Si\> I'm just fiddling about with my XML Schema parser, trying to utilize Monadic Combinators instead of my current ad-hoc method
04:31:57 <Si\> does there exist anywhere a function similar to msum, but with type msum' :: (MonadPlus m) => [a -> m b] -> (a -> m b) ?
04:32:34 <shapr> what should it do?
04:32:48 <shapr> [a -> m a] -> (a -> m a) might work
04:33:07 <shapr> if you want foldM
04:33:38 <Igloo> It's   \x -> msum (map ($ x) fs)   but I don't think it's standard
04:33:41 <Si\> well, same as msum, except it takes a list of functions to monads instead of monads themselves
04:35:34 <Si\> cuz I've got a bunch of functions of type NamespaceTable -> XmlTree -> Maybe a (where a is the parsed type), and I want to be able to build a back-tracking parser build around them without using tonnes of lambda abstractions
04:42:37 <TheHunter> fwiw, msum' = runReaderT . msum . map ReaderT
04:47:07 <TheHunter> unKleiseli . fold (<+>) zeroArrow . Kleisli
04:59:23 <shapr> hej Marvin--
05:04:42 <shapr> @index assoc
05:04:42 <lambdabot> bzzt
05:04:45 <shapr> @index Assoc
05:04:45 <lambdabot> Text.ParserCombinators.Parsec.Expr
05:04:48 <shapr> foo
05:05:06 <shapr> that clashes with infra/Assoc in GF
05:05:31 <Marvin--> ello
05:05:36 <shapr> would be easier to work with GF if it used hierarchical lib names
05:05:55 <Marvin--> send a patch
05:06:00 <shapr> I may do that
05:12:43 <Marvin--> meh, now I feel foolish
05:12:46 <shapr> ?
05:13:03 <Marvin--> I reported a bug on ghc yesterday, and it turned out not to be a bug :)
05:13:07 <shapr> oh
05:13:15 <Marvin--> it's documented clearly that that's the intended behaviour
05:13:27 <Marvin--> I don't quite understand the *reason* for it though
05:13:39 <esap> Which feature?
05:14:38 <Marvin--> that when you specify -odir and/or -hidir, the names for the .o and .hi files are derived from module names rather than file names
05:15:05 <norpan> module names and file names should match, shouldn't they?
05:15:12 <Marvin--> not for Main
05:15:24 <Marvin--> not *necessarily* for Main, that is
05:15:33 <norpan> ah
05:15:50 <norpan> i still think that requiring the main module to be Main is too restrictive
05:16:35 <norpan> makes it hard when you have multiple mains in the same directory
05:16:46 <Marvin--> yeah, using --main-is makes more sense
05:17:01 <norpan> yes
05:17:23 <norpan> like java
05:17:46 * esap hadn't realized there is such option in ghc.
05:17:58 * esap goes back to read the manual page for ghc...
05:18:35 <Marvin--> well, java doesn't do any linking, so it's kinda easier :)
05:18:47 <Marvin--> you pick the main function at runtime rather than compile-time
05:19:39 * esap points to link-time, dynamic-binding-time and deployment-time as alternatives.
05:19:58 <Marvin--> feh
05:21:42 <Marvin--> I'm just trying to figure out how to DTRT when compiling both library and multiple executables from cabal
05:21:48 <Marvin--> and it ain't pretty
05:30:36 <Marvin--> otoh, no matter how much thinking I do on it, it will fuck up somewhere and only time and testing will tell
05:49:09 <Igloo> :-)
05:49:45 <Igloo> Does nhc have a -main-is equivalent?
05:50:51 <Marvin--> no :(
05:50:54 <Marvin--> not afaik
05:53:34 <Marvin--> hmm, is it a bug or a feature that ghc -Wall doesn't complained about unused variables that start with an underscore?
05:54:40 <Igloo> Feature
05:54:46 <Igloo> That's exactly the point of them
05:55:09 <Marvin--> but you can still use them in expressions :/
05:55:18 <Marvin--> it's kinda confusing to me
05:55:46 <Marvin--> I was always under the impression that _foo was a wildcard pattern, but apparently it isn't
05:56:07 <Marvin--> maybe it should warn when you *use* a _foo variable
05:56:11 <Igloo> It could be so you can use them in only some branches of a #if or something
05:56:40 <Marvin--> yeech
05:57:54 <Marvin--> hm, I wonder if we should have an Extension constructor for ghc's ability to deriving Data and Typeable
05:57:58 <Marvin--> I use that all the time
06:01:43 <Spark> it shouldnt be possible to get a 1st in computer science without knowing what the lambda calculus is
06:04:04 <ibid> a 1st?
06:05:10 <Spark> the best grade
06:06:17 <ibid> ah
06:07:20 * andersca got the highest grade in a lambda calculus course
06:08:18 <Marvin--> andersca: the computability course? not much of an accomplishment, that course was dead simple :P
06:08:53 <andersca> ;)
06:29:55 <Lunar^> Waow, Marlow's last commit is really nifty
06:30:15 <Marvin--> commit to what?
06:31:19 <Igloo> "extended subset" is a great phrase
06:31:25 <Igloo> GHC CVS I imagine
06:31:29 <Marvin--> haha
06:31:41 <andersca> hey SyntaxNinja
06:31:48 <SyntaxNinja> y0
06:31:59 <Lunar^> Marvin--: He started rewroting parts of the RTS in C--
06:32:12 <Lunar^> Marvin--: And that's a lot easier to read than the old .hc
06:32:57 <RussellOConnor> C--?
06:33:31 <Marvin--> coo'
06:34:08 <Lunar^> RussellOConnor: Read SPJ's paper, I think he's working on that for 10 years now
06:34:17 <Lunar^> RussellOConnor: The idea is to have a portable assembler
06:34:45 <Igloo> http://www.cminusminus.org/
06:36:05 <Lunar^> Igloo: AFAIK, GHC implementation has some differences from what's on cminusminus.org
06:38:34 <Marvin--> yeah, the "extended subset" :)
06:41:13 <TheHunter> Marvin--: has your nick anything to do with that C-- thing?
06:41:20 <Marvin--> not the least bit
06:41:39 <Marvin--> but it's sort of the same play on the ++ in C++
06:41:39 <TheHunter> so what does the -- stand for?
06:42:15 <TheHunter> ah
06:43:02 <Marvin--> I think when I first came to OPN, the nick Marvin was already taken, and I'd had been coding some miserable C++ for some reason and was fairly aggravated about it
06:43:57 <TheHunter> i see...
06:45:09 <Marvin--> and then I just never bothered changing it *shrug*
06:45:25 <Marvin--> laziness is a virtue, you know :-)
06:46:00 <Marvin--> SyntaxNinja: I sent off the readp patch again, let's see if you get it this time :)
06:47:37 <Lemmih> Prelude.pred maybe?
06:49:00 <norpan> (-1)
06:49:07 <norpan> no
06:49:12 <Marvin--> norpan: haha
06:49:17 <norpan> the one section you cant make
06:49:21 <Marvin--> norpan fell into the negative numbers trap
06:49:33 <norpan> stupid syntas
06:49:35 <norpan> x
06:50:18 <norpan> ((-)1) then
06:50:27 <norpan> no
06:50:32 <norpan> (`(-)`1)
06:50:42 <SyntaxNinja> Marvin--: cool...
06:51:12 <Marvin--> norpan: `(-)` is invalid, for some reason
06:51:21 <norpan> yeah
06:51:32 <Marvin--> and so is (`min`)
06:51:56 <Marvin--> it would be nifty if you could put arbitrary expressions inside backticks
06:52:22 <norpan> not very
06:52:30 <norpan> they are ugly as it is :)
06:52:40 <Marvin--> well, at least partially applied functions :-/
06:52:47 <Marvin--> I'd love to be able to say  `f x`
06:53:04 <Marvin--> though I guess there's a can or two of worms thereabouts
06:54:02 <norpan> here be monads^Wmonsters
06:55:12 <Taaus> (flip (-) 1)
06:56:02 <norpan> i'd go with (pred)
06:56:18 <Taaus> Bah :)
06:56:39 <Igloo> Like what   `f `x` y`   should mean
06:56:50 <Marvin--> Igloo: quiet you
06:56:53 <Marvin--> :)
06:56:58 <norpan> enclosing backticks in backticks should obviously be disallowed
06:57:20 <Heffalump> naah
06:57:27 <Heffalump> `f \`x\` y`
06:57:35 <Marvin--> Heffalump: now you're scaring me
06:57:39 <norpan> yeah right, involve the lambda
06:57:40 <Heffalump> or maybe reverse the sense of apostrophes inside backticks
06:57:45 <Heffalump> so `f 'x' y`
06:58:02 <Marvin--> or just make it asymmetrical
06:58:02 <Igloo> And how would you do character literals inside ``?
06:58:07 <norpan> sure, to disallow character literals
06:58:07 <Marvin--> `f `x' y'
06:58:10 <Heffalump> \`, duh.
06:58:38 <Igloo> Marvin--: Same problem with character literals inside
06:58:44 <Marvin--> Igloo: hush
06:58:46 <Igloo> When unicode happens it'll be easy, though
06:59:00 <Igloo> I'm sure there will be at least 20 quotes in unicode
06:59:13 <Igloo> There are 487 dashes, after all
06:59:15 <Marvin--> well, ' and ' are definitely different
06:59:25 <Taaus> So many backticks... Reminds me of Unlambda.
06:59:37 <Marvin--> 487?
06:59:52 <Igloo> I made that up. But there are lots  :-)
07:00:06 <Igloo> Are you sure the above are different?
07:00:14 <Marvin--> I'm having a hard time keeping track of LaTeX's three different dashes
07:00:24 <Marvin--> they aren't, but they should be, my keymap is broken
07:00:32 <Igloo> That's OK then
07:02:06 <SyntaxNinja> Marvin--: I seem to be having mail problems :(
07:02:12 <Marvin--> SyntaxNinja: :-/
07:02:20 <Marvin--> should I send it to gmail instead?
07:02:24 <SyntaxNinja> yeah
07:02:29 <SyntaxNinja> I blame colin walters
07:02:43 <Heffalump> `0 f `1 x `1 y `0
07:03:30 <Marvin--> Heffalump: uhhhhh
07:06:02 <SyntaxNinja> Marvin--: gmail is offering me XML parsing and visual parser generators based on the text in your email.
07:06:51 <Marvin--> visual parser generators?
07:12:56 * SyntaxNinja shruts
07:12:58 <SyntaxNinja> shrugs even
07:21:09 <bourbaki> hi
07:36:33 <Marvin--> meh
07:36:39 * Marvin-- breaks moveSources while trying to fix it
07:36:40 <Marvin--> hooray
07:41:20 <Spark> hard to fix something without breaking it first :)
07:43:43 <Marvin--> well, it was only semi-broken, now it's really-broken
07:43:49 * Marvin-- reverts
08:28:16 * Marvin-- busily breaks and unbreaks tests
08:36:34 <Marvin--> Cases: 39  Tried: 39  Errors: 0  Failures: 0
08:36:35 <Marvin--> phew
08:36:37 <Marvin--> all unbroken
08:47:28 <SyntaxLaptop> sweet :)
08:47:43 <SyntaxLaptop> I have mail again, but haven't gotten a chance to look @ patch.
08:48:44 <Marvin--> hey, don't thank me for unbreaking it when I broke it just before ;)
08:49:30 <Marvin--> I made some changes that includes hs-source-dir under dist/build to avoid conflicting file names
08:49:36 <Marvin--> it turned out to be less trivial than I expected
08:50:33 <Marvin--> btw, is there a good reason for ModuleTest.hs to be in the Distribution dir?
09:59:35 * shapr bounces
09:59:43 <shapr> hiya deejay 
10:29:08 <shapr> well, my undefined type-checked at least
10:31:01 <stepcut> morning shapr!
10:32:50 <shapr> g'mornin stepcut 
10:32:51 <shapr> wassup?
10:33:25 <stepcut> not much
10:33:50 <stepcut> would that GF stuff you are playing with be useful to making a rap lyric generator ?
10:33:57 <shapr> hmm, yes I think so
10:34:12 <stepcut> interesting...
10:34:38 <shapr> a markov chain generator would give you more random stuff though
10:34:48 <stepcut> well, I don't want completely  random
10:34:48 <shapr> GF can generate random sentences according to any grammar you give it
10:35:07 <shapr> so once you make the grammar, it'll do lots of fun stuff
10:35:19 <shapr> bringert came up with a few funny ones recently
10:36:10 <stepcut> I want something more like madlibs. Users entry some key words, the program uses a rhyming dictionry to find rhymes, and then GF to generate sentences
10:37:32 <stepcut> hopefully generate lyrics on par with most of the non-sensical beastie boys tracks
10:43:43 <Marvin--> haha
10:47:46 <stepcut> its part of a long-term project
10:48:39 <shapr> to become rich and famous via functional programming?
10:48:48 <stepcut> ultimately, I would also hook it up to a text-to-speech synth and generate the beats too :)
10:51:00 <stepcut> I was also thinking that DRM stuff could be used as a promotional tool for successful bands that can't get radio play (people like Ani Difranco, Phish, etc). What if they released an album with DRM where you couldn't play the tracks more than 5 times *UNTIL* you got 5 people to copy it...
10:51:29 <shapr> that's a strange thought...
10:51:35 <stepcut> Use DRM to encourage copying instead of preventing
10:52:27 <stepcut> similary to how the GPL uses copyrights to force re-publication, rather than prevent it
10:52:30 <shapr> that's sort of the point of the GPL, use the license to open the code rather than close it
10:52:35 <shapr> right :-)
10:52:53 <stepcut> :p
10:53:02 <shapr> in stereo ;-)
10:54:02 <stepcut> haha
10:57:26 * stepcut files a patent
10:57:41 <stepcut> you can have my music but not my ideas!!! muhahahaha!
10:59:05 <Marvin--> bastard!
10:59:05 * shapr grins
11:03:24 <jadrian> hello
11:03:32 <stepcut> i wonder if I could use GF to generate music instead of words
11:03:42 <jadrian> maybe slightly of topic
11:03:57 <jadrian> any of you familiar with substitutions, unifications, etc?
11:04:48 <jadrian> (ok it is really off-topic :P, but this might still be the best place to ask on freenode...)
11:05:00 <stepcut> a little
11:05:31 <jadrian> do you know how to compose/join substitutions?
11:05:50 <stepcut> no ;(
11:05:55 <jadrian> :-/
11:06:15 <jadrian> I got a paper on substitution trees here and either their definition or their examples must be wrong :-/
11:06:34 <jadrian> I'd like to know which...
11:06:41 <jadrian> hmmm maybe wikipedia knows
11:07:38 <RussellOConnor> I'm familiar with substitution, and once knew about unification.
11:08:16 <jadrian> hi RussellOConnor
11:08:59 <jadrian> I'd just like to know if anyone knows the difference between composing and joining substitutions
11:09:11 <jadrian> I'm looking at this paper:
11:09:20 <jadrian> http://citeseer.ist.psu.edu/graf94substitution.html
11:09:46 <Riastradh> Presumably, composing substitutions implies sequentially applying them, whereas joining substitutions implies combining a set of substitutions into one.
11:10:30 <jadrian> but both join and compose are defined as binary operators
11:10:44 <jadrian> they both take only 2 substitutions and return another one
11:11:46 <jadrian> substitutions are defined as sets of bindings  x -> t
11:12:04 <jadrian> so sigma = {x1 -> t1,..., xn -> tn}
11:12:08 <jadrian> is a substitution
11:12:14 <jadrian> the concept is quite simple
11:12:42 <jadrian> but then on the definition of composition and join they have something like
11:13:33 <jadrian> sigma . tao (compose)
11:13:42 <jadrian> sigma o tao (join)
11:13:59 <jadrian> sigma . tau = sigma o tao  U  some_set
11:14:00 <RussellOConnor> Where to they talk about joining substitutions?
11:14:06 <jadrian> page 4
11:14:58 <jadrian> just take a look at the definition and examples... doesn't make sense
11:15:23 <jadrian> you don't even need to understand what DOM, COD, etc is to understand that it must be wrong
11:15:34 <jadrian> (either that or I'm really missing something)
11:16:37 <jadrian> and it must be wrong because: 
11:16:39 <jadrian> definition of biding is composition union with some other set
11:17:04 <jadrian> and in the example binding gives you a smaller set...
11:17:18 <jadrian> s/binding/joing
11:18:04 <RussellOConnor> the definition of composition seems fine to me.
11:18:16 <jadrian> RussellOConnor: yeap
11:18:22 <jadrian> RussellOConnor: now the join definition
11:18:24 * RussellOConnor looks at join
11:18:44 <RussellOConnor> Do we know what I(tau) is?
11:18:50 <jadrian> RussellOConnor: look how it is just composition union with another set
11:18:58 <jadrian> RussellOConnor: just a substitution
11:19:28 <RussellOConnor> Only if I(tau) is a subset of DOM(tau)
11:19:39 <jadrian> RussellOConnor: ah yes, it is there tao = {y1->t1,..., ym->tm}
11:20:02 <jadrian> RussellOConnor: wait... let me see the letters
11:20:20 <jadrian> RussellOConnor: it's in the 4th line
11:20:41 <Riastradh> (#prolog might also be a good place to ask, by the way.)
11:20:50 <jadrian> RussellOConnor: ah yes
11:20:54 <RussellOConnor> I is the variables of the codomain?
11:21:08 <jadrian> RussellOConnor: yeap
11:21:11 <RussellOConnor> ok
11:21:34 <RussellOConnor> so I(tau) may not be a subset of DOM(tau)
11:21:42 <jadrian> exactly
11:22:05 <RussellOConnor> so join is *not* necessarily composition union with another set.
11:22:06 <jadrian> you just know that tao and sigma are substitutions
11:22:40 <RussellOConnor> hmmm
11:22:48 <jadrian> RussellOConnor: no no look at the definition of join
11:23:01 <jadrian> RussellOConnor: in that definition you have the union of two sets, right?
11:23:05 <RussellOConnor> right
11:23:19 <jadrian> the first set is tthhe one in the definition of compose
11:23:25 <RussellOConnor> no
11:23:29 <jadrian> no?
11:23:37 <RussellOConnor> coposition is the union of two sets as well
11:23:44 <RussellOConnor> the first set is the same in both cases
11:23:51 <RussellOConnor> the second set is different in the two cases
11:24:44 <jadrian> damn I looked at this article dozens of times... and I have never seen the second set in the definition of compose...
11:24:55 <jadrian> now this is embarrassing...
11:24:59 <RussellOConnor> :-)
11:25:36 <jadrian> well guess everything is clear now... lol
11:25:52 <jadrian> thank you RussellOConnor and sorry about wasting your time on this
11:26:01 <jadrian> argh
11:26:25 <jadrian> ok off to work again :)
11:26:32 <jadrian> RussellOConnor: thanks!
11:28:53 <shapr> unf
11:29:02 <shapr> hit that kill-buffer button a bit too hard
11:35:37 <shapr> GF is huge
11:37:22 <stepcut> heh
11:38:02 <shapr> I'm trying to hack it into partially using hierarchical modules so I can load it into GHCi, but it's taking awhile to just get one dir done.
11:40:21 <shapr> hiya paolino 
11:40:23 <shapr> how's code?
11:40:40 <paolino> mmmh
11:40:41 <RussellOConnor> fail = throwError . strMsg ?
11:41:29 <RussellOConnor> *sigh* Can I contribute to the thin GHC documenation?
11:42:23 <shapr> sure!
11:42:34 <shapr> it's often simplest to write stuff on the wiki first :-)
11:44:17 <RussellOConnor> It seems unlikely to get into the Haskell Hierarchical Libraries documenatation that way.
11:48:12 <shapr> the advantage of the wiki is that you get feedback and sometimes additions from other people on the channel
11:49:45 <shapr> but you can just write docs and mention them on ghc-users
11:50:29 <RussellOConnor> Should the Wiki have it's own Hierarchical Libraries docs?
11:51:49 <RussellOConnor> Actually the HHL docs don't even have a place for the information I want.
11:53:30 <RussellOConnor> It's totally unclear in what way instance (Error e) => Monad (Either e) from looking at the docs.
11:53:41 <RussellOConnor> Well, maybe totally is a bit harsh.
11:53:55 <RussellOConnor> But it isn't obvious what bind and fail do in this case.
11:54:09 <RussellOConnor> I only know 'cause you guys here told me.
11:54:11 <RussellOConnor> :-)
11:55:40 <RussellOConnor> Oh wait, this is docummented in the wiki
11:55:48 <RussellOConnor> damn, I guess I should have looke there
11:59:58 <SyntaxNinja> I expect haskell-experimental to not work sometime soon.
12:00:06 <SyntaxNinja> hopefully it'll get back on its feet again...
12:00:45 <Marvin--> what's up?
12:01:31 <SyntaxNinja> moving to a new server and the DNS changed under my feet unexpectedly
12:01:57 <SyntaxNinja> colin doesn't want to host haskell-experimental on our server anymore, though I intend to argue w/ him :) so maybe we should move it to a debian machine.
12:03:19 <Marvin--> :/
12:03:27 <SyntaxNinja> also, aetion can maybe host it
12:03:44 <Igloo> Oh, I hadn't realised it was jointly owned
12:03:56 <SyntaxNinja> I think we should have packages.haskell.org... we can put darcs repos there, haskell-experimental, bugzilla, whatever
12:04:17 <SyntaxNinja> Igloo: yeah.
12:04:30 <SyntaxNinja> so does anyone know the state of the wxhaskell packages?
12:05:02 * Igloo wonders what the issue is. I wouldn't have thought it was using high traffic or lots of disk space
12:05:18 <Igloo> They sort of work if you ask them nicely
12:06:16 * SyntaxNinja might take them over
12:06:25 <SyntaxNinja> and get them into sid
12:07:02 <SyntaxNinja> oh, Igloo's the maintainer?
12:07:17 <SyntaxNinja> I was under the impression that someone else was taking care of them.
12:07:27 <Igloo> If you're prepared to fix them up then go for it  :-)
12:07:49 <SyntaxNinja> do you have a TODO list?
12:08:29 <SyntaxNinja> don't mean to step on your toes... aetion wants them packaged (maybe even before WASH!) and since they're probably closer to being ready...
12:08:45 <Igloo> OTTOMH, the deps are wrong, the build-deps are probably wrong and the package flags are probably wrong. The last one might be fixed by a new upstream version. Also, I think the library ought to be split into OpenGL and non-OpenGL halves like the C library underneath it.
12:09:39 <SyntaxNinja> so are you saying that there is a new upstream version?
12:09:40 <Igloo> I'm getting more and more convinced we really want libghc6-foo-bar-dev for the cabal package foo-bar, BTW
12:09:53 <Igloo> I think they are 0.6 and I think 0.7 exists
12:10:44 <Marvin--> Igloo: The -dev makes sense since everything's linked statically anyway, yes
12:11:22 <Marvin--> otoh, the package names will be long as it is
12:11:48 <Igloo> It's the possibility of shared libraries in the future which I think is the decider
12:11:52 <SyntaxNinja> man.
12:12:54 <Marvin--> Igloo: in wxhaskell, is the libwxc linked dynamically or statically?
12:14:50 <Igloo> Dynamically
12:15:15 <Igloo> Oh, your point being that should go ni something other than a -dev package?
12:15:22 <Marvin--> yes
12:15:42 <Igloo> Yes, it should, as Haskell WXH applications will be linked dynamically against it
12:15:42 <Marvin--> libwxc ought to be in the package libwxcN :)
12:16:13 <Igloo> Hmm, I wonder if libwxc is actually the best name for it
12:16:35 <Marvin--> meh, libwxc doesn't have a SONAME
12:16:36 <Marvin--> that's broken
12:16:37 <Igloo> I'm not sure if it's shared with whatever language it is the WXH bindings are generated from
12:17:01 <Igloo> Oh, SyntaxNinja: Also, if upstream hasn't done object splitting it's probably worth looking into how to do it
12:17:11 <SyntaxNinja> object splitting?
12:17:15 <Igloo> I should possibly mention object splitting in the policy
12:18:18 <Igloo> -split-objs flag. I can't see useful docs for it easily
12:18:51 <Marvin--> Igloo: have you looked at the packaging of the python bindings?
12:18:51 <Igloo> Basically it makes executables a lot smaller, though, if you don't use all of the functions in a library
12:19:13 <Igloo> The python WX packages? No
12:19:44 <Igloo> Nice talking to you too. Bye  :-)
12:21:21 * Marvin-- grumbles
12:22:51 <Igloo> Looks like python has /usr/lib/python2.3/site-packages/wxPython/wxc.so
12:23:17 <Igloo> But I don't think that would work as well for us as our compiled binaries need to find it too
12:23:55 <SyntaxNinja> wxhaskell doesn't seem to build w/ libwxgtk2.5-dev
12:23:57 <Marvin--> I'm pretty sure those .so files are python modules though
12:24:10 <Igloo> What does that mean?
12:24:15 <SyntaxNinja> but needs 2.4-dev
12:24:30 <SyntaxNinja> (still building...)
12:24:54 <Igloo> Ah, it's Eiffel that WXH is based on, and that doesn't seem to have bindings in Debian
12:25:18 <Marvin--> they can be directly imported from python scripts and act and behave like normal python modules, but are written in C
12:25:20 <Igloo> Syn: Have you added "DTRT with the .so" to the earlier TODO list?
12:25:41 <Igloo> OK
12:26:01 <Igloo> I don't really see that the python bindings teach us anything useful, then?
12:26:17 <Marvin--> perhaps not
12:26:28 <Marvin--> I'm uncertain what the libwxc.so is supposed to do
12:27:37 <SyntaxNinja> Igloo: what's DTRT?
12:27:42 <Marvin--> Do The Right Thing
12:27:43 <Igloo> Do The Right Thing
12:28:08 <Marvin--> SyntaxNinja: I wouldn't bother with wx 2.5 just yet, it's still in experimental, isn't it?
12:28:53 <Marvin--> what I do know is that a library in /usr/lib should be a shared library with a proper SONAME
12:29:18 <SyntaxNinja> Igloo: I'm not sure what the right thing with the .so is, but I'll add it to the list :)
12:29:37 <Igloo> SyntaxNinja: Hey, if I knew I'd have told you  :-)
12:29:48 <Marvin--> we're not sure either, that's why it's TODO ;)
12:30:13 <Igloo> It's things like this when I was looking at it last that meant it never got out of HE into Debian  :-)
12:30:57 <Igloo> But if gcc doesn't make my life hell again I'll hopefully have some time for other libraries and things shortly
12:31:23 <Igloo> (2 arches left to port to, both should be routine)
12:32:06 <Marvin--> "rain keeps tourists away" ... well DUH
12:32:45 <Marvin--> so we've had a rainy summer, boo-fucking-hoo
12:36:52 <Marvin--> now where was I
12:37:11 <Riastradh> Right here.
12:37:46 <Marvin--> oh, goody
12:42:46 <SyntaxNinja> but can you give me any hints about what the wrong thing with the .so looks like?
12:43:37 <Marvin--> well, it's not a proper shared library
12:43:41 <Marvin--> it doesn't have a SONAME
12:44:09 <Marvin--> lintian will probably tell you stuff about it
12:44:21 <Igloo> I think the name is a bit too generic too, but you'd ideally want upstream to agree with that
12:44:29 <Igloo> Also, it should be in a separate package
12:44:56 <SyntaxNinja> the library should be in a separate package from... ?
12:45:11 <Igloo> From the Haskell bits
12:45:27 <Igloo> Oh, or is it already?
12:45:41 <Marvin--> yeah, but with a bad name
12:46:07 <Marvin--> libwxhaskell0.6-ghc6 contains /usr/lib/libwxc-0.6.so
12:46:22 <Marvin--> libwxhaskell-ghc6-dev contains the rest
12:46:23 <Igloo> Right, I got confused by this machine having only libwxhaskell0.6-ghc6 installed
12:46:34 <Igloo> So it just needs to be renamed
12:47:06 <SyntaxNinja> the library, or the package?
12:47:17 <Igloo> And libwxhaskell-ghc6-dev wants to be renamed to libghc6-wxhaskell-dev too
12:47:33 <SyntaxNinja> as usual, I apologize for being flaky on IRC. it's hard for me to give it 100% attention at work, though I am actually working on work stuff right now, so I guess I should...
12:47:49 <Marvin--> and it should be properly cabalised ;)
12:48:06 <Marvin--> I don't think it should stick the libs and imports directly under /usr/lib but in a subdir
12:48:12 <Igloo> Source package libwxhaskell should make libghc6-wxhaskell-dev and libwxc0.6 (or whatever the soname is)
12:48:26 <SyntaxNinja> yea cabal!!
12:48:54 <Marvin--> Igloo: there *is* no soname
12:49:03 <Marvin--> the 0.6 comes from the package version
12:49:19 <Igloo> There will be one though, no?
12:49:42 <Marvin--> yes, but I think this is something that should be discussed with upstream too
12:50:22 <Igloo> Sure, but that's the sort of package name we'd want
12:51:10 * Igloo realises I completely omitted discussion of where to put libraries from the policy
12:51:20 <Marvin--> lib[renamed]0 or something, yes
12:52:12 <Marvin--> Igloo: cabal puts .a and .o files in $prefix/lib/$cpackage-$cversion, and .hi files too (but as a directory structure for hierarchical libs of course)
12:52:18 <Marvin--> (no imports dir)
12:52:49 <Marvin--> I'm not sure that makes sense
12:53:02 <Igloo> What would you expect $prefix to be for Debian?
12:53:05 <Marvin--> how does nhc deal with libraries?
12:53:08 <Marvin--> Igloo: /usr of course
12:53:23 <Igloo> I don't think we should fill /usr/lib like that
12:53:30 <Igloo> Oh, wait, I misread
12:54:03 <Igloo> Right, so we need a compiler component in there, as I think I said last time we had this discussion  :-)
12:54:09 <Marvin--> /usr/lib/Cabal-0.1/libHSCabal.a, /usr/lib/Cabal-0.1/Distribution/Simple.hi  etc.
12:54:23 <Marvin--> yes, I agree, and I don't understand why Cabal doesn't do that
12:55:05 <Igloo> Hmm, capital letters. I guess we just assume there won't be collisions if we lower case everything.
12:55:24 <Marvin--> shouldn't be a problem
12:55:56 <Marvin--> I don't see why hc-pkg should be case-sensitive on package names
12:56:03 <Marvin--> but possibly case-preserving
12:56:39 <Marvin--> I think /usr/lib/$compilerdependent/$cpackage-$cversion/libHS$cpackage.a makes more sense
12:57:24 <Marvin--> nhc seems to use libHSbase.a for the base package too, and some weird .o files and .a files for other stuff
12:58:02 <Marvin--> 'course, hugs doesn't split it up by package at all
12:58:15 <Marvin--> gnnggh
12:58:21 <Igloo> It'll have to for cabal packages as they can overlap
12:58:25 <SyntaxNinja> you think cabal should add a compiler component to the directory under /lib?
12:58:38 <Marvin--> this wouldn't be such a bigass problem if we had One True Implementation ;)
12:58:58 <Igloo> For Debian we want to be able to tell cabal which directory to put $cpackage-$cversion/ in
12:59:06 * SyntaxNinja won't touch that one, Marvin--
12:59:43 <Marvin--> SyntaxNinja: yes, I think for e.g. ghc it makes sense to put them in /usr/lib/ghc6.2.1/packages/$cpackage-$cversion
13:00:19 <Marvin--> I have no frickin' idea how (if at all) cabal will play nicely with hugs and nhc
13:00:30 <Marvin--> are there any plans of attack for how hugs and nhc will support cabal?
13:00:32 <Igloo> Can you get the ghc/nhc/hugs guys to agree if you are going to be making a packages/ inside "their" directory please?
13:01:22 <Marvin--> well, theoretically we can put things wherever we like, as it's the package.conf that tells the compilers where to look
13:01:46 <Marvin--> (or, rather, the compiler-dependent state maintained by hc-pkg)
13:01:50 <Igloo> Yes, but we want the compilers not to put their own stuff there
13:02:17 <SyntaxNinja> Marvin--: can that be over-ridden w/ the prefix flag?
13:02:43 <Marvin--> Igloo: true
13:03:06 <Marvin--> SyntaxNinja: yes and no, the prefix flag is a very typically autoconf:ish unixy /usr tree
13:04:39 <Marvin--> another idea would be /usr/lib/haskell-libs/$implementation/$cpackage-$cversion
13:05:06 <SyntaxNinja> I would tend toward that one
13:05:11 <Marvin--> or /usr/lib/$implementation-libs/$cpackage-$cversion
13:05:32 <Igloo> $implementation has to include an appropriate amount of version number
13:05:44 <SyntaxNinja> Marvin--: I don't understand your answer about the prefix flag
13:06:11 <Marvin--> Igloo: yep
13:06:37 <Marvin--> Igloo: to be honest, the way binaries change between every version of ghc, they are all different implementations ;)
13:06:47 <Igloo> Heh
13:07:20 <Marvin--> SyntaxNinja: given --prefix=somewhere, we install executables in somewhere/bin and libs in somewhere/lib/$cpackage-$cversion
13:07:41 <SyntaxNinja> ja
13:07:41 <Marvin--> which is a very unixy world view, and it's exactly how --prefix is used by autoconf
13:08:14 <Marvin--> we need a haskell-on-windows hacker on the cabal team
13:08:30 <Marvin--> but I don't know anybody doing haskell on windows
13:09:27 <Igloo> Get it working on Linux and I'm sure one will pop up, but it's probably not worth advertising beforehand
13:09:43 <Marvin--> I suppose for windows, binaries should be put in <look up the program files directory in registry>\$cpackage\foo.exe and stuff
13:10:07 <Marvin--> hey, that's a good question, do we have registry bindings for haskell anywhere?
13:10:21 <Marvin--> without them, it'll be tricky :)
13:10:27 <Marvin--> kinda SEP though
13:10:49 <Marvin--> I wonder how distutils works on windows
13:12:46 <shapr> heya bringert, have you tried to hack hierarchical lib support into GF?
13:13:29 <SyntaxNinja> grahm klyne  (sp?) seems to be a good windows-cabal-hacker candidate
13:14:25 <Marvin--> good
13:15:22 <andersca> !yow
13:15:58 <Marvin--> andersca: tsk tsk
13:16:06 <andersca> doh
13:16:10 <andersca> I am such a moron
13:16:15 <andersca> @yow
13:16:16 <lambdabot> WHOA!!  Ken and Barbie are having TOO MUCH FUN!!  It must
13:16:16 <lambdabot>  be the NEGATIVE IONS!!
13:22:19 <bringert> shapr: nope, but it seems quite easy to do
13:22:40 <bringert> sounds like something I could do on a slow day
13:23:15 <shapr> I'm moving infra/ over to Infra. right now
13:23:22 <shapr> GF is much much larger than I thought it was...
13:24:04 <bringert> some 32000 loc I think
13:26:04 <Marvin--> yikes
13:26:14 <bringert> not all directories can be turned into hierarchical libraries though, some are used for conditionl compilation
13:26:32 <bringert> but that's only the for-* dirs, I think
13:28:47 <bourbaki> hi
13:28:49 <bringert> shapr: are you going to send us a nice patch for that?
13:29:14 <bringert> hmm, maybe you should have the latest cvs version if you're doing that
13:32:33 <aFlag> whats a better way to do this: http://rafb.net/paste/results/ymyfs284.html ?
13:32:35 * shapr agrees!
13:32:49 <shapr> sure, I'll send a patch
13:32:55 <shapr> it seems to be compiling now, yay!
13:34:42 * shapr waits for it all to compile
13:36:18 <shapr> I'm just doing this so I can load it into GHCi. What is now Infra.Assoc was conflicting with some other Assoc.
13:39:07 <aFlag> :-/
13:40:05 <shapr> I wonder if HaRe can automate this....
13:49:05 <shapr> hiya norpan 
13:53:33 <bringert> shapr: latest GF CVS uses a lot less memory, esp. when loading .gf grammars
13:56:19 <bringert> shapr: it's at http://www.cs.chalmers.se/~bringert/gf/GF-2.0-20040726.tar.gz if you want it
14:06:39 <shapr> spiffy, I'll grab it
14:06:42 <shapr> hiya Philippa 
14:08:11 <shapr> yay, Infra.* works
14:08:20 <shapr> now to try it in GHCi
14:09:06 <bringert> shapr: in case you are looking for soe fun debugging work, try compiling GF with profiling (make prof) and load a .gfc grammr
14:09:16 <bringert> then figure out why it segfalts :)
14:09:22 <Philippa> 'lo shapr
14:09:37 <shapr> only prof segfaults?
14:09:38 <bringert> stupid wireless keyboard
14:09:41 <bringert> yep
14:09:45 <shapr> weird
14:09:50 <shapr> that's gotta be a GHC bug
14:10:09 <bringert> I think so too
14:10:14 <shapr> I have Igloo's ghc-cvs debs handy, that might be interesting to test -prof with
14:10:26 <bringert> oh, cool
14:10:54 <bringert> you might want to test with 6.2.1 too, just in case it's something weird on my machine
14:11:02 <shapr> will do
14:11:38 <bringert> maybe the underpants gnomes trojaned my ghc
14:11:42 <bringert> you never know
14:11:45 * shapr grins
14:14:02 <SyntaxNinja> Igloo: so what is in all the wxcore library files?
14:14:48 <shapr> can I use -v with :load ?
14:15:05 <Igloo> SyntaxNinja: Can't remember - haven't looked at WXH for ages
14:15:28 <Igloo> shapr: :set -v or ghci -v perhaps?
14:15:41 <SyntaxNinja> so the names are all kinda strange, is this one of the thigns you wanted to clean up? like why is it libwxc-...?
14:15:51 <shapr> Igloo: aha, :set -v works
14:17:02 <SyntaxNinja> instead of libwxhaskell or something
14:17:11 <Igloo> Well, I think it would be bad if the names weren't in sync with upstream
14:17:45 <Igloo> But for the things that are in /usr/lib s/wx/wxhaskell/ would be nice, I think
14:22:10 <SyntaxNinja> isn't there any worry about including things like /usr/lib/wx.o ?
14:22:24 <SyntaxNinja> I mean, it seems like they'll be stomped on by some other wx-related package someday
14:23:00 <Igloo> Exactly
14:23:16 <SyntaxNinja> maybe I'm running behind on the discussion, but what if we just changed the install location of these files to /usr/lib/wxhaskell/...
14:23:31 <SyntaxNinja> this is besides what cabal intends to do.
14:23:34 <Igloo> Then the dynamic linker wouldn't find them
14:23:44 <Igloo> These aren't Haskell libraries, don't forget
14:24:02 <SyntaxNinja> IC
14:25:33 <SyntaxNinja> so the Right Thing would be to ask upstream what they think about s/wx/wxhaskell ?
14:25:41 <Igloo> I think so
14:25:53 <SyntaxNinja> what do you mean "these aren't haskell libraries"?
14:26:22 <SyntaxNinja> you mean the wx libraries include non-haskell components?
14:27:58 <Igloo> I haven't looked at exactly what it does, but I imagine it's wrapping the wxwidgets API in a way more amenable to making Haskell bindings
14:28:05 <Igloo> So is written in C
14:29:01 <SyntaxNinja> do you think the ftpmasters or anyone will object to the wxhaskell with the library names as they stand?
14:29:45 <Marvin--> SyntaxNinja: libwxc is non-haskell
14:30:09 <Marvin--> I think it best to put the .a and .o files in /usr/lib/wxhaskell so as not to pollute /usr/lib
14:30:23 <Marvin--> or, well, /usr/lib/wxhaskell-ghc6, or /usr/lib/ghc6.2.1, or ...
14:30:29 <SyntaxNinja> but the .so libraries in /usr/lib?
14:31:08 <Marvin--> if it's a shared library it should be in /usr/lib and have a proper SONAME, since haskell programs using wxhaskell will link it dynamically
14:31:21 <SyntaxNinja> right.
14:31:32 <SyntaxNinja> OK... i'll contact upstream
14:33:29 <Igloo> Little is gained by moving the .o and .a out if the .so remains - we claim the set of names regardless
14:34:31 <SyntaxNinja> does anyone here follow the wxhaskell mailing lists? i'm curious if this has been talked about already
14:34:59 <Igloo> I have a vague recollection of it, but don't recall if it was here or there
14:35:16 <Igloo> The lists are very quiet anyway so just looking back through them should be painless
14:37:23 <Marvin--> Igloo: well, I object to using /usr/lib/imports directly too
14:38:09 <Igloo> Yes, but the policy we don't quite have will say where they should go  :-)
14:38:24 * Igloo goes to make a TODO list before I forget everything again
14:40:03 <Igloo> * Location of libraries/interface files
14:40:04 <Igloo> * More detail on ABI issues
14:40:04 <Igloo> * Recommendation of test suite in a standard place (debian/haskell-testsuite/?)
14:40:08 <Igloo> Anything else?
14:40:27 <Igloo> Did you see my mail (to your gmail account) BTW, SyntaxNinja?
14:44:29 <Marvin--> hmm, I've only glanced through it, I'll probably have more to add to that todo after a thorough read
14:44:58 <SyntaxNinja> Igloo: the haskell-policy one?
14:45:16 <SyntaxNinja> Igloo: yeah, sorry. I didn't look closely at it yet.
14:46:53 <Igloo> OK, no worries, I just lost track of what mail you could read nowadays  :-)
14:47:34 <Igloo> Marvin--: No rush; it'll need some cabal decision made before it can be complete anyway
14:47:45 <Marvin--> Igloo: the /usr/bin/haskell-compiler section looked pretty good though
14:47:58 <Igloo> Oh, I was going to add a section on how to actually create debs when we had a way of doing it too
14:48:10 <SyntaxNinja> what do you guys think the soname should be?
14:48:22 <SyntaxNinja> Igloo: heh yeah. I'm confused myself today.
14:48:31 <Marvin--> though I don't know what haskell-utils is
14:49:16 <Marvin--> SyntaxNinja: libwxc.so.0? and then increased when the abi changes?
14:49:34 <Igloo> It basically takes care of registering compilers with hmake at the moment
14:49:50 <Marvin--> it's pretty standard library packaging stuff
14:50:22 <SyntaxNinja> any comments on why -package wx doesn't work w/ ghci? is it just htat you didn't set it up w/ ghc-pkg?
14:50:58 <Marvin--> read logs from yesterday
14:52:36 <SyntaxNinja> ok
14:53:33 * SyntaxNinja goes home
14:55:55 * Marvin-- groans at having to update lots of test cases
15:09:30 * shapr watches make prof chug along
15:14:24 * bringert watches shapr chug along
15:15:39 <shapr> ok, it's built...
15:16:18 <shapr> i MoreTestSwe.gf works fine
15:16:20 <shapr> with ghc 6.3
15:16:29 <shapr> that's with make prof
15:17:32 <shapr> ok, now to build with 6.2.1
15:17:45 * shapr starts the chugging  again
15:19:59 <Igloo> This must be a respectable chunk of code if it's making shapr's beast chug
15:21:47 <shapr> Igloo: rumor has it I may be getting my dream beast...
15:22:38 <Igloo> Mmmm, nice
15:24:10 <bringert> nasty lockup that
15:24:39 <Marvin--> shapr: what's that?
15:26:29 <shapr> there's a possibility I'll get that 4-way opteron I've been dreaming of :-)
15:26:35 <Marvin--> heh
15:27:52 <shapr> I just have to keep up with my American workaholic ways...
15:38:47 <Marvin--> ooh, now I understand how I could've lost 14 test cases by commenting out just a few lines
15:39:04 <Marvin--> TestList [ ... | ... ]  is a lot of test cases
15:39:11 <shapr> after make prof with both 6.2.1 and 6.3, I can load MoreTestSwe.gf just fine
15:39:20 <shapr> bringert: what are you loading that crashes?
15:39:55 <bringert> try loading it again now that it has been saved as .gfc
15:40:03 <shapr> ok
15:40:11 <bringert> or give it any .gfc file on the command line
15:40:18 <shapr> whoa
15:40:25 <Igloo> Marvin  :-)
15:40:27 <shapr> 6.2.1 segfaults immediately
15:41:00 <Igloo> But it worked with -cvs, right?
15:41:03 <shapr> 6.3 also segfaults
15:41:10 <Igloo> Ah
15:41:38 <bringert> I noticed that if you give it an empty grammar it works, but as soon as there is a cat and a lincat it segfaults
15:41:47 <shapr> it gets down to "+ reading swedish/../../prelude/Coordination.gfc 83 msec" in both cases
15:41:51 <shapr> interesting
15:43:35 <Marvin--> meh, these test cases need to be rewritten from the ground up
15:45:04 <bringert> shapr: I'm off to bed. if you figure this one out, you're very likely to see a faster GF in the future
15:45:29 <stepcut> shapr: where is the best place to get GF (for debian...), some darcs repo ?
15:47:16 <shapr> I get my fix from bringert 
15:47:26 <shapr> bringert: I'll play around with it, see if I come up with something
15:48:12 <andersca> do you get your mfix from bringert too?
15:48:18 <Igloo> Unless you are using the FFI, a segfault probably wants to be reported to that nice Mr Marlow
15:48:27 <Marvin--> andersca: dude, you've got to lay off with the bad jokes
15:48:55 <Igloo> Marvin--: Are you saying there's too much punning going on around here?
15:48:59 <Marvin--> I thought I told you I had a patent pending on it
15:49:07 <shapr> patent punding?
15:49:23 <andersca> I don't know any other jokes :(
15:50:02 * shapr runs 'fgrep -r unsafe *' in the GF dir
15:50:24 <shapr> aha, unsafeCoerce#
15:50:37 <Marvin--> eep, speaking of punning
15:50:45 <Marvin--> and there's the troll
15:51:18 <andersca> where?
15:51:29 * Marvin-- points at unsafeCoerce#
15:52:02 <Marvin--> that nice mr Marlow kindly pointed out to me that something I thought was a bug, in fact wasn't
15:52:32 <Marvin--> too bad that the feature (or limitation, or whatever you want to call it) makes -hidir and -odir utterly useless for me
15:52:35 <Marvin--> oh well
15:52:35 <shapr> hmm, these unsafeCoerce# calls are from a Happy generated parser.
15:53:13 <shapr> any noticeable bugs fixed between happy 1.11 and 1.14 ?
15:53:22 <shapr> specifically, any segfault-causing bugs?
15:53:27 * shapr looks at the happy changelog
16:16:51 <aFlag> the haskell tutorial should have answers for its exercices
16:17:59 <Marvin--> hah, exercise answers is for the WEAK
16:19:39 <aFlag> i'm weak :(
16:19:48 <Marvin--> heh
16:22:21 <aFlag> first off, what's the best way of doing this http://rafb.net/paste/results/ymyfs284.html ?
16:22:56 <Igloo> Use records
16:23:17 <Igloo> data Tuple a b c d = Tup1 { tuple1 :: a } | Tup2 {tuple1 :: a, tuple2 ::  b} ...
16:23:37 <Igloo> Oh, that won't give you the Nothings
16:24:21 <aFlag> hum... well i guess that was the best way to do it with what was shown in the tutorial so far
16:24:27 <Igloo> In Haskell 98 that might be as good as you get
16:25:05 <titanstar> is there a tuple-to-list function in haskell?
16:25:29 <Fractal> (\(x,y) -> [x,y]0
16:25:30 <Fractal> :)
16:25:33 <Fractal> (\(x,y) -> [x,y])
16:25:44 <titanstar> for general tuples
16:25:58 <titanstar> i guess that would be hard because of the type system
16:26:04 <Fractal> Hmm ya I duno
16:26:20 <Marvin--> there is no such thing as a "general tuple" in Haskell
16:26:28 <Marvin--> Template Haskell could do it, I guess
16:26:50 <titanstar> yeah, it isn't a type, therefore a function can't have that signature
16:26:56 <Igloo> Or you could have a toList class
16:27:51 <titanstar> but then you'd have to add tuples of all lengths as instances
16:28:31 <Riastradh> Start typing.
16:28:40 <titanstar> :)
16:29:02 <Fractal> Is there a limit to the number of elements in a tuple? 7?
16:29:22 <Riastradh> There's probably not _supposed_ to be a limit, but there probably is.
16:29:23 <titanstar> i think not
16:29:29 <Igloo> 7 is the minimum largest size for which various classes are required I think
16:29:32 <Riastradh> ...in most implementations, taht is.
16:29:34 <Riastradh> That is, even.
16:29:47 <Fractal> igloo : that sounds right
16:30:16 <Igloo> But yeah, ideally there would be no limits, but in practice I believe all impls have one
16:30:27 <Marvin--> No instance for (Show (Char, Char, Char, Char, Char, Char))
16:30:36 <Marvin--> I suppose it's 5 :)
16:31:04 <Riastradh> Prelude> (,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,)
16:31:07 <Riastradh> ERROR - Illegal application of record
16:31:08 <Riastradh> (from Hugs)
16:33:39 <stepcut> I bet you could convert tuples -> lists -> tuples using the generics stuff
16:34:42 <Marvin--> heh, ghci's pretty printing really gets screwed up by these kind of tuples
16:34:42 <stepcut> a variation on gshow and gread
16:34:50 <Riastradh> It appears that Hugs' limit is 98 element tuples.
16:34:59 <Marvin--> 98 eh? :) funny
16:35:02 <stepcut> heh
16:35:23 <Igloo> So I guess when Haskell 2 comes with be stuck with 2-tuples
16:35:30 <stepcut> hah
16:35:52 <aFlag> <interactive>:1:
16:35:53 <aFlag>     A 69-tuple is too large for GHC
16:35:53 <aFlag>       (max size is 62)
16:35:53 <aFlag>       Workaround: use nested tuples or define a data type
16:36:05 <aFlag> from ghc
16:38:36 <Cale> sorry everyone, I *think* I found out what was happening :)
16:38:38 <Marvin--> I wrote a little functional langauge with type inference once, it only had pairs, no triples or other fancy tuples
16:38:49 <Marvin--> but I think the key there was that the compiler writer was lazier than the language
16:39:58 <Igloo> :-)
16:41:31 <Marvin--> so I was reading through a collection of mails regarding why restricted type synonyms aren't in haskell98
16:42:08 <Marvin--> basically it looked like everybody agreed that newtype sucked but that they couldn't agree on how to fix it, so it's still not fixed
16:42:14 <Marvin--> gotta love design-by-comittee :-(
16:43:29 <Igloo> Go on then Marvin, make us a Haskell 2 and show us how it is done!  :-)
16:43:32 <andersca> Marvin--: my language had algebraic datatypes!
16:43:43 * SyntaxLaptop votes for haskell 2
16:43:46 <Marvin--> andersca: showoff
16:44:23 <andersca> and it had type inference
16:44:34 <andersca> but no pattern matching :(
16:44:50 <Marvin--> actually, I don't remember if we had algebraic data types
16:44:56 <Marvin--> but I'm pretty sure we had some kind of pattern matching
16:45:08 <andersca> I did have guards
16:45:18 <Riastradh> I bet your language didn't have all the built-in category theoretical operators.
16:45:41 <Marvin--> aargh, there you go with the c-word again
16:45:52 <Riastradh> Category theory! category theory! category theory!
16:46:01 * Marvin-- whimpers
16:46:26 <Riastradh> We are the knights who say...category theory! category theory!
16:46:34 <Riastradh> Brrrring me...a shrubbery!
16:46:52 <tautologico> category theory !
16:47:04 <Marvin--> you're a looney
16:47:05 <Riastradh> A coshrubbery, that is.
16:47:26 <Riastradh> With some nice exofunctors planted in it, but not too many adjuncts.
16:47:34 <Cale> Or a rubbery hyperbolic cosine
16:48:00 <Marvin--> I bet you learned category theory just so you could make horribly bad jokes about it
16:48:09 <Riastradh> I learned category theory?
16:48:11 <Riastradh> When was this?
16:48:26 <Marvin--> oh, my bad
16:49:04 <Marvin--> meh, darcs send --dry-run shows five unpushed patches
16:49:11 <Marvin--> SyntaxLaptop: get on with it already ;)
16:49:28 <Riastradh> I intend to at some point, but I don't need to learn it to have a massive arsenal of scary category theoretical terminology.
16:50:36 <mattam> what's the semantic difference between acutely and accurately ?
16:50:36 <SyntaxLaptop> Marvin--: oh, you want me to push your patches? ;)
16:50:44 * mattam is OT
16:51:01 <Marvin--> if they look okay
16:51:44 <SyntaxLaptop> Marvin--: which 5 are missing?  I only see 2
16:52:37 <Marvin--> I haven't sent the other three because they depend on the first two
16:53:15 <SyntaxLaptop> heh OK
16:53:20 <SyntaxLaptop> I'm checking it out now...
17:04:53 <Marvin--> I'm off to bed, I'll send the other patches tomorrow if all goes well
17:05:22 <Marvin--> or should I just send a new patch bundle with all five patches and let you sort that out yourself?
17:10:15 <SyntaxLaptop> Marvin--: yeah, send 'em
17:10:23 <SyntaxLaptop> the ones I just applied look OK so far.
17:10:58 * Igloo does the cabal hacker appreciation dance
17:11:55 <Marvin--> SyntaxLaptop: okay, sent
17:12:14 <SyntaxLaptop> sweet
17:16:45 <Marvin--> night guys
17:20:43 <SyntaxLaptop> hm. I'm getting an error on his patch about the hash. I have the feeling it has something to do w/ character encodings
17:27:17 <SyntaxLaptop> it's his name :( does anyone know what encoding he'd be using?
17:32:45 <Igloo> unicode (utf8) probably
17:47:28 <titanstar> or iso8859-1
17:47:42 <titanstar> that would be the common encodings used in scandinavia
17:49:15 <SyntaxLaptop> no dice :(
17:49:23 * SyntaxLaptop wonders if it's a darcs bug somehow
18:52:46 <shapr> wabbits?
18:54:03 <Cale> sorry - that was me fighting with my IRC client - I only wanted to join #math as wabbits
18:54:21 <shapr> ah, I see
18:54:51 <Cale> jep was hunting wabbits, so I thought I'd give him a target
18:55:06 * shapr grins
18:55:08 <shapr> g'day dons 
18:57:03 <SyntaxLaptop> hihi shapr
18:57:12 <shapr> hiya SyntaxLaptop 
18:57:53 <dons> hey shapr
18:58:37 <dons> hey. who's maintaining lambdabot these days?
18:58:39 <shapr> bringert: it must be happening somewhere after line 184 of compile/Compile.hs
18:58:42 <shapr> I guess I am.
18:58:58 <shapr> you need some lambdabot tech support?
18:58:58 <dons> ok. I'll send you a few new modules
18:59:02 <shapr> spiffy :-)
18:59:16 <dons> nope. just been hacking on it :)
18:59:20 <shapr> awesome!
18:59:24 <shapr> can I pull your changes?
18:59:34 * SyntaxLaptop is so happy that Marvin-- has been hacking on cabal
18:59:42 <SyntaxLaptop> we're really really close to a release!
18:59:46 <shapr> yay!
18:59:58 <dons> not at the moment. but they are at http://dons.web.cse.unsw.edu.au/~dons/code/lambdabot/
19:00:21 <shapr> ohh, Babel?
19:00:30 <shapr> MiniHTTP??
19:00:35 <dons> heheh
19:00:54 <dons> send lines off to babelfish to translate
19:01:20 <dons> another is a version of eval that instead used plugs to eval full haskell (- IO)
19:01:26 <shapr> PlugsModule?
19:01:30 <shapr> ohh, nifty
19:01:36 <shapr> how'd you limit IO?
19:02:05 <dons> 1) code must have purely functional type. and they don't get access to unsafePerformIO
19:02:18 <dons> see paper on hs-plugins for how to do this ;)
19:02:18 <shapr> they can still beat it with unsafeCoerce
19:02:25 <dons> don't have access to it
19:02:32 <shapr> what about ffi?
19:02:36 <dons> nope
19:02:41 <shapr> template Haskell?
19:02:51 <dons> um.. don't think so. 
19:02:59 <shapr> you can still get out of the sandbox with TH :-)
19:03:07 <shapr> anyway, it's just past 4am, I gotta crash
19:03:07 <dons> I guess you could
19:03:12 <shapr> this is fun, I'll play with it tomorrow :-)
19:03:18 <dons> cheers. I'll polish it up and send you somje code
19:03:22 * shapr cheerfully bounces off to sleep
21:11:13 <aFlag> hum... i don't get these 4.6 and 4.7 exercises from the haskell tutorial
21:11:33 <skew> which tutorial?
21:12:04 <aFlag> yet another haskell tutorial
21:13:28 <aFlag> i've done 4.6 like this http://rafb.net/paste/results/iaAw7415.html
21:13:34 <aFlag> which works but looks bad
21:15:10 <aFlag> now on 4.7 it wants a function that takes a Tuple (the datatype defined on 4.6) and returns a value if it's a Tuple with 1 value, a haskell 2-tuple if it's a Tuple with 2 values and so on
21:15:22 <aFlag> and it asks to use the datatype Either
21:15:34 <aFlag> i simply didn't get how that's supposed to work
21:15:46 <skew> you can't return a bunch of different types from a function
21:16:42 <aFlag> that was what the exercise wanted
21:16:43 <skew> so you actually need to make a type with Either that has the different tuples tagged up
21:17:03 <aFlag> hum... how would that work?
21:17:24 <skew> the only haskell type including (a,b) and (a,b,c) is forall a.a, which is pretty useless
21:18:24 <skew> you use Either to make a type that has the four sizes of tuples you need
21:18:55 <skew> so your function actually returns a value tagged with the right sequence of Left and Right, or a pair tagged differently, etc.
21:20:19 <skew> I don't think there is a better way of doing 4.6
21:20:39 <skew> except that DrIFT can derive some proejction functions like that if you used labelled fields
21:21:03 <aFlag> hum...
21:21:19 <aFlag> i didn't quite get how the 4.7 is supposed to work yet
21:21:47 <aFlag> what do you mean by using either to make a type that has the four sizes tuples?
21:21:54 <skew> how can you make a function that returns a character or an integer using Either in the return type?
21:22:12 <aFlag> i don't know, that's my question :P
21:22:38 <aFlag> i didn't get how should i define that new type you told though
21:25:33 <skew> suppose you want a function that gives you back 'a' if you pass True, or 1 if you pass False
21:25:45 <aFlag> ok
21:25:53 <aFlag> that's easy
21:26:05 <skew> how does that go?
21:26:33 <aFlag> f b = if b then Left 'a' else Right 1
21:26:52 <skew> okay, so extend that to four return types
21:27:55 <skew> you need to nest Either tyeps
21:27:59 <aFlag> i can't see how to do that using the defined tuples
21:28:13 <skew> you are supposed to return real Haskell tuples
21:28:51 <skew> destructuring your Tuple is just a simple case expression, right?
21:29:31 <aFlag> how's that?
21:30:10 <skew> case arg of Tuple1 x -> <stuff involving x>; Tuple2 x y -> <stuff involving (x,y) ...
21:30:38 <aFlag> hum... i see
21:31:12 <aFlag> now i think i get it
21:31:43 <aFlag> but where does Either come in then?
21:31:56 <skew> each of the branches wants to return a different type
21:32:05 <skew> try it and see what the compiler says about it :)
21:32:30 <aFlag> ok hehe
21:32:32 <Cale> btw, for those interested in Category theory: http://katmat.math.uni-bremen.de/acc/acc.pdf
21:37:55 <aFlag> i guess it make sense it can't return any value, since it's static typed
21:38:07 <skew> but you fixed it up in f
21:38:17 <skew> you took Either _ _ and filled in some types
21:39:01 <skew> here you can use Either (Either _ _) (Either _ _)
21:40:24 <aFlag> yeah, i've done that already
21:40:32 <aFlag> it worked
21:40:49 <skew> I thought you still had a problem?
21:41:04 <aFlag> yeah, it still looks kinda wierd hehe
21:41:40 <skew> I don't think that can be helped
21:42:00 <aFlag> yeah it takes time to get used to a new kind of thinking i guess
21:42:01 <skew> maybe you could use dyamic
21:42:26 <skew> but Dynamic doesn't seem right
21:54:11 <Habs24> Kind of off-topic, but did anyone see the Democratic Convention today?
21:54:36 <aFlag> what's a democratic convention?
21:55:24 <aFlag> :(
21:55:45 <shrimpx> is it monadic?
21:56:05 <Habs24> aFlag - It's where Democratic figures gather together in front of an extremely large crowd and convince them why they should vote for Kerry.
21:56:12 <Habs24> Clinton was there.  He gave an amazing speech..
21:57:00 <aFlag> oh, Democratic as in that us political party
21:57:34 <aFlag> i don't know why they bother, the current president always get reelected
21:57:52 <aFlag> it didn't happen only once afaik
21:58:08 <Habs24> I don
21:58:21 <Habs24> *I don't know about that - Clinton's speech was convincing!
21:58:39 <Habs24> He admitted him, Bush and Dick were draft dodgers.
21:59:07 <aFlag> but he'll say anything
21:59:23 <aFlag> i'm not sure how trustful he is
22:00:48 <aFlag> trustworthy, i don't know, he surely shouldn't be trusted
22:01:41 <aFlag> but again, i'm not american, i don't live in the US and the president i voted last election lost, so...
22:01:48 <aFlag> i probably don't know better
22:04:20 <aFlag> aren't the elections not until 2006 though?
22:06:56 <Smerdyakov> Nope. November 2004.
22:07:19 <aFlag> do you guys vote?
22:08:18 <Smerdyakov> What?
22:08:48 <aFlag> what what?
22:09:10 <Smerdyakov> Are you asking individual Americans to tell you if they plan to vote in November?
22:09:17 <aFlag> i'm asking if you go there and vote or you stay at home laughing at the people who's going to vote
22:09:38 <Smerdyakov> I'm planning to go there and vote.
22:10:25 <aFlag> are you going for bush or kerry?
22:11:10 <Smerdyakov> Nader
22:11:26 <aFlag> nader? Is that the guy from the green party?
22:13:07 <Smerdyakov> Not anymore
22:14:23 <aFlag> here in brazil things are kinda stupid, we have to vote. I'd rather stay at home and sleep over
22:15:30 <aFlag> i don't believe in politics, the world would be much better without it
22:15:52 <Smerdyakov> Politics are all about propaganda.
22:16:27 <aFlag> politics only demonstrate how humans are dumb
22:17:33 <aFlag> i mean, the need to be commanded shows how incredible stupid we are
22:17:37 <Habs24> aFlag - the green is shit.
22:17:50 <Cale> Habs24: I'm not sure if I've seen you around here before. Are you learning Haskell, or just new here, or am I completely mistaken?
22:18:00 <Habs24> aFlag - politics gives us something to talk about. :)
22:18:13 <Habs24> Cale - I'm usually in the channel but rarely ever say anything.
22:18:26 <aFlag> i don't think any party other than republicans or democrats are ever going to win
22:18:30 <Smerdyakov> Habs24 is not one of us.
22:18:41 <Smerdyakov> He is a big C++ fan, and doesn't see why he oughtn't to be.
22:19:44 <aFlag> i think i never actually see someone saying that c++ is good
22:19:49 <aFlag> yet, it's all over the place
22:20:25 <Habs24> Cale - Why?
22:20:51 <Cale> Habs24: just wondering - if you were new to Haskell, I might direct you to various resources
22:21:02 <Habs24> aFlag - Those are the 2 dominant parties.  Nothing much you can do. :(
22:21:10 <Habs24> Cale - I know some.
22:21:22 <Habs24> Haskell.org.
22:21:23 <Habs24> :)
22:21:33 <aFlag> but now you lost your chance to see the various resources! :P
22:21:48 <Cale> http://www.isi.edu/~hdaume/htut/tutorial.pdf :)
22:21:57 <Smerdyakov> "Various resources" is a euphemism for things unmentionable in a family channel like this.
22:22:05 <aFlag> is that the yet another haskell tutorial Cale?
22:22:10 <Cale> yeah
22:24:09 <aFlag> what's haskell 2 people were talking about earlier? Is it under development or something?
22:24:50 <SamB> aFlag: well, there are some features we just about know it will have
22:25:03 <SamB> which are implemented
22:25:10 <Habs24> aFlag - You got a problem with C++, punk?
22:25:16 <Habs24> You have a problem with C++.
22:25:21 <Habs24> You have a problem with ME!
22:25:27 <Cale> haha
22:25:30 <Smerdyakov> You will need 2D glasses to read Haskell 2 code.
22:25:41 <aFlag> i don't know much about C++, but i've never seen anyone saying anything good about it hehe :P
22:27:01 <aFlag> 2D glasses are probably as hard to wear as balancing a piece of paper on top of your nose
22:27:15 <ozone> Smerdyakov: are they like monad glasses and arrow glasses?
22:27:21 <Habs24> aFlag - Go talk to a programmer with a job.
22:27:37 <Cale> Habs24: I'm a programmer with a job.
22:27:39 <aFlag> Cale: what do you think about c++?
22:27:46 <Cale> Uh, not much?
22:27:52 <Habs24> Cale - In the business world.  You know, with cubicles and suits?
22:28:08 <ozone> programmers wear suits?
22:28:18 <aFlag> i'm a programmer with a job, i work at mcdonalds
22:28:43 <aFlag> i wear a white and red uniform
22:29:00 <Habs24> ozone - If your company requires it, yes.  
22:29:01 <Cale> actually, I'm a mathematician with a job programming
22:29:05 <SamB> I thought programmers where supposed to wear wholy jeans and t-shirts
22:29:17 <Habs24> No.  Unless you're Steve Jobs.
22:29:27 <SamB> why not?
22:29:30 <Cale> and I'd like to think that the work I'm doing at the moment is pretty practical
22:29:41 <aFlag> gosh, i didn't know i had to wear a suit, i don't want to be a programmer anymore
22:29:46 <Habs24> SamB - Why yes?
22:30:13 <SamB> Habs24: I'm not saying why -- I don't want to do it, so why should I rationalize it?
22:30:31 <ozone> Habs24: i like wearing suits.  especially with nice dark sunnies
22:30:50 <Cale> Writing software to make MRI image processing faster seems not too far off from the business world.
22:30:55 <Habs24> Oh yes!  I can't imagine anything more rigorous than putting on a suit.
22:31:10 <Habs24> Oh, damn, the agony.
22:31:21 <Habs24> And the tie.  Please, not the tie!  
22:31:37 <Habs24> I don't want to do it!  I'm a damn cry baby!  
22:31:51 <Fractal> what a square
22:31:57 <Cale> heheheh
22:32:11 <Cale> Habs24: but would you wear a suit around the house?
22:32:13 <Riastradh> What silly jobs require a suit & tie?  I've never encountered a serious programming job that did.
22:32:15 <aFlag> yeah, damn suit
22:32:49 <Habs24> Cale - Yes.  I like looking in the mirror and going, "Damn I'm hot"
22:32:50 <Smerdyakov> Riastradh, suit and tie model
22:32:54 <aFlag> i go to work using leather pants and a open shirt
22:33:07 <Cale> aFlag: haha
22:33:11 <Habs24> Lol.
22:33:29 <Habs24> Obviously not Haskell programmers, because they don't have jobs.
22:33:34 <Habs24> Just Kidding!
22:33:49 <Smerdyakov> Such envy from this one
22:33:50 <Fractal> omgf who writes "Lol."? people who wear suits i guess
22:34:20 <aFlag> the mother nature wants us to be naked man
22:34:57 <Cale> But really, I don't see why anyone would put up with being forced to wear a suit. I can imagine wearing them if you really like them or something.
22:35:10 <aFlag> why would i cover myself? I'm not ashamed of my pale skinny body full of acnes!
22:35:52 <Riastradh> I don't see why anyone would _care_.  Programmers are supposed to write _code_, not show off their suits & ties.
22:35:59 <Habs24> Cale - Some companies require it, though dress codes have loosened.
22:36:00 <Cale> Riastradh: yeah
22:36:13 <Riastradh> Habs24, example?
22:36:15 <Cale> Habs24: then why work for them?
22:36:18 <Cale> heh
22:36:26 <Habs24> And Accountants are suppose to crunch numbers and yell at people.  They still wear suits.
22:36:28 <aFlag> Riastradh: you obviously didn't see the last programmers fashion week at paris
22:36:37 <Habs24> Riastradh - Of what?
22:36:47 <Habs24> Cale - Because they pay you.  
22:36:48 <Riastradh> Of a company that requires a suit & tie.
22:36:57 <Habs24> And if they pay you well, then, I'll wear whatever they want.
22:37:13 <Habs24> Riastradh - The Men's Warehouse.
22:37:24 <aFlag> you sell yourself for money, that's what you saying, righ Habs24?
22:37:25 <Riastradh> This is a software company...?
22:37:29 <Habs24> The Hong Kong Telephone Company.
22:37:37 <Habs24> aFlag - How much money are we talking about?
22:37:41 <Smerdyakov> aFlag, unfortunately, this is a common view in the USA.
22:38:03 <Habs24> I'm not in the US.
22:38:08 <Habs24> I'm in Quebec City.
22:38:12 <Habs24> Can't you see my name?
22:38:17 <Habs24> "Dagenais"?
22:38:22 <aFlag> that says a lot
22:38:25 <Riastradh> My last name is Campbell.  That doesn't mean I'm in Scotland.
22:38:39 <Smerdyakov> Habs24, I thought so, but then you were talking about Texas!
22:38:39 <aFlag> my best friend is called Dagenais, does it mean he lives in quebec?
22:38:56 <Habs24> aFlag - Oh really?  Is that his first name?
22:39:07 <aFlag> i'm just making a point here
22:39:34 <Habs24> Interesting Fact: Quebec is over 2 times the size of Texas Geographically!
22:39:35 <Riastradh> Habs24, actually, no, I can't see 'Dagenais' in any information I know how to acquire from you on IRC without pestering you with CTCP attempts.
22:39:42 <Smerdyakov> My friend is called American. That doesn't mean he's American!
22:39:44 <Riastradh> ...oh, wait.
22:39:55 <Riastradh> ...um, *cough*, never mind.
22:39:58 * Riastradh hiccups.
22:40:51 <SamB> Habs24: how can you work in that kind of clothes?
22:40:52 <aFlag> my name is Rafael, where am i from Habs24?
22:41:10 <SamB> aFlag: you are from brazil!
22:41:19 <Smerdyakov> aFlag, the sewers!!!
22:41:24 <Smerdyakov> aFlag, say hello to Splinter!
22:41:25 <Habs24> In a sewer
22:41:27 <aFlag> heh
22:41:37 <aFlag> splinter is in a bad mood today :(
22:41:43 <SamB> what pop-culture reference am I missing here?
22:41:50 <Smerdyakov> SamB, Maggot Friends
22:42:02 <SamB> ... okay.
22:42:02 <Cale> SamB: Teenage Mutant Ninja Turtles
22:42:02 <Habs24> SamB - Easy.  They give you money, and you enjoy it.
22:42:03 <aFlag> but you can talk with my brother donatelo
22:42:29 <Fractal> omfg habs... how can you be from .ca and wanna wear a suit... like most canucks wear plaid and jeans and go to work drunk
22:42:29 <Habs24> As Scott Adams use to say, "One thing they never teach you in school.  You can get use to anything if they  force you to."
22:42:37 <SamB> Habs24: it seems unlikely that that would make the clothes less annoying
22:42:41 <aFlag> i felt all special when i used to watch the ninja turtles :D
22:42:48 <Habs24> Fractal...not in Quebec.
22:42:55 <Fractal> Bah
22:43:05 <Fractal> You should move out to BC and we'll show you how to have a good time
22:43:10 <Smerdyakov> Habs24, hm. I have lost some respect for Scott Adams!
22:43:59 <SamB> Habs24: they actually teach stuff in school these days?
22:44:01 <Fractal> actually bc'ers like quebekers... pot and all
22:44:13 <Habs24> Smerdyakov - Do I sense sarcasm?  
22:44:24 <aFlag> As my friend Scotch Adams used to say "when you're drunk you just don't care"
22:44:29 <Habs24> It's hard to tell over IRC. 
22:44:35 <Smerdyakov> Habs24, no.
22:45:20 <Habs24> Now, we were talking about Clinton.
22:45:22 <Habs24> How did we get here?
22:45:29 <Habs24> Let's get back to Clinton and how awesome his speech was.
22:45:39 <aFlag> i don't know clinton wear suits
22:46:06 <SamB> aFlag: don't all politicians?
22:46:26 <aFlag> i don't know, there defintly shouldn't be a dress code for that!
22:47:11 <SamB> too bad it doesn't stop them from making so many laws :-(
22:47:32 <Habs24> Armani suits.  The thing about Quebecers are that we have great fashion sense.
22:47:50 <Habs24> Unlike...British Columbians.
22:47:54 <Fractal> Ahahaha
22:48:02 <Fractal> bunch 'a hosers
22:48:08 <Habs24> I mean, just look at their hockey team.
22:48:12 <Smerdyakov> A disproportionate number of Quebecers I know on the Internet are of questionable moral character. ;
22:48:13 <Fractal> ofmg
22:48:15 <Habs24> Orange-black jerseys?  WTF!?
22:48:17 <aFlag> i would enjoy seeing my president wearing all those fobo pants, shirts and stuff then go to queen elizabeth and say "yo bitch!"
22:48:23 <Fractal> like how far did montreal get this year?
22:48:27 <SamB> I think suits aren't particularly nice looking, personally
22:48:50 <Habs24> fractal - 2nd round!
22:48:51 <SamB> aFlag: did he do that?
22:48:52 <Smerdyakov> I hope to avoid ever wearing a necktie again.
22:48:57 <aFlag> "move your white ass over here!"
22:49:00 <Fractal> er
22:49:05 <aFlag> no, but it would be awsome
22:49:06 <Riastradh> Suits & ties are ugly.  Official-looking outfits stopped looking cool a century ago.
22:49:11 <SamB> I assume that is a reference to something about Bush?
22:49:29 <Habs24> Smerdyakov - You're questioning my character?
22:50:17 <Smerdyakov> Habs24, I don't need to question. I know what I need to know. :)
22:50:56 <aFlag> i kinda like those more classic outfits 
22:51:16 <Habs24> Okay, because that's fine with me.  My character is basically what you see on IRC.  As sad as that is.
22:51:35 <Habs24> You don't need character to get a job if you know C++.
22:51:39 <aFlag> i personally enjoy those times when people would wear a hat and a overall (is that how it's called?)
22:51:44 <Fractal> ya that's right... van got #3 in western conf, montreal got #7 in east
22:51:47 <Habs24> It's not like Haskell, where your employer goes, "Hack what?"
22:52:05 <Habs24> Fractul - 2nd round...
22:52:17 <Fractal> k habs
22:52:19 <Habs24> Montreal > Vancouver.  We've always been winners.  Always.
22:52:23 <Habs24> Outside of the Expos....
22:52:31 <Fractal> i've known tons of quebecers and like not one of them has ever been in a suit
22:52:33 <aFlag> my character is a elf with a lot of magery points!
22:52:45 <Smerdyakov> Smart people always get jobs. There's no need to pander to misguided social trends.
22:53:07 <Habs24> No, a lot of smart people are rebellious and they get fired.
22:53:14 <Habs24> I have a friend who's extremely smart, but bitter.
22:53:24 <Smerdyakov> You can be rebellious in academia.
22:53:25 <Habs24> He has a problem with every boss and every company.
22:53:26 <aFlag> yeah, i have a friend who is terribly smart, although he's a cannibal
22:53:32 <aFlag> he got a job and eat his boss
22:53:38 <aFlag> now he's the president of the company
22:53:50 <Habs24> So, smart people and haskell?  Do those go together?
22:53:52 <Habs24> JUST KIDDING!
22:54:03 <aFlag> he ended up pretty good actually
22:54:08 <Smerdyakov> Habs24, this is why smart smart people avoid having bosses.
22:54:33 <Habs24> Bosses who are smarter than they are.
22:54:43 <Habs24> And more powerful.
22:54:57 <Habs24> And suits aren't social trends.  They've been apart of business for awhile now.
22:55:26 <Smerdyakov> Hey, I don't have a boss. I don't wear a suit. And I make more money than I know what to do with.
22:55:30 <Habs24> I'd like to work for the IRS.  As a collections agent.
22:55:36 <Habs24> That's the job I'm looking for.
22:55:55 <Habs24> Smerdyakov - Charity?
22:55:56 <aFlag> foxes are known to be smart, but they are all unemployed. So i guess being smart isn't everything
22:56:16 <Habs24> yeah.  The dumbshits get run over by cars all the time.
22:56:22 <SamB> aFlag: foxes are self-employed
22:56:23 <Habs24> I see their dead bodies on the road.
22:56:40 <Smerdyakov> Habs24, no, being good at something that people value!
22:56:57 <Habs24> Smerdyakov - Have you considered being a collections agent?
22:57:03 <Habs24> You and I.  Together we can audit the world!!!
22:57:14 <Habs24> Starting with Haskell programmers...
22:57:56 <Habs24> That's got to be a fun job...
22:58:39 <SamB> Habs24: first, you must obtain the source for the world -- or do you think you can audit it in-core?
22:59:13 <Habs24> I guess smart people could always go on game shows.
22:59:37 <Habs24> Jeopardy and Who Wants To be A Millionaire.
23:00:05 <Habs24> You need to dress nicely on jeapardy though.
23:00:09 <Habs24> The host always wears a suit.
23:00:48 <ozone> step 1: make millions on jeopardy, step 2: learn haskell, step 3: profit
23:01:28 <Habs24> An IRS Collections Agent won on Who Wants To Be A Millionaire without using any life-lines.
23:01:44 <Habs24> he gets to tax his own check!
23:07:20 <Habs24> Haskell has a pretty dull website.
23:09:13 <ozone> Habs24: it's a research language, don't expect a flash animation :)
23:09:17 <Cale> Habs24: have you checked out the wiki? There's lots of information and stuff there.
23:10:03 <Habs24> Wikis are usually ugly too.
23:10:08 <Habs24> Wikipedia is okay though.
23:10:20 <Habs24> ozone - Research language?
23:10:38 <Habs24> I expected more color.  Meh, at least it's fast.
23:11:03 <Habs24> C++ can be a research language, a language taught in Computer Science, in business.
23:11:19 <Habs24> Just thought you'd like to know...since some people (Cale) don't think highly of it.
23:11:20 <Smerdyakov> "Hello, my name is Habs24! I guzzle gasoline!"
23:11:36 <ozone> Habs24: as in, it's not used much outside of research.  as opposed to say C++, which is used very largely outside of research
23:12:07 <Habs24> Smerdyakov - Huh?  When did I become American?
23:12:11 <ozone> although, i'm fairly sure you knew that already
23:12:27 <Habs24> Why is haskell so limited?
23:12:42 <ozone> what do you mean by 'limited'?  why it's not used outside of research?
23:12:52 <Habs24> Yeh.
23:13:55 <Habs24> Smerdyakov, can you explain your odd gas comment?
23:14:14 <Lemmih> Maybe because it's a LFSP. ( http://www.paulgraham.com/vanlfsp.html )
23:14:23 <ozone> Habs24: lots of reasons, but inertia's surely a big one
23:14:45 <Smerdyakov> Habs24, "Hello, my name is Habs24! I once invented modern critical theory!"
23:14:55 <ozone> half the stuff written in C++ could probably better be done in o'caml, but o'caml's usage is rather small compared to C++
23:16:31 <Habs24> Does Smerdyakov always play role playing games?
23:17:12 <ozone> Habs24: i suspect everybody else here regards you as a troll
23:17:30 <Habs24> wow, all 75 of you?
23:17:54 <Smerdyakov> I regard Habs24b as more of a charming bushman, come accidentally into polite society from his primitive outback.
23:18:02 <Cale> heh
23:18:25 <ozone> it's easier to be nice, you know :)
23:19:13 <Smerdyakov> Habs24 embarked on a vision quest and came back with a graven image of multiple inheritance that would guide his life from that point on. Some say it was fate.
23:20:10 <shrimpx> Follow the diamond hierarchy...
23:20:26 <Smerdyakov> shrimpx, the rejected initial title of the classic "Wizard of Oz" song.
23:20:38 <shrimpx> haha
23:21:05 <Cale> This is where someone chimes in with the comment about a striking resemblance to certain family trees.
23:21:24 <Cale> and then it all goes downhill from there
23:21:44 <Smerdyakov> Maybe where _you_ come from, Mister.
