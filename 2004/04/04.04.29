01:51:40 <ski> hmm, haskell.org seems down ..
02:28:53 * shapr yawns
02:30:27 <saz> hm
02:30:28 <saz> hi
02:30:45 <ski> hi saz
02:40:12 <shapr> g'day saz, what's up?
02:40:28 <saz> not much
02:40:31 <saz> just got home :)
02:42:36 <shapr> I'm just about to go off to class
02:48:19 <saz> ooh, class? what class?
03:17:58 <shapr> saz: swedish class!
03:19:57 <saz> ah
04:43:24 <Lunar^> bring, shapr: I'm coming ! I just registered to EuroPython :)
04:52:12 <ski> hello SLinux
04:52:43 <SLinux> hi
04:53:37 <ski> learning haskell ?
04:53:51 <SLinux> yes
04:54:09 <ski> what do you think of it ?
04:54:19 <ski> have any questions yet ?
04:54:53 <ski> :)
04:55:14 <SLinux> some my friends tell me that this is a good progra....and i want know some things on it
04:55:17 <SLinux> :)
04:55:27 <ski> ok
04:56:02 <ski> well, it is good :)
04:56:11 <SLinux> :)
04:58:58 <ski> so
04:59:40 <ski> when you have any questions about haskell, you can of course ask them here
05:02:33 <SLinux> k
05:02:37 <SLinux> k
06:12:12 <fier> Is www.haskell.org down? I cannot access the nice GHC docs :-\
06:14:00 <JaffaCake> it just came back up
07:30:31 <shapr> wheee
07:30:37 <shapr> Lunar^: yay!
07:31:31 <shapr> JaffaCake: greetings would you like to learn Haskell? ;-)
07:31:58 * shapr notes that was a joking smiley
07:32:42 <shapr> good morning #haskell!
07:34:14 <shapr> Lunar^: did you get your company to fund part of the costs?
07:35:01 <shapr> JaffaCake: is there a page somewhere summarizing the status of the C-- backend?
07:37:22 <Spark> mm
07:37:26 <Spark> thats my project in
07:37:34 <Spark> now i need to learn about hopfield networks
07:38:20 <shapr> Spark: any more word on whether you're coming to EuroHaskell?
07:38:27 <Spark> mm
07:38:31 <Spark> how cheap can i get flights?
07:38:43 <Spark> also, can i organise to share a room with some random psycho
07:38:53 <shapr> bring found some for ~6 pounds I think
07:39:11 <shapr> Spark: sorry my room is full already ;-)
07:39:40 <Spark> mm
07:40:34 <Spark> yeah i may as well though
07:40:37 <Spark> never been to sweden
07:41:03 <shapr> it's a nice place
07:43:37 <shapr> nice people, nice weather
07:45:49 <shapr> tmoertel: did you solve your HaskellDB problems?
07:46:27 <shapr> what's going on in the world of Haskell today?
07:55:34 <shapr> JaffaCake: hey Simon, think you'll be able to come to EuroHaskell?
08:03:04 <shapr> hi SpLinux 
08:03:15 <shapr> looking for Haskell info?
08:04:26 <SpLinux> yes
08:04:33 <SpLinux> i want learn it
08:04:47 <shapr> cool!
08:05:07 <shapr> have you seen the learning url in the topic?
08:05:13 <shapr> @learn
08:05:14 <lambdabot> http://www.haskell.org/learning.html
08:05:28 <shapr> that's a good place to start
08:05:59 <shapr> if you have experience with functional languages, the Gentle Intro is good
08:06:22 <shapr> otherwise I'd suggest the "Yet Another Haskell Tutorial"
08:07:14 <fier> recent GVs dont display YAHT :-(
08:07:42 <shapr> huh? what sort of errors
08:08:24 <fier> "Parse error" :-\
08:08:52 <fier> It displayed it a month ago or so, but not after an upgrade...
08:36:21 <bring> Lunar^: sweet
08:36:41 <bring> feel free to add yourself to the attendees list
08:36:55 <shapr> hej bring 
08:37:00 <shapr> wassup?
08:39:58 <Lunar^> bring: As soon as the Haskell server is up
08:40:18 <bring> Lunar^: it seems to be up now
08:40:57 <Lunar^> )
08:40:58 <Lunar^> :)
08:41:30 <Lunar^> Going to use my real name *sigh*
08:41:51 <shapr> can you survive? :-)
08:42:20 <shapr> you could always make your names match
08:42:42 <Lunar^> done
08:43:09 <Lunar^> Lunar is a definitively corrupted nickname anywya
08:44:10 <bring> Lunar^: and if you come up with any more ideas or more details for hOp sprints, just add them
08:45:05 <shapr> also, will you have a new release of hOp so we'll be able to practice beforehand?
08:46:45 <Lunar^> I'm having so-called exams right now, I should have more time next week
08:46:57 <Lunar^> I really hope I will be able to make a new release really soon
08:50:50 <bring> we have 17 people who've said they're very likely to come
08:51:02 <bring> that's going to be one hell of a party
08:51:04 <ludde> bring: jag kommer antagligen också, men jag kan inte lova något
08:51:18 <bring> ludde: add yourself to the list
08:51:38 <ludde> bring: if i add myself then i feel forced to come :)
08:51:42 <bring> :)
08:52:01 <bring> it's just to have an approximate headcount
08:52:14 <ludde> ok.. let's add my name then.. what's the url again
08:52:19 <bring> so we know how big a room / how many rooms to get
08:52:26 <ludde> found it in topic
08:52:47 <bring> and, most importantly, now many ethernet jack we need
08:53:06 <ludde> :)
08:53:13 <bring> s/now/how/, s/jack/jacks/
08:53:20 <ludde> it's at chalmers?
08:53:24 * bring has had to much coffee today
08:53:26 <shapr> yup
08:53:35 * shapr watches bring bounce
08:53:39 <Lunar^> How is electricity in Sweden ?
08:53:42 <ludde> hm do they allow you to connect arbitrary computers to the network
08:53:51 <shapr> Lunar^: just as zappy as elsewhere
08:53:52 <bring> Lunar^: pretty good
08:53:52 <ludde> Lunar^: 240V 60hz or something like that
08:53:58 <bring> 50 hz
08:54:05 <bring> two round prongs
08:54:06 <ludde> oh yeah
08:54:09 * shapr hasn't had enough coffee yet
08:54:22 <Lunar^> Same than in France it seems
08:54:28 <bring> earth on two stripes (not a plug or hole)
08:54:52 <Lunar^> :(
08:54:59 <ludde> http://www.expansys.com/i/b/b110600.jpg
08:55:03 <bring> ludde: CS has told MEDIC to help us
08:55:19 <phubuh> hey guys
08:55:23 <ludde> bring: i suppose i have to bring my own computer?
08:55:34 <bring> do you have a laptop?
08:55:46 <ludde> yeah, but i have problems carrying it around :)
08:55:52 <bring> ah
08:55:54 <bring> right
08:56:02 <bring> you can give it to me :)
08:56:09 <ludde> :)
08:56:25 <Lunar^> ludde: Ok cool, I will do without the earth then :)
08:56:32 <bring> another idea would be to get a room with some machines in it, and chalmers people could just user their normal accounts
08:56:44 <bring> and we could maybe get lab accounts for outsiders
08:56:48 <ludde> Lunar^: there are earth plugs too
08:57:02 <ludde> or.. grounded plugs. or whatever you call them
08:58:08 <bring> Lunar^: http://www.elfa.se/images/highres/h2934.jpg
08:58:24 <bring> that's one with earth stripes
08:58:56 <ludde> why can't people standardize on things
08:59:15 <bring> I was also thinking that we should set up a CVS repo somewhere for use during eurohaskell
08:59:29 <ludde> SVN is kinda nice too
08:59:53 <ludde> i got an SVN repo that we can use
09:00:23 <bring> does everybody need an account on that machine to access it?
09:00:40 <ludde> no, svn has its own users
09:00:45 * bring doesn't know subversion at all
09:00:49 <bring> ah, ok
09:01:15 <ludde> it's kinda neat, especielly if you use windows, cause it's nicely integrated into the shell
09:01:30 <ludde> (using 3rd party tortoisesvn)
09:01:32 <bring> are there working svn clients on the solaris, linux and bsd systems at chalmers?
09:01:40 <ludde> hmm i guess not :|
09:01:55 <ludde> guess cvs is better then heh
09:01:57 <bring> I think chucky was working on installing it
09:02:05 <bring> svn that is
09:02:05 <ludde> ahh
09:02:07 <ludde> svn works now
09:02:13 <ludde> on licia at least.
09:02:41 <bring> we'll probably be on bsd machines if anything during eurohaskell
09:02:52 <bring> and a lot of laptops
09:03:04 <ludde> hm
09:03:10 <ludde> why can't i ssh to cubacola?
09:04:01 <ludde> I got WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!  too
09:04:28 <bring> you may have to delete the key manually
09:04:31 <ludde> yeah
09:04:38 <ludde> but when i did that, i got permission denied.
09:04:47 <ludde> (after entering my password)
09:04:48 <bring> weird, let me try
09:05:22 <bring> yeah, same for me
09:05:31 <bring> permission denied, that is
09:05:32 <ludde> do you know some other bsd machine
09:05:50 <bring> pantera seems to work
09:06:06 <ludde> i hope no one hacked cubacola and is snooping passwords
09:06:11 <bring> :)
09:06:39 <bring> hmm, I should start using the ones named after scottish whiskey brands
09:07:07 <bring> they're impossible to spell, doubt no script kiddies will get to them
09:07:55 <bring> I was doing some lab supervision, and went to the helpdesk to have them reboot some of the machines
09:08:14 <bring> I couldn't get them to understand which machine I was talking about
09:08:21 <ludde> hehe
09:10:38 <shapr> we could use darcs :-)
09:13:51 <SamB> bring: what about IP address? those are easy to spell.
09:14:25 <bring> yeah
09:14:47 <bring> but the machines have labels on them with the names, but not the IP
09:14:59 <bring> and they were crashed
09:15:27 <bring> but for the script kiddies, you're right
09:15:42 <bring> I was joking about that
09:16:46 <bring> otoh, everything is easy to spell if you remember how it is spelled, just like IPs
09:17:56 <bring> I find IPs harder to remember than the average whiskey brand
09:23:03 <shapr> hiya stepcut 
09:23:06 <shapr> wassup?
09:29:28 <JaffaCake> hi room
09:29:53 <stepcut> morning shapr, not much
09:29:56 <JaffaCake> having another go at using IRC, I doubt it'll last :S
09:30:00 <stepcut> workin'
09:30:44 <stepcut> shapr: you entering the icfp programming contest this year?
09:38:31 <shapr> bye Simon
09:38:57 <shapr> that was Simon Marlow
09:39:07 <shapr> stepcut: I dunno
09:43:20 <stepcut> he didn't last very long :)
09:45:21 <shapr> well, about as long as last time
09:46:05 <stepcut> haha
09:57:28 <shapr> too bad, I wanted ask about the C-- backend
10:09:21 <andersca> boom
10:12:22 <shapr> jiihaa
10:12:29 <phubuh> shakalak
10:15:11 <shapr> hej phubuh, whatcha codin these days?
10:23:22 <phubuh> i seem to be bouncing from project to project in days
10:23:32 <phubuh> it's, um, frustrating.  i need more motivation :)
10:23:52 <phubuh> my current one is an implementation of a schemy/lispy language
10:24:02 <shapr> I think it's good to have a balance
10:24:13 <shapr> both bounce and focus
10:24:19 <phubuh> yeah, true
10:25:08 <phubuh> i chose the science specialization (naturvetenskapliga inriktningen) over the math/computer one, so now i need to think of some nifty science project
10:25:20 <phubuh> programmatic science project, of course :)
10:25:54 <phubuh> i think i'd like to do some sort of simulation
10:27:12 <fier> phubuh: Global warming? Solar system formation (simulating rules of gravity), H -> He reactors...
10:27:50 <phubuh> awesome, that's just the kind of stuff i'm looking for
10:27:53 <phubuh> i'll read up on those
10:27:59 <phubuh> thanks :)
11:27:50 <shapr> sometimes simple isn't
11:29:19 <stepcut> oh?
11:29:48 * shapr fights Zope
13:29:11 <skew> shapr: how's the fight going?
13:29:26 <shapr> I've had an inspiration
13:29:35 <skew> rewrite Zope in Haskell?
13:29:37 <shapr> I think I can finish this tonight
13:29:42 <shapr> there is that
13:30:09 <shapr> actually, I was just wondering if I could hook up PHI and Zope
13:30:12 <reltuk> why fight zope?
13:30:21 <skew> hmm, maybe I should get it working
13:30:22 <shapr> reltuk: that's how I get paid
13:30:36 <skew> I tried to use ForeignPtr, but now I have random segfaults
13:30:47 <skew> I couldn't get a finalizer to fire testing in GHCi
13:30:50 <reltuk> by building web apps in haskell?
13:30:54 <skew> just testing pure haskell code
13:30:56 <shapr> reltuk: yes!
13:31:13 <reltuk> interesting...
13:31:20 <shapr> reltuk: er, I get paid to make webapps, so far they're in Zope
13:31:31 <shapr> but I'm trying to move to Haskell
13:31:35 <reltuk> ahhh
13:31:38 <shapr> with some success too
13:31:54 <shapr> bring's xmlrpc lib has really helped
13:32:06 <skew> shapr: I could back the ForeignPtr stuff out though, if you need something functional
13:32:13 <skew> It's pretty frustrating
13:32:25 <skew> I don't know how to start debugging
13:32:32 <shapr> nah, I'm not at the stage where I can really use PHI yet
13:32:35 <shapr> soon maybe
13:33:05 <reltuk> interesting...haskell makes the webapps easier than zope?
13:33:19 <shapr> in some ways yes
13:33:32 <reltuk> that's almost sad...
13:33:41 <skew> the Python reflection stuff is probably a big loss
13:33:52 <shapr> nah, it's just that Haskell is way powerful
13:34:34 <shapr> if I had a good way to generically publish and persist  algebraic datatypes, I'd be happy
13:34:48 <skew> how about Read and Show?
13:35:07 <skew> or you need the types?
13:35:20 <shapr> nah, that's fine for persist
13:35:31 <skew> what about publishing?
13:35:39 <shapr> but how to do web publishing of a datatype?
13:35:56 <skew> publish the type, or a value?
13:36:09 <shapr> something like twisted.woven/nevow or Zope Archetypes
13:36:21 <shapr> both actually
13:36:29 <skew> I don't know either much
13:36:38 <skew> I've used a bit of woven, trying to make sense of nevow
13:36:52 <shapr> lemme show you a sample of Archetypes
13:36:52 <skew> I don't see what they have to do with algebraic data types
13:37:15 <skew> they seem to be templating systems, more or less
13:37:32 <shapr> yup
13:37:37 <shapr> er
13:37:49 <shapr> object publishing systems
13:37:49 <skew> if you are talking about generating forms the Data.Generics stuff could hlep
13:38:13 <skew> shapr: what's so hard about an object publishing system?"
13:38:20 <skew> make a typeclass with the getChild methods
13:38:54 <shapr> yes, I agree
13:39:20 <skew> Haskell could stand to be a bit more dynamic
13:39:41 <shapr> I bet the first few attempts would suck without lots of user feedback
13:39:41 <skew> runtime access to the type system would be nice
13:39:48 <shapr> yes it would
13:39:53 <shapr> can TH do that?
13:40:07 <skew> I don't think TH gives you very much access to types
13:41:58 <skew> you can use the reify constructs, but not look up types by name
14:01:33 <Lunar^> bring: The plug will fit without the earth :)
14:02:15 <bring> ah, you have one of those skinny europlugs or whatever they are called?
14:03:30 <andersca> Lunar^: what laptop do you have?
14:03:52 <Lunar^> bring: bring http://www.ac-amiens.fr/lycee80/luzarches_amiens/atelier_sc/pages_energie/images_energie/prise.JPG
14:04:09 <Lunar^> andersca: PowerBook 12"
14:04:15 <andersca> ah
14:04:23 <SamB> hmm, is earth == ground?
14:04:40 <Lunar^> SamB: yes with a too much literal french translation
14:06:33 <bring> Lunar^: you might still have a problem, our grounded (earthed) outlets don't allow you to insert a plain circular plug
14:06:47 <bring> it has to have cut out sections on the side to fit
14:10:02 <Lunar^> bring: Apple's package fortunately contains a small adapter
14:30:13 <Marvin--> has anyone here implemented Markov chain simulation in Haskell?
14:31:52 <Marvin--> guess everybody decided to go fall asleep :)
14:33:08 <Riastradh> *zzzzzzz*
14:33:20 <Marvin--> not that falling asleep is a bad idea...
14:33:23 * Marvin-- yawns
14:33:37 <Riastradh> I haven't had more than about three or four hours of sleep per night in the past week...
14:33:44 <Marvin--> oh, yay
14:34:05 <skew> Riastradh: sounds familiar. student?
14:34:14 <Riastradh> No.
14:34:43 <skew> Marvin--: It doesn't sound too hard. I haven't heard of any
14:34:57 <Marvin--> skew: no, not really, I was just curious
14:36:31 <skew> Riastradh: what sort of work are you doing?
14:36:46 <skew> those are not happy hours
14:37:26 * Riastradh would rather not say, although it's not by obligation that he stays awake too long.
14:37:48 <Marvin--> ooh, mr secret :)
14:38:54 <Marvin--> god I'm tired, all this stupid birch pollen is killing me
14:38:56 <Marvin--> I'm off to bed
15:11:31 <shapr> hej sond 
15:11:44 <sond> tja
15:12:10 <shapr> vad hÃ¤nder?
15:12:51 <sond> inte s? mycket..
15:12:59 <sond> dricker lite folk?l :P
15:13:16 <shapr> kommer du till EuroHaskell?
15:13:33 <shapr> eller till #haskell.se? :-)
15:14:01 <andersca> shapr: han Ã¤r i #haskell.se
15:14:06 <shapr> oh
15:14:11 <shapr> never mind then
15:16:53 <sond> kan nog inte komma p? EuroHaskell ?ven om jag skulle vilja
15:17:07 <sond> m?ste hem p? en studentuppvaktning
15:17:17 <shapr> tyvÃ¤rr
15:17:48 <SamB> heh
15:19:33 <shapr> y0 pimp
15:19:47 <pimpbot5000> hi, how do i override the instance for Ord (a,b) with my own
15:20:24 <pimpbot5000> ie, i want to define compare tuples by only their first element
15:20:25 <shapr> I don't know an easy way
15:20:48 <shapr> @wiw SchwartzianTransform
15:20:58 <shapr> arg
15:20:59 <Igloo> You can newtype MyTuple a b = (a, b), or many of the library functions have a fooBy alternative
15:21:02 <pimpbot5000> i just made a new tuple type for myself...but it seems unsatisfactory
15:21:23 <lambdabot> Sorry, I don't know the command "wiw", try "lambdabot: @listcommands"
15:21:27 <skew> pimpbot5000: do you want to avoid making an ord instance for the second value?
15:22:06 <pimpbot5000> well, i just want to make my sorting function sort by the first element of a pair
15:22:32 <skew> the normal ord instance for pairs looks at the first element and then the second
15:22:47 <pimpbot5000> exactly, i don't wan that
15:22:49 <pimpbot5000> want
15:23:20 <skew> then make your own type, or pass (\a b -> compare (fst a) (fst b)) to sortBy
15:23:49 <pimpbot5000> it's not a big deal, im just writing up a verification project on list sorting
15:24:10 <pimpbot5000> thought the haskell code would look cleaner if i could override Ord (a,b)
15:25:06 <skew> yeah probably
15:25:17 <skew> nobody has figured out quite how something like that would work
15:25:45 <skew> pimpbot5000: what are you sorting?
15:25:51 <pimpbot5000> hehe well that's interesting...maybe an area of research
15:26:02 <pimpbot5000> just anything of type (Ord a)
15:26:14 <skew> That's what sortBy is for
15:26:17 <pimpbot5000> im using haskell to prototype code for PVS
15:26:33 <shapr> what's PVS?
15:26:46 <skew> although, for cases like this it would be nice to have something like sortOn key = sort (\a b -> compare (key a) (key b))
15:26:56 <pimpbot5000> the goal is do iron out bugs in haskell, translate to PVS, and prove the algorithms correct
15:27:01 <pimpbot5000> a theorem prover
15:27:20 <shapr> oh
15:27:40 <skew> are you reasoning about the code?
15:28:06 <pimpbot5000> just prototyping it and testing.  then the code goes in our final report
15:40:27 <skew> proving Haskell code should be too hard, for that matter
15:41:18 <skew> er, should be pretty easy
15:41:49 <pimpbot5000> right, it would be nice if we could use the haskell code for proof specifications...but pvs has its own ugly language
17:54:58 <SamB> I've been banned from #slate for a while now... but I just got IPv6 working again, and I was banned by IPv4 netmask, so I got in again ;-)
17:55:12 <Riastradh> Why were you banned from #slate?
17:55:18 <skew> how is this slate thing, anyway?
17:57:23 <skew> 
17:58:07 <SamB> its something to do with water thinking I'm an idiot, I think
17:58:29 <Riastradh> How strange that water might be curmudgeonly.
18:02:55 <SamB> you have seen him do this before?
18:04:21 <SamB> whatever I do, I really daren't let on why I'm so lagged
18:04:25 * Riastradh tries to think of an appropriate sarcastic comment, but he can't think of anything witty enough.
18:05:16 <Riastradh> So: yes; it's hard _not_ to find him in a curmudgeonly state.
18:08:20 <SamB> how do you spell hindly-milner?
18:08:27 <Riastradh> Hindley-Milner.
18:30:08 <seafood> Any german speakers here?
18:30:25 <Riastradh> How much German need one speak?
18:30:42 <Riastradh> For instance, is knowledge of how to say 'I am a jellydoughnut' sufficient?
18:30:49 <skew> I can speak a little bit
18:32:54 <Pseudonym> Ich spreche ein bischen Deutsch.  But not enough as you can see from that sentence.
18:33:39 <Pseudonym> (Last time I studied German was 15 odd years ago.  So I've probably forgotten it all.)
18:35:45 <camio> Do any of you agree that Haskell as a language makes user-interactive programs difficult to write?
18:36:27 <skew> camio: I haven't had much trouble with that
18:36:58 <Pseudonym> No harder than most non-domain-specific languages.
18:37:12 <Pseudonym> Obviously a language like Tcl, say, is basically designed for that.
18:37:42 <camio> For example, the wxHaskell module is very easy to use because all state and variables are handled on the C side of things.
18:37:58 <Pseudonym> I've heard and seen good things about Fudgets.
18:38:05 <camio> But if one was to implement something like wxHaskell in Haskell, it would be very difficult don't you think?
18:38:09 <Pseudonym> Arrows apparently make this sort of thing quite nice to program in.
18:38:25 <skew> you would need to to mix in some IORefs
18:38:32 <camio> Pseudonym: I really need to learn about these arrows.  Are there any nice introductions?
18:38:41 <Pseudonym> And, of course, you'd abstract the IORefs appropriately.
18:38:56 <skew> which is where arrow and the like come in
18:39:11 <Pseudonym> Or judicious use of monad transformers.
18:39:24 <skew> but even using IORef directly isn't bad
18:39:28 <Pseudonym> camio: It depends what you mean by "nice".
18:39:54 <Pseudonym> http://www.haskell.org/arrows/
18:40:09 <camio> Pseudonym: thanks
18:40:21 <Pseudonym> You won't necessarily find that easy to understand.
18:40:37 <Pseudonym> http://www.cs.chalmers.se/Cs/Research/Functional/Fudgets/
18:40:42 <Pseudonym> Might be more use to you.
18:41:09 <camio> Using IORefs would still be difficult I think because they would need to have IORefs to children with their own IORefs.  And then all the inheritance that's required . . .
18:42:02 <skew> camio: only around the things that need to mutate independantly
18:43:04 <Pseudonym> And even when you need to do that, you needn't hang on to all of these IORefs independently.
18:43:14 <Pseudonym> Just the "root" ones.
18:43:27 <camio> true
18:43:57 <skew> camio: the situation is identical to any other language, just with a bit heavier syntax in Haskell
18:44:10 <camio> And it would also need existential types to hold lists of these objects.
18:44:21 <Pseudonym> http://cvs.sourceforge.net/viewcvs.py/haskell-libs/libs/text/
18:44:21 <skew> huh?
18:44:21 <camio> I mean IORefs to objects.
18:44:25 <Pseudonym> Take a look at Dfa.lhs
18:44:33 <Pseudonym> I think that does what you're talking about.
18:44:34 <skew> mixing types is a differnt story from using IORef
18:44:57 <camio> skew: For wxHaskell I mean.  An frame has children widgets.
18:45:03 <Pseudonym> It doesn't use IORefs, but it's the same sort of thing.
18:50:46 <camio> Hehe, I'm either going to learn enough about Haskell to do run-time-objects well or I'm going to be qualified enough to say that it isn't possible. :)
18:52:00 <Pseudonym> Either way, you'll be a better person for it.
18:52:11 <camio> Indeed :)
19:04:28 <SamB> it turns out I'm not taking a year off before college after all.
19:09:09 <heatsink> Was this the college's decision?
19:35:08 <SamB> its because of a Merit Scholarship
19:35:32 <heatsink> cool
19:36:05 <heatsink> which uni will it be, if you don't mind my asking?
19:48:08 <SamB> Lehigh
21:39:58 * heatsink finds it mildly amusing that the covalent radius of a large atom is roughly the square root of one liter per parsec
22:42:46 <Spark> the square root of 1? :)
22:43:28 <heatsink> no, the square root of (one liter per parsec)
22:43:44 <Spark> whats one liter per parsec?
22:44:31 <heatsink> 3.24e-20 square meters
22:45:29 <Spark> a parsec is an angle isnt it?
22:45:34 <Spark> and litre is volume
22:45:44 <heatsink> no, a parsec is a unit of distance
22:45:48 <Spark> ah yeah thats it
22:46:22 <Spark> havent done astronomy since school
22:46:56 <Spark> does liters per parsec actually have any meaning then
22:48:28 <heatsink> well, it means 3.24e-20 square meters
22:49:43 <heatsink> The physical interpretation would be that a region of space 3.24e-20 square meters in cross section and one parsec long would enclose one liter
23:34:15 <Gahhh> does anyone use Leo with haskell here ?
