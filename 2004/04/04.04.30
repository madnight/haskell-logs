00:02:05 <Spark> heatsink: ah yeah
02:25:41 --- topic: '["We put the Funk in Funktion","See logs @ http://tunes.org/~nef/logs/haskell/", "Learning Haskell - http://www.haskell.org/learning.html","deb http://www.syntaxpolice.org/haskell-experimental unstable/","Donate your brain! - hawiki/UsingHaskellWikiMaterial","haskelldb 0.7 released","related channels #haskell.se #haskelldb #darcs","http://www.haskell.org/hawiki/EuroHaskell"]'
02:25:41 --- topic: set by shapr on [Mon Apr 26 02:37:58 2004]
03:52:33 <skew> does anyone here have much experience with ForeignPtr?
03:53:33 <skew> I seem to be getting segfaults after the finalizer sucessfully complete
04:50:02 * shapr chortles merrily
04:50:24 <skew> shapr: have you vanquished Zope?
04:50:57 <shapr> mostly, yes
04:51:30 <shapr> the GPL has saved me yet again, I've modified another Zope product to do what I want
04:51:53 <shapr> SamB: water has all the social skills of a cat o' nine tails
04:52:49 <skew> just being GPL makes a library at least twice as useful.
04:53:01 <shapr> yup
04:53:12 <shapr> how's PHI going?
04:53:37 <skew> not too much. After converting to ForeingPts I've been getting segfaults I haven't figured out how to fix or understand
04:54:31 <skew> I'm using a wrapper around PyDECREF for finalizers. printfs suggest the program survives the PyDECREF call itself
04:55:38 <skew> playing around in the interpreter I have trouble getting finalizers to run at all
04:55:57 <shapr> I tend to write unit tests to try to establish to myself what's happening, can you do that there?
04:56:21 <skew> not really. I have a test case that triggers a segfault
04:56:22 <shapr> I know that __del__ is not guaranteec to be called in th python world
04:57:11 <skew> I think I've grabbed a reference to all the objects Iuse
04:57:41 <shapr> can you use weak refs?
04:58:12 <skew> which side?
04:58:25 <shapr> I was just wondering that myself
05:03:00 <skew> a function should probably return a value it owns, right?
05:03:32 <skew> I think I might drop my reference before returning some of these values
05:03:49 * shapr isn't sure
05:14:57 <skew> is there any way to get GHC to dump the result of macro expansion?
05:16:27 <Igloo> If you mean cpp then -E
05:16:38 <skew> no, TH
05:16:55 <skew> I'm using the pretty printers at the moment
05:17:01 <Igloo> Oh, I think there's an -fdump-foo for that, but not sure what OTTOMH
06:51:55 <fier> Hi!
06:52:09 <fier> Sorry... I need help :-\ Anyone here?
06:53:01 <eivuokko> I am, for now, but dunno if I'm of any help.
06:54:13 <fier> eivuokko I am reading the YAHT (for the 3rd time i think) and i am stuck at excercise 3.6...
06:55:15 <Jon> heh
06:55:17 <Jon> I remember YAHT
06:55:19 * Jon takes a look
06:56:34 <fier> Jon Thanks. I could write it easily, but not with the functions covered to that point :-\
07:02:29 <Jon> > blah :: [(a,b)] -> a
07:02:30 <Jon> > blah    (x:zs) = fst $ head zs
07:02:46 <Jon> are those functions covered?
07:03:17 <Jon> yeah I think you've seen tail and fst by then
07:03:50 <Jon> pages 15 and 17
07:04:52 <fier> Jon Hmm... Yes. I tought blah (list) = fst (list !! 2)
07:04:53 <fier> :-)
07:05:03 <fier> fst and head are covered tho.
07:05:16 <fier> But what is blah (x:zs)?
07:05:20 <fier>  and $
07:05:39 <Jon> (x:zs) is a pattern: where x is an element, zs a list, and : cons(truct)
07:05:44 <Jon> $ is just syntactic sugar for ()
07:05:44 <Jon> so 
07:05:54 <Jon> foo $ bar 3 == foo (bar 3)
07:06:09 <fier> Jon I se.
07:06:11 <fier> e
07:06:15 <Jon> thats not essential but may be pattern matching isn't introduced yet
07:07:52 <fier> :-) Thanks!
07:09:00 <Jon> fst (head (tail [(1,2),(3,4),(5,6)])) works too w/o pattern matching
07:09:05 <Jon> oh he's off
07:28:23 <shapr> @fortune
07:28:23 <lambdabot> Neurotics build castles in the sky,
07:28:23 <lambdabot> Psychotics live in them,
07:28:23 <lambdabot> And psychiatrists collect the rent.
11:51:03 <tooki> If you crash your quantum computer would you rip a hole in the space-time continum. Maybe that is how black holes get started; one for every planet that just gets to this point and then loads Windows on a quantum computer.
11:51:44 <deemon> blue screen of black hole
11:51:52 <mattam> or maybe black holes are were god divided by zero (steven wright)
11:52:02 <mattam> s/were/where
11:53:02 <tooki> do you know a site with more of such jokes ?
11:54:14 <mattam> nope, but fortune-mod has a ton of them
11:55:16 <tooki> the linux-fortune-cmd ?
11:55:34 <mattam> fortune is the executable yes
14:07:56 <skew> hi SamB
14:08:13 <skew> have you gotten yourself kicked out of #slate again yet?
14:08:55 <skew> ;)
14:13:50 <SamB> nope
14:13:56 <SamB> not yet
15:20:12 <skew> Hello. Simon Marlow?
15:20:44 <JaffaCake> hi :-)
15:20:49 <skew> were you looking into the fixIO issue?
15:21:06 <JaffaCake> hmmm, which one?
15:21:21 <skew> there was an example that looped, but repeated some effects along the way
15:21:32 <JaffaCake> yup, we identified the problem
15:21:36 <JaffaCake> it was lazy blackholing
15:21:50 <JaffaCake> fixed version of fixIO was posted to the list
15:22:07 <skew> not good when you are looping trying to compute a RealWorld#
15:22:24 <JaffaCake> hehe, no
15:32:15 * SamB wonders why he uses GAIM
15:32:30 <Smerdyakov> Because it is a good program?
15:32:45 <SamB> for AIM, yes.
15:33:11 <JaffaCake> wonder why who uses GAIM? me?
15:33:37 <SamB> JaffaCake: yes, you ;-)
15:34:04 <JaffaCake> just trying it out, I never found an IRC client I liked yet
15:34:14 <JaffaCake> and I use MSN (for my sins)
15:34:21 * Riastradh likes irssi.
15:34:53 <opet> msn messenger to irssi could be tough :)
15:35:16 <Riastradh> bitlbee?
15:35:18 <SamB> which IRC clients have you tried?
15:35:42 <JaffaCake> mIRC, a bunch of others
15:36:56 * JaffaCake wonders if /me works
15:37:00 <SamB> hmm, windows.
15:37:12 <SamB> don't know much about windows IRC clients
15:37:28 <SamB> isn't /me an IRCism?
15:37:43 <JaffaCake> indeed :)
15:38:12 <JaffaCake> anyone got anything Haskell related to talk about?
15:38:40 <SamB> hmm, my xchat is still leaking fds!
15:38:52 <skew> SamB: it does that too?
15:39:42 <SamB> skew: what else does it do?
15:40:01 <skew> the configuration is quite confused if you have several windows
15:40:23 <skew> checking or unchecking a checkbox seems to pick a random window and *toggle* that setting in that window
15:40:48 <SamB> oh
15:42:09 <skew> also, Ctrl-I detaches any window just fine, but it seems to pick a favorite channel and just attach/detach that one if you hit Ctrl-I in another detached window
15:44:18 <skew> it was about that time I decided to use irssi, which I'd tried for a bit before
15:56:00 <SyntaxNinja> ph34r
22:01:11 <anduril1> is it weird that I get huge gains (5 minute runtime vs. 28 seconds) in perfomance with ghc -O ?
22:02:39 <Smerdyakov> Hm, try to use it to solve the TSP.
22:03:29 <skew> anduril1: that's probably a bit more than normal
22:03:43 <skew> More than I usually notice anyway
22:03:48 <anduril1> thats what I thought
22:03:51 <skew> what is the program doing?
22:03:57 <anduril1> prime sieve
22:04:06 <Smerdyakov> Great! Can you crack RSA?
22:04:16 <Smerdyakov> If you can't, try -O9999 and see if that helps!
22:04:20 <anduril1> not yet
22:04:36 <skew> that's probably not too surprising, if there are lots of numbers and lists
22:04:52 <skew> fusion and unboxing can help a lot
22:05:29 <anduril1> the set I was working with was pretty big, 2 to 9,000,000
22:09:16 <anduril1> by the way, -O9999 didn't get better results than -O2
22:09:34 <anduril1> I guess -O has diminishing returns
