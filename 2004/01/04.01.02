01:51:37 <shapr> good morning #haskell!
01:52:30 <flippo> is it morning already?  Oh dear
01:52:38 <opet> morning shapr!
01:52:47 <shapr> flippo: yes, it's nearly 11am
01:52:53 <shapr> hiya opet!
01:52:54 <andersca> hej shapr!
01:52:56 <flippo> (I shouldn't have taken that nap)
01:53:12 <shapr> so, did everyone have a fun christmas?
01:53:25 <andersca> yes
01:53:33 <shapr> andersca: did you get a pirate for Christmas?
01:53:53 <andersca> shapr: better! I got an espresso machine
01:54:00 <shapr> wow!
01:54:18 <shapr> that's great, I want to visit you and try your new present!
01:54:53 <phubuh> hej hej
01:55:16 <ayrnieu> andersca - ooh.  How do you like it?
01:55:27 <andersca> ayrnieu: very much :)
01:55:36 <shapr> y0 phubuh, wassup?
01:55:51 * ejt yawns
01:55:58 <shapr> g'mornin ejt 
01:56:02 <ejt> hi
01:56:05 <phubuh> not much
01:56:17 <shapr> I didn't look at your space leak much, I got distracted by guests
01:56:27 <phubuh> figuring out how to use libgnetwork and waiting for a LAN party at 6 PM
01:56:38 <phubuh> why did I read that as "I got distracted by pants"?
01:57:18 <ejt> shapr: I got some v. good response on haskell-cafe
01:57:29 * shapr looks
01:59:36 <Lunar^> shapr: My friend ned finished his first working version of a Go game in Haskell (using HOpenGl)
02:00:07 <Lunar^> shapr: The whole point is that the playfield is on a cube
02:00:20 <ejt> Lunar^: where is the code ?
02:00:59 <shapr> Lunar^: sounds cool! where's the code?
02:01:03 <shapr> or a binary?
02:01:59 <shapr> hej ski 
02:02:11 <ski> hej shapr
02:02:25 <ski> har du haft en trevlig helg ?
02:02:38 <shapr> ja, en trevlig christmas också
02:02:45 <shapr> och du?
02:02:47 <ski> najs
02:02:49 <ski> ja
02:03:19 <ski> mycket snö ?
02:03:47 <shapr> inte så mycket
02:03:53 <shapr> just ankle deep snow
02:04:07 <ski> ok
02:04:18 <shapr> you're in the far south, is there snow there also?
02:04:33 <ski> jes
02:04:46 <ski> it's cold here
02:04:59 <shapr> -25°C here at the moment
02:05:16 <ski> well not *so* cold :)
02:05:34 <shapr> ski: I have nice CPUs to keep me warm :-)
02:05:45 <shapr> and a beautiful woman
02:05:51 <ski> :)
02:06:33 <ski> so you don't use the outdoor chill to overclock ? ;-P
02:06:52 <shapr> it's a good idea, I should try it.
02:07:12 <shapr> I do open the window when doing heavy duty OpenGL work, otherwise my box crashes
02:07:18 <ski> he
02:07:20 <ski> heh
02:07:55 * ski isn't doing much ATM
02:08:41 <ski> (well, i am reading a book on category theory, currently)
02:10:06 <Darius> which?
02:11:02 <shapr> yah, the grey book?
02:11:06 <ski> "Conceptual Mathematics, A first introduction to categories", F. William Lawvere & Stephen H. Schanuel
02:11:23 <ski> shapr : which grey ?
02:11:26 <flippo> do you read it while commuting?
02:11:35 <flippo> (sorry)
02:11:42 <ski> flippo : heh, commuting what ?
02:11:45 <Cale> or while associating?
02:12:37 <shapr> ski: yah, that's the grey book
02:13:23 <ski> well, one usually associates before commun^Hting, eh ?
02:13:34 <shapr> heheh
02:13:53 <ski> shapr : ok (i would call it blue, or bluegrey)
02:14:08 <phubuh> ski, do you like it?  I got it for Christmas, but it hasn't shipped yet
02:14:10 <shapr> oh, I should check it again
02:14:25 <ejt> is that the best book to start with ?
02:14:51 <ski> phubuh : yes, it's quite fun !  (borrowed it from the lib.)
02:14:57 <phubuh> yay
02:15:09 <shapr> that's also the book that SyntaxNinja is reading.
02:15:25 <ejt> I wondered about getting Bird/De Moor, but people seemed to think there were better books (not sure which they meant)
02:15:37 <shapr> wow, so many people have the same book, we could start a study group
02:16:58 <ski> actually, i'm currently 'fast-reading' it. (i.e. continuing over things i don't get fastly. will read it over again more slowly then (doing at least *some* excercises ;))
02:17:13 <shapr> I think that's a good process
02:17:18 <shapr> I do that myself
02:20:13 <flippo> Just ordered a copy.  Now I can join the study group
02:20:15 <ski> it seems to go quite slowly (read : not introducing a ton of new concepts very quickly, but examining those introduced from various angles) onward, at least in the earlier sections
02:20:50 <ski> shapr : we could do that
02:20:57 <ski> :)
02:22:02 <TripleDES> morning
02:22:13 <ski> morning TripleDES
02:22:21 <shapr> g'morning TripleDES 
02:23:10 <shapr> ned__'s go board on a cube is nice
02:23:38 <ned__> thx ;)
02:25:05 <ned__> it's a closed-without-borders area
02:25:09 <ned__> no side-effects :)
02:25:13 <shapr> haha
02:25:54 <ski> closed-without-borders ?  modulus/torus ?
02:25:58 <flippo> best played in zero gravity
02:26:00 <shapr> flippo: cool, when does your copy arrive?
02:26:22 <flippo> shapr: 4-14 business days
02:26:23 <ned__> no, just sphere (in fact, cube)
02:26:55 <ski> ned__ : just the surface ?  or interior also ?
02:26:57 <flippo> I don't think you can grid a sphere very easily
02:27:03 <ned__> just the surface
02:27:11 <ski> ah, ok
02:27:12 <ned__> no, that's why i did a cube :)
02:27:27 <ned__> so every spot has 4 liberties,
02:27:30 <ski> i thought it was some version of go in 3d-space
02:27:34 <ned__> exept the 8 points
02:27:35 <shapr> here's ned__'s go board: http://shapr.homelinux.net/~shae/GoSp.hs
02:27:40 <ned__> with 3
02:27:44 <ski> thanks
02:28:33 * shapr bounces cheerfully
02:28:52 <ski> apropos, wonder if anyone's made a game in, say, a 120-cell ?
02:29:03 <flippo> ooh, opengl
02:29:05 <ski> (or perhaps 600-cell)
02:31:52 <ski> 't would be fun/interesting
02:36:29 <ejt> what's the incantation to build with the Graphics.* libs ?
02:37:10 <Lunar^> -package hopengl ?
02:37:38 <ejt> nope
02:38:26 <shapr> ejt: are you using ghc6.2?
02:38:37 <ejt> yep, I compiled it a couple of days ago
02:38:50 <shapr> does it have the OpenGL stuff built with it?
02:40:11 <ejt> grrr, I don't think I did a --enable-hopengl with the configure
02:40:35 * ejt was amazed how long it took ghc to build
02:40:50 <shapr> yah, it takes awhile
02:41:05 <shapr> it takes many hours on my dual 1544MHz
02:41:41 <Lunar^> I hope Wolfgang did it in the Mac OS X binary
02:42:30 <Lunar^> urg
02:42:49 <Lunar^> Still no Mac OS X binary for GHC 6.
02:42:49 <shapr> that's one reason I'm so happy with Debian
02:42:51 <Lunar^> 6.2
02:43:09 <shapr> because Igloo plays with all the configure options, builds the different flavored debs, and I get all the benefit!
02:43:24 <shapr> there *is* such a thing as a free lunch, and I'm going to buy one for Igloo next time I see him.
02:43:48 <Lunar^> :)
02:44:11 <shapr> and I think I owe Lunar^ a beer for french lessons ;-)
02:44:40 <Lunar^> *laugh*
02:44:53 <shapr> hi shawn 
02:44:56 <shapr> how's code?
02:45:02 <shawn> jhi
02:46:03 <shapr> ejt: ah, I see you've checked in some changes...
02:46:49 <shapr> shawn: have any Haskell questions?
02:48:47 <ejt> y, I still need to put a --package text into the makefile, the debian 6.01 that I was using didn't need it
02:50:50 <Darius> ejt: The GHC developers are trying to factor out non-essential libraries.
02:51:06 <ejt> makes sense
02:53:10 <shapr> yah, it makes life easier for the LibraryInfrastructure project 
03:14:16 <shapr> what else goes here? --> http://www.haskell.org/hawiki/StudyGroup
03:16:23 <shapr> yay, chalmers guys are working on updating HaskellDB for ghc6.2 and non-win32
03:20:35 <shapr> does anyone have links to Moggi's original papers handy?
03:22:04 <shapr> is this the right paper --> http://citeseer.nj.nec.com/moggi89notions.html
03:25:06 <andersca> chalmers guys?
03:25:24 <shapr> Bjorn Bringert
03:26:31 <andersca> ah, yes
03:26:36 <andersca> I know him from the haskell class
03:26:45 <andersca> and a friend of me is also working on it
03:27:05 <shapr> I wish they'd go with release early release often
03:27:17 <shapr> mostly because I want to play with the code :-)
03:27:54 <ejt> are you guys all at the same uni ?
03:32:17 <ski> ejt : not shapr
03:33:30 <ski> shapr : perhaps also http://citeseer.nj.nec.com/moggi89computational.html, haven't read any of them though so i dunno
03:34:09 <ski> (those two were referenced from wadlers the marriage of effects and monads)
03:35:38 <shapr> ok
03:35:48 <shapr> ejt: I'm in Sweden, but not at school.
03:36:04 <ejt> you do haskell for a living ?
03:36:05 <shapr> one day maybe, I'd like to travel to the Mecca of FP that is Chalmers, and take some classes.
03:36:08 <shapr> I wish
03:36:14 <ejt> ?
03:36:21 <shapr> I do Python for a living
03:36:26 <shapr> but I'd like to do Haskell for a living
03:37:07 <shapr> so I figure the best way to do that is to write code, help people learn more about Haskell, then at some point I'll be able to get a job doing Haskell.
03:37:23 <ejt> given that the industry is tooled up for imperative programming (in developers) I think you're going to have to wait a while :(
03:37:30 <shapr> not necessarily
03:37:41 <shapr> at the moment, me and my woman own and run our own company
03:37:50 <shapr> we get paid to build websites with Zope
03:38:20 <shapr> if I can show my clients that there is sufficient support for Haskell (namely other affordable programmers) in the 'real world'
03:38:20 <ejt> small companies are fine, they can use the advantages of FP, without having to worry about where the next FP programmer is coming from
03:39:23 <shapr> my clients still want assurances that I'm not irreplaceable, for reasons of bus number and price competition
03:41:24 <ejt> python always looked deathly dull to me
03:41:25 <shapr> anyways, if I can find enough companies that offer commercial Haskell support, then I can switch
03:41:37 <shapr> it's a nice language
03:41:41 <shapr> it's good for getting stuff done.
03:42:02 <ejt> y, I'm sure it's practical
03:43:21 <shapr> but it doesn't have the same raw uncontained power that Haskell has :-)
03:49:30 <shapr> I've forgotten how to configure ISA network cards in Linux.
03:49:32 <shapr> dang
04:13:43 <ski> hmm
04:32:24 <ski> hello Arnia
04:33:25 <shapr> bonjour Arnia 
04:34:03 <ski> Arnia : you're french ?
04:35:58 <shapr> actually, I think Arnia is English
04:36:12 <shapr> or lives in England
04:36:17 <ski> i'd think so
04:36:55 <shapr> hello stepcut``, how's code?
04:39:45 * ski thinks transf. patterns should be called something like inverse patterns
04:40:36 <shapr> transference?
04:40:44 <ski> huh ?
04:40:58 <shapr> transf. patterns?
04:41:02 <ski> perhaps inversion, or inversional ?
04:41:14 <ski> oh, 'transformation(al ?) patterns'
04:42:13 <ski> the "foo (x ! bar) = ..x.." stuff
04:42:35 <ski> you haven't seen it ?
04:43:35 <ski> shapr ?
04:45:01 <Darius> Transformational patterns.
04:45:08 <ski> ok, thanks
04:46:25 <shapr> ski: I haven't seen those.
04:46:32 <ski> oh
04:48:22 <ski> wasn't it spj (+ someone else ?) who introduced them ?
04:48:27 <shapr> I don't know
04:50:23 <ski> (sorry, the cat parted me)
04:52:11 <ski> shapr : anyway, basically the argument to foo above gets transformed by the function bar before matching against "x"
04:52:45 <ski> (and x can be a complex pattern)
04:53:00 <shapr> these patterns exist in GHC?
04:53:02 * shapr tries
04:54:13 <shapr> er, so it's a modified case matching?
04:54:43 <Darius> Transformational patterns are described in the paper that describes pattern guards.
04:54:48 <ski> modified ?
04:54:58 <Darius> I don't think they (transformational patterns) were ever implemented.
04:55:00 <shapr> it's a case statement with preprocessing
04:55:06 <shapr> it doesn't seem to work
04:55:16 <shapr> and I'm sure I would have seen it in some of the obfuscated code if it did
04:58:06 <Darius> An example is: applyFun (Just f)!(lookupEnv var) var val = f val which would be equivalent to the pattern guard applyFun env var val | Just f <- lookupEnv var env = f val
05:00:53 <ski> anyway i would like to swap the two sides of !, (and possibly change ! to some other syntax)
05:00:56 <shapr> I can see the usefulness, but imho, patterns guards are complicated enough for the LHS
05:01:12 <shapr> hi Jad!
05:01:24 <shapr> oh, lunch is ready, yay
05:01:26 <Darius> Transformational patterns are simpler syntactically.
05:01:41 <Jad> hello
05:01:47 <Darius> (or at least they take less typing)
05:01:48 <Jad> shapr, long time no see..
05:02:06 <ski> Darius : and semantically (imuo)
05:02:38 <ski> because they seem to have a more declarative reading
05:02:47 <Jad> guys do you remember clonaid ?
05:05:34 <ski> Darius,shapr : (e.g. "square x = x * x;  foo ((square ^ -1) x) = x + 2", so foo of the inverse of square of x is defined to be x+2)
05:06:16 <ski> (with current syntax foo is written as "foo (x!square) = x + 2")
05:07:48 <ski> Jad : i don't know what clonaid is
05:08:41 <Darius> ski: I don't see much benefit in thinking of transformational patterns that way in most cases.
05:10:11 <ski> Darius : perhaps :(  (i haven't played with the idea too much yet)
05:11:29 <Jad> ski, the company that claimed they cloned a human being
05:11:49 <ski> ok
05:21:05 * shapr bounces happily
05:21:09 <shapr> lunch is good.
05:27:41 <shapr> hoi kosmikus|away
05:28:01 <kosmikus> hoi shapr
05:28:22 <shapr> how was your christmas?
05:29:40 <kosmikus> fine, thanks -- I am still in .de but will return to .nl next weekend
05:29:47 <kosmikus> have you been away?
05:32:49 <shapr> yup, went to brussels and lille
05:33:16 <kosmikus> had a good time?
05:33:24 <shapr> I got to meet Bea's extended family for the first time. I think they decided Americans weren't quite as bad as they thought :-)
05:33:34 <kosmikus> :)
05:37:05 <shapr> I got munchkin-fu for christmas! yay!
05:37:26 <Lunar^> shapr: Are you really representative of north americans ? ;)
05:37:49 <Darius> He programs Haskell...
05:38:45 <Igloo> munchkin-fu?
05:39:18 * Darius wonders if he's overrun memory or not.
05:39:19 <Jad> anyone here familiar with epsilon ?
05:40:14 <shapr> it's true, I'm not a stereotypical american.
05:41:19 <Igloo> Ah, card game. Cool  :-)
05:41:47 <shapr> Igloo: http://www.sjgames.com/munchkin/munchkinfu/
05:41:48 <shapr> yes
05:41:50 <shapr> it's very cool
05:43:18 <Darius> well.  I guess that answers whether it needs to GC or not.
05:43:28 <shapr> Darius: did you win?
05:44:26 <Darius> No, but I wasn't expecting to.
05:45:04 <shapr> @arr
05:45:04 <lambdabot> Drink up, me hearties
05:47:37 <ejt> @arr
05:47:38 <lambdabot> Eat maggoty hardtack, ye unkempt, jenny frequentin', son of a gun.
05:48:00 <shapr> We just saw Pirates of the Caribbean on DVD yesterday.
05:48:11 <ejt> I want to see that
05:48:16 <shapr> it's nifty
05:50:05 * Darius goes 'a lambda lifting.
08:08:20 * shapr installs
08:09:43 <shapr> Igloo: does ghc-cvs include spec_eval?
08:10:39 <Igloo> No - I tried compiling it but I had problems. I fixed some of them but eventually had to give up
08:10:45 <shapr> ok
08:10:48 <shapr> thanks for trying
08:11:09 <Igloo> I might have another go with ghc5+gcc2.95 at some point
08:11:10 <shapr> do you remember which problems you fixed?
08:11:21 <shapr> is that where spec_eval was last actively developed?
08:11:23 <Igloo> I've probably got a diff if you want it
08:11:31 <shapr> I'd be interested
08:11:34 <Igloo> It was forked around 5.02 or 5.04 I think
08:11:53 <Smerdyakov> We should _celebrate_ our diffs!
08:13:25 <Igloo> http://urchin.earth.li/~ian/ghc-spec-eval-cvs_20031220-1.diff.gz is probably the latest I have. There's a load of autoconf crap and stuff in it too
08:14:16 <Igloo> Oh, looks like I'd already given up on gcc3
08:15:41 <Igloo> http://urchin.earth.li/~ian/log4 is the build I gave up on. ISTR lots of fun and games with the Posix libraries moving around now I look at it
08:16:01 <Igloo> I might go back to it when I have some time
08:21:58 <shapr> fair enough, thanks for the links
08:26:05 <mattam> @type lookup
08:26:06 <lambdabot> lookup :: Eq a => a -> [(a,b)] -> Maybe b
08:26:44 <mattam> @type flip
08:26:44 <lambdabot> flip :: (a -> b -> c) -> b -> a -> c
08:31:43 * shapr bounces happily
10:28:57 * SamB finally gets around to being surprised at the use of CPP with/in Haskell
10:42:04 <shapr> oh, I didn't know Duncan Coutts was at oxford
10:53:38 <shapr> has anyone else here read "Analysis Patterns" by Martin Fowler?
11:16:44 <shapr> it's sometimes very difficult to port OOP patterns to Haskell
11:27:01 <Lunar^> shapr: maybe follow what WxHaskell is doing ?
11:34:18 * shapr checks out wxHaskell
12:17:57 <shapr> @arr
12:17:57 <lambdabot> This is the END for you, you gutter-crawling cur!
12:33:04 <andersca> and I have a little TIP for you, get the point!
12:33:04 <andersca> :)
13:22:11 * shapr thinks
13:34:51 <Lunar^> Damn...
13:34:57 <shapr> what?
13:35:09 <Lunar^> There's no way to install Diablo II on OS X without using Classic
13:35:16 <shapr> oh, that sucks
13:35:19 <Lunar^> after that you have the patch..
13:36:06 <Lunar^> I do not play that much (nearly never, in fact)... Why does it have to be such a hassle every time I want to ?!
13:39:58 <shapr> hej phubuh 
13:40:02 <phubuh> hej!
13:40:17 <shapr> different hostname, are you on holidays?
13:40:23 <phubuh> ooh, I need to check my hostname
13:40:29 <phubuh> I'm at a LAN party :-)
13:40:33 <shapr> ah, I see
13:40:41 <phubuh> hmm, I wonder if this IP is public
13:40:51 <phubuh> then my mail could work, and I could keep receiving my spam
13:40:59 <shapr> lovely idea
13:41:03 <shapr> everyone needs spam
13:41:12 <phubuh> yup
13:41:47 <phubuh> could you telnet or netcat to my ip on port 12345?
13:42:17 <shapr> doesn't seem so
13:42:45 <phubuh> connection refused?
13:42:55 <phubuh> if not, type some stuff and press enter
13:43:00 <shapr> I got no route to host at first
13:43:08 <shapr> now I seem to have a connection
13:43:17 <shapr> maybe?
13:43:36 <phubuh> I don't see you typing anything :/ oh well, no biggie
13:43:48 <phubuh> now I have to see if anyone's running a quake server up in this piece
13:45:11 <phubuh> bah, noone is
13:45:18 <phubuh> dullards
14:14:17 <ToronTo> What up
14:14:25 <shapr> concurrent coding
14:14:28 <shapr> what's up with you?
14:14:42 <ToronTo> The CN Tower.
14:14:53 <shapr> isn't that a kind of tear gas?
14:18:27 <shapr> this is probably best done with channels
14:18:31 <shapr> ToronTo: you learning Haskell?
14:18:56 <ToronTo> Nope.
14:19:04 <shapr> why are you here?
14:19:10 <ToronTo> Why not?
14:19:18 <shapr> fair enough
14:19:23 <ToronTo> :)
14:19:47 <shapr> soo, I wonder what all should be in the POP3State record
14:42:15 <shapr> y0 Arnia 
14:43:42 <ToronTo> Quiet channel, eh?
14:43:49 <shapr> sometimes yes
14:43:51 <shapr> this is one of those times
14:44:21 <ToronTo> So...
14:44:33 <ToronTo> how about that $90 billion dollar man - Bill Gates?
14:44:42 <shapr> he helps fund Haskell.
14:44:51 <ToronTo> Let's hope he gets $100 Billion.
14:45:02 <ToronTo> That would be record-setting...beating his own record.
14:45:25 <shapr> I think I'll steal the read-only and read-write state stuff from lambdabot 
14:45:27 <ToronTo> Gates helps fund everything.  Except for Linux...
14:45:36 <shapr> @arr
14:45:36 <lambdabot> Shiver me timbers!
14:45:55 <shapr> of course, IRC isn't quite as stateful as POP3
14:46:43 <shapr> ToronTo: you ever read about monads?
14:47:17 <shapr> as these monad transformers go, I think I've found decepticons.
14:48:19 <ToronTo> No.  I've seen the Transformers movie though.  You know, the one where Unicron takes over Megatron's deady body, and builds that cannon robot.  Then, Optimus Prime dies and then Hot Rod arises as the leader.
14:48:34 <shapr> no, I haven't seen that one.
14:48:46 <shapr> monads are useful critters, you should check 'em out.
14:49:02 <ToronTo> The decepticons become a new race of robots.
14:49:08 <ToronTo> That battle the autobots.
14:49:24 <shapr> monads are more powerful than both of them!
14:50:56 <shapr> ToronTo: you ever tried any functional programming?
14:51:38 <ToronTo> Nope. 
14:51:45 <shapr> want to?
14:51:49 <ToronTo> Not really.
14:51:53 <shapr> ok
14:51:53 <ToronTo> Maybe one day.
14:52:06 <shapr> you might like it, it's powerful stuff.
14:52:08 <Lunar^> shapr: What deceptions ?
14:52:25 <shapr> Lunar^: the decepticons are the evil transformers
14:52:36 <ToronTo> Lunar^: You know, the show from the 80s?  With the good robots vs bad robots?  Deceopticons=bad robot transformers.
14:52:47 <shapr> the transformers were plastic toys that could turn from a robot into something else.
14:52:59 <ToronTo> Megatron, star scream, constructacons?
14:53:12 <shapr> ToronTo: might have been north america only
14:53:20 <ToronTo> shapr: That Automisprime toy was bigger than Buzz Lightyear!
14:53:30 <shapr> I think it was Optimus Prime
14:53:42 <Lunar^> lol
14:53:52 <ToronTo> shapr: It was a japanese anime show that was cut for being too violent.  You can catch an episode at transformers.net or something.
14:53:56 <shapr> anyways, I have better toys now. specifically, cooler transformers.
14:53:57 <ToronTo> Yeah, something like that.
14:54:23 <ToronTo> I like Rodimusprime more.
14:54:32 <shapr> I don't think Transformers were anime originally, but then I haven't lookup up their origins.
14:54:36 <shapr> anyways, monad transformers are cooler.
14:54:57 <ToronTo> NO WAY.  All remakes of the 80s show were sad.
14:55:05 <ToronTo> They turned Optimus prime into a fire engine damnit!
14:55:09 <ToronTo> They killed his character!
14:55:18 <shapr> yah, I remember.
14:55:20 <ToronTo> Although the fire engine was a good idea (herioc, strong).
14:55:38 <shapr> yes, but wait till you see a state monad transformed with an error monad.
14:55:47 <shapr> and a reader monad!
14:56:42 <ToronTo> The 80s show takes place in the year 2005.  Too bad by 2005, there won't be any 20 foot robots that transform and shoot at each other.
14:57:26 <shapr> the first foldr is free you know...
14:57:43 <shapr> then you get promotional literature
15:06:42 <shapr> hi john
15:08:22 <`John> hi
15:08:30 <shapr> how's code?
15:08:40 <Smerdyakov> `John, do you have companies?
15:09:10 <`John> well, haskell is slow going.
15:09:18 <`John> though I'm playing a little with 6502 assembler.
15:09:27 <shapr> have some Haskell questions?
15:09:41 <`John> Smerdyakov, what do you mean by'Do you have companies'?
15:10:03 <`John> shapr, not yet.
15:10:07 <Smerdyakov> Well, do you HAVE any? :D
15:10:22 <`John> huh?
15:11:16 <Smerdyakov> Just a joke.
15:11:20 <Smerdyakov> Ha ha ha ha.
15:12:02 <Smerdyakov> Because there is this John Companies colocation outfit that advertises on k5.
15:12:19 <`John> what is k5?
15:12:53 <Smerdyakov> www.kuro5hin.org
15:58:52 * shapr cackles happily
16:07:22 <shapr> hi anth
16:35:34 <shapr> did you win?
18:21:59 <Smerdyakov> cm, this pixeltwins.net... it intrigues me.
20:02:12 <Smerdyakov> S 1/cabin dcabin = log cabin + c = houseboat
21:07:11 <mattam> takes days to build ghc-6.2...
21:13:24 <`John> where is a good hex calc for linux? hex<->dec
21:21:02 <ayrnieu> john - any Forth will suffice.
23:07:51 <Cale> bc will do this
23:12:41 <ayrnieu> oh, sure, avoid a perfectly good programming language that happens to have immediate utility as a simple hex calculator for the sake of 'bc'.
23:13:38 <ayrnieu> I want to continue on for several minutes on a rant, but I seem to have exhausted my stores -- and I'd need more research, anyway, as I've never used bc.
23:14:36 <ayrnieu> So just kind of imagine one, please.  Also, you could write a small Haskell program for this fairly easily -- and get bignums out of it, too.
23:15:54 <dennisb> Prelude> readHex "10a"
23:17:38 <dennisb> there is also showHex (in module Numeric)
23:26:07 <Cale> :)
