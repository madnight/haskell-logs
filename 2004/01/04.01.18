00:18:50 * shapr yawns
00:19:01 <shapr> good morning #haskell!
00:24:38 <Heffalump> ugh.
00:25:50 <shapr> Heffalump: not feeling hyperactive this morning?
00:26:08 <Heffalump> have you ever seen me hyperactive at this time of the morning?
00:26:16 <Heffalump> I'm usually just asleep.
00:26:41 * shapr DCCs coffee to Heffalump 
00:38:39 * shapr grumbles about nvidia and linux 2.6
00:39:34 <rubix> why, shapr ?
00:40:46 <shapr> because make-kpkg is complaining that the nvidia kernel module can't be built
00:41:26 <rubix> oh
00:41:45 <shapr> oh, I think I'm using the 4496 version, whoops
00:42:22 <rubix> i don't use make-kpkg. why use it ?
00:42:33 <Heffalump> makes nice Debian packages
00:42:39 <Heffalump> which i shandy
00:42:45 <Heffalump> s/ s/s /
00:42:46 <shapr> easier to apply patches
00:43:08 <rubix> you mean that when you install the package, it installs the kernel?
00:43:11 <shapr> lets you run with a bunch of different kernel versions concurrently
00:43:23 <rubix> i'll take a look then
00:43:50 <shapr> make-kpkg is in kernel-package
00:44:18 <shapr> it has /usr/share/doc/kernel-package/Rationale.gz
00:44:27 <shapr> that describes some advantages
00:45:18 <rubix> thanks shapr, that's exactly what i wanted :)
00:46:23 <shapr> once I've done apt-get install nvidia-kernel-source alsa-source lufs-source etc, then I do "make-kpkg --revision=custom.1.2 --added-patches=lowlatency,preempt --config=menuconfig kernel_image modules_image" and patches are applied, lufs/alsa/nvidia modules are built into separate debs, and I'm good to go
00:47:38 <rubix> lufs ? alsa ?
00:48:02 <shapr> alsa is really cool, Advanced Linux Sound Architecture
00:48:04 <rubix> isn't alsa already in linux-2.6 ?
00:48:07 <shapr> it is
00:48:12 <shapr> that's my build line for 2.4 kernels
00:49:31 <shapr> anyways, one of the handy parts is that aftermarket kernel modules that you've installed are automatically built into debs
00:49:36 <rubix> i did try to compile alsa in my 2.6, but sound does not work at all with 2.6, so i couldn't really see the advantages :)
00:50:06 <shapr> alsa is very happy with my SB Live!
00:50:12 <shapr> what chipset do you have?
00:51:26 <shapr> did you build the OSS compatibility layers? many apps don't know how to talk to alsa yet
00:52:04 <rubix> err, i don't know the chipset :)
00:52:14 <shapr> lspci -v
00:52:28 <rubix> ok, so i need to choose "OSS api emulation"?
00:52:38 <shapr> yes
00:52:50 <shapr> and probably the mixer and sequencer emulation as well
00:53:09 <rubix> is the answer you want "nVidia Corporation nForce Audio"?
00:53:28 <shapr> oh, you have an nForce motherboard, nifty!
00:53:48 <shapr> how do you like it? I've been curious about those motherboards
00:54:23 * rubix is busy looking in a dictionary the word "nifty"
00:54:47 <rubix> well, it has bring to me a lot of knowledge in kernels :)
00:54:52 * shapr laughs
00:55:03 <shapr> chouette == nifty ?
00:55:53 <rubix> kind of, dictionary says "coquet,pimpant"
00:56:02 <shapr> I don't know those words
00:56:05 <rubix> or "commode"
00:56:07 <shapr> coy and pimping??
00:56:20 <rubix> i don't know *those* words :)
00:56:27 * shapr grins
00:56:36 <shapr> we can ask Lunar^ when he's awake maybe
00:56:56 <shapr> or I can ask my woman, since she's native française
00:57:49 <rubix> she surely would know better, since i don't fully understand "nifty" yet
00:57:56 <rubix> but i see the general idea
01:00:54 <rubix> does using make-kpkg require a lot of knowledge in using debian packages ?
01:02:12 <shapr> rubix: she looked up pimpant in le maxidico, that's a neat word!
01:02:32 <rubix> yes, but it's not very common
01:02:36 <shapr> 16th century, provençal, originally from "to decorate"
01:03:05 <shapr> but used to mean "covered in surprising elegance"
01:03:14 <shapr> which is how I usually use "nifty"
01:03:27 <rubix> i see
01:03:39 <shapr> rubix: did you know pimpant already? do you use that word?
01:03:41 <rubix> maybe simply "joli" would do
01:03:54 <shapr> bea says that would do
01:04:02 <rubix> i never use it in everyday's life
01:04:20 <rubix> a lot of words in dictionary are like that :)
01:04:39 <shapr> bea says that nifty is a mixture between clever and pretty
01:05:07 <shapr> pimpant is a neat word
01:05:11 <rubix> then i don't think we have exactly the same in french
01:05:13 <shapr> I may have to steal that one.
01:05:51 <rubix> shapr, if you use pimpant in france, you may have difficulties :)
01:06:10 <shapr> do you think they will confuse it with other meaning of the word "pimp" ?
01:07:07 <rubix> not really
01:08:08 <rubix> I'm sure in english there are also a lot of words that exists, but are never used by people in the streets
01:08:08 <shapr> next time I'm in france I want to visit Lunar^
01:08:14 <shapr> yes, lots of those words
01:08:31 * shapr can think of lots of those
01:08:35 <shapr> I like eponymous
01:08:45 <rubix> languages evoluate, and some new words are created when others become kind of "deprecated"
01:09:00 <rubix> when do you come in france, shapr ?
01:10:23 <shapr> I don't have any plans now, but after my last experience, j'ai besoin de revenir
01:10:54 <shapr> france is fun
01:11:10 <rubix> what was your last expérience ? something pénible ?
01:11:23 <ham[kell]> hiho
01:11:25 <rubix> in which way is it fun ?
01:11:39 <rubix> hiho ham[kell]
01:12:40 <shapr> it was fun in the way that the french are unique, and they have many interesting ways of doing things.
01:12:56 <shapr> and I have become a lover of many different kinds of cheese!
01:13:11 <ham[kell]> cheese is great
01:13:15 <ham[kell]> shapr got the mail
01:13:16 <ham[kell]> ?
01:13:21 <shapr> no, still down :-(
01:13:28 <shapr> I'll call my ISP today.
01:13:31 <shapr> hopefully their phones still work
01:13:48 <ham[kell]> :)
01:14:10 <shapr> rubix: have you been to the USA?
01:14:14 <rubix> really ? i can't even imagine what are those ways of doing things. are wa that different from people in other countries ?
01:14:15 <ham[kell]> shapr still awake ?
01:14:26 <rubix> shapr, not (yet?)
01:14:44 <shapr> ham[kell]: nah, just got up, I'm trying the ham[kell] sleep rhythm (tm)
01:14:53 <ham[kell]> heh :)
01:15:08 <rubix> i have been in other countries nearly only for holidays
01:15:42 <shapr> I can only talk about the differences I saw in two days in Lille, I don't have any other experience.
01:16:01 <rubix> i would be glad to hear more
01:16:20 <rubix> even if I'm not sure this is the right irc channel :)
01:16:21 <shapr> I think there are a lot of similarities between the USA and France, because liberty of the individual is so important in both places.
01:16:58 <rubix> comparatively with other countries, you mean ?
01:17:04 <ham[kell]> though i think that the french arent that artificial in general
01:17:17 <ayrnieu> ham - what do you mean by 'artificial'?
01:17:31 <ham[kell]> if you go out in the us to shop or eat then they have these artificial smiles and such
01:17:56 <rubix> maybe *you* think it's artificial
01:18:02 <rubix> it's in your brain :)
01:18:21 <shapr> I think he means that french people don't cover up how they feel about someone
01:18:22 <rubix> oh you mean in the US
01:18:24 <rubix> sorry*
01:18:24 <shapr> they're more open about it
01:18:27 <ayrnieu> Yes, I hate that.
01:18:46 <ham[kell]> shapr right
01:19:16 <shapr> yay, my isp has returned from disconnectedness
01:19:20 <rubix> hi lambdabot ! :)
01:19:20 <ayrnieu> Not so much in person or in shops and such, but on TV -- I watch a little bit of CNN when I eat, and I despise the 'good news, smiley face'/'bad news, frowny face' newscasters.
01:19:38 <shapr> @arr
01:19:39 <lambdabot> Well me hearties, let's see what crawled out of the bung hole...
01:20:02 <ham[kell]> if you look your local news cnn and bcc then its great fun :)
01:23:44 <shapr> In my opinion, when different cultures work together, you can have many strengths that you don't get from monoculture groups.
01:24:06 <rubix> btw shapr, how do you situate finland people amongst us people or french people?
01:24:11 <shapr> I think the USA had that strength when immigration was freely allowed.
01:25:20 <shapr> I think france and the usa are nearly equal from the viewpoint of the finnish
01:26:23 <shapr> US culture contains a lot of direct imports from french culture
01:26:36 <shapr> so there's a direct relationship
01:27:29 <shapr> from what I've seen of Sweden and Finland, they come from a different root culture, whatever you want to call "Nordic"
01:27:46 <shapr> I don't think one is better than the other, they're just different.
01:27:56 <Marvin--> morning people
01:28:03 <shapr> hej Mr. Nordic ;-)
01:28:31 * rubix thinks he should visit more other countries, in order to get a better idea of what shapr is saying
01:28:44 <shapr> yes, I think so too
01:28:45 <shapr> it's fun!
01:29:16 <shapr> in the same way that learning asm, C, Python, Haskell, and Prolog shows you many ways of programming...
01:29:21 <ayrnieu> well, I can answer that question: yes, the US way has many innate and intrinsic betternesses so obvious and patent and real that we needn't discuss the issue further, except to say that travelling to Sweden will corrupt your immediate and natural perception of this betterness in unspeakable ways.
01:29:33 * shapr laughs
01:31:12 <shapr> rubix: I do think the best music comes from places where two cultures rub together. India's techno scene is getting interesting, for example. New York's mix of beatbox and classical flute is fascinating, etc
01:32:31 <rubix> i know nothing on techno in India, but you are probably right :)
01:32:50 <shapr> I've heard several bands from france that do something like acoustic rap, I don't know what you really call it.
01:33:33 <lumm0x> "<Sui88> 67% of girls are stupid - <V-girl> i belong with the other 13%"
01:33:59 <rubix> i can't be of any help on this, i'm not interested in rap
01:35:23 <shapr> what kind of music do you like?
01:36:10 <Marvin--> lumm0x: ooooold
01:36:37 <rubix> miscellanous music :)
01:36:46 <lumm0x> jaa jaa Marvin-- ;D
01:37:07 <ayrnieu> o/~ bu yao duo shuo, wo yijing dou mingbai o/~
01:37:22 <ayrnieu> (don't speak more, I already understand everything)
01:37:39 <rubix> is it chinese ?
01:37:59 <shapr> ham[kell]: yay, got it!
01:38:23 <ayrnieu> also, 'any more'.  The kind of music I'd find little interest in holds a great deal more interest to me when sung in Chinese =)
01:38:47 <ham[kell]> :)
01:38:48 <ayrnieu> but I don't have much Chinese music -- I can't exert too much pickiness over it.
01:39:57 <rubix> those days i'm rather into japanese music
01:40:47 <rubix> not traditional music though :)
01:41:09 <ayrnieu> I like traditional Chinese music, too.
01:41:38 * ayrnieu goes to sleep.
01:41:46 <shapr> I wish irate.sf.net had a peer to peer setting
01:50:23 * shapr bounces happily
01:51:24 <shapr> I wonder how difficult for a Haskell xhtml layout engine.
02:13:46 <shapr> neat, SPJ's work on financial contract combinators has become a commercial product
02:26:27 <Marvin--> cool
02:29:55 * Marvin-- boggles at comdex scandinavia
02:30:03 <Marvin--> "Strictly business-to-business, age limit 18 years, no students."
02:30:12 <shapr> ??
02:30:21 <Marvin--> ...
02:30:36 <clausen> obviously, they want it to be a flop
02:30:42 <Marvin--> I don't get it
02:30:52 <clausen> trade shows have been crap for a long time
02:31:24 <Marvin--> "yeah, surely it's got to be a bad thing to get students interested in technology"
02:31:45 <clausen> well, they don't care about that
02:31:54 <clausen> what they should care about is students being connected to businesses
02:31:56 <clausen> "spreading the word"
02:39:37 <ham[kell]> can you run make within ghci? that is the same thing that ghc --make does
02:42:36 <mgoetze> Marvin--: and, uh, your point is? ;)
02:42:45 <Marvin--> mgoetze: :(
02:43:47 <mgoetze> Marvin--: oh... wait... you actually want to go to that sort of thing?
02:46:06 <shapr> ham[kell]: hmake has hi which is hmake interactive
02:46:15 <shapr> is that what you're asking for?
02:47:01 <ham[kell]> hmake interactive? so :hi ?
02:49:21 <ham[kell]> ok i can just use :!ghc --make  :)
02:49:45 <shapr> doesn't ":l Foo.hs" work?
02:50:30 <ham[kell]> sec
02:51:20 <ham[kell]> shapr doesnt this just load the file?
02:51:37 <shapr> yes, but GHCi can only load Foo.o
02:51:41 <shapr> so it has to compile the file as well
02:58:01 <Marvin--> mgoetze: no, not really, I was just surprised
03:29:42 <shapr> yow!
03:29:54 <shapr> hi Matt-W, how's code?
03:30:50 <TripleDES> morning
03:30:57 <shapr> hi TripleDES
03:31:09 <shapr> with a nickname like yours, have you tried the Haskell Cryptolib?
03:32:25 <TripleDES> wow, I haven't, sounds nice
03:33:01 <shapr> http://www.haskell.org/crypto/ReadMe.html
03:33:22 * TripleDES reading
03:33:40 <shapr> cipherText = cbc DES.encrypt iv key $ pkcs5 $ map (fromIntegral . ord) plaintext
03:39:02 <TripleDES> time to study now...tomorrow exam :\
03:39:10 <TripleDES> cu later
03:39:30 <shapr> ok, cya
03:45:59 <raver> y0
03:46:17 <shapr> y0 y0
03:46:55 <raver> good morning shapr
03:46:58 <raver> :)
03:47:03 <shapr> good morning raver, what's up?
03:47:12 <raver> well...
03:47:25 <raver> is the last day before my fun prog exam
03:47:28 <raver> so...
03:47:53 <shapr> so you're studying hard?
03:48:05 <raver> not yet
03:48:19 <raver> i woke up 15 minutes ao
03:48:22 <raver> ago
03:48:26 <shapr> ah
03:48:30 <raver> ;)
03:48:42 <shapr> yes, I'm about to start working too
03:49:00 <shapr> Marvin--: hey, can I grab a package that isn't on the mirrors yet?
03:52:47 <Matt-W> hi shapr
03:52:52 <shapr> hello
03:52:53 <Matt-W> and everyone else
03:54:53 <phubuh> hey dudes
03:55:00 <shapr> hej hej
03:55:09 <Matt-W> Code is pretty good
03:55:18 <Matt-W> Although most of it's been in C++ lately
03:55:25 <Matt-W> haven't had much time to play with Haskell :-(
03:55:41 <shapr> well, working code is good code
03:55:59 <Matt-W> yes, this is true
03:56:07 <Matt-W> but I've got something most peculiar happening in my C++ at the moment
03:56:49 <phubuh> oh shapr, thanks for like 90% of your .zshrc which I stole yesterday
03:57:04 <Maddas> heh
03:57:32 <phubuh> morning maddas
03:57:49 <shapr> phubuh: heh, sure
03:58:02 <shapr> phubuh: realize that I in fact stole 90% of my .zshrc from Damien Elmes
03:58:15 * shapr gets url
03:58:35 <phubuh> haha, I stole a lot of my .emacs from damien
03:58:59 <shapr> he's really good at finding and configuring new software
04:00:48 <mgoetze> shapr: wanna trade .zshrc's?
04:01:20 <shapr> mgoetze: sure
04:01:26 <shapr> mine is online
04:01:39 <mgoetze> shapr: i'm dcc'ing you
04:01:47 <shapr> my elisp client doesn't do dcc
04:01:50 <shapr> but I do sendfile
04:01:58 <mgoetze> uh, waszat?
04:02:22 <shapr> apt-get install sendfile
04:02:28 <mgoetze> in any case, www.mgoetze.net/~mgoetze/zshrc
04:02:55 <shapr> I don't have permission to access that
04:03:10 <mgoetze> oh, duh
04:03:12 <mgoetze> should be fixed now
04:04:23 <mgoetze> shapr: where's yours?
04:04:55 <shapr> http://www.scannedinavian.org/~shae/src/zsh/
04:04:59 <shapr> not sure that's the latest version
04:05:46 * shapr checks
04:07:19 <Marvin--> shapr: try incoming.d.o
04:07:24 <shapr> ah, thanks
04:07:29 <shapr> via ftp?
04:07:32 <Marvin--> http
04:07:39 <Marvin--> just http://incoming.debian.org/
04:08:03 <Marvin--> (it's not an apt source, obviously)
04:08:48 <shapr> aha
04:09:32 <shapr> Marvin--: yay thanks!
04:10:02 <shapr> phubuh: I've found my g and pd aliases surprisingly useful
04:10:11 <Marvin--> g?
04:10:12 <mgoetze> shapr: so do you use dtterm or did you just steal that part without adapting it? :)
04:10:38 <shapr> Marvin--: alias g='galeon -x -n'
04:10:47 <shapr> what's dtterm? 
04:11:09 <mgoetze> shapr: hp-sux terminal emulator
04:11:15 <shapr> ah
04:11:19 <shapr> not that I'm aware of
04:11:59 <mgoetze> shapr: it occurs in line 106 of your zshrc
04:12:07 <Marvin--> er, why galeon -x -n? it'll try to use the running instance and a new windo by default, won't it?
04:12:11 <shapr> yes, I saw that
04:12:25 <mgoetze> btw, this really belongs to my zshrc too: http://www.mgoetze.net/~mgoetze/zkeymap
04:13:00 <Marvin--> shapr: and I use pushd/popd all the time in bash, very neat-o
04:13:04 <shapr> Marvin--: I have ~usd for /usr/share/doc so I often do "g ~usd/$something/ tab tab"
04:13:21 <Marvin--> don't think I'd like autopushd though
04:13:29 <shapr> so I get to see if there's any useful html docs for whatever deb I'm interested in, and then zoop them into my browser
04:13:37 <shapr> I really like autopushd
04:13:44 <shapr> and nodups in history
04:14:26 <shapr> I don't know how to make a region at the zsh prompt though
04:14:34 <shapr> and I REALLY want to get a copy of Igloo's zsh prompt!
04:14:43 <shapr> it's one of the coolest I've seen
04:14:53 <shapr> Igloo: hey, can I get a copy of your zsh prompt?
04:15:08 <phubuh> I think regions in the prompt work just like in emacs
04:15:16 <shapr> I haven't gotten it to work
04:15:18 * shapr tries again
04:15:20 <phubuh> hm
04:15:29 <shapr> huh
04:15:38 <shapr> it just doesn't show the region
04:15:55 <shapr> ok, how do I get it to show the region?
04:16:01 <phubuh> yeah, that's kind of annoying
04:16:17 <Maddas> Hm, I think I should try using emacs again a bit, this time with control bound to caps lock :)
04:16:36 <shapr> yes, control is a bad place on standard keyboards
04:17:00 <Maddas> I liked the way Sparc Sunblades had it
04:17:03 <mgoetze> caps lock as control?
04:17:08 <shapr> it's like your fingers have a long commute =)
04:17:08 <phubuh> it completely beats me why they moved it
04:17:12 <mgoetze> no no no, caps lock should be bound to compose...
04:17:25 <Maddas> phubuh: Emacs fans :-)
04:17:37 <shapr> imho, kinesis has the real spot for control and alt
04:17:41 <Maddas> Otherwise you'd have escape there
04:18:04 <Maddas> Are Kinesis keyboards good?
04:18:13 <shapr> they are
04:18:16 <shapr> I have two
04:18:16 <Maddas> I am pondering buying a KeyTronic ErgoForce
04:18:28 <shapr> I would argue strongly in favor of kinesis
04:18:29 <mgoetze> i'm pondering buying a sun usb keyboard...
04:18:39 <shapr> on the downside, kinesis isn't cheap
04:18:42 <Maddas> I still have occasional wrist pains
04:18:51 <shapr> on the upside, kinesis will totally out-geek your friends
04:18:56 <Maddas> I wonder how good/bad this laptop is in the long-term
04:19:01 <Maddas> shapr: using Dvorak already did that
04:19:23 <shapr> I use dvorak too
04:19:33 <Maddas> :-)
04:19:39 <shapr> extra-geeky: http://www.kinesis-ergo.com/contoured_usb.htm
04:19:46 <phubuh> I need to get faster with Dvorak
04:20:08 <mgoetze> i've been using qwerty since i was 7 or so. my fingers know exactly where all the keys are. why should i bother learning something new?
04:20:12 <Maddas> A crappy CPM test (typera.tk) tells me I'm 50% faster with Dvorak
04:20:27 <Maddas> mgoetze: Because qwerty is bad for your wrists and very inefficient
04:20:33 <Maddas> I was a long-time qwerty touch-typer too, before.
04:21:02 <phubuh> mgoetze: with dvorak, you don't have to travel around so much
04:21:03 <mgoetze> well, i don't use the standard "10-finger" system...
04:21:06 <Maddas> After one or two years of dvorak (can't remember), I have greatly improved my typing speed, and I feel much more comfortable typing. 
04:21:20 <Maddas> The main reason I switched was my wrists, though, I was developing first signs of RSI
04:22:56 <ayrnieu> I learned to type extremely fast with Qwerty (because I needed to, for IRC and MUDs and such) using an 'ad-hoc' touch-typing.  I learned to type as fast, and properly, in dvorak over the span of 3 days... after which I couldn't type at all in Qwerty (I had to relearn that, later).
04:23:14 <Maddas> Heh.
04:23:43 <Maddas> I learned in a very inefficient way, I just hit all the keys until I knew which was where :)
04:24:08 <shapr> it looks to me like qwerty typists are jumping all over the keyboard
04:24:22 <ayrnieu> Which I like to talk about, because it exposes something of the nature of memory (I overwrote my kinesthetic typing skills!)  but, for the most part, I use it as a reason to sniff at people all whiny about learning a new keyboard layout.
04:24:24 <phubuh> I used a nifty program called dvorak7min
04:24:38 <Maddas> phubuh: www.dvorak.nl is also somewhat ok :)
04:24:41 <Maddas> shapr: That's how I feel in the rare occasions I type something in qwerty
04:24:42 <Maddas> I hate it
04:24:47 <shapr> Maddas: same here
04:24:50 <ayrnieu> shapr - yes, I typed Qwerty that way.
04:25:12 <shapr> Maddas: in my opinion, kinesis will cut down on your RSI symptoms
04:25:16 <Maddas> ayrnieu: Cool, I'll talk about you too then :-)
04:25:33 <Maddas> shapr: Hm, good. I noticed that by far the worst thing for the wrists is a trackpad, though. 
04:25:35 <shapr> I have my "I am not a koala" theory
04:25:39 <Maddas> Haha
04:25:57 <shapr> which basically says that chording should happen with the thumbs
04:25:58 <ayrnieu> I used http://www.gigliwood.com/abcd/abcd.html to learn Dvorak, along with three days of heavy IRC usage.
04:26:02 <clausen> koalas are cool
04:26:10 <shapr> thumbs are good for holding down modifier keys, but pinky fingers are not
04:26:13 <Maddas> clausen: That doesn't mean shapr is not cool.
04:26:22 <clausen> they make a big thud when they fall out of trees
04:26:24 <ayrnieu> shapr - a good idea.
04:26:25 <shapr> haha!
04:26:25 <clausen> they are very heavy!
04:26:30 <Maddas> haha
04:26:31 <shapr> clausen: I want to see a video of that!
04:26:36 <clausen> (just missed my brother!)
04:26:40 <Maddas> clausen: Is that why you find them cool? 
04:26:47 <clausen> Maddas: part of it
04:26:54 <clausen> Maddas: it didn't seem to bother it
04:26:54 <Maddas> clausen: Haha.
04:27:05 <clausen> Maddas: it was sort of like someone getting woken up by having the light turned on
04:27:10 <Maddas> haha
04:27:17 <Maddas> clausen: Sounds hilarious to look at
04:27:25 <clausen> it was *grin*
04:28:02 <Maddas> shapr: at the same time, RSI was a reason I switched from emacs to vim
04:28:17 <Maddas> Although I must admit that I never had the idea of remapping the control key at that time :_)
04:33:48 <shapr> emacs pinky sucks
04:34:06 <shapr> anyways, I now have *all* modifiers under my thumbs
04:34:44 <ayrnieu> shapr - mmm.  I definitely need to get one of these keyboards.
04:34:45 <shapr> Maddas: oh, you can get *hardware* dvorak kinesis keyboards
04:34:45 <mgoetze> shapr: so you don't have one of those foot modifier thingies? :)
04:34:45 <phubuh> autoload -U insert-files
04:34:46 <phubuh> zle -N insert-files
04:34:46 <phubuh> bindkey "^Xf" insert-files ## C-x-f
04:34:56 <phubuh> ## This function allows you type a file pattern,
04:34:56 <phubuh> ## and see the results of the expansion at each step.
04:34:56 <phubuh> ## When you hit return, they will be inserted into the command line.
04:35:02 <phubuh> that's so awesome
04:35:03 <shapr> mgoetze: my feet bounce around a lot, I haven't tried them
04:35:04 <ayrnieu> mgoet - X only supports 4 modifies at a time.
04:35:23 <shapr> I think it supports more than that
04:35:34 <Maddas> shapr: I'm fine with normal keyboards, all OS I use support software-d
04:35:34 <ayrnieu> shapr - at a time?  Not to my knowledge.
04:35:34 <Maddas> dvorak
04:35:51 <shapr> Control, Alt, Meta, Hyper, Super
04:35:59 <shapr> and Shift and AltGr are both flavors of Shift
04:36:00 <Maddas> phubuh: That is what makes me miss emacs :-)
04:36:17 <ayrnieu> well, OK, using your free interpretation of 'modifier' =)
04:36:26 <shapr> well, five modifiers and two shifts
04:36:50 <phubuh> that stuff is for zsh :)
04:37:24 <ayrnieu> I suspect that a touchstream keyboard would also please me.
04:37:35 <Maddas> A FingerWorks Touchstream?
04:37:41 <ayrnieu> yes.
04:37:47 <shapr> anyways, with my current keyboard remapping, I can hit C-M-S-H-# with two fingers
04:38:16 <Maddas> ayrnieu: I want to buy one too, but I don't because I have to test it for a month or so before buying it for sure.
04:38:23 <Maddas> s/I/I'd/
04:38:30 <Maddas> ayrnieu: If you get one, let me know how it is :-)
04:38:33 <ayrnieu> shapr - does your keyboard have modifiers under the thumbs, or do you map them there?
04:38:35 <shapr> kinesis has a one month money back guarantee
04:38:44 <Maddas> shapr: Cool
04:39:06 <Maddas> The cool thing about the TouchStream would be that I could replace my PowerBook keyboard with it, I think.
04:39:17 <shapr> ayrnieu: C and M are under the thumbs, I removed home and end under the left thumb and pgup and pgdn under the right thumb, and remapped them to super and hyper
04:39:33 <Maddas> Heh, super and hyper.
04:40:06 <shapr> kinesis keyboard has a lot of space inside the plastic covering, I want to stick one of those nano-portables in there and get one of those displays that clips onto your eyeglasses
04:40:15 <shapr> that would be the ultimate laptop
04:40:38 <ayrnieu> kinesis-ergo.com ?
04:40:41 <shapr> yup
04:41:21 <shapr> here's a basic idea of the layout: http://www.kinesis-ergo.com/images/dual-leg.gif
04:41:48 <shapr> the QD models have a small switch on the back so you can swap the hardware mapping from qwerty to dvorak
04:42:39 <Maddas> I don't really like changing the hardware mapping, but if it's just a switch and not hardcoded, it sounds ok
04:42:41 <shapr> anyways, I unmapped Shift_L and Shift_R, and put shift_L on delete
04:42:51 <shapr> I'm using xkeycaps
04:43:01 <shapr> I have my .xmodmap file in my config files
04:43:15 <Maddas> shapr: I meant the switch on the back of the keyboard :-)
04:43:18 <ayrnieu> kinesis has a 60-day money-back guarantee, at the moment.
04:43:18 <shapr> oh
04:43:24 <Maddas> ayrnieu: oh, even cooler.
04:43:25 <shapr> oh, they've improved
04:43:45 <shapr> sooo, there's even further to go
04:44:04 <shapr> Jef Raskin's Humane Interface stuff describes how keyboards should really work, imho
04:44:42 <shapr> Alex Schroeder (kensanata) introduced me to the idea, and since then, we've gotten a bunch of emacs implementations
04:44:46 <ayrnieu> You can get a refurbished evolution desktop keyboard with no touchpad for 215 USD.
04:45:24 <shapr> http://www.usemod.com/cgi-bin/mb.pl?HumaneInterface http://www.emacswiki.org/cgi-bin/wiki/CategoryKeys
04:46:08 <shapr> for example, I have a "news/email key" that switches to any open reply first, then any open mail that's being composed, then any open mail or news group, then any open group list buffer, or starts gnus if it's not started
04:46:17 <shapr> and pressing it repeatedly cycles through them
04:46:31 * shapr could go on in great detail
04:47:27 <shapr> I've rebound caps_lock to hippie-expand, Shift_R is now my buffer switch key
04:47:28 <Marvin--> time to play some D&D
04:47:36 <shapr> special purpose keys are *really great*
04:47:45 <Maddas> Hm.
04:48:22 <shapr> hippie-expand is one of the most powerful emacs features, imho
04:48:51 <Maddas> I never got along with it, although I didn't use it a lot at all
04:49:28 <shapr> I'd be happy to suggest some useful hippie-expand configurations, I have mine online
04:49:42 <shapr> hippie-expand is great on irc
04:49:49 <shapr> and is great in eshell
04:50:54 <shapr> I've noticed I have a tendency to use words or names at a shell prompt that I've just gotten back as output from a previous command
04:51:07 <det> does normal vs strict evaluation order matter of termination is guarenteed ?
04:51:23 <shapr> yes
04:51:39 <shapr> head [1,1/0]
04:51:54 <det> oh, right
04:52:24 * shapr realizes keyboards and emacs are way off-topic
04:52:24 <ayrnieu> shapr - I find it impressive that you apparently parsed that question.
04:52:44 <shapr> I read and speak fluent typo
04:53:01 <det> !!
04:53:06 <det> I speak fluent typo!
04:53:19 <cptchaos> me too
04:53:31 <ayrnieu> I refer to my skills in that realm as my 'psychic powers', because even I do not understand how they work.
04:53:51 <shapr> there was a slashdot article about that recently
04:54:00 <mgoetze> minä puhuu typoo
04:54:06 * det wonders how charity can guarentee termination, yet has infinite datatypes and folds
04:54:23 <ayrnieu> shapr - do you have a URL?
04:54:24 <shapr> puhutko englaneksi?
04:54:27 <shapr> ayrnieu: looking
04:54:36 <mgoetze> er, wait, why am i using the third-person form of the verb with the first-person pronoun?
04:54:53 <mgoetze> shapr, joo...
04:55:09 <mgoetze> ja saksa
04:55:22 <det> tes gonda mucks!
04:55:30 <shapr> ayrnieu: in summary, it said humans can raed wdros jsut fnie as lnog as the frist and lsat lteetrs wree in pclae
04:55:44 <ayrnieu> shapr - oh, that one.
04:56:05 <shapr> mgoetze: minä puhun
04:56:20 <mgoetze> shapr: yeah, i realized that after i typed it :)
04:56:33 <ayrnieu> shapr - it failed in that it had a fairly consistent 'randomization' -- and it doesn't relate as strongly to deeply disturbed questions, such as emitted by a non-native speaker.
04:56:55 <Maddas> shapr: May I call you sharp then? :-)
04:57:09 <mgoetze> Maddas: no, that would be changing the last letter
04:57:12 <shapr> I learned "european english" in the last four years, it's not british or american
04:57:20 <ayrnieu> maddas - and you'd have to change the number of syllables.
04:57:35 <mgoetze> Maadds: but you can call him sphar
04:57:39 <Maddas> Hrm. Sahpr isn't much better than shapr
04:57:47 <ayrnieu> 'shapr', two syllables.  'sphar', one syllable.  'sharp', one syllable.
04:57:55 <shapr> euro-english is "english as non-natives speakers perceive it"
04:58:02 <ayrnieu> sahpr has two syllables, sure.
04:58:14 <shapr> irc users don't count, they have far too much exposure to native speakers (typers?)
04:58:22 <mgoetze> i like sphar
04:58:26 <shapr> yah, it's short for shaper
04:58:39 <Maddas> anieryu: I think I'll stick to shapr
04:58:46 * shapr whews
04:58:49 <ayrnieu> mgoet - I hate it -- it loses the feel of 'shapr' with its two syllables.
04:58:56 <mgoetze> shapr: and i thought it's short for "shae-per" :)
04:59:05 <shapr> actually, shae is short for shapr
04:59:13 * shapr thought everyone knew that story
04:59:22 <mgoetze> ayrnieu: so why did you just chop a syllable off my name? :)
04:59:37 <ayrnieu> goet - I don't actually pronounce your name.
04:59:46 * shapr decides to try kernel 2.6
05:00:19 <mgoetze> it's pronounced pretty much like a finnish person would pronounce "götse". not that that is likely to help you
05:00:34 * Maddas giggles
05:00:40 <ayrnieu> well, it looks like 'mgoetze', with four syllables.
05:00:43 <Igloo> Is the m silent then?
05:00:51 <shapr> hi Igloo!
05:00:57 <mgoetze> m is an abbreviation of "michael"
05:01:20 * mgoetze notes that the ch sound in "michael" exists neither in english nor in finnish...
05:01:33 <shapr> is it the ch in bach?
05:01:47 * Igloo pronounces it in the same way as I would pronounce m-götse, but I don't know if I pronounce götse in the same wayy as a finnish person  :-)
05:02:06 <shapr> I did it the easy way, I called mgoetze and asked him ;-)
05:02:07 <mgoetze> hm, not quite, the ch in bach is more gutteral
05:02:18 <ayrnieu> all of you with your crazy names, sigh.
05:02:25 <shapr> right cleverdra ;-)
05:02:44 <ayrnieu> nothing crazy about 'cleverdra'!
05:03:00 <mgoetze> hm, come to think of it it's really entirely different than the ch in bach...
05:03:06 <ayrnieu> A fine name, with the 'r' sound and the three syllables.
05:03:18 <ayrnieu> and the 'dra', especially.  I love the 'dra'.
05:03:41 <mgoetze> (this is one of the reasons why finns are likely to call indo-european languages illogical...)
05:04:56 <mgoetze> hm... and goethe in finnish would be something like "gööte"
05:05:18 <mgoetze> hm, but not quite
05:05:34 <mgoetze> ok, enough of my off-topic ramblings :)
05:06:05 * shapr prepares to remove devfs
05:06:19 <phubuh> shapr: udev!
05:06:23 <shapr> if I have in fact screwed up my fstab, is there an easy way to put it back?
05:06:29 <shapr> phubuh: yah, that's where I'm going
05:06:34 <phubuh> yay
05:06:37 <shapr> but I've been using devfs for awhile
05:06:43 <shapr> my fstab has devfs names
05:06:48 <mgoetze> shapr: why are you removing devfs?
05:06:55 <phubuh> it's deprecated
05:06:57 <shapr> because it's deprecated
05:07:02 <mgoetze> oh...
05:07:03 <shapr> udev is the new replacement
05:07:04 <phubuh> in favor of a new nifty userspace daemon
05:07:13 <mgoetze> damn them....
05:07:20 <phubuh> udev can interact with d-bus, which is cool
05:07:34 <shapr> anyways, if I've screwed up my fstab, is there a good way to put it back?
05:07:59 <mgoetze> shapr: well as long as you have everything you need on your root partition...
05:08:01 <shapr> or am I reduced to pulling the drive, mounting it in another machine, and editing it there?
05:08:10 <mgoetze> shapr: you are using grub, right? :)
05:08:14 <shapr> noo
05:08:16 <shapr> lilo?
05:08:28 * shapr gets worried
05:08:33 <mgoetze> uhm.... i *strongly* recommend using grub :)
05:08:36 <shapr> hmm
05:08:39 <shapr> ok
05:08:53 <mgoetze> quite regardless of what you're doing...
05:09:16 <mgoetze> anyway, as long as your kernel can find the root partition, and you have everything you need in order to edit fstab on your root partition...
05:10:14 * mgoetze switched to grub as soon as it started supporting xfs and never looked back
05:11:43 <clausen> I don't think haskell minds if you use grub or not :p
05:12:04 <shapr> clausen: actually...
05:12:16 <shapr> I think hOp requires grub
05:13:01 <shapr> I want to run GHC on bare metal, that would be much fun.
05:13:18 <shapr> I would especially like to investigate SMP support in such a situation
05:14:04 <shapr> Jan Willem-Maessan said that the greatest obstacle to SMP GHC is a distributed GC, does anyone know if there's research done on such a thing?
05:14:35 <shapr> ah, google turned up some neat stuff
05:15:26 * shapr wanders off to try his new fstab
05:25:46 * ham[kell] hoert eagles of deathmetal - i only want you
05:53:33 <phubuh> hmm, there's a strange typo in the gtk2hs distribution
05:53:50 <phubuh> leaveObjRangeC    :: AttrC -> AttrC
05:53:50 <phubuh> leaveObjRangeC ac  = ac {
05:53:50 <phubuh> 		       defObjsAC = fst . leaveRange . defObjsAC $ ac,
05:53:50 <phubuh> 		     }
05:54:02 <phubuh> ghc barfs on the trailing ,
06:00:28 <Igloo> Older GHCs were probably less strict
06:01:22 <phubuh> ah
06:02:09 <phubuh> it also tries to use nullPtr as a ForeignPtr... should I use newForeignPtr_ to convert it?
06:02:31 <phubuh> err, no
06:02:55 <phubuh> newForeignPtr nullPtr free'
06:03:09 <phubuh> but
06:03:09 <phubuh> newForeignPtr :: FinalizerPtr a -> Ptr a -> IO (ForeignPtr a)
06:04:06 <phubuh> oh, I guess the arguments are just in the wrong order
06:31:41 <Maddas> phubuh/shapr (or anybody else with a heavily customized .emacs file): Do you have your .emacs online somewhere?
06:32:11 <phubuh> sure
06:32:17 <phubuh> http://www.phubuh.org/~phubuh/.emacs
06:32:19 <phubuh> http://www.phubuh.org/~phubuh/.elisp
06:32:32 <Maddas> Thanks
06:33:09 <Maddas> I guess shapr is still fighting with grub/fstab :-)
06:33:51 <Maddas> phubuh: Heh, that's a lot!
06:34:16 <phubuh> http://kungens.kemi.fi/~shae/src/elisp/
06:34:32 <Maddas> Cool, thanks
06:34:44 <phubuh> yeah :) I commented a lot of it out yesterday, in an attempt to make emacs start faster
06:35:02 <phubuh> it didn't have any effect, but I haven't uncommented it yet
06:35:17 <Maddas> That's ok, I wouldn't understand it anyway
06:35:38 <Maddas> Not yet, that is. :-)
07:07:38 <Maddas> phubuh: Weird things you have in your .emacs! Very, um, futuristic. I like it :-)
07:08:17 <phubuh> hm :)
07:16:43 <Igloo> Hmm, why can I not do this?
07:16:43 <Igloo> type M1 a = StateT Int IO a
07:16:43 <Igloo> type M2 a = StateT Int M1 a
07:17:56 <Riastradh> Igloo, um, because M1 takes a type argument.
07:18:13 <Igloo> So does IO
07:18:17 <Riastradh> Oh.
07:18:30 <Igloo> It works if M1 is a newtype, but I'd rather not have it be
07:18:49 <Riastradh> s/Oh./Yes, but M1 is defined with type, whereas IO is with something else./1
07:19:04 <Riastradh> Types defined with type can't be partially applied.
07:19:15 <Igloo> Actually, I guess it wouldn't have a huge impact on the code if I changed it to be one
07:19:28 <Igloo> Is there a good reason for that?
07:19:41 <Riastradh> Types would be able to be Turing-complete.
07:19:52 <Riastradh> Then we'd need a better meta-type system than the 'kind' system we've got.
07:19:58 <Riastradh> The 'kind' system would end up being Turing-complete, too.
07:20:01 <Riastradh> And so on and so forth.
07:20:04 <Maddas> heh
07:22:43 <Igloo> Oh, Euch, then I'd have to declare instances of a pile of Monad* classes
07:22:51 <Igloo> Or I guess I could use GHC's magic deriving
07:24:15 <Igloo> Oh no I can't
07:25:47 <Igloo> Is there a nice way to do what I want?
07:38:43 <Lunar^> Igloo: deriving works with newtype now
07:39:47 <Igloo> The various classes all have different kinds and suchlike, though
07:42:01 * Igloo has inlined it for now
07:56:48 <Igloo> Bah, infinite loop. It's times like these that make me wish hat supported more libraries
07:58:20 * Igloo tracks the blighter down
08:46:43 * esap blinks.
08:52:08 <esap> Oh btw, in PreludeExts, is it possible to remove 'unIn' by declaring a projection function for Rec [what is the syntax, I couldn't figure it out since it uses '!'.
09:32:56 <Darius> ListS uses a record field.
09:34:13 <Igloo> Anyone happen to know the easiest way to pipe a Haskell String to a command and get the exit status?
09:35:39 <Igloo> In fact, I can do most of it with forkProcess/getAnyProcessStatus I think, it's just the piping I'm not sure about
09:38:31 <Igloo> Hmm, maybe mkstemp and passing it as an argument is the way to go
09:38:36 <earthy> wasn't there some code on the haskell mailing list to do just exactly what you now ask?
09:38:42 <earthy> say, last week?
09:38:52 <Igloo> Oh, I'll check the archives. Ta!
09:39:06 <Igloo> Do you mean haskell@?
09:39:12 * earthy thinks so
09:41:21 <earthy> might be haskell-cafe@ though
09:42:41 <Igloo> Aha, i think you mean "Subject: POpen, opening lots of processes" to g-h-u
09:42:52 * earthy nodds
09:42:57 <earthy> that'll be the one
09:43:02 <Igloo> Thanks!
09:43:03 * Igloo reads
09:44:11 <earthy> http://haskell.org/pipermail/glasgow-haskell-users/2004-January/006156.html
09:44:14 <earthy> to be more exact
09:52:07 <Igloo> Does writing to a pipe complete immediately or will it wait if some buffer is full? In which case will setting the Fd NoBlocking stop it from waiting?
09:53:29 <phubuh> it waits until it is received, no?
09:56:24 <Igloo> { echo 1; echo 2; echo w >&2; } | sh -c "read FOO; sleep 10; read BAR;"    implies not
10:27:49 <Slashdog> hi
10:27:53 <Slashdog> just curious
10:27:58 <phubuh> hello Slashdog
10:28:02 <Slashdog> hi phubuh
10:28:31 <Slashdog> is there some function similar to "system" but that returns the output of the command as a string
10:28:35 <ham[kell]> bk
10:28:50 <Heffalump> did you solve your determinants problem?
10:28:51 <Slashdog> that is with type IO(String) or IO(String, ExitCode)
10:28:53 <ham[kell]> is there an audio decoder written in haskell?
10:28:56 <Slashdog> or something like that
10:29:16 <Slashdog> ham[kell]: check the libraries section at haskell.org
10:29:36 <Igloo> Bizarrely, http://haskell.org/pipermail/glasgow-haskell-users/2004-January/006156.html which we've just been talking about is I think the answer
10:29:41 <ham[kell]> ah right there were some musik related libs
10:29:58 <Slashdog> The Haskore Computer Music System
10:30:05 <Slashdog> HasChorus
10:30:14 <Igloo> They aren't audio decoders
10:30:37 <Slashdog> yeap you're right :-/
10:30:46 <phubuh> Slashdog: there's popen
10:31:39 <phubuh> but I'm not sure where :-)
10:31:41 <Slashdog> phubuh: hmm popen I played with that in C before...
10:32:10 <Igloo> I don't think POpen is in the HLs, just hslibs, which I think effectively means it is deprecated? OAIc?
10:32:42 <Slashdog> OAIc?
10:32:51 <Igloo> Or Am I Confused
10:33:02 <Slashdog> ah
10:33:45 <Slashdog> I know I could play around with handles for instance, but that's not what I'm looking for
10:34:26 <Slashdog> I was just wandering if there was an easy way of doing some shell script kind of stuff
10:34:45 <Slashdog> but for that i'd need to get the outputs of the commands...
10:35:05 <Igloo> So you'd want a module Shell with a function launch, say?
10:35:35 <Slashdog> don't know what you mean by launch...
10:35:41 <Slashdog> I want something like system
10:35:47 <Igloo> I mean the function defined in that URL
10:35:48 <Slashdog> but with type IO(String)
10:35:55 <Igloo> launch :: String -> [String] -> String -> IO (ProcessStatus, String, String)
10:35:56 <Slashdog> or IO(String, ExitCode)
10:36:16 <Slashdog> yeah I guess that would be enough lol :)
10:36:29 <Slashdog> is that in the libs?
10:36:42 <Igloo> No
10:36:47 <Slashdog> ah :)
10:38:03 <Slashdog> bbl
11:01:42 <ham[kell]> can i do something like that @type of the bot here in ghc?
11:02:01 <phubuh> it uses ghci I think
11:02:04 <phubuh> :t foo
11:02:14 <ham[kell]> ah :)
11:02:55 <ham[kell]> what does this forall a. (Num a) => a -> a tell me?
11:03:03 <ham[kell]> that is forall types a ?
11:03:07 <Igloo> The type is to the right of the =>
11:03:14 <Igloo> forall a. you can ignore
11:03:16 <ham[kell]> and Num a is some premise on a?
11:03:21 <Igloo> Num a says a is a member of class Num
11:03:28 <ham[kell]> ah ok
11:03:32 <ham[kell]> so a premise of that a
11:03:52 <ham[kell]> this forall is something related to what?
11:04:01 <ham[kell]> lambda?
11:04:32 <Igloo> e :: forall a. (Num a) => a -> a    says that for all a such that a is a type in class Num, e can have type a -> a
11:04:44 <Igloo> s/can have/can be used with/
11:05:07 <Igloo> The forall bit is implicit in real Haskell syntax, though
11:05:22 <ham[kell]> ok thanks a lot
11:06:50 <Darius> phubuh: It uses Hugs
11:06:55 <phubuh> oh
11:07:12 <Darius> It'd be much more convenient if it used GHCi.
11:08:48 <Igloo> System.Console.GetOpt needs to be in a Monad so you can fail nicely
11:10:21 <rey[lx]> hi all
11:10:38 <ham[kell]> :)
11:10:51 <rey[lx]> ach der ham is auch da ;)
11:14:42 <mgoetze>  wie, es gibt noch mehr von der sorte? mit so komischen nicks?
11:15:38 <ham[kell]> mgoetze die sind nicht komisch :)
11:15:52 <ham[kell]> mgoetze da ist system hinter
11:16:38 <mgoetze> jo, aber n komisches system :)
11:16:47 <Maddas> ich bin ein berliner
11:16:57 <Maddas> :-)
11:16:59 <ham[kell]> :)
11:17:52 <Darius> @listmodules
11:17:53 <lambdabot> I have the following modules installed: ["base","dict","dummy","dynamic","eval","hello","karma","more","quote","seen","state","system","topic","type"]
11:21:01 * Igloo decides my German + babelfish is not enough to understand German conversation
11:22:06 <mgoetze> Igloo: that was rather colloquial :)
11:22:32 <Riastradh> 'Ich bin ein berliner' means 'I am a jelly doughnut,' Igloo.
11:22:48 <rey[lx]> lol
11:23:06 * Darius decides that his German classes weren't a complete waste.
11:23:30 <Igloo> Oh, ham hasn't been translated. That might have helped. Or is it really ham?
11:23:52 * rey[lx] decideys that he hates its german class!! rather because of the fact that i´m native german speaker ;)
11:25:13 <rey[lx]> mgoetze, bin durch ham hergekommen.. ueber die nickverwandschaft hat sich schon der ein oder andere ausgelassen ;)
11:25:29 <rey[lx]> mag auch durchaus durch ihn beeinflusst sein
11:30:59 <ham[let]> bk
11:31:15 <mgoetze> Igloo: if you mean the food, german("ham") == "schinken"
11:31:57 <ham[let]> :)
11:32:27 <Igloo> No, I wanted to know what the English of the German word "ham" is
11:32:47 <ham[let]> there is none :)
11:33:18 <earthy> strangely enough the dutch for english 'ham' is 'ham'. :)
11:33:25 <mgoetze> Igloo: if you're writing the way you pronounce, it means "[we] have"
11:33:27 <rey[lx]> ham is german colloquial speech
11:33:31 <Igloo> "ach der ham is auch da"
11:33:35 <rey[lx]> das ham wir aber gut gemacht
11:33:53 <rey[lx]> ^means: we did that very well
11:34:00 <earthy> ah. `ham' ist kurz fuer `haben' ?
11:34:04 <rey[lx]> jo
11:34:10 <Igloo> Ah, right
11:34:18 <ham[let]> but not in this context
11:34:22 <rey[lx]> aber nur im plural
11:34:36 <Igloo> That'll be part of the reason babelfish and I had trouble then  :-)
11:34:50 <earthy> und in singular?
11:35:02 <ham[let]> Ham = {ham[x] | concat(ham,x) = somefunny word}
11:35:20 <earthy> (I'd guess for it to have roughly the same meaning)
11:35:29 <rey[lx]> i have: isch heb; you have:du hosch; he has: er hot; we have: mer hevve; you have: ihr hebt; they have: se hevve;
11:35:43 <earthy> yeahyeah
11:35:50 <rey[lx]> ;)
11:35:54 * Igloo realises what ham[let] is going on about, and that it is completely separate to what I was talking about  :-)
11:36:05 <earthy> I'm not that good with transliterations into ascii of plattduetsch
11:36:09 <earthy> (sp?)
11:36:29 <earthy> but I can understand it well enough when it's spoken
11:36:30 <rey[lx]> nah thats not plattdeutsch. thats rather something like pfaelzisch
11:36:32 <ham[let]> Igloo:  :)
11:36:41 <rey[lx]> but whatever
11:37:01 <rey[lx]> even if youre german pfaelzisch may be hard to understand. depends on the person that speaks
11:37:01 * earthy grinz
11:37:11 * earthy isn't german
11:37:20 <ham[let]> thats like a right quotient in a language
11:37:23 <earthy> that gives me e.g. an *advantage* understanding koelsch. ;)
11:37:33 <rey[lx]> lol
11:37:47 <rey[lx]> there is no advantage of koelsch at all
11:37:50 <Heffalump> right quotient?
11:37:52 <mgoetze> yeah, and btw the reason that "ich bin ein berliner" unambiguously means "i am a jelly doughnut", is that anyone from berlin would pronounce "ich" as "icke" or "ick"
11:38:19 <ham[let]> Heffalump: yeah from theoretical comp sci  thats somthing like this
11:38:37 <Heffalump> oh, that definition above, right.
11:38:41 * earthy does associate `berliner' with food, just not with jelly doughnuts
11:38:52 <ham[let]> Heffalump: somewhat yes
11:39:09 <earthy> may have something to do with being a couple of hundred km to the west of berlin. ;)
11:39:10 <rey[lx]> uhm.. found something funny during ghc configure
11:39:18 <Heffalump> I just gave a talk at POPL about doing program analysis incrementally using them.
11:39:48 <rey[lx]> error: GHC is required <<i´m about to install it, so how could i have it already installed!?!?
11:40:04 <Maddas> mgoetze: But I am quite certainly *not* a jelly doughnot!
11:40:05 <Maddas> doughnut, even.
11:40:06 <earthy> rey[lx]: ghc is written in haskell'
11:40:10 <ham[let]> .2 langs L_1 L_2 L1/L2 := {w | \exists  u \in L_2 wu \in L_2 }
11:40:17 <Igloo> You need to start from a GHC binary release
11:40:24 <rey[lx]> ah ok..
11:40:26 <rey[lx]> fine
11:40:28 <rey[lx]> thx
11:40:30 <ham[let]> Heffalump:  hm 
11:40:37 <Igloo> What OS/arch do you have?
11:40:40 <Maddas> GHC is written in Haskell? Cool :)
11:40:47 <ham[let]> Heffalump: popl? got a paper on that"?
11:40:49 <earthy> rey[lx]: but you *could* go the route I've taken: compile 4.3 from the intermediate C files
11:40:58 <earthy> use 4.3 to compile 4.3 again
11:41:00 <Igloo> Well, Haskell, GHC, C, asm and perl anyway  :-)
11:41:04 <earthy> then use that 4.3 to compile 5.04
11:41:14 <earthy> then take that 5.04 to compile 6.2
11:41:19 <Maddas> Igloo: Heh :)
11:41:20 <ham[let]> Heffalump: i am thinking about a language that uses graphs or like i have found out diagramatic reasioning
11:41:24 <Maddas> Still somewhat cool
11:41:26 <Igloo> earthy: But there's no gain to doing that
11:41:37 <earthy> igloo: in my case there was
11:41:37 <ham[let]> Heffalump: and i thought about what qoutening is like  in there
11:41:47 <phubuh> Maddas: the ocaml compiler is mostly written in ocaml, too
11:41:53 <earthy> (but this is for the Sun systems at cs.uu.nl that have like wildly weird paths)
11:42:00 <Heffalump> I think one of your L_2s above should be an L_1
11:42:14 <Maddas> phubuh: Oh. Heh. Ok!
11:42:19 <Heffalump> http://web.comlab.ox.ac.uk/oucl/work/ganesh.sittampalam/documents/popl04.pdf
11:42:19 <ham[let]> Heffalump: oh sry
11:42:20 * earthy agrees with heffalump
11:42:38 <ham[let]> Heffalump: can you send it to my email address plz?
11:42:49 <earthy> ham[let]: what, the URL?
11:43:03 <ham[let]> yes
11:43:13 <ham[let]> cause i cant copy paste from the consle
11:43:19 * earthy grins
11:43:35 <Heffalump> what address?
11:43:36 <ham[let]> cygwin -ssh=> uni -> irssi :)
11:43:45 <ham[let]> ham@t0c.de
11:43:47 <Heffalump> cygwin supports cut and paste
11:43:52 <ham[let]> Heffalump: thank you very much
11:44:03 <ham[let]> it doesnt seem so no :(
11:44:06 <Heffalump> (sent)
11:44:10 <Heffalump> you select first, then hit enter
11:44:17 <Heffalump> but it only does rectangular blocks, which sucks
11:44:21 <earthy> heffalump: how does that stuff fit in with the Stratego stuff?
11:44:42 <Heffalump> well, we use Stratego-like combinators to control the order of transformations
11:44:46 <Heffalump> and to traverse trees
11:44:46 <ham[let]> Heffalump: i cant even select
11:44:51 * earthy nods
11:44:54 <Heffalump> Stratego is kind of ultra-pure rewriting
11:45:04 <Heffalump> whereas we do some side analysis (the clever stuff in that paper) then rewrite
11:45:17 <earthy> *ah*
11:46:07 <earthy> but, theoretically, the clever stuff could be encoded in rewrite rules... it'd just be cumbersome, right?
11:46:10 <Heffalump> hmm, apparently Doaitse took some photos of my talk, I wonder where he might have put them
11:46:13 <Heffalump> ummm.
11:46:29 <Heffalump> I doubt it, we use some fairly heavyweight machinery.
11:46:43 <earthy> well, I'd ask him if he weren't doing a bit of a sabbatical term, currently. :)
11:46:49 <Heffalump> and the language quotients business gives us an incremental algorithm
11:47:01 <Heffalump> I believe he's skiing in Italy, as it happens :-)
11:47:04 <earthy> ah, yeah, that's important.
11:47:09 <earthy> heffalump: I know he is.
11:47:14 <ham[let]> Heffalump: how do you build the quotients?
11:47:23 <Heffalump> slowly :-)
11:47:26 <ham[let]> :)
11:47:30 <ham[let]> as i thought ;)
11:48:05 <Heffalump> (generate the deterministic automaton, then take sets of states in that automaton and intersect the automata starting from those states, then eliminate duplicates)
11:48:12 <Heffalump> if you know a faster way we'd love to hear it
11:48:35 <ham[let]> i think there is no faster way
11:48:42 <earthy> your languages are restricted to regular languages?
11:48:46 <ham[let]> none i can think from top of my head
11:49:00 <Heffalump> the language of patterns is, because otherwise the chip-chop (quotient) matrix is infinite
11:49:06 <Heffalump> the language of programs is context-free
11:49:17 <Heffalump> so we can do interprocedural analysis, which is nice
11:49:41 <ham[let]> Heffalump: what do you do all this analysis for?
11:49:44 <earthy> `nice'. :)
11:50:01 <Heffalump> side conditions for program transformations
11:50:20 <Heffalump> so we write a pattern for constant propagation, for example, then apply a rewrite if the analysis succeeds
11:50:30 <ham[let]> program transformation as in compilatiopn?
11:50:47 <earthy> ham[let]: for example.
11:50:54 <earthy> but refactoring counts
11:50:59 <earthy> as does documentation extraction.
11:51:04 <ham[let]> refactorin?
11:51:14 <ham[let]> k
11:51:17 <Heffalump> in our case, currently the applications are optimisation and obfuscation
11:51:22 <earthy> ham[let]: rewriting a program so that it is easier to maintain
11:51:34 <Heffalump> refactoring is another obvious thing we could do with it. Document extraction is less likely :-)
11:51:58 <earthy> err, yah. :)
11:51:58 <ham[let]> as i said i think about a "programming lang" that is based on diagrams and there it would be interesting in terms of program equality and graph isomorphisms
11:52:42 <Heffalump> quotients?
11:53:07 <ham[let]> you could say something like these programs do the samy in that respect
11:53:33 <ham[let]> also i think about how i can get some topology in there and then quotenting is something interesting
11:54:16 <Heffalump> hmm, ok. I don't quite see the application.
11:54:22 <ham[let]> you do the quotenting on the program itsself on the network of the program not the language
11:55:00 <ham[let]> i thought of it also in terms of modularization
11:55:19 <ham[let]> you hammer a set of nodes into a single one
11:55:38 <ham[let]> and make it thus a module that does some complexer stuff
11:55:46 <ham[let]> more complex :)
11:56:28 <ham[let]> hm now that i think of
11:56:45 <ham[let]> then homotopy and that adjuntion topologically are also interesting
11:58:01 <ham[let]> homotopy would be something like program converting and that gluing would be somthing like linking
11:58:54 <earthy> damn, that article jumps
11:59:06 <ham[let]> jumps?
11:59:10 <earthy> yep.
11:59:28 <ham[let]> what does that mean?
11:59:33 <ham[let]> is cool?
11:59:41 <earthy> `detailed examples' -- okay, I'll skip that -- section 3 takes *humongous* steps in just 2 paragraphs
12:00:40 <ham[let]> ah ok
12:00:50 <ham[let]> text coherently speaking :)
12:00:56 <earthy> especially the concept `program_path' is used before it is defined, if you decide to skip the detailed examples ;)
12:01:09 <ham[let]> heh
12:07:46 <ham[let]> Heffalump: what is your profession?
12:08:31 <mgoetze> ham[let]: he gets paid to do stuff you would do for free, bwahaha!
12:08:43 <rey[lx]> lol
12:08:58 <ham[let]> what is that?
12:09:22 <ham[let]> cool then i still have a chance to work ;)
12:23:00 <rey[lx]> ohoh:
12:23:02 <rey[lx]> Ein Rat vorneweg ...
12:23:02 <rey[lx]> C-Programmierer. Vergeßt! Vergeßt am besten alles, was Ihr über Programmierung und Programmiersprachen wißt.
12:23:37 <ecraven> :)
12:23:39 <ecraven> good idea..
12:24:18 * rey[lx] doesnt like the idea of beginning from scratch ;)
12:26:36 <kosmikus> rey[lx]: sounds like Ralf Hinze's homepage ...
12:26:38 <ham[let]> rey[lx]: you will now start to learn programming :) 
12:28:51 <rey[lx]> ohoh.. the problems star with hello world
12:30:12 <rey[lx]> the tutorial says, putstr "bla" should print the string (bla) + some information about it
12:30:31 <Maddas> rey[lx]: I failed that part too :-)
12:30:35 <rey[lx]> so i started ghci to start playing arround a little bit and so on
12:31:10 <rey[lx]> and what i get on putstr "hello" is: <interactive>:1: Variable not in scope: `putstr'
12:31:19 <kosmikus> putStr
12:31:50 <rey[lx]> f*ck*ng tutorial
12:31:57 * rey[lx] closes the pdf doc
12:32:20 <danb> ho
12:32:28 <ham[let]> rey[lx]:  you could always use my first program as a sample:)
12:32:37 <ham[let]> hell-0 danb 
12:32:59 <danb> problem:
12:33:06 <rey[lx]> ham, was is dein erstes prog?
12:33:12 <ham[let]> danb: are you the danb from #lisp?
12:33:23 <ham[let]> rey[lx]: the one i posted with the splines
12:33:27 <rey[lx]> ah
12:33:29 <danb> wait... 
12:33:33 * danb reconsiders problem
12:33:33 <danb> brb
12:33:38 <ham[let]> :)
12:33:39 <danb> ham[let]: nay
12:35:37 * danb is dumb
12:35:40 <SamB> ham[let]: you can't have more than one danb on the same network
12:35:46 <danb> nm, see you all sooner or later ;)
12:36:03 <SamB> well, not at the same time, anyway
12:36:14 <ham[let]> SamB: right :)
12:54:13 <rey[lx]> can anyone tell me if there´s any haskell ide available!?
12:55:43 <SamB> rey[lx]: tell you which?
12:57:06 <rey[lx]> i´m looking for a tip which one might be the better to use than others..
12:58:13 <SamB> rey[lx]: oh, you are using some nonstandard apostrophe that confuses xchat
12:58:23 <rey[lx]> oops
12:58:30 <rey[lx]> doh-- have to fix that
12:58:50 <rey[lx]> hmm for me it looks fine
12:59:47 <SamB> I don't know of anything other than Emacs 
13:00:21 <SamB> oh, well, maybe I should say it confuses xchat 1.8.9
13:01:09 <Darius> Well there is hIDE, but it doesn't seem like anyone (here) is using it.
13:01:09 <SamB> actually, I suspect the fault lies with ZTerm, the terminal widget.
13:05:29 * SamB considers adding a newline or two to his bash prompt
13:11:21 <SamB> hmm, these arch paths are pretty long and repetetive.
13:14:13 <rey[lx]> omg, this stuff starts to confuse me...
13:14:36 <rey[lx]> it might be easier to learn haskell if you have never heard about programming before
13:15:02 <SamB> rey[lx]: what languages do you know?
13:15:18 <rey[lx]> littlebit python c/c++
13:15:42 <rey[lx]> but python lies 2-3 years in the pastz
13:15:42 <SamB> hmm. thats odd. python didn't hold me back much.
13:15:46 <SamB> oh.
13:16:08 <rey[lx]> then a little bit c, due to the lack of classes, i switched to c++
13:16:18 <rey[lx]> and did some stuff with sdl and opengl with c++
13:17:11 <SamB> what is it that you are having trouble with?
13:18:49 <rey[lx]> functions and types with only lowercase letters at the start... nothing like pointers or so.. (i just tried to imagine how to program without pointers).. the general concept is completely different
13:19:15 <rey[lx]> i just dived into oop and now everithing i learned seems to be for nothing ;)
13:19:57 <kosmikus> rey[lx]: no, learning rarely is for nothing
13:20:13 <kosmikus> but with Haskell, you have the chance to learn a few things more
13:20:41 <SamB> rey[lx]: remember python had nothing like pointers?
13:21:23 <Darius> rey[lx]: Don't you typically use references in C++?
13:21:31 <rey[lx]> yes, but i didnt get too far in python..
13:21:35 <SamB> oh.
13:21:46 <rey[lx]> that was just first attempt at programming..
13:22:05 <rey[lx]> i wanted to get back to it sometimes.. but c++ seemed so perfect to me
13:22:14 <rey[lx]> like it had everytrhing i needed
13:22:29 <rey[lx]> and then ham started talking about haskell..
13:22:32 <SamB> Darius: is it possible that some Lisp would help bridge the gap?
13:23:42 <Darius> SamB: Knowing some Lisp would make it easier to learn Haskell, but I'd think learning Haskell directly would be much easier than learning Lisp then learning Haskell.
13:23:51 <rey[reading]> hehe
13:24:09 <SamB> Darius: hmm. there is something to that.
13:24:43 <SamB> rey[reading]: really, you must realize that Haskell data structures are not just hunks of bits, right?
13:25:35 <rey[reading]> yepp
13:27:14 <phubuh> SamB: xchat 2 uses vte, in which that apostrophe renders fine
13:28:05 <SamB> phubuh: uh huh. I didn't like the way it looked, so I downgraded it back to 1.8.9.
13:28:23 <SamB> it was some kind of font issue
13:28:56 * earthy scribbles `try hircules sometime' in his 'todolist for when there's copious free time'
13:35:12 <rey[reading]> hmm.. this lists and tuples system reminds me of python
13:35:55 <phubuh> yup, but lists are homogenous in haskell; i.e., a list only contains elements of one type
13:36:03 <rey[reading]> yes..
13:36:05 <Darius> And lists in Haskell are lists.
13:36:07 <rey[reading]> just got to this point
13:36:08 <Darius> Not arrays.
13:38:04 <SamB> tuples and lists are good for most of the same things they are in python, though
13:38:45 <rey[reading]> well.. i will see
13:39:11 <Darius> I haven't done much python programming, but I'd think it would be a pretty bad idea to treat python "lists" as you would Haskell lists and vice-versa.
13:39:30 <ayrnieu> I concur.
13:40:56 <SamB> yeah, I suppose. I was thinking in terms of it not really being a good idea to mix random kinds of objects in a python list
13:44:33 <earthy> well...
13:44:34 <earthy> err...
13:44:39 <Marvin--> earthy: you have one of those Copious Spare Time lists too?
13:44:46 <earthy> marvin--: yeah, ofcourse! :)
13:45:13 <earthy> fortunately, one of the items that was once on it I nowadays get paid for. :)
13:45:18 <ayrnieu> You've got to plan ahead for that copious spare time, if you don't want to waste it.
13:45:18 <Marvin--> coo'
13:45:24 <earthy> (i.e. `go for a PhD' :))
13:45:48 <earthy> and one of the others I am currently working towards
13:45:57 <earthy> i.e. `build an Algol 68 compiler'
13:46:08 <earthy> but those two are unrelated. :)
13:46:09 * ayrnieu flees.
13:46:22 <Marvin--> *Algol 68*?
13:46:28 * earthy nods
13:46:45 <earthy> full language, plus a couple extensions defined by Charles Lindsey
13:47:02 <earthy> (to wit: partial parametrisation, modal types and the module system)
13:48:38 <earthy> fortunately I'm not exactly doing it all alone ;)
13:49:12 <earthy> so, what's on your list, marvin--? :)
13:51:22 <Marvin--> I don't remember, it's been so long since I had reason to look at it
13:51:29 * earthy laughs
13:52:08 <earthy> one of the items'd be `improve my memory' then. :)
13:52:17 <Heffalump> is this the Algol 68 compiler as a tribute to someone or another?
13:54:28 <Marvin--> earthy: good idea :)
13:54:56 * Heffalump is clearly confused.
13:59:10 * earthy sees the last drop has been drained from his wineglass
13:59:28 <earthy> and that he has to get up in about 7 hours
13:59:36 <earthy> so, g'night all
13:59:36 * Heffalump is finishing his beer
13:59:44 <Heffalump> oh, eek, I have to get up for an 11am meeting.
13:59:47 <Heffalump> oh well.
13:59:53 <earthy> a. you're in the UK
14:00:05 <earthy> (where it's like 10)
14:00:19 <Heffalump> minor details.
14:00:23 <earthy> b. I really guess you need less then 2 hours to get there ;)
14:00:23 <Heffalump> and yeah, 11am isn't really early.
14:00:26 <Heffalump> But it is for me.
14:00:37 <Heffalump> this is true :-)
14:00:37 <earthy> so, finish the beer and get to bed... :)
14:00:57 <earthy> you'll make it on time ;)
14:01:30 <Heffalump> oh, I'm sure I will. I just won't like it.
14:01:45 <Heffalump> but if I want to be a real academic I'm sure they'll make me give 9am lectures.
14:01:55 <Heffalump> So I probably ought to relearn the art of early mornings.
14:01:55 <earthy> I give 9am lectures
14:02:09 <earthy> they're not too bad
14:02:30 <Heffalump> hmmm.
14:02:31 <earthy> even though they're tuesday mornings and I dance monday evenings (and end the evening at the pub :))
14:02:58 <earthy> er... I should rephrase that
14:03:15 <earthy> tutor 9am practical groups
14:03:29 <earthy> (which, in a sense, is worse :))
14:03:47 <earthy> but heck, g'night ;)
14:04:06 <Heffalump> heh. night.
14:09:21 <Marvin--> feh, I'm meeting with Koen tomorrow and I haven't gotten bleedin' anything done this week
14:24:02 <rey[reading]> n8
14:30:50 <SyntaxLaptop> Igloo: new mirror & tarball for libinfrastructure.
14:30:56 <SyntaxLaptop> Igloo: uses that abstract PackageDB now :)
14:52:16 <shapr> g'day Pseudonym 
14:52:27 <Pseudonym> G'day.
14:52:34 <Pseudonym> On separate chunks in PreludeExts:
14:52:38 <shapr> ah
14:52:44 <Pseudonym> I don't care if they're Wiki chunks.
14:52:53 <Pseudonym> All I want to do is to see where one ends and one begins.
14:53:04 <shapr> sounds good to me
14:53:17 <Pseudonym> A comment like lots-of-hyphens separating each would do the trick.
14:53:25 <shapr> I like it
14:53:30 * Pseudonym is going to make a change, so I'll do that now
14:53:33 <shapr> yah!
14:53:54 <Pseudonym> Best of both worlds.  The complete thing is cut-and-pastable, AND you can see where one section begins and one ends.
14:54:01 <shapr> yes, I was just thinking that
14:54:20 <shapr> if they were separate wiki chunks, you'd have to move import statements around, and that could suck
14:54:25 <Pseudonym> Right.
14:54:47 <Pseudonym> Blerg.
14:54:55 <Pseudonym> Lost contact to my webmail.
14:55:10 <shapr> Tom Pledger put in some interesting code
14:55:39 <Pseudonym> Can't get to that either at the moment.
14:56:01 <Pseudonym> Ah, there it is.
14:57:10 <shapr> hey Pseudonym, have you seen gforge.ScannedInAvian.org?
14:57:42 <shapr> dunno if I've already asked your opinion on that
14:57:49 <Pseudonym> No, not yet.
14:57:55 <Pseudonym> Well, you've asked my opinion. :-)
14:58:00 <Pseudonym> But I haven't seen it.
14:58:23 <stepcut> hey shapr
14:58:30 <shapr> hi stepcut 
14:58:47 <shapr> Pseudonym: dang, I don't remember what opinion you gave me
14:58:51 * shapr checks logs
14:58:52 <shapr> hoi kosmikus 
14:58:57 <kosmikus> hoi shapr
14:59:02 <shapr> what's up?
14:59:10 <stepcut> shapr: i am working on that database interface, but I may have uncovered another bug in template haskell :(
14:59:20 <Pseudonym> I think I thought that this is what haskell-libs is for.
14:59:23 <shapr> that's good! progress!
14:59:30 <Pseudonym> Though, of course, this isn't eh whole story.
14:59:34 <kosmikus> shapr: I should go to bed, but I'm not tired yet.
14:59:44 <shapr> kosmikus: I know that feeling all too well.
15:00:10 <shapr> Pseudonym: one idea is to split haskell-libs into separate projects, lambdabot and hws-wp are probably large enough to have their own
15:00:32 <Heffalump> it's a pity darcs doesn't make it easy to make subdirectories separate repositories
15:00:55 <shapr> we could ask for that
15:01:20 <shapr> anyways, the HC&A report specifically asks for ways to allow users to do more admin of haskell.org
15:01:41 <shapr> and gforge would let a user create their own equivalent to haskell.org/HOpenGL or /HaXML 
15:02:18 <shapr> on the downside, I've been hacking on the gforge source to add simple darcs admin, and man does that code smell
15:02:18 <SyntaxLaptop> kosmikus: did you ever look at the libInfrastructure code?
15:02:57 <Heffalump> darcs, or gforge?
15:03:01 <shapr> gforge
15:03:03 <shapr> darcs code is nice
15:03:05 * Heffalump wouldn't touch PHP with a bargepole
15:03:14 <shapr> sadly, I don't see another option
15:03:25 <shapr> I don't dislike PHP the language, I dislike PHP the coding culture
15:03:42 <kosmikus> SyntaxLaptop: yeah, I did, but not in too much detail
15:04:00 <SyntaxLaptop> kosmikus: I just uploaded a new version, so please feel free to give me a code review and / or hack on it :)
15:04:30 <Pseudonym> PHP isn't bad so long as you only need a very thin layer of glue.
15:04:36 <Heffalump> I should probably know more about PHP before slagging it off.
15:04:46 <shapr> no, I actually agree about PHP
15:04:52 <Pseudonym> Natrually, I'm more of a Perl bigot.
15:04:53 <Heffalump> since most of my objections are based on coding culture rather than the language itself
15:05:01 <Pseudonym> Though clearly we should be using embedded Haskell.  
15:05:06 <Pseudonym> Yum.  Own dog food!
15:05:06 <shapr> I agree
15:05:20 <Heffalump> :-)
15:05:27 <Heffalump> fixing up mod_haskell would be great.
15:05:31 <shapr> until someone writes the Haskell Oriented Active Repository Daemon, I'll stick with gforge
15:06:11 <SamB> Pseudonym: embedded haskell?
15:06:39 <shapr> gforge isn't really that complicated under the hood
15:07:09 <Pseudonym> SamB: I use that to refer to any embedded HTML-like system.
15:07:11 <Pseudonym> WASH is probably the best we have.
15:07:22 <shapr> stepcut: hey, did you know that some guys at chalmers are working on HaskellDB in GHC?
15:07:29 <Heffalump> that doesn't do the server-integration bit, though
15:07:43 <shapr> WASH with HaskellDB could entice me
15:08:26 <shapr> what sort of server-integration?
15:08:45 <Pseudonym> Has someone added Tomasz' option handling code to haskell-libs yet?
15:09:03 * Darius has looked at PHP a (very) little bit, but what's all this about coding culture.
15:09:05 <shapr> no, but Igloo should really look at that code before he continues with GetOpt
15:09:05 <kosmikus> SyntaxLaptop: I might have a more detailed look, but don't count on much help from me
15:09:14 <stepcut> shapr: no, i didn't know about that
15:09:15 * Pseudonym might add it, then
15:09:24 <Heffalump> shapr: like mod_perl
15:09:24 <SyntaxLaptop> kosmikus: OK
15:09:32 <kosmikus> SyntaxLaptop: at the moment, I'm trying to follow development, so that in the future, when I might have more time, I will find it easier to join in
15:09:57 <shapr> Darius: Haskell coding culture is "abstract further" PHP is "let's just explicitly define this array in the source"
15:09:58 <SyntaxLaptop> cool :) I like code reviews because I'm a leech when it comes to the intelligence of the haskell community.
15:10:02 <kosmikus> right now, I should focus on writing my PhD thesis
15:10:12 <Heffalump> sensible chap :-)
15:10:15 <SamB> don't mix logic and presentation.
15:10:18 <Igloo> I've decided to keep everything as strings for GetOpt and parse it later for now
15:10:24 <SamB> use combinators or something.
15:10:29 <shapr> Igloo: did you see Tomasz' code?
15:10:34 <Igloo> No
15:10:40 <shapr> just hit haskell@
15:10:45 <shapr> worth checking out, I think
15:11:11 <kosmikus> shapr: I did, but it really is more or lesswhat I've been doing for a while now ...
15:11:18 <SyntaxLaptop> kosmikus: understandable!
15:11:49 <Pseudonym> Can't get to sf at the moment.
15:11:56 * Pseudonym sighs
15:12:00 <shapr> that's another reason for a gforge.haskell.org
15:12:01 <Pseudonym> I love the intarweb.
15:13:08 <SyntaxLaptop> go shapr!
15:13:54 <shapr> kosmikus: er, what is what you've been doing for awhile now?
15:15:01 <kosmikus> shapr: coding option handling using OptDescr (Options -> Options)
15:15:07 <shapr> oh
15:15:19 <Marvin--> http://www.livejournal.com/users/bouncechrissy/155638.html?#cutid1   wow
15:16:38 <Maddas> phubuh: the apostrophe doesn't render in my irssi/terminal combination either
15:16:56 <shapr> what apostrophe?
15:17:13 <Darius> Marvin--: Wow that is cool
15:17:39 <Marvin--> Darius: it's frickin' amazing
15:18:33 <Maddas> Sigh. Chatting with 2+ minutes of lag and download rates in the range of a few dozen byets per seconds is _not_ fun
15:18:55 <shapr> Maddas: where are you?
15:19:11 <shapr> Maddas: where in the world gives 2 minutes of lag?
15:19:51 <Pseudonym> shapr: The land of Nod.
15:20:00 <Marvin--> .moo
15:20:07 <shapr> @moo
15:20:07 <lambdabot> Sorry, I don't know the command "moo", try "lambdabot: @listcommands"
15:20:11 <Maddas> Sigh, I hate my internet connection.
15:20:16 <Darius> quick shapr hack it up!
15:20:18 * Pseudonym thinks . o O ( moo? )
15:20:28 <Marvin--> Pseudonym: .moon then
15:20:33 * Darius thinks Pseudonym should read the GHC source.
15:21:00 <Marvin--> http://www.userfriendly.org/cartoons/archives/04jan/uf006348.gif
15:21:09 <Pseudonym> For some reason, I had a flashback of the meow army.  Anyone else old enough to remember that?
15:22:06 <Pseudonym> Ah, yes. http://godhatesjanks.org/webcenter/meow.html
15:22:23 <shapr> @moo
15:22:23 <lambdabot> moo?
15:22:29 <shapr> what should @moo do?
15:22:56 <shapr> ah
15:23:00 <SamB> shapr: it should invoke apt-get moo?
15:23:06 <shapr> I thought about that
15:23:18 <shapr> but not everyone here uses Linux, much less Debian
15:23:27 <Marvin--> that powerset discussion was quite interesting
15:24:31 <Marvin--> moo
15:24:35 <Igloo> Yet
15:24:43 <shapr> on the other hand...
15:25:38 <Marvin--> heeyy, the apt-get moo text isn't translated to Swedish
15:25:44 <Marvin--> how awful
15:26:04 <Maddas> shapr: I'm on a very flaky connection, I don't know why but I randomly timeout/get terrible lag spikes
15:26:39 <Maddas> (Using a proxy to not annoy everybody else like hell)
15:30:30 <shapr> how do I make a string that is only a single backslash?
15:30:41 <Darius> "\\"
15:30:42 <Heffalump> "\\" ?
15:30:43 <Maddas> \\?
15:30:54 <shapr> that seems to print two backslashes
15:31:03 * shapr is obviously confused
15:31:08 <Heffalump> in what?
15:31:10 <ayrnieu> '\\':[]
15:31:15 <Heffalump> and did it print with " " round it too?
15:31:15 <shapr> in ircPrivmsg
15:31:20 <shapr> @moo
15:31:20 <lambdabot>          (__)
15:31:20 <lambdabot>          (oo)
15:31:20 <lambdabot>    /------\\/
15:31:20 <lambdabot>   / |    ||
15:31:20 <lambdabot>  *  /\\---/\\
15:31:21 <lambdabot>     ~~   ~~
15:31:23 <lambdabot> ...."Have you mooed today?"...
15:31:24 <Darius> ['\\']
15:31:26 <ham[let]> heh
15:31:28 <Maddas> heh
15:31:51 <Marvin--> heh, that looks god-awful with a proportional font
15:31:58 <shapr> I'm sure
15:32:22 <SamB> Marvin--: don't IRC with a proportional font
15:32:23 <shapr> it doesn't look much better with fixed-width, since \\ is showing up for \
15:32:24 <Darius> I think the unescaper is unescaping '\'s incorrectly.
15:32:35 <shapr> oh, I bet you're right
15:32:39 <Marvin--> shapr: true
15:32:41 <Darius> @eval "\"
15:32:41 <lambdabot> (line 1, column 4):
15:32:41 <lambdabot> unexpected end of input
15:32:41 <lambdabot> expecting string character or end of string
15:32:45 <Marvin--> SamB: I actually like it a lot
15:32:47 <Darius> @eval "\\"
15:32:47 <lambdabot> \\
15:32:52 <Pseudonym> Odd.
15:32:52 <shapr> yup
15:32:58 <SyntaxLaptop> actually, what we SHOULD have is a "cowsay" pluggin
15:33:00 <Pseudonym> @eval '\\'
15:33:01 <lambdabot> \\
15:33:04 <SyntaxLaptop> @cowsay shapr rules
15:33:05 <lambdabot> Sorry, I don't know the command "cowsay", try "lambdabot: @listcommands"
15:33:10 <Marvin--> SyntaxLaptop: "moo"?
15:33:16 <SyntaxLaptop> @moo "foo"
15:33:17 <lambdabot>          (__)
15:33:17 <lambdabot>          (oo)
15:33:17 <lambdabot>    /------\\/
15:33:17 <lambdabot>   / |    ||
15:33:17 <lambdabot>  *  /\\---/\\
15:33:17 <lambdabot>     ~~   ~~
15:33:19 <lambdabot> ...."Have you mooed today?"...
15:33:23 <Pseudonym> Or a "Mr Teapot" plugin.
15:33:28 <shapr> it's not a cowsay plugin just yet
15:33:33 <Maddas> heh
15:33:40 <SyntaxLaptop> Marvin--: cowsay repeats what you type, though.
15:33:46 <Pseudonym> A friend of mine actuyally did this as an experiment.
15:34:04 <shapr> he did what?
15:34:19 <Maddas> A "Mr Teapot" plugin?
15:34:19 <Pseudonym> The idea was to see if signs change their authority if, for example, instead of saying "GIVE WAY", they said "Mr Teapot says... GIVE WAY".
15:34:54 <Pseudonym> http://www.flat-earth.org/mrteapot/
15:35:42 <Pseudonym> You can print out your own labels here: http://www.flat-earth.org/mrteapot/labels.html
15:36:33 <Pseudonym> This guy also has a guerilla ontology campaign.
15:36:53 <Pseudonym> The idea is to attach labels to various objects which read "WARNING: THIS OBJECT DOES NOT EXIST".
15:37:00 <Pseudonym> Did I mention that I have weird friends?
15:37:05 <Maddas> heh
15:37:12 <Darius> You are hanging out on #haskell...
15:37:18 * shapr grins
15:37:57 <Marvin--> Pseudonym: I think that was implicit :)
15:38:03 <Pseudonym> True.
15:38:51 <Pseudonym> Another friend of mine sent out an expedition to ascertain how easy it would be to turn the Earth back into its natural, God-demanded flat form, rather than the heathen globe which it has become.
15:38:57 <Pseudonym> Operation Dateline Dig
15:39:14 <Darius> See all you need to counter that campaign is have a smaller "WARNING: THIS OBJECT DOES NOT EXIST" to stick on the bigger labels.
15:39:20 <Pseudonym> True!
15:40:00 <Pseudonym> shapr: Have you ever played Mornington Crescent using the Discordian rules?
15:40:09 <Marvin--> Darius: damn you, I was just going to say that :)
15:40:15 <shapr> nope, but it sounds nifty
15:40:48 <shapr> confusion is my greatest weapon. too bad it's area effect.
15:40:51 <Pseudonym> It's a traditional Eye Day passtime.
15:40:57 <ned> shapr: did you succeed with your group theory project (n-dimensionnal shapes) ?
15:41:44 <shapr> ned: I have not succeeded yet, success will be HOpenGL visualizations of all 3D tiles.
15:41:52 <ned> :)
15:42:03 <ned> but you're on the way :)
15:42:06 <ham[let]> shapr:  what exactly do you wanna do?
15:42:15 <shapr> yes, trying to figure out how to grab the coords out of GAP now
15:43:07 <shapr> ham[let]: I want to see all 3D shapes that tile, and possible understand Zassen what's his name's algorithm for finding n-dimensional tiles
15:43:56 <ham[inway]> shapr: hm sounds interesting can you send me the link to that paper or the name of that guy?
15:44:00 <shapr> seems that that info is useful in crystallography, so I've grabbed a GAP catalog of the shapes in 2,3,4 dimensions
15:44:06 <shapr> er, if I can remember.
15:44:30 <ham[inway]> shapr: if you find it out then send it via mail please:)
15:44:33 <shapr> sure
15:44:37 <ham[inway]> cool
15:44:56 <ham[inway]> what kind of shapes?
15:45:07 <ham[inway]> have you had a look at that thing i gave you?
15:45:10 <Pseudonym> shapr: http://blog.23ae.com/index.php?m=200205#86
15:45:13 <ham[inway]> that esher thing in the end
15:45:15 <Pseudonym> Good summary of the rules.
15:45:36 <shapr> ham[inway]: no, not yet
15:48:48 <shapr> Pseudonym: looks like fun
15:50:26 <shapr> hello cybermanco 
15:50:28 <cybermanco> hi.. how can I transform a Int in a Float?
15:50:36 <shapr> fromIntegral
15:51:19 <shapr> ok, the moo should work now
15:51:25 <shapr> as well as @more
15:53:09 <cybermanco> thanks shapr
15:53:46 <Heffalump> oh, how?
15:53:50 <Heffalump> (@more)
15:54:34 <shapr> dynamically link it
15:54:52 <shapr> hampus tried it, said it worked
15:54:57 <Heffalump> oh, cool
15:55:29 <ham[inway]> hampus?
15:55:48 <shapr> Hampus Ram
15:56:03 <ham[inway]> thats a real name?
15:56:29 <shapr> yup
15:56:45 <ham[inway]>  scandinavian?
15:56:50 <shapr> yup
15:57:08 <ham[inway]> ok then i go to bed
15:57:23 <ham[inway]> see you tomorrow
15:57:23 <shapr> Pseudonym: this page is rather addictive
15:57:26 <shapr> cya!
15:57:54 <shapr> Zassenhaus
16:02:33 * shapr realizes he knows zero about space group theory
16:02:43 <Heffalump> space group?
16:02:56 * Heffalump had to answer a question about group theory today. First time in ages I've done any.
16:03:13 <shapr> space groups are about symmetry
16:03:23 <shapr> wallpaper groups are the 2-D specialization
16:04:01 <shapr> I've had some thoughts on n-dimensional tiling, and I wanted to see what other people have done.
16:05:39 <kosmikus> I think that's highly non-trivial
16:06:25 <shapr> well, this zassenhaus guy came up with a generic n-dimensional tiling algorithm in 1948
16:06:26 <kosmikus> I had a course on something like this once, but that was five years ago, and I think I've forgotten everything
16:07:21 <Marvin--> I was under the impression that tiling was extremely complicated
16:09:43 <shapr> they do use big words
16:09:45 <shapr> :-)
16:11:37 * shapr tries to figure out what abelian means
16:11:49 <kosmikus> commutative
16:11:58 <kosmikus> nothing more
16:12:02 <shapr> oh
16:12:02 <Pseudonym> What's green and commoutes?
16:12:08 <Pseudonym> An abelian grape.
16:12:12 <Pseudonym> Old, old joke.
16:14:04 <Heffalump> indeed
16:15:11 * shapr reads up on orbifold notation
16:15:34 <shapr> looks like functional programming
16:17:39 <stepcut> does darc support branching?
16:17:50 <stepcut> darcs rather
16:18:18 <shapr> I've seen that asked in several threads, but I don't remember the answer
16:19:08 <stepcut> i think i will stick with tla for now
16:20:18 <shapr> http://www.abridgegame.org/pipermail/darcs-users/2003/000652.html
16:20:40 <Marvin--> sleepytime
16:21:08 <Heffalump> yes, it does, via separate repositories
16:21:51 <shapr> and according to that post, it might do branching in the future, but not right now
16:22:56 <Heffalump> no, that post says what I said
16:32:30 <shapr> yes, I agree
16:34:57 <stepcut> After reading the manual that was my conclusion on how to do branches. I wonder how convenient it is in practice
16:35:39 <shapr> if you try it, I'd like to hear what you think
16:36:20 <stepcut> i probably won't. I don't see much of use that tla does not already do
16:37:10 <shapr> from what I've read, the only difference between tla and darcs is that darcs can calculate dependencies between patches, and tla declares that each patch depends on all the patches before it
16:37:54 <shapr> so, darcs would let you safely pull a subset of the patches in a repo, and arch/tla does not.
16:38:05 <shapr> I don't know if that's a big difference in practice.
16:38:33 <stepcut> do you have to explicitly set the dependencies?
16:38:46 <shapr> no, darcs can calculate them itself
16:38:49 <Heffalump> darcs has a better concept of how to do merges, AFAICT
16:40:38 <stepcut> Heffalump: how so?
16:41:05 <Heffalump> it does this thing of figuring out how to make individual patches commute (or asking the user)
16:41:15 <Heffalump> I don't entirely understand how arch does that, though
16:41:39 <stepcut> interesting
16:41:52 <shapr> it doesn't commute patches
16:42:01 <shapr> each patch depends on all the other patches before it
16:42:09 * shapr gets url
16:43:13 <Heffalump> oh yeah
16:43:56 <shapr> http://regexps.srparish.net/tutorial-tla/cherrypicking-changes.html#Cherrypicking_Changes - 'Cherrypicking  changes in this manner isn't necessarily easy or even practical. It depends, for example, on the mainline  changes being "clean changesets"'
16:45:36 <Heffalump> the same applies in darcs, I think
16:48:03 <shapr> http://www.abridgegame.org/pipermail/darcs-users/2003/000146.html
16:49:52 <shapr> from that post, I don't think it's the same in darcs
16:50:18 <Heffalump> the bit about "clean changesets", I meant.
16:50:22 <Heffalump> Did you read the definition?
16:50:35 <shapr> no
16:50:36 * shapr reads
16:51:04 <kosmikus> good night
16:51:12 <shapr> good night kosmikus 
16:52:58 <stepcut> hrm, that example is interesting, but doesn't seem that practical in the real world
16:53:24 <shapr> it would be practical for easy backporting of patches
16:53:52 <stepcut> i don't think so ... not with out the ability to explicitly assign patch dependencies
16:55:07 <stepcut> let's say patch A adds a new function, and patch B calls that function. As long as both patches can be applied by themselves, darcs is happy -- so it won't declare a dependency. But if you only apply patch B, you will not end up with working code
16:55:48 <shapr> interesting point
16:56:55 <stepcut> If you could explicitly declare dependencies, then you could resolve that problem
16:57:36 <shapr> that requires more investigation, but not tonight
16:57:50 <shapr> anyone know how I can extract devfs from my system? :-/
16:57:54 <stepcut> on the other hand, who want's to try to declare all those dependencies
16:57:56 <stepcut> too much work
16:58:04 <shapr> not necessarily
16:58:08 <shapr> it could be done automatically
16:58:21 <stepcut> shapr: oh?
16:58:26 <Heffalump> shapr: just boot without it enabled?
16:58:36 <shapr> Heffalump: that didn't seem to work
16:58:51 <Heffalump> in what way?
16:58:59 <shapr> stepcut: this is what I think: http://www.abridgegame.org/pipermail/darcs-users/2003/000952.html
16:59:03 <stepcut> shapr: you probably have to run some script to recreate all the entries in /dev if they don't already exist
16:59:13 <shapr> hm
16:59:36 <shapr> I swapped my fstab to non-devfs format
16:59:59 * Heffalump reads shapr's last paragraph and splutters
17:00:08 <Heffalump> there's enough misinformation about IP as it is without you spreading more :-)
17:00:21 <shapr> but when I boot 2.6, it can't mount /dev/hda*
17:00:52 <shapr> Heffalump: well, was I supposed to summarize the whole enzyme-compiler system? :-)
17:01:14 <Heffalump> you could have avoided the outright incorrectness, though :-)
17:01:28 <shapr> it is sort of parse trees...
17:01:32 <shapr> kind of
17:01:41 <shapr> ok, maybe it was stretching it a bit
17:01:42 <Heffalump> no, you're misunderstanding
17:01:59 <Heffalump> it was never suggested that the same program would be viewed in two different languages
17:02:11 <Heffalump> two different *views* of the same program was the idea
17:02:28 <shapr> hm, ok
17:03:06 <shapr> anyways, no one responded to that post, so it looks like one of those "I'll just sidle away quietly" sort of moments.
17:04:05 <shapr> stepcut: any idea how to run such entry-creating script when 2.6 boots up?
17:04:12 <shapr> hm, I should probably ask on #linux
17:04:19 <stepcut> hrm
17:04:25 <Heffalump> you could just unmount /dev in single user mode and do it then
17:04:32 <Heffalump> (having booted up with devfs enabled)
17:04:40 <Heffalump> maybe even in init=/bin/sh
17:04:57 <shapr> hm
17:05:16 <stepcut> what's wrong with devfs anyway?
17:05:17 <Heffalump> shapr: yes, I think your ideas about refactoring and darcs were a little on crack too :-)
17:05:26 <Heffalump> it's being deprecated inside the kernel, for one thing
17:05:30 <shapr> yah, that's what most people think about my refactoring ideas.
17:05:55 <shapr> I just think I'm way ahead of my time ;-)
17:06:23 <stepcut> Heffalump: is something replacing it?
17:06:25 <shapr> udev
17:07:03 <stepcut> shapr: so are you trying to remove devfs and add udev, or just remove devfs 
17:07:05 <Heffalump> the idea that you make an abstract description of a refactoring a VC patch is a sensible one
17:07:32 <shapr> an obvious idea, imho
17:07:41 <Heffalump> Yeah. It was the "darcs is much like a refactoring browser" bit that was weird :-)
17:07:45 <shapr> it IS
17:07:47 <shapr> seriously!
17:08:04 <Heffalump> no, it's a VC system.
17:08:07 <Heffalump> really.
17:08:10 <shapr> anyways, I'll take my crack pipe over here ;-P
17:08:23 <shapr> yes, but refactoring browsers are a lot like VC systems
17:08:43 <shapr> read the refactoring browser thesis
17:09:01 <shapr> I strongly suspect you'll agree with me if you do.
17:09:11 <shapr> or at least we'll have something else fun to argue about :)
17:09:22 <Heffalump> that's slightly more defensible, but it's silly to conclude from this that a VC system is a refactoring browser...
17:10:11 <shapr> I don't think I said that
17:11:09 <SyntaxLaptop> hm. james troup claimed that ziyi-key was signed with his key, but I don't see any sig on it, and gpgv doesn't know what to make of it.
17:11:15 <shapr> and I didn't mean to imply that, even if it looks like I implied that.
17:11:23 <Heffalump> well, darcs is not anything like a refactoring browser
17:11:43 <Heffalump> and you said it was...
17:11:49 <shapr> I disagree with that, they're by no means equal, but they have strong similarities.
17:12:33 <SyntaxLaptop> I guess now that I"m a DD I should talk about Debian on debian-devel instead of #haskell...
17:12:40 <Heffalump> hehe
17:12:55 <Heffalump> disagree with what?
17:12:57 <stepcut> I should become a DD so I can complain about debian more
17:13:08 <shapr> darc is something like a refactoring browser
17:14:03 <Heffalump> well, you didn't just imply that, you said it :-)
17:14:59 * shapr shrugs
17:15:07 <shapr> best way I can argue is to integrate HaRe and darcs
17:15:15 * shapr adds that to his TODO list ;-)
17:15:51 <Igloo> Someone should become a DD and package darcs
17:16:18 <Maddas> Now that SyntaxLaptop is a DD, why not bother him? 
17:16:21 * Maddas grins evilly
17:16:27 <SyntaxLaptop> darcs is packaged, isn't it?
17:16:32 <Heffalump> it's a .deb, yes
17:16:36 <SyntaxLaptop> or does it need to be fixedup before uploading?
17:16:40 <Heffalump> It just needs someone to put it into Debian, I think.
17:16:44 <Igloo> I have no idea
17:16:47 <Heffalump> someone mentioned a few small problems
17:16:53 <shapr> move /usr/share/darcs/doc to /usr/share/doc/darcs
17:17:02 <Igloo> The only potential difficulty that springs to mind is handling repo-upgrading on upgrades
17:17:11 <stepcut> lintian is your friend
17:17:28 <SamB> SyntaxLaptop: I installed the one for woody, and it seems to be working fine.
17:17:39 <Igloo> But that could probably just be a debconf note, especially as there presumably isn't a contralised place to keep repos
17:17:51 <shapr> there's the convert-repo binary that comes with
17:18:13 <Igloo> (or if darcs can always upgrade a repo of an older version nothing need be done at all)
17:18:20 <SamB> even though I am on testing
17:18:38 <Igloo> shapr: Does it work on all older versions or just the last release or so, though?
17:19:08 <shapr> I don't think it works on all olders versions, but david says he will not change the format when darcs reaches 1.0
17:20:11 <shapr> any format changes will be new patch types, which won't require a repo upgrade
17:54:12 <_|_> @help
17:54:13 <lambdabot> Sorry, I don't know the command "help", try "lambdabot: @listcommands"
17:54:17 <_|_> @listmodules
17:54:18 <lambdabot> I have the following modules installed: ["base","dict","dummy","dynamic","eval","hello","karma","more","quote","seen","state","system","topic","type"]
17:54:40 <_|_> @listcommands
17:54:41 <lambdabot> I react to the following commands: ["all-dicts","arr","define","definitions","del-definition","devils","dict","dict-help","dummy","dump","dynamic-load","dynamic-reload","dynamic-unload","easton","echo","elements","eval","foldoc","fortune","gazetteer","get-definition","goodbye","hello","hitchcock","jargon","join","karma","karma+","karma-","learn","leave","listchans","listcommands","listmodules","lojban","moo","more","msg","part","prelude",
17:54:53 <_|_> @arr
17:54:54 <lambdabot> May the clap make ye incapable of Cracking Jenny's Tea Cup.
17:55:01 <_|_> @arr
17:55:02 <lambdabot> Is that a hornpipe in yer pocket, or arr ya just happy ta see me?
17:55:15 <_|_> @libs
17:55:15 <lambdabot> Sorry, I don't know the command "libs", try "lambdabot: @listcommands"
17:55:27 <_|_> @listcommands d
17:55:27 <lambdabot> No module "d" loaded
17:55:39 <_|_> @listcommands topic
17:55:40 <lambdabot> Module topic provides the following commands: ["topic-tell","topic-cons","topic-snoc","topic-tail","topic-init"]
17:56:39 <_|_> @listcommands quote
17:56:39 <lambdabot> Module quote provides the following commands: ["fortune","yow","arr"]
17:56:46 <_|_> @yow
17:57:05 <_|_> oh man
17:57:37 <_|_> come back, lambdabot!
18:06:58 <Pseudonym> You killed him!
18:07:16 <ayrnieu> You *bastard*
18:07:18 <_|_> Pseudonym: Sorry.  I didn't mean to.
18:08:38 <_|_> Will there be a bot funeral?
18:08:51 <Pseudonym> What do you expect from someone with a name like "bottom".
18:08:57 <Pseudonym> I bet you've never returned a real value in your life.
18:09:18 <_|_> I keep trying, but never seem to finish. :-)
18:10:47 <_|_> I take it there's a bug in "yow"?
18:11:11 <_|_> If I fix it, would that serve as penance?
18:11:41 <_|_> ... or did I stumble upon the shutdown command?  Hm...
18:12:03 <ayrnieu> yow! have we shutdown yet?
18:12:29 <Pseudonym> We also have crack shapr's root password, but he hasn't noticed yet.
18:13:12 <_|_> Does he read the logs?
18:14:25 <_|_> Pseudonym: then you should be able to restart the bot!
18:16:06 <SyntaxLaptop> Pseudonym: can you delete teh last email I sent him too, there was a little mistake in it, I'll correct it in the next one
18:21:21 <_|_> I think the only place I'd run lambdabot is under a unique uid/group, in a chroot jail, under User-Mode Linux, booting from cdrom on a machine with no hard drive, buried 5 miles underground with no net connection.  But then I may be a little paranoid.
18:22:10 * Darius again points out that the ultimate paranoid person would digitally sign each IRC message.
18:22:33 * _|_ isn't quite _that_ paranoid
18:22:44 <Darius> That's what everyone says.
18:23:07 <Igloo> But if you sign something it can be used against you
18:23:17 <Igloo> Much better to demand signed messages but not give them without good reason
18:23:30 <_|_> But if you sign everything, someone else can't pose as you
18:26:16 <_|_> I guess shapr doesn't have a /usr/share/emacs/21.2/etc/yow.lines file.  That's the only thing in Yow.hs that should possibly fail.
18:27:37 <Darius> No I think his ISP went downish again.
18:28:00 <Darius> Or something ?
18:28:38 <_|_> I don't know, it disconnected 1 second after I said @yow.
18:32:15 <Darius> Yeah, I think you're right.  You killed lambdabot.
18:33:19 <_|_> To find me guilty, you must find motive.
18:33:39 <_|_> I could never kill lambdabot.  I love lambdabot.
18:33:58 <Darius> Maybe it was someone impersonating you!
18:34:21 <_|_> Yah, LB should only accept signed IRC msgs.
18:35:49 <_|_> I guess it's involuntary botslaughter.
18:40:29 <Pseudonym> All bottom values look the same to me.
18:41:02 <_|_> Hey, that's very insensitive of you.
18:41:16 <Pseudonym> I like my domains unlifted.
18:41:25 <Pseudonym> Kinky, I know.
18:42:14 <_|_> We bottoms come in all types.  :-D
19:02:01 <Pseudonym> You're back!
19:02:05 <Pseudonym> @arr
19:02:06 <lambdabot> I'd like to drop me anchor in her lagoon
19:02:21 <_|_> lambdabot!  I missed you!
19:02:42 <_|_> @arr
19:02:42 <lambdabot> Yeh scurvy dog...
19:02:48 <_|_> @arr
19:02:49 <lambdabot> I'd like to drop me anchor in her lagoon
19:02:52 <ayrnieu> @yoy
19:02:52 <lambdabot> Sorry, I don't know the command "yoy", try "lambdabot: @listcommands"
19:02:55 <ayrnieu> @yow
19:02:56 <lambdabot> Wow!  Look!!  A stray meatball!!  Let's interview it!
19:03:16 <_|_> @yow
19:03:16 <lambdabot> Bo Derek ruined my life!
19:03:21 <_|_> yay!
19:03:59 <ayrnieu> @arr
19:03:59 <lambdabot> Arrr!
19:04:05 <ayrnieu> @fortune
19:04:05 <lambdabot> Luke, I'm yer father, eh.  Come over to the dark side, you hoser.
19:04:05 <lambdabot> 		-- Dave Thomas, "Strange Brew"
19:04:12 <ayrnieu> @fortune
19:04:14 <lambdabot> The 'A' is for content, the 'minus' is for not typing it.  Don't ever do
19:04:14 <lambdabot> this to my eyes again.
19:04:14 <lambdabot> 		-- Professor Ronald Brady, Philosophy, Ramapo State College
19:04:15 <Pseudonym> Careful!  You'll wear it out!
19:04:28 <ayrnieu> @fortune
19:04:28 <lambdabot> We use Linux for all our mission-critical applications. Having the source code
19:04:28 <lambdabot> means that we are not held hostage by anyone's support department.
19:04:28 <lambdabot> (Russell Nelson, President of Crynwr Software)
19:04:40 <ayrnieu> bah, I hate those kind of fortunes.
19:04:51 <ayrnieu> For some reason the author decided to ignore all the conventions.
19:08:48 <_|_> Does every module have to have a "main" to be loaded in ghci?
19:09:01 <ayrnieu> no.
19:09:39 <_|_> I tried :add and :load, and they both complain Variable not in scope: `main'
19:09:57 <_|_> I'm using 6.0.1.
19:11:02 <_|_> @yow
19:11:03 <lambdabot> Life is selling REVOLUTIONARY HAIR PRODUCTS!
19:11:39 <ayrnieu> :m Network.Socket
19:11:52 <ayrnieu> :t listenOn
19:12:03 <ayrnieu> lambdabot: :m Network.Socket
19:12:03 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
19:12:14 <ayrnieu> oh, right, that other one.
19:12:52 <_|_> Network.Socket is a builtin module.  What about my own modules?
19:13:11 <ayrnieu> hm?  Just load them.
19:13:25 <ayrnieu> ghci doesn't care about 'main'
19:13:39 <_|_> Then why do I get the error above?
19:14:18 <ayrnieu> Doing something wrong, I suppose.
19:15:01 <Pseudonym> Did you, by any chance, fail to put in a "module" declaration at the top?
19:15:29 <_|_> Could be.  :-(
19:15:51 <_|_> Duh
19:16:19 <Pseudonym> If you don't do that, it assumes that the module is "Main" and hence looks for a "main".
19:17:55 <_|_> Yeah, I figured that out.  I remember I've figured that out before, too.  They say the memory's the second thing to go; I forget what the first one is.
19:18:56 <_|_> What's the syntax to pass an implicit parameter to a function?
19:19:09 <_|_> "where"?
19:19:47 <ayrnieu> Your question does not make sense, sorry.
19:20:03 <ayrnieu> foo = \x -> x + x  -- look, an implicit parameter!
19:20:07 <ayrnieu> of sorts.
19:20:54 <_|_> OK, what's the name of the Haskell extention that introduces names that look like "?foo"  ?
19:21:31 <ayrnieu> Template Haskell, I'd suppose.  What do those names mean?
19:22:01 <_|_> No, it's not TH.
19:22:37 <_|_> The names are implicit parameters.  They can be set within a scope, and don't have to be passed around explicitly.  They can be referenced anywhere within the scope.
19:23:22 <ayrnieu> It sounds as if you may want to talk about monads, but I don't make any real sense out of your description, sorry.
19:23:30 <_|_> Found it.  http://cvs.haskell.org/Hugs/pages/users_guide/implicit-parameters.html
20:44:10 <_|_> @arr
20:44:11 <lambdabot> Arrr!
20:44:13 <_|_> @arr
20:44:14 <lambdabot> Get out of me way, yeh landlubber
20:44:17 <_|_> @arr
20:44:17 <lambdabot> Yeh scurvy dog...
20:44:26 <_|_> @listmodules
20:44:27 <lambdabot> I have the following modules installed: ["base","dict","dummy","dynamic","eval","hello","karma","more","quote","seen","state","system","topic","type"]
20:44:36 <_|_> @listcommands dict
20:44:36 <lambdabot> Module dict provides the following commands: ["dict","dict-help","all-dicts","devils","easton","elements","foldoc","gazetteer","hitchcock","jargon","lojban","prelude","vera","web1913","wn","world02"]
20:44:46 <_|_> @prelude map
20:44:46 <lambdabot> ERROR: connect: does not exist (Connection refused)
20:46:33 <_|_> @listcommands ghci
20:46:34 <lambdabot> No module "ghci" loaded
20:46:44 <_|_> @ghci :t 1
20:46:44 <lambdabot> Sorry, I don't know the command "ghci", try "lambdabot: @listcommands"
20:46:59 <_|_> @listcommands base
20:47:00 <lambdabot> Module base provides the following commands: []
20:47:11 <_|_> @listcommands type
20:47:12 <lambdabot> Module type provides the following commands: ["type"]
20:47:16 <_|_> @type
20:47:23 <_|_> @type 1
20:47:24 <lambdabot> 1 :: Num a => a
20:47:39 <_|_> @listcommands system
20:47:39 <lambdabot> Module system provides the following commands: ["listchans","listmodules","listcommands","join","leave","part","msg","quit","reconnect","echo"]
20:48:24 <_|_> @elements uranium
20:48:25 <lambdabot> *** "uranium" elements "Elements database 20001107"
20:48:25 <lambdabot> uranium
20:48:25 <lambdabot> Symbol: U
20:48:25 <lambdabot> Atomic number: 92
20:48:26 <lambdabot> Atomic weight: (231)
20:48:28 <lambdabot> White radioactive metallic element belonging to the actinoids. Three
20:48:30 <lambdabot> natural isotopes, U-238, U-235 and U-234. Uranium-235 is used as the fuel
20:48:32 <lambdabot> for nuclear reactors and weapons. Discovered by Martin H. Klaproth in 1789.
20:48:34 <lambdabot> [2 @more lines]
20:48:38 <_|_> @more
20:53:52 <_|_> @arr
20:53:53 <lambdabot> Eat maggoty hardtack, ye unkempt, jenny frequentin', son of a gun.
23:16:28 <Pseudonym> Nytol.
23:58:24 <phubuh_> heko
