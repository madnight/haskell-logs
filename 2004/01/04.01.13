04:55:48 <basti_> hi all
05:44:45 <Lunar^> Hi
05:46:10 <Lunar^> Does anyone know how exactly Ctrl+C is handled by GHC's RTS ?
06:05:34 <Igloo> Syn?
06:05:41 <SyntaxNinja> hi Igloo
06:06:17 <Igloo> I mean I'd do   let foo = f x; foo' = g foo   whereas you seemed to be doing it the other way round. Not a big thing, just a style issue
06:06:43 <SyntaxNinja> can you give me an example?
06:08:32 <Igloo> addPackage path' conf
06:08:32 <Igloo>     = do inConf' <- getPkgConfig path'
06:08:32 <Igloo>      let inConf = maybe emptyFM pkgMap inConf'
06:08:56 <Igloo> (why is path primed for that matter?)
06:09:25 <SyntaxNinja> I think because I got a shadow warning
06:09:34 <SyntaxNinja> maybe I won't now that I cleaned up the import lists
06:09:57 <Igloo> Actually inConf' is unnecessary if you changed getPkgConfig to do the defaulting to empty
06:10:50 <kosmikus> is this library infrastructure code?
06:11:42 <SyntaxNinja> kosmikus: ja
06:12:04 <kosmikus> is there a repo?
06:14:47 <SyntaxNinja> there's a function somewhere path :: State -> Path, but I don't know wha tmodule it's from. strange.
06:15:24 <Igloo> Try qualifying :t with all the imports
06:15:27 <SyntaxNinja> kos: the tarball is out of date by a day. http://www.haskell.org/libraryInfrastructure/code.html
06:15:27 <Igloo> Or :i might tell you
06:18:38 <SyntaxNinja> found it. it's from hunit
06:18:52 <SyntaxNinja> (which was the only thing I wasn't qualifying, so it wasn't hard to figure out)
06:19:09 <Igloo> :-)
06:20:09 <kosmikus> SyntaxNinja: I'll try to get it using tla
06:20:45 <SyntaxNinja> Igloo: not sure why you want to get rid of the maybe there for getPkgConfig; it seems like it would be nice to distinguish the cases where it returns Nothing (no such file, etc)
06:21:18 <Igloo> SyntaxNinja: But all 4 uses of it default it to empty
06:22:29 <Igloo> If you ever do have a case where you want to know I'd suggest a getMaybePkgConfig which getPkgConfig is a wrapper around would be better than defaulting it all over the place
06:23:08 <SyntaxNinja> no, look in main.hs if you say "./haskell-config --config=/file/that/doesnt/exist list" then you'll get an error message.
06:23:21 <SyntaxNinja> around line 140
06:23:44 <SyntaxNinja> kosmikus: FYI, I'm looking for some help on the Version parser and the XML parser (can go away from XML if need be) and porting it to hugs and nhc.
06:23:58 <SyntaxNinja> I'm going to post the code to a mailing list within the week.
06:24:13 <SyntaxNinja> Igloo: hmm
06:24:19 <SyntaxNinja> (getMaybePkgConfig)
06:24:28 <Igloo> Oh, I thought I grepped the source for uses in other files and found none. Maybe I screwed up
06:26:32 <SyntaxNinja> Igloo: I did implement the easier of your changes last night, and intend to do more and reply to your mail today. i hope
06:33:07 <basti|_> re
07:08:34 <ham[kell]> hiho
08:42:19 <SyntaxNinja> @wiki UnboxedType
08:42:20 <lambdabot> http://www.haskell.org/hawiki/UnboxedType
08:42:23 <SyntaxNinja> more input welcome :)
08:45:04 <Smerdyakov> SyntaxNinja, it lead me to your web site. Are you a general Hesse fan, or just GBG?
08:46:49 <ham[kell]> whats that unboxed thing good for?
08:47:42 <Smerdyakov> ham[kell], scaring little kids
08:48:02 <ham[kell]> aha
08:49:20 <SyntaxNinja> Smerdyakov: I like everything that I've read, but I like GBG the most :)
08:49:24 <ham[kell]> @wiki boxedtype
08:49:24 <lambdabot> http://www.haskell.org/hawiki/boxedtype
08:49:53 <SyntaxNinja> ham[kell]: that wiki link doesn't exist
08:49:54 <Smerdyakov> SyntaxNinja, what else have you read?
08:49:59 <SyntaxNinja> (well, I haven't checked, but I'm pretty sure)
08:50:08 <ham[kell]> yep not existent
08:50:23 <SyntaxNinja> Smerdyakov: I've read a bunch of short stories and Siddhartha.
08:50:26 <ham[kell]> SyntaxNinja can you explain that box concept to me?
08:50:35 <ham[kell]> or where i can read about it?
08:50:48 <ham[kell]> GBG?
08:50:52 <SyntaxNinja> ham[kell]: what I put up on the wiki is just about everything I know.  look at "See also" at the bottom of the page for more reading.
08:50:56 <SyntaxNinja> ham[kell]: The Glass Bead Game
08:51:04 <ham[kell]> whats that?
08:51:14 <SyntaxNinja> Smerdyakov: I had ambition to write quotes for all the books I love, but I never got around to it.
08:51:20 <SyntaxNinja> ham[kell]: a book by Hesse
08:51:27 <SyntaxNinja> (fiction)
08:51:34 <ham[kell]> ah ok
08:51:42 <Igloo> @wiki
08:51:42 <lambdabot> http://www.haskell.org/hawiki/
08:51:57 <Smerdyakov> SyntaxNinja, hmph. I think you got the bottom of the heap as far as quality Hesse fiction. :P
08:52:26 <SyntaxNinja> Smerdyakov: I quit reading after all the short stories were so similar.  What is his best work?
08:52:56 <Smerdyakov> My rough preferences here: http://www.schizomaniac.net/books.html
08:55:25 <ham[kell]> :)
08:55:44 <ham[kell]> not even one book ive read except name of the rose
08:56:04 <ham[kell]> whats so cool about hesse?
08:56:06 <Smerdyakov> ham[kell], do you read a lot of fiction?
08:56:27 <Smerdyakov> Hesse is a superb modern profit with an appreciation of insanity and wisdom in combination.
08:56:31 <Smerdyakov> urgh
08:56:32 <ham[kell]> kind of yes
08:56:34 <Smerdyakov> "prophet"
08:56:49 <ham[kell]> atm i read that book of eric idle
08:56:50 <Smerdyakov> ham[kell], then I bet you read science fiction & fantasty if you've read so few of those I list.
08:57:02 <ham[kell]> right
08:57:13 <ham[kell]> stuff like asimov and lem etc
08:57:15 <Cale> I enjoyed the Glass Bead Game
08:57:25 <ham[kell]> though i have just started with that
08:57:38 <ham[kell]> also adams and pratchett
08:57:53 <ham[kell]> and gibson and such
08:58:14 <Smerdyakov> ham[kell], well, you are missing out on the best stuff out there.
08:58:34 <ham[kell]> hm
08:58:51 <ham[kell]> eco is something that i might also read
08:59:04 <ham[kell]> i think that there are alot of cool history novels out there
08:59:15 <ham[kell]> but i dont think that i would like hesse
08:59:18 <Smerdyakov> Well, it's a shame to limit yourself to only one author of fiction that doesn't fit the SF&F mould.
08:59:31 <Smerdyakov> ham[kell], why not?
08:59:44 <ham[kell]> since thats something that is read at school
08:59:51 <SyntaxNinja> hesse's "appreciation of insanity" included a lot of practical experience in said :P
08:59:59 <ham[kell]> and usually thats somewhat orthogonal to my interests
09:00:15 <Smerdyakov> ham[kell], it's a common thing to believe, but look more closely at what is assigned in school.
09:00:31 <Smerdyakov> ham[kell], generally, they assign a few short, simple, popular works of an author.
09:00:37 <Smerdyakov> ham[kell], generally these are his worst works. :)
09:00:42 <ham[kell]> :)
09:00:48 <Smerdyakov> ham[kell], the others are much better and worth reading, in many cases!
09:00:51 <ham[kell]> i mean what makes hesse cool then?
09:00:53 <SyntaxNinja> Smerdyakov: so you rank The Idiot above Brothers Karamozov?  why?
09:00:56 <SyntaxNinja> (haven't read former)
09:01:14 <Smerdyakov> SyntaxNinja, I identify more with the Idiot. And the ending is the best ending in all my fiction reading experience. I can't say more without spoiling it. :)
09:01:17 <ham[kell]> i mean stuff like asimov is also cool imho
09:01:26 <SyntaxNinja> Smerdyakov: OK. is that a novel?
09:01:31 <ham[kell]> its fun to read and has some philosophical background
09:01:39 <Smerdyakov> SyntaxNinja, yes. the first 4 I list are his 4 "long novels."
09:02:14 <SyntaxNinja> Smerdyakov: I got bored with War & Peace before I was 1/3 of the way through :(
09:02:18 <Smerdyakov> ham[kell], poet-novelists like Hesse don't toss in "philosophical background" from time to time so that you can feel intellectually gratified.
09:02:20 <SyntaxNinja> I still might pick it up, though.
09:02:32 <Smerdyakov> ham[kell], every sentence is "philosophical" and meaningful.
09:02:50 <SyntaxNinja> Smerdyakov: did you see the brothers karamozov movie?
09:02:51 <ham[kell]> Smerdyakov that is a self referring statement :)
09:02:54 <Smerdyakov> SyntaxNinja, no.
09:02:58 <ham[kell]> and thus not decidable
09:03:19 <Smerdyakov> ham[kell], the "every sentence" refers to sentences in the works of such authors, so there's no self reference.
09:03:27 <SyntaxNinja> Smerdyakov: it has William Shatner as the young monk (Arkady?) he actually can act! This is before star trek.
09:03:43 <Smerdyakov> SyntaxNinja, yeah, I know about that. It was his first "big break."
09:03:49 <ham[kell]> btw do you know the film 'prosperos books'?
09:03:55 <Smerdyakov> (And it's Alexei/Alyosha)
09:04:04 <Smerdyakov> ham[kell], no
09:04:24 <SyntaxNinja> Smerdyakov: ah right.
09:04:25 <ham[kell]> dang i try to get that film but its only on vhs no dvd version
09:05:00 <Smerdyakov> That's OK. You have a mountain of books to read. Who needs films? :)
09:05:22 <ham[kell]> that film is really cool
09:05:43 <ham[kell]> its based on 'the storm' of shakesper
09:09:45 <ham[kell]> also books like flatland are cool
09:10:55 <Smerdyakov> I'm tellin' you, you have to give some "literature" a try.
09:11:52 <ham[kell]> what is the gain?
09:12:10 <Smerdyakov> High aesthetic value.
09:12:22 <ham[kell]> i mean is there a message?
09:12:44 <Smerdyakov> Sometimes. Why?
09:12:46 <ham[kell]> i have read a lot of that books in school an i havent even found one to be good
09:12:58 <Smerdyakov> They don't generally assign the good ones in school, like I said.
09:13:09 <Smerdyakov> It's almost a crime, turning kids against a whole field of human endeavor.
09:13:14 <ham[kell]> i mean i like to read books like gibson or so cause they try to tell you somethikng
09:13:18 <ham[kell]> and its fun to read it
09:13:39 <Smerdyakov> Can you name the most recent books you were assigned to read in school?
09:13:56 <Smerdyakov> I can tell they're not on my list, because you said you hadn't read them! :D
09:13:59 <ham[kell]> its like 9+ years ago :)
09:14:23 <ham[kell]> kabale und liebe
09:14:35 <ham[kell]> sry dont know the english name
09:14:40 <ham[kell]> or william tell
09:15:54 <ham[kell]> i enjoy books that try to tell you something and are fun to read
09:16:52 <Smerdyakov> So try some on my list!
09:16:58 <kosmikus> kabale und liebe = intrigue and love
09:17:13 <ham[kell]> ah thanks kosmikus
09:17:20 <ham[kell]> kosmikus did you read it as well :)?
09:17:33 <ham[kell]> Smerdyakov have you read books that i named?
09:17:55 <Smerdyakov> Never heard of Kabale or Liebe.
09:17:59 <kosmikus> ham[kell]: yes, I read it a long time ago
09:18:16 <Smerdyakov> And I'm not aware of a book William Tell.
09:18:17 <kosmikus> but certainly you have read Faust I as well?
09:18:21 <ham[kell]> Smerdyakov no i mean books like gibson adams pratchett
09:18:29 <Smerdyakov> kosmikus, yes, it's on the page....
09:18:41 <kosmikus> no, I meant ham[kell] 
09:18:44 <ham[kell]> kosmikus nope i might though enjoy to read that maybe
09:19:18 <ham[kell]> though i dislike the form of the delivery
09:19:27 <ham[kell]> the writing style
09:19:32 <kosmikus> why?
09:19:52 <ham[kell]> because it written in an old fashioned way
09:20:07 <ham[kell]> i think that the idea is really cool at least from what i know
09:20:24 <kosmikus> no, it's not old-fashioned, it's Fantasy or even SF!
09:20:25 <ham[kell]> but thats why i like films like thta prosperos books
09:20:39 <ham[kell]> kosmikus i mean the written style
09:20:41 <kosmikus> it describes another planet on which demons and devils exist and people speak in verses
09:20:45 <ham[kell]> not the idea thats great
09:21:05 * kosmikus is just trying to make it attractive for ham[kell] ...
09:21:20 <ham[kell]> :)
09:21:31 <ham[kell]> i really considered reading faust before
09:21:45 <ham[kell]> its just the language that makes me not reading it so far
09:22:07 <ham[kell]> if there was a modern interpreration then i would read it defenetly
09:22:28 <kosmikus> reading Faust really is a revelation; there are *so* many phrases and proverbs you know in German that are originally from this book
09:22:39 * Smerdyakov pities ham[kell]. :P
09:22:53 <kosmikus> ham[kell]: read an English translation ;)
09:22:59 <ham[kell]> kosmikus heh ;)
09:23:01 <Smerdyakov> The details of what people find aesthetically pleasing are not at all clear, so you owe it to yourself to check out new possibilities!
09:24:36 <ham[kell]> hm
09:25:13 <ham[kell]> i mean i have read books of that kind i dont want to generalize that i dont like books like that
09:25:20 <ham[kell]> cause i havent read all of them
09:25:35 <ham[kell]> but i think that this will hold for the majority
09:25:43 <ham[kell]> though i consider reading faust
09:27:14 <Smerdyakov> Why do you think it will hold? Present a logical argument.
09:27:56 <ham[kell]> i dislike to read it because its tedious most often because of the writing style
09:28:23 <ham[kell]> have you read admas dirk gentlys holistic agency books?
09:29:45 <Smerdyakov> No, but I read Hitchhiker's Guide.
09:29:56 <Smerdyakov> Listen, you need to come to appreciate the aesthetic value of the language itself, instead of viewing it as tedious.
09:30:15 <Smerdyakov> I'm not saying that all literature has such good prose, but the best authors certainly d.
09:30:17 <Smerdyakov> do
09:30:39 <ham[kell]> language is a media
09:30:57 <ham[kell]> and i dont like to read just to read words
09:31:21 <Smerdyakov> Too bad.
09:31:31 <ham[kell]> as i thought faust is written as a play
09:32:12 <kosmikus> plays are great
09:32:19 <ham[kell]> why?
09:32:25 <kosmikus> no tedious descriptions of landscapes are situations over pages and pages
09:32:30 <kosmikus> just dialogue, just action
09:32:43 <kosmikus> s/are/and
09:32:53 <SyntaxNinja> ham[kell]: do you dislike poetry?
09:33:23 <ham[kell]> SyntaxNinja hm i havent read many poems
09:33:34 <Smerdyakov> ham[kell] appears to be a philistine.
09:33:38 <ham[kell]> but i would say that i dont really like them
09:33:41 <Smerdyakov> An interesting question arises:
09:33:50 <Smerdyakov> This is one of the most intellectual IRC channels I've ever encountered.
09:33:53 <ham[kell]> Smerdyakov whats a philistine?
09:33:55 <kosmikus> SyntaxNinja: is the library infrastructure supposed to be nhc code?
09:33:57 <Smerdyakov> Despite that, how many philistines do we have among us? :)
09:34:22 <Smerdyakov> Take it away, Webster's 1913!
09:34:23 <Smerdyakov> 2. Uncultured; commonplace.
09:34:23 <ham[kell]> though again i have to state that i like reading
09:34:45 <SyntaxNinja> kosmikus: it needs to be compatible with at least GHC, NHC, and Hugs, but right now, it only works w/ GHC. I'm looking for help in getting it to work esp with NHC, which I have no experience with.
09:34:55 <ham[kell]> Smerdyakov how may galleries have you visited
09:35:08 <kosmikus> SyntaxNinja: because the makefile calls nhc ...
09:35:19 <SyntaxNinja> kosmikus: yeah, but it doesn't work :)
09:35:23 <Smerdyakov> ham[kell], art galleries? Not many,
09:35:24 <kosmikus> ah
09:35:47 <kosmikus> SyntaxNinja: but with ghc, it works without any extra requirements?
09:35:58 <ham[kell]> Smerdyakov or how many classic cds do you own ? how often have you been to a drama? 
09:36:00 <SyntaxNinja> kosmikus: it needs HaXmL and HUnit
09:36:11 <ham[kell]> -drama + theatre
09:36:13 <SyntaxNinja> they're both really easy to install, though! and you'll have to tweak those (very simple) makefiles.
09:36:22 <kosmikus> so I need the library infrastructure system to get the library infrastructure running? ;)
09:36:26 <ham[kell]> i mean thats all culture also
09:36:45 <SyntaxNinja> kosmikus: it definitely suffers fromt he same issues that other libraries suffer!
09:36:50 <Smerdyakov> ham[kell], so? :)
09:36:51 <SyntaxNinja> (from)
09:37:07 <SyntaxNinja> kosmikus: but in my defense, I haven't even announced the repository yet
09:37:18 <ham[kell]> i dont say that its unimportant i think that it actually is really important and that there is a lot of cool cultrural stuff i just dont like that language 
09:37:20 <kosmikus> SyntaxNinja: I'm not complaining, just a bit worried
09:37:42 <ham[kell]> Smerdyakov so i am not much more of an philistine then you ;)
09:37:42 <SyntaxNinja> maybe we'll get away from HaXmL. hunit can be easily included or the unit tests provided in a separate package.
09:37:48 <SyntaxNinja> kosmikus: worried about what?
09:38:16 <Smerdyakov> ham[kell], you're a written language philistine.
09:38:19 <kosmikus> about it being difficult to set up on a source based system
09:38:26 <ham[kell]> Smerdyakov do you know the classical greek myths etc?
09:38:30 <SyntaxNinja> kosmikus: presumably, LIP will come with the haskell implementations
09:38:37 <ham[kell]> Smerdyakov heh ok on that we can commit ;)
09:38:37 <SyntaxNinja> in order to bootstrap.
09:38:40 <Smerdyakov> Greek? Probably have some old idea.
09:39:01 <kosmikus> I'll try to get it running tonight or tomorrow, but I have to leave now
09:39:05 <kosmikus> bye
09:39:12 <SyntaxNinja> l8r
09:39:17 <ham[kell]> Smerdyakov no i mean the mythical stories
09:39:19 <ham[kell]> bye kosmikus|away
09:39:35 <ham[kell]> i consider that also culture something that you have to read
09:39:52 <Smerdyakov> I think it's important that we make a distinction here:
09:40:05 <ham[kell]> sec toilet
09:40:37 <Smerdyakov> Especially given your pre-higher education schooling exposure to literature, it's natural that you would view it as a fixed body of works picked out by someone, and that it is your Solemn Duty to read it all, as a sort of graduation requirement.
09:41:11 <Smerdyakov> I'm talking about the _form_ of literature. Who wrote it or when is not important. It's the ability of well constructed works of literature to be aesthetically stimulating to receptive people.
09:41:20 <Smerdyakov> So, in this sense, "ancient Greek myths" have no special status.
09:42:25 <ham[kell]> ok not in that litrature context right
09:42:36 <ham[kell]> though
09:42:45 <ham[kell]> all the plays of homer etc would be in there
09:42:56 <ham[kell]> and all that myths are based on all these greek plays
09:43:04 <Smerdyakov> Maybe, but they don't necessarily have higher value than things written this year.
09:43:11 <ham[kell]> but they are written in a modern style
09:43:19 <ham[kell]> no of course not
09:43:49 <ham[kell]> ho
09:43:53 <shapr> hi ham[kell] 
09:43:58 <Smerdyakov> So, I criticize you for ignoring an art form, not for being "uncultured"/not being familiar with a specific body of work/etc.. (Perhaps the defn. of philistine that I gave was a bad one.)
09:44:16 <ham[kell]> yes i know that you mean
09:44:32 <ham[kell]> but thats like dislikeing modern art
09:44:51 <ham[kell]> such a picture just doesnt transport anything important to me
09:45:01 <shapr> SyntaxNinja: is your repo online?
09:45:01 <Smerdyakov> It is, but there is much more agreement on the value of literature than on modern art, I think.
09:45:10 <Smerdyakov> There's much more evidence that it satisfies a fundamental human need.
09:45:18 <ham[kell]> that i also would agree to :)
09:45:53 <ham[kell]> i think that films can also be art
09:46:07 <Smerdyakov> I don't disagree.
09:46:16 <ham[kell]> prosperos books ie is based on that shakrespere play the storm
09:46:24 <shapr> so, did I miss any interesting Haskell conversation?
09:46:31 <ham[kell]> and uses a lot of modern visual effects 
09:46:37 <ham[kell]> shapr hen no :)
09:46:43 <Smerdyakov> I tell you. These shapr's have one-track minds.
09:47:00 <shapr> I'm fashionably on-topic
09:47:18 <shapr> has anyone found anything notable on the demo gforge?
09:47:19 <ham[kell]> thats a good trait
09:47:52 <ham[kell]> is there a haskell song?
09:47:56 <Smerdyakov> LOL
09:48:02 <Smerdyakov> (physically)
09:48:05 * shapr sings about the lambda
09:48:18 <shapr> la-la-la-lambda (to the tune of la bamba)
09:48:23 * Smerdyakov verifies memory safety of merge sort in Scheme. :O
09:48:26 <ham[kell]> like that
09:48:26 <ham[kell]> http://www.cs.unm.edu/~williams/cs257/the_eternal_flame_god_wro.mp3
09:48:48 <ham[kell]> thats a kind of funny song about lisp :)
09:57:05 <shapr> does anyone know of any research on distributed garbage collection?
09:57:31 <SyntaxNinja> shapr: yeah, it's online, but I haven't really officially announced it
09:57:59 <SyntaxNinja> though I thought I sent you a mail about it :) http://www.haskell.org/libraryInfrastructure/code.html
09:58:28 <shapr> I got the email, but I didn't think I got the arch repo address at the same time.
09:59:48 <SyntaxNinja> it's all explained on that page :)
09:59:52 <SyntaxNinja> it's for tla-newbies
10:00:32 <shapr> that's me
10:04:19 <shapr> SyntaxNinja: man we look stylish in that pic :-)
10:05:17 <shapr> is the return value of the last command stored in the environment somewhere?
10:07:19 <SyntaxNinja> shapr: yes, we rule.
10:09:42 <SyntaxNinja> $?
10:18:02 <shapr> SyntaxNinja: I have eight cents.
10:32:14 <kosmikus> has anyone recently tried to bootstrap GHC from .hc files?
10:32:47 <jasonw> I did it about 3 weeks ago, yeah, kosmikus.
10:33:13 <kosmikus> on which platform?
10:33:46 <jasonw> MacOS X. (I've never been able to get the binaries to work right so I did my own bootstrap)
10:34:24 <kosmikus> where did you get the hc files from?
10:35:58 <jasonw> I compiled ghc6.2 on either solaris or linux, I don't remember which, and had it save the hc files.
10:36:52 <kosmikus> hmm, I tried today and got an error during hc-build on linux
10:37:12 <kosmikus> Control/Concurrent_stub.o(.text+0x0): In function `forkOS_entry':
10:37:12 <kosmikus> : multiple definition of `forkOS_entry'
10:37:12 <kosmikus> Control/Concurrent_stub.o(.text+0x0): first defined here
10:37:49 <jasonw> hmm.
10:51:32 <SyntaxNinja> shapr: 'eh?
11:28:12 <kosmikus> SyntaxNinja: it compiled :)
11:29:01 <SyntaxNinja> kosmikus: cool
11:31:12 <kosmikus> hm
11:41:51 <kosmikus> may I ask stupid questions?
11:44:19 <jasonw> Sure, I'll help if I can.
11:47:04 <kosmikus> jasonw,SyntaxNinja: I meant about the LI ...
11:47:52 <SyntaxNinja> kosmikus: ask away
11:48:05 <SyntaxNinja> though I always get worried when someone claims to be asking a stupid question
11:48:22 <kosmikus> I've changed the user package.conf location to my home
11:48:26 <kosmikus> I've created an empty file
11:48:43 <kosmikus> I say ./haskell-config -uv list
11:48:55 <kosmikus> and would expect an empty list or something, but I get "package file not found"
11:49:22 <kosmikus> shouldn't getPkgConfig return emptyFM instead of Nothing if hSize == 0?
11:50:27 <SyntaxNinja> I should probably include test files in that distribution
11:51:10 <SyntaxNinja> kosmikus: I think igloo agrees with you.  if you add anything to the package file, it'll create it and add the thing. if you had a package file with no <package>s, then I think it would list nothing
11:51:32 <SyntaxNinja> but if the file is empty, idono what the best behavior is
11:51:55 <SyntaxNinja> I do it like that in case the user says "./haskell-config --config=/tmp/noFile list"
11:52:10 <SyntaxNinja> but an empty file?  could be that emptyFM is the best behavior.
11:52:12 <SyntaxNinja> I'll think about it.
11:53:06 <kosmikus> well, in any case it should not claim it's not there
11:53:21 <kosmikus> if it's illegal to have an empty file, then give a parse error
11:54:16 <SyntaxNinja> yeah. probably better.
11:54:29 <SyntaxNinja> I just added testPkg1.xml and testPkg2.xml to the repo
11:54:35 <kosmikus> i.e. just remove the check for hSize
11:55:38 <kosmikus> also, why do you open the file in ReadWriteMode just to get at the current config?
11:56:51 <SyntaxNinja> that can change, I was having strange problems w/ HaXmL, I think, where when I went to write the file, it was busy. I think I fixed it, though. not sure.
11:58:50 <kosmikus> maybe that is because you do not close the file?
11:59:33 <SyntaxNinja> I was closing the file, then removing that close fixed the problem
11:59:40 <SyntaxNinja> or fixed the symptom.
12:00:16 <kosmikus> strange
12:00:26 <kosmikus> now how would I tla your updates into my branch?
12:00:42 <SyntaxNinja> which version of the 'get' did you use? did you 'tag' first?
12:00:50 <kosmikus> yes
12:02:10 <SyntaxNinja> then you want star-merge...
12:02:37 <SyntaxNinja> tla star-merge ijones@syntaxpolice.org--2003-haskell/libraryInfrastructure-main--0.1
12:02:39 <SyntaxNinja> I think
12:02:54 <SyntaxNinja> (http://regexps.srparish.net/tutorial-tla/development-branches.html#Development_Branches_--_The_star-merge_Style_of_Cooperation)
12:03:50 <kosmikus> I will try
12:03:55 <SyntaxNinja> la star-merge ijones@syntaxpolice.org--2003-haskell/library-infrastructure--main--0.1
12:04:06 <SyntaxNinja> s/la/tla
12:04:13 <SyntaxNinja> btw, - and -- mean different things in tla
13:35:58 <ham[kell]> where were these logos?
13:54:21 <Riastradh> haskell-mode is broken with regard to parentheses in string & character literals.
13:55:15 <ham[kell]> gnight ppl
13:55:25 <ham[kell]> me -> (bed,me)
13:55:34 <Smerdyakov> He always says that.
13:57:08 <Darius> Actually, he used to have me |-> (me,bed)
13:57:47 * Heffalump waves from Venice
13:58:01 * shapr waves from the Arctic Cirlce
13:58:10 <shapr> Heffalump: how do you like Venice? I've heard it's marvelous.
13:58:13 * phubuh waves from the Internet
13:59:56 <Heffalump> yes, it's very nice
14:00:04 <Heffalump> odd having a city with no cars
14:00:29 <shapr> do you have air-filled floating shoes? ;-)
14:00:50 <Heffalump> nope :-0
14:00:55 <Heffalump> s/0/)/
14:02:43 <Matt-W> what about those inflateable plastic shapes yuou can get in side and then tumble over the water like a hamster ball?
14:02:48 <Matt-W> I've always wanted to try one of those
14:03:27 <Heffalump> hmm :-)
14:05:03 <Matt-W> so no then?
14:05:58 <Heffalump> I think not.
14:21:05 <Riastradh> Hrumble.  Why is there no way to dispatch on whether or not a monad returned or failed?
14:23:52 <Darius> mplus
14:24:50 <Riastradh> @type mplus
14:24:54 <Riastradh> Bah!
14:25:31 <Darius> It only works for MonadPlus assuming that 'fail' is more or less mzero.
14:25:33 <SamB> @type Control.Monad.mplus
14:26:27 <Darius> Really, monads don't fail in general, fail is just there to support pattern match failure.  MonadPlus is how you say your computation has an interpretation for failure.
14:30:30 <SamB> Darius: does [a] have an interpretation for failure?
14:30:36 <Darius> Yes.
14:31:07 <Riastradh> The NotJustMaybe wiki page is misleading, then.  It should suggest generalizing to MonadPlus, not Monad.
14:31:09 * SamB would expect it to be more a lack of sucess then a failure
14:31:36 <Darius> What's something that is a lack of success, but not a failure?
14:32:17 <phubuh> not doing anything at all :-)
14:32:23 <SamB> Darius: well, it just means you didn't find what you were looking for in that particular spot?
14:32:28 <Riastradh> mzero also doesn't allow for messages to be passed, as you can do with fail.
14:34:10 <Darius> Many MonadPlus things don't have anyplace to put that message, e.g. fail _ = [] or fail _ = Nothing.
14:34:25 <Darius> SamB: failure /= error
14:34:38 <Riastradh> Yes, but it should still be possible to pass a message.
14:35:46 <Darius> Then use a function that explicitly supports it, e.g. throwError or use error.
14:37:05 <Riastradh> Are there instances 'Monad m => MonadError String m'?
14:37:27 <Darius> You can use ErrorT.
14:37:38 <Riastradh> But I don't want a specific instance.
14:38:18 <Darius> But that isn't a legal instance, though it would be nice to be able to write that (a similar situation is instance Monad m => Functor m where fmap = liftM)
14:39:23 <Riastradh> Gah.  There's no way to have a general failure monad, where the success type is generalized but the failure type is a string?
14:39:50 <SamB> Riastradh: Either?
14:40:02 <Riastradh> SamB, no, that's a specific instance.
14:41:07 <Darius> Riastradh: My whole point is that an instance of MonadError for all monads doesn't make much sense because fail doesn't make much sense.
14:41:25 <Darius> However, there's little point in bothering if you will just use fail anyways, just use fail.
14:42:13 <Riastradh> Darius, you fail to see the point of this.  I want a way that is _generalized_ across any monads that make sense to have distinct successes and failures, but the failures are specified to be strings.
14:43:07 <Darius> Then simply use throwError "foo", the type generated will be MonadError String m => m a, you don't need to fix the monad until the point where you'll need to fix the monad anyways.
14:44:45 <Riastradh> Use 'throwError "foo"' and what type?  MonadError e m => ...m Foo...  (with no e?)
14:46:00 <Darius> I don't understand what you are asking.
14:46:15 <Riastradh> (with no 'e' after the =>?)
14:47:17 <Darius> I believe so, I don't remember exactly how the type looks.  But why ask me, just use the inferred type.
14:53:44 <Riastradh> Ashley Yakeley's code style is rather queer.
14:57:26 <Darius> The not using layout -at all- or the extreme use of typeclasses?
14:59:05 <Riastradh> ...'yes.'
15:18:40 <malik> *** Term           : map (\y -> 1 / fak y) (enumFromTo 0 n)
15:18:40 <malik> *** Type           : [Int]
15:18:47 <malik> could someone explain that to me?
15:19:24 <malik> fak :: Int -> Int
15:20:09 <Cale> (enumFromTo 0 n) :: [Int];  map :: (a->b) -> [a] ->[b]
15:21:14 <malik> but (\y -> 1 / fak y) cannont return a int?
15:21:20 <Cale> no
15:21:31 <Riastradh> @type (/)
15:21:32 <lambdabot> (/) :: Fractional a => a -> a -> a
15:22:23 <malik> why then map returns no list of fractionals?
15:23:37 <Cale> works for me
15:23:53 <malik> hm?
15:24:09 <Cale> map (\y -> 1 / (y+1)) (enumFromTo 0 10) :: forall a. (Enum a, Fractional a) => [a]
15:24:16 <Cale> that's from ghci
15:24:35 <Cale> and the code runs and gives the expected list
15:25:55 <malik> it works when i delete the signatures
15:26:11 <malik> aaahh... i think i got it
15:28:29 <malik> thank you
15:45:59 <Darius> @type div
15:46:00 <lambdabot> div :: Integral a => a -> a -> a
17:19:52 <SyntaxLaptop> Igloo: i'm changing tabs to spaces. i hope you're happy ;)
17:22:15 <Darius> Everyone will be happy.  Tabs are evil.
17:23:17 <SyntaxLaptop> I only hate them because I was mixing tabs w/ spaces (which is even evil to me) if haskell-mode were better, it woudln't boether me.
17:23:19 <Igloo> And there was much rejoicing  :-)
17:23:21 <SyntaxLaptop> why does it bother you?
17:23:25 <SyntaxLaptop> it bloats the diff uuuugh
17:24:38 <Darius> SyntaxLaptop: Tabs weren't born evil.  They've just been corrupted over time.  The problem is that there isn't much agreement about what a tab is (between programs and people).
17:25:13 <Riastradh> Darius, that conjunction needs more convolution: between programs & programs, programs & people, and people & people.
17:27:10 <Darius> Riastradh: That was the intent: (between programs) and (between people) with implicitly people & programs as programs are controlled by people.
17:27:24 <SyntaxLaptop> OK. untablified, logged, commited, mirrored.
17:27:27 <SyntaxLaptop> w0w
17:27:54 <SyntaxLaptop> bye!
18:20:27 <Riastradh> What the heck does '?foo :: bar => ...' mean?
18:27:20 <Darius> It's an implicit parameter.
18:27:27 <Riastradh> ...which is...?
18:27:30 <Darius> A GHC extension.
18:27:34 <Riastradh> Duh.
18:27:38 <Darius> It's a bit like dynamic scoping.
18:27:41 <Riastradh> Please inform me of something I don't know.
18:28:45 <Smerdyakov> Drugs are not cool. Users are losers. Just say NO.
18:28:55 <Darius> NO
18:29:36 <Smerdyakov> Just say /QUIT.
18:31:11 <Darius>  /QUIT
18:33:07 <Riastradh> /QUIT
22:29:29 <shapr> good morning #Haskell!
22:29:35 <Pseudonym> G'day.
22:29:46 <shapr> hey Pseudonym, have you seen the gforge demo site?
22:29:58 <Pseudonym> Just looking through my server logs.  Someone found me by searching for "andrew is a geek".
22:30:09 <Pseudonym> Yes, briefly.
22:31:07 <shapr> think it would be useful for a haskell oriented 'sourceforge' ?
22:31:39 <Pseudonym> Could be.  Personally, I think we're doing okay with the current small number of projects.
22:31:50 <Pseudonym> If more people would realise that it's there. :-)
22:33:03 <Pseudonym> But if we hit critical mass, that might be a very good idea.
22:35:49 <shapr> I've been thinking about the design of a Haskell wikiwiki, what do you think about each page being a dynamically loaded plugin?
22:36:25 <shapr> oh, how's your rigging going?
22:36:30 * isomer is away: zozo
22:36:39 <shapr> isomer: hi!
22:36:42 <Pseudonym> Oh, nothing since the weekend.
22:36:59 <Pseudonym> Each page being a plugin.  That's an intriguing idea.  How would you edit them?
22:37:57 <shapr> I was thinking of the simple wiki markup as a DSL, which compiles to the plugin
22:38:21 <shapr> so when you click edit, you get to the see and edit the 'source'
22:39:21 <shapr> I assume there's a way to only allow wiki markup
22:39:40 <Pseudonym> Intriguing notion.
22:40:37 <Darius> What are some of the things that would be gained from this representation?
22:41:33 <shapr> Darius: I suspect that most wiki implementations render the source into viewable form at runtime
22:41:47 <shapr> also, I think it would be easy to implement with HWS-WP
22:42:48 <shapr> Darius: what do you think?
22:44:49 <Darius> I don't know yet.  What would be something you could do with this that you couldn't do (as easily) with "normal" wikis?
22:45:50 <shapr> nothing that I can think of
22:46:14 <shapr> maybe changing the wiki DSL at runtime
22:46:44 <Darius> Ah, I was thinking from a more user perspective.
22:48:32 <shapr> I don't think it would appear to be different from a 'normal' wiki from a user perspective.
23:09:59 <Pseudonym> It would be slower and harder to lock, I think.
23:29:06 <Pseudonym> Nytol.  Must dash.
23:51:47 * shapr realizes the Open Source community is tightly knit
23:51:53 <andersca> hey hey shapr
23:52:56 <shapr> hej andersca 
23:53:59 <shapr> andersca: I was googling up an interesting person on haskell-cafe and it seems that person's son is vaguely connected to DBUS
23:55:35 <andersca> oh, who?
23:57:07 <shapr> Doug Brown on haskell-cafe, looks like his son is Zach Brown, who seems to be friends with Joe Shaw, Mike Shaver, some other people I vaguely recognize.
23:57:29 <andersca> ah, cool
23:57:38 <andersca> I've heard about Zach Brown but I don't know him
23:57:39 <shapr> you recognize those names?
23:57:45 <andersca> yes
23:57:51 <andersca> mike shaver used to work for netscape
23:58:00 <shapr> looks like Joe Shaw works for ximian?
23:58:00 <andersca> and joe shaw works for ximian
23:58:03 <shapr> yes
23:58:33 <shapr> looks like a lot of open source guys live in the northwest of the USA
23:58:38 <shapr> Portland, Seattle, etc
23:58:57 <andersca> I'm going to fosdem next month
23:59:14 <shapr> where's that?
23:59:30 <andersca> brussels
23:59:35 <shapr> oh, nifty
23:59:45 <andersca> www.fosdem.org for more info
