00:30:07 <_joey> hey
00:31:07 <ski> hi
00:56:17 * Maddas pokes shapr 
00:56:24 <Maddas> IS there any lambdabot package?
00:56:33 <Maddas> Is, even
01:48:17 <shapr> Maddas: http://shapr.homelinux.net/~shae/lambdabot.tar.bz2
01:48:26 <shapr> that's not up to the minute, but it's close.
01:59:52 <Maddas> Thanks
02:27:23 <shapr> argh
02:27:29 <shapr> I think I found another haskellDB bug
02:41:52 <Vincenz> Aloha
04:20:52 <shapr> yeehaa
04:21:22 <shapr> dang, what was I doing?
04:22:11 <Jerub> haskellDB
04:22:15 <shapr> oh yeah
04:22:46 <Jerub> and implementing twisted in haskell.
04:22:50 <shapr> I got a crazy error message, it looks like the last error that turned out to be a bug in HSQL
04:22:54 <shapr> right, exactly.
04:23:11 <shapr> as a arrow/combinator framework.
04:24:28 <Jerub> ;)
05:54:48 <shapr> yow!
05:54:58 <shapr> bonjour ipkiss 
05:57:07 <ipkiss> salut shapr 
05:57:27 <shapr> are you new to Haskell?
05:57:58 <ipkiss> yes, i've just read the "gentle tutorial"
05:58:09 <shapr> do you have questions?
05:58:22 <ipkiss> yes, i am wondering which compiler i should use
05:58:29 <shapr> I would suggest GHC.
05:59:17 <ipkiss> why?
05:59:50 <shapr> GHC is a good compiler, it has the most extensions, it creates standalone binaries.
06:00:07 <shapr> Hugs is an interpreter written in C
06:00:15 <shapr> so Hugs is good if you want to run on resource limited machines.
06:00:23 <shapr> In my opinion, GHC produces better error messages.
06:00:32 <shapr> plus, lambdabot uses GHC
06:00:34 <shapr> @yow
06:00:34 <lambdabot> If a person is FAMOUS in this country, they have to go on the ROAD
06:00:34 <lambdabot>  for MONTHS at a time and have their name misspelled on the SIDE
06:00:34 <lambdabot>  of a GREYHOUND SCENICRUISER!!
06:00:41 <ibid> not nhc for resource-limited machines?
06:00:54 <shapr> nhc is for *very* limited machines.
06:01:01 <ibid> :)
06:01:03 <ipkiss> :)
06:01:07 <shapr> I know there's an nhc runtime in developement for PalmOS
06:01:28 <shapr> Hugs runs on the Sharp Zaurus
06:02:27 <ipkiss> ok, i'll try ghc then
06:05:14 <ipkiss> is nhc written in C too?
06:10:45 <Darius> No
06:21:12 <lzyfn> .away
06:21:18 <lzyfn> sorry
06:26:33 <shapr> @yow
06:26:33 <lambdabot> When this load is DONE I think I'll wash it AGAIN..
06:26:42 <shapr> lambdabot: you must have very dirty clothes.
06:26:42 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
06:57:07 <Vincenz> lambdabot: slap shapr for having you devalue yourself
06:57:08 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
06:57:13 <Vincenz> lambdabot: @listcommands
06:57:14 <lambdabot> I react to the following commands: ["all-dicts","arr","define","definitions","del-definition","det","devils","dict","dict-help","dummy","dump","dynamic-load","dynamic-reload","dynamic-unload","easton","echo","elements","eval","foldoc","fortune","gazetteer","get-definition","goodbye","hello","hitchcock","jargon","join","karma","karma+","karma-","learn","leave","listchans","listcommands","listmodules","lojban","moo","more","msg","part","pre
06:57:25 <Vincenz> lambdabot: karma- shapr
06:57:25 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
06:57:30 <Vincenz> karma- shapr
06:57:36 * Vincenz mutters
06:58:28 <Vincenz> lambdabot: karma-
06:58:29 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
06:59:38 <Vincenz> lambdabot: moo
06:59:38 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
06:59:42 <Vincenz> :sighs
07:39:20 <shapr> @karma- shapr
07:39:20 <lambdabot> You can't change your own karma, silly.
07:43:25 <Lemmih> @karma?
07:43:25 <lambdabot> Sorry, I don't know the command "karma?", try "lambdabot: @listcommands"
10:16:49 <det> @karma- shapr
10:16:49 <lambdabot> shapr's karma has been decremented.
10:17:02 <det> @karma+ shapr
10:17:02 <lambdabot> shapr's karma has been incremented.
10:17:08 <det> @karma shapr
10:17:08 <lambdabot> shapr has a karma of 0
10:17:16 <Vincenz> @karma- shapr
10:17:16 <lambdabot> shapr's karma has been decremented.
10:17:17 <Vincenz> @karma- shapr
10:17:17 <lambdabot> shapr's karma has been decremented.
10:17:25 <Vincenz> @karma shapr
10:17:25 <lambdabot> shapr has a karma of -2
10:17:52 <Vincenz> My my, nothing has happened in this channel for 3 hours
10:18:18 <det> well then
10:19:01 <det> Have you heard about the latest technique for polymorphic balancing of covariant fields!? It promises to speed GHC up to acceptable speeds! really!
10:21:20 <stepcut> det: that just sounds like some sort of geek joke...
10:22:14 <det> I am trying to fill the silence
10:22:20 <det> it seems to be bothering Vincenz 
10:22:50 <Darius> stepcut: Maybe you need to look into the prior research in monomorphic balancing of covariant fields.
10:23:44 <Vincenz> no it's not :P
10:24:22 <det> yes, citeceer is your friend
10:54:03 <stepcut> Darius: well, I quick google search turns up a bunch of articles on evolution and genetics, so now I am convinced its an obscure geek joke
10:55:27 * Marvin-- laughs at det
10:56:50 <Marvin--> I wonder why google suggests changing "monomorphic balancing of covariant fields" to "monomorphic balancing of _covariance_ fields" when that doesn't generate any hits either :-)
11:32:41 <Cale> using mdo with the identity monad seems like a good way to build knotted structures.
11:36:23 <Marvin--> ow :)
11:36:33 <Cale> ow?
11:37:17 <Marvin--> mdo scares me
11:37:36 <Cale> it's nice if you don't think too hard about it
11:42:36 <Cale> basically it allows you to make value recursive definitions in do - I'll paste my doubly linked circular list code to the pastepage
11:44:10 <Cale> there :)
11:45:25 <Cale> might be a little rough still - haven't thought enough about whether there's a better way to express buildCircList
11:45:37 <Cale> but that seems promising to me
11:47:22 <Marvin--> what's the wikiword for the paste page again?
11:47:33 <Cale> http://haskell.org/hawiki/HaskellIrcPastePage
11:47:43 <Marvin--> ah
11:48:43 <Darius> Why not just use let?
11:48:57 <Marvin--> exactly my point
11:50:37 <Cale> It seems somewhat trickier somehow (at least to me)
11:51:26 <Marvin--> eh? how so?
11:51:36 <Marvin--> ll = let n0 = DLNode n3 0 n1
11:51:36 <Marvin-->          n1 = DLNode n0 1 n2
11:51:36 <Marvin-->          n2 = DLNode n1 2 n3
11:51:36 <Marvin-->          n3 = DLNode n2 3 n0
11:51:36 <Marvin-->       in n0
11:52:00 <Marvin--> isn't this exactly what mdo is meant to emulate?
11:52:09 <Cale> hmm...
11:52:50 <Darius> Yes I've updated the page with a version of the build function using let.
11:53:11 <Cale> ah, okay
11:53:41 <Darius> All I did was change '<-' to '=', 'mdo' to 'let' and the final 'return' to 'in' and got rid of the other 'return's
11:56:37 <Cale> okay, nice - thanks :)
12:00:09 <Marvin--> mdo + Identity monad == let(rec), but with mdo you can use other monads as well
12:00:15 <Cale> right
12:01:17 <Marvin--> I guess that would be even clearer if the do rec syntax was used instead of mdo, and there was a difference between let and let rec in Haskell
12:01:18 <Cale> if I wanted to have stateful variables or side effects attached to my list, then perhaps that would be a way to go
12:02:52 <stepcut> arg!!!! /usr/bin/ld: Argument list too long.
12:04:11 <det> mdo ?
12:09:38 <Marvin--> http://www.haskell.org/ghc/docs/latest/html/users_guide/syntax-extns.html#MDO-NOTATION
12:19:21 <Marvin--> my god what an absurd shot
12:19:30 * Marvin-- watches snooker again
15:36:24 <ham[nwn]> hiho
16:01:28 <cybermanco> hi
16:22:37 <carol> trying  to make greencard with ghc-6.2, but I get the following error: /usr/bin/ghc -cpp -fglasgow-exts -fno-prune-tydecls -fvia-C -package lang -package util -c StdDIS.hs -o StdDIS.o
16:22:38 <carol> ghc-6.2: unrecognised flags: -fno-prune-tydecls
16:23:22 <carol> is that a deprecated argument?
17:59:07 <Vincenz> shapr?
21:52:26 <shapr> what?
21:52:53 <shapr> good morning #haskell!
21:53:31 <shapr> how is everyone today?
21:53:40 <shapr> got any cool code in process?
21:53:59 * shapr hears the hiss of empty ether
21:58:52 <stepcut> my hard drive died on my laptop, so I spent most of today bring my freebsd machine up to speed
21:59:13 <shapr> oh
21:59:28 <shapr> I want to install linux 2.6 on my new drive
21:59:43 <shapr> this could be a good opportunity to test the debian-installer betas
22:00:44 <stepcut> I just installed 2.6 too!
22:01:44 <shapr> I would have installed 2.6 before, but maxtor's EZ-BIOS has stolen my boot sector.
22:01:45 <stepcut> fortunately, the drive is not completely dead yet. So if I get a new drive, I can format it and do: 'cp -a /olddrive /newdrive'
22:02:06 <stepcut> I hate maxtors ez-bios
22:02:09 <shapr> me too
22:02:21 <shapr> it was only good for win95
22:02:29 <stepcut> currently, I only buy seagate drives anyway :p
22:03:01 <shapr> my maxtor hardware behaved nicely, just the software I couldn't stand
22:03:06 <stepcut> oh, I found out about Binary.hs today
22:03:20 <shapr> yes, it's neat
22:03:27 <shapr> I wish they'd make a standard release of it.
22:03:55 <stepcut> hal daume III has been working on it for 2 years now :p
22:04:25 <stepcut> http://www.isi.edu/~hdaume/haskell/NewBinary/
22:05:13 <stepcut> I wrote him and asked what's up. I have multiple projects that would benefit from it, so I am willing to help 
22:06:32 <stepcut> I looked into the stuff deser did for parsing binary protocols with template haskell -- that looked interesting too, but is not what I need
22:07:49 <stepcut> so I wrote my own simple state monad binary parser (which is really only 20 lines of code), now my code is much easier to read
22:08:04 <stepcut> except when it comes to bit smashing
22:08:43 <stepcut> compiling ghc with only 128 Megs of RAM, sucks, btw.
22:09:25 <shapr> I am unsurprised.
22:09:56 <stepcut> there is one point where 'ar' is trashing my disk for 10+ minutes, because it needs around 600megs to do whatever its doing
22:10:01 <shapr> yow
22:10:09 <shapr> so, did you get a reply from Hal?
22:10:12 <stepcut> no
22:10:58 <shapr> supposedly the problem is that the GHC-customized version is incompatible with the original nhc version
22:11:07 <shapr> and they don't want to make an official release until they match
22:11:46 <stepcut> interesting
22:12:10 <liiwi> good morning shapr
22:12:11 <shapr> Personally, I just want Binary.hs
22:12:41 <shapr> oh, there's also another Binary.hs that is specifically for serializing that doesn't use Read and Show
22:12:48 <shapr> but that's an entirely different story
22:12:53 <shapr> hei liiwi, wazzup?
22:13:56 <stepcut> shapr: I am looking for the one nhc developed for reading and writing bits
22:14:21 <stepcut> I wonder how the nhc palm pilot port is going (if its going at all)
22:14:31 <Darius> stepcut: I've compiled GHC with 64MB.
22:14:51 <stepcut> Darius: i pity the fool who compile with only 64MB
22:14:54 <Darius> Hat though, I can't compile at all with optimizations.
22:15:18 <shapr> "I pity the fool"
22:15:23 <shapr> stepcut: you must be about my age :-)
22:15:30 <Darius> shapr: Not really.
22:15:43 <stepcut> shapr: :p
22:16:13 <shapr> do they still show reruns of the A-team or something?
22:16:27 <stepcut> I don't think I have ever actually seen the show
22:17:44 <Darius> Actually I think so.  But Mr. T is a cultural icon. (As bizarre as that may sound)
22:20:07 <stepcut> hopefully my laptop will be repaired soon -- in the meantime I will be developing opengl on a 600MHz, 128MB machine with no 3D acceleration :p
22:20:14 <shapr> That is bizarre.
22:22:40 * stepcut goes to bed
22:24:13 <shapr> g'night stepcut 
22:25:37 <Darius> Pssh, try running AVP on a 400MHz 64 (or maybe 128) MB machine with no 3D acceleration.
22:25:44 <shapr> what's AVP?
22:25:54 <Darius> Alien v. Predator
22:25:59 <shapr> oh
22:26:04 <shapr> that doesn't run on Linux
22:26:26 <Darius> Don't worry it doesn't run on my computer for all practical purposes.
22:26:50 <Darius> I'd likely need to measure the framerate in frames per minute to get a value greater than 1.
22:26:56 <shapr> yow
22:35:50 <liiwi> shapr: still playing tribes?
22:41:19 <shapr> mostly enemy territory lately
22:41:28 <shapr> all the 70+ tribes servers went away
