00:46:32 <shapr> yow?
00:48:40 <Heffalump> morning
00:48:50 <shapr> hi Heffalump!
00:48:55 <Heffalump> how hard is installing the Haskell syntax highlighting support in MoinMoin?
00:49:25 <shapr> put syntax.py into /usr/lib/pythonX.X/site-packages/MoinMoin/processor/
00:49:26 <Heffalump> and where's the source?
00:49:39 <shapr> figure out whether your enscript version requires -whtml or -Whtml
00:49:51 <shapr> get rich, retire to jamaica
00:50:08 <Heffalump> so where is syntax.py ?
00:50:24 <shapr> http://shapr.homelinux.net/~shae/syntax.py
00:50:46 <skew> Hi shapr
00:50:51 <shapr> that source is modified from its original
00:50:57 <shapr> greetings skew! wassup?
00:51:11 <shapr> how's life in the big city?
00:51:15 <skew> Hmm. baking meatloaf. doing formal logic.
00:51:39 <shapr> sounds like fun.
00:52:01 <skew> I was thinking about how a Python/Haskell interface would work
00:52:34 <skew> It would depend kind of heavily on being able to repurpose chunks of GHC, I think.
00:52:35 <shapr> Heffalump: also, you could find out all the languages that your enscript supports and put them into the "if type not in" and you'd be able to colorizer a lot more languages, but it just depends on your users.
00:52:45 <shapr> you could just use xml-rpc
00:52:51 <shapr> or steal Vyper and rewrite it for GHC
00:53:37 <skew> Ideally it would be transparent from both sides
00:53:42 <shapr> whatever happened to Max Skaller anyway?
00:53:54 <shapr> skew: what about swigging Haskell code into Python?
00:54:07 <skew> Is there an xml-rpc thing for Haskell?
00:54:09 * shapr doubts that's realistic.
00:54:18 <shapr> sure, I've used it to call into Zope
00:54:27 <shapr> I'm planning on using it to call out of Zope into Haskell too.
00:54:29 <skew> That finds your functions by name, I mean
00:54:33 * Heffalump gets an interesting error
00:54:34 <shapr> yup
00:54:38 <skew> sounds like fun.
00:54:50 <shapr> Heffalump: which version of enscript
00:54:54 <Heffalump> IndexError: list assignment index out of range
00:54:59 <Heffalump> 1.6.3
00:55:14 <shapr>  try changing the case of the -whtml to -Whtml
00:55:23 <Heffalump> ok. I did check the manpage and that said -w
00:55:44 <Heffalump> nope, still broken
00:56:05 <shapr> er, just a moment, I have a work meeting.
00:56:34 <Heffalump> np
00:56:35 <skew> BjÃ¶rns xmlrpc?
00:56:40 <shapr> yes
00:56:46 <shapr> Björn Bringert
00:57:27 <Heffalump> html[0]='<pre class=code>\n' seems to be causing the problem.
00:59:33 <shapr> how do I unpack a deb manually? I need the older darcs binary.
00:59:40 <Heffalump> ar -x
00:59:43 <shapr> tack
00:59:45 <shapr> er, "thanks"
00:59:46 <shapr> sheez
00:59:50 <Heffalump> then untar the data.tar.gz
01:00:01 <shapr> ok
01:04:52 <shapr> so, if this works correctly, part of the europython website will be kept in darcs :-)
01:05:13 <shapr> go go gadget underground!
01:05:54 <shapr> Heffalump: when I get that error, it usually means enscript is unhappy with some of the options, and therefore returned zero output
01:06:07 <Heffalump> ok. I'll test that manually, then
01:06:08 <Heffalump> ta
01:16:18 <Heffalump> it doesn't like either -w or -W, but it does like --language=
01:29:38 <shapr> whatever makes enscript happy
01:30:19 <shapr> I have 1.6.3 and it requires -W and the 1.6.1 on haskell.org requires -w
01:30:22 * shapr shrugs
02:06:38 <skew> I like this xml-rpc library
02:06:57 <shapr> yah, it's cool
02:07:08 <skew> nice use of type classes
02:08:13 * shapr wonders if enscript flipped out and died
02:08:29 <Lunar^> shapr: btw, sebc changed his mind again (that's why it's fun)
02:08:58 <shapr> did you ask him about lazy memory management?
02:09:06 <Lunar^> shapr: Last idea : making a set of combinator to generate assembly code
02:09:32 <Lunar^> shapr: Yes, it only resolve a small point, so it's not that interesting
02:09:34 <shapr> why can't I enscript PreludeExts?
02:10:51 <shapr> Lunar^: sounds interestin
02:11:01 <shapr> sebc code is always fun
02:13:34 <Lunar^> shapr: The idea is to make a super assembly as an Haskell EDSL 
02:24:38 <shapr> sounds good to me
02:24:53 <shapr> as soon as you have enough of the structure together to give the basic idea, I'd like to see it.
02:27:37 <shapr> @yow ! baby YOW!
02:27:38 <lambdabot> MMM-MM!!  So THIS is BIO-NEBULATION!
02:27:55 <shapr> so, any interesting Haskell code going on lately?
02:28:02 <shapr> skew: you should check out HaskellDB, it's spiffy.
02:28:12 <shapr> skew: and darcs too, if you haven't tried it.
02:28:19 <skew> I looked at darcs just a bit
02:28:33 <skew> I was thinking I needed to find a good Haskell DB thing, but I don't remember why
02:28:35 <shapr> oh yeah, did you ever successfully push the change to my wikiwiki repo?
02:28:49 <skew> I think I did. Do you see any epsilons?
02:28:53 <shapr> no?
02:28:59 * shapr checks the mail.log
02:31:00 <shapr> zillions of spammers trying to send through ScannedInAvian.org
02:31:31 <shapr> aha, you did push the patch
02:32:11 <skew> I thought so
02:32:54 <shapr> but it wasn't applied...
02:33:05 <shapr> hmm, something's confused, but I'll fix it later.
02:33:38 <skew> Looks like I need a recent hugs for HaskellDB
02:35:24 <shapr> http://haskelldb.sourceforge.net/
02:35:24 <shapr> that one works with GHC
02:47:07 <Lunar^> shapr: Is HaskellDB able to map a reference to some Haskell constructor ?
02:50:31 <shapr> huh?
02:51:54 <Lunar^> shapr: In Recofax, I wrote some code that use a lookup table to map an Haskell constructor back and forth a database id
02:52:10 <Lunar^> Maybe that's a stupid idea, I still don't know how it's interesting
03:27:30 <skew> why does building the libraries take so long in the GHC build?
03:28:10 <skew> is echo files | xargs ar q libHSBase.a quadradic?
03:42:28 <shapr> Lunar^: HaskellDB treats the database and pieces as a native Haskell type
04:30:20 <shapr> hi themaximus 
04:41:12 <themaximus> hey shapr
04:41:21 <themaximus> Thank You for the kind greeting
04:41:48 <andersca> @arr
04:41:48 <lambdabot> Aye Aye Cap'n
04:44:12 <themaximus> lol
04:44:50 <themaximus> I got disconnected overnite :(
04:46:37 <shapr> does your irc client autoreconnect?
04:49:21 <themaximus> hrm.
04:49:32 <themaximus> I gotta check that option.........
04:49:34 <themaximus> hold on
04:50:16 <themaximus> gawd am I an idot
04:50:19 <themaximus> *idiot
04:50:44 <shapr> it's good to learn new stuff.
04:51:31 <themaximus> no, I knew it was there, I was just too lazy to check it
04:52:09 <Maddas_> erc is quite fun. I wouldn't have thought to say that. :)
04:53:12 <shapr> yah, ERC is nifty.
04:54:20 <shapr> have you tried bitlbee with ERC?
04:54:25 <Maddas_> Nope
04:54:37 <Maddas_> I wanted to try bitlbee with irssi once. But then again, my IM client rocks :-)
04:54:51 <shapr> I like having ERC as my IM client
04:55:00 <shapr> bitlbee doesn't let me do group chats with Jabber though :-(
04:55:08 <shapr> at least, not that I can figure out.
04:55:09 <Maddas_> I think I'll have to get a bit more familiar with ERC
04:55:23 <Maddas_> Is there anything particularily nifty that I should look at (feature-wise)?
04:55:29 <shapr> for ERC?
04:55:32 <Maddas_> Yeah
04:55:41 <shapr> well, I wrote the code for /country :-)
04:55:48 <Maddas_> Heh :-)
04:55:48 * shapr grins
04:55:53 * themaximus goes to play with color in his channel, #wwmax
04:56:01 <shapr> but, self-aggrandizement aside..
04:56:28 <shapr> http://www.scannedinavian.org/~shae/src/elisp/shae-erc.el
04:56:35 <Maddas_> ok :-)
04:56:56 <shapr> I've split my .emacs into pieces for easier management
04:57:02 <Maddas_> Using emacs for IRC makes me feel bad. Now I can't just pretend like everybody who does that is silly and that the whole idea is dumb :-)
04:57:22 <Maddas_> I'm really happy that viper mode works now.
04:57:37 <shapr> I like using M-$ and M-/ in irc
04:57:59 <Maddas_> I hate anything that involves M- because my alt key is very awkward to reach and escape is tiny and awkward to reach.
04:58:07 <Maddas_> But then again, I don't have a Kinesis Ergo yet :-P
04:58:26 <shapr> and I've bound H-f to ffap, and ffap uses browse-url, so H-f in irc will open urls in my existing browser window/tab
04:58:38 <Maddas_> Hah!
04:58:59 <shapr> I think my emacs config is somewhat inveigled.
04:59:05 <Maddas_> Does liking ERC make me a dork? :_)
04:59:34 <shapr> depends on your idea of a dork, I guess.
04:59:50 <Maddas_> hm, more like a hopelessly geek person.
04:59:52 <shapr> the way I see it, the more I can do with emacs, the better I am at writing software, and the more money I can make in shorter time.
05:00:01 <Maddas_> I agree
05:00:09 <shapr> If I have money and free time, I can make my woman happy :-)
05:00:13 <Maddas_> I'm afraid that ERC makes me even less productive :-)
05:00:35 <shapr> that is a downside
05:00:45 <shapr> I've learned that M-x erc-track-disable is often quite necessary.
05:00:45 <Maddas_> (but happy)
05:01:03 <Maddas_> What does it do?
05:01:08 <shapr> are you using erc-track?
05:01:16 <Maddas_> I don't know
05:01:24 <Maddas_> It's my first time using ERC. :-)
05:01:26 <shapr> try M-x erc-track-enable
05:01:28 <shapr> oh, ok
05:01:45 <Maddas_> I only went back to emacs yesterday.
05:02:06 <earthy> erc-track-disable stops displaying changes to the ERC buffer in the status line?
05:02:30 <shapr> (progn (require 'erc-track)(erc-track-enable)) <-- hit C-x C-e there
05:02:42 <shapr> earthy: yes
05:03:03 <Maddas_> ah, I only have two ERC buffers open right now anyway.
05:03:18 * earthy is once again reminded of the sillyness that is emacs
05:03:35 <Maddas_> But then again, it might make me more productive by helping me forget about IRC in the rare times in which I manage to concentrate enough by doing something useful
05:03:41 <shapr> I have 18 ERC buffers open.
05:03:43 <Maddas_> err, to do something useful.
05:03:49 <Maddas_> shapr: haha. 
05:03:59 <Maddas_> shapr: Do you use any buffer thingy? (M-/ is really nice)
05:04:19 <shapr> I use iswitchb with minor modifications
05:04:38 <shapr> or do you mean ibuffer?
05:04:55 <Maddas_> no idea. I'll look at both, I have to customize my emacs more
05:05:14 <Maddas_> Although I am already very happy with Viper and getting the few things to work that I needed (indenting and key-mapping related stuff)
05:05:36 <shapr> I've used xkeycaps to bind Shift_R to F13, and then in emacs I've bound that to iswitchb-buffer
05:06:21 <Maddas> I modified the hardware driver mapping to get caps lock to tabs, I think.
05:06:21 <shapr> and I've modified the iswitchb keymap so that F13 again swaps to the previous buffer
05:06:36 <shapr> and shift-f13 is iswitchb-buffer-other-window
05:06:36 <Maddas_> (I'm not really sure what I did, it's way above my head. But it worked.)
05:07:07 <Maddas_> Ah, right shift, good idea.
05:07:31 <shapr> it's useful me since I've moved Shift to DEL on my kinesis
05:07:35 <shapr> "for me"
05:07:52 <Maddas_> I need to get a kinesis. But for some reason, emacs is quite fine if I don't need to use the very badly placed meta much.
05:08:01 <shapr> what keyboard do you have?
05:08:16 <Maddas_> It's a laptop, 17" PowerBook
05:08:30 <shapr> oh, my kinesis addiction has kept me away from laptops.
05:08:37 <Maddas_> err, 15"
05:08:48 <Maddas_> I don't mind the letters much, control and alt are very very horrible though. Caps lock as control works much better. Except that it locks up sometimes :-)
05:09:10 <shapr> I often wish for a tiny flat or box-shaped PC that I could attach to my kinesis, so that I could have a laptop with a good keyboard.
05:09:18 <Maddas_> Heh.
05:09:33 <Maddas_> And you need a screen. In the end, it'll hardly be smaller than a laptop :)
05:09:42 <shapr> the eyeglass displays are a bit expensive, $1000 USD
05:09:46 <earthy> it won't be smaller than a laptop
05:09:58 <Maddas_> I don't know, but I didn't hear too much good things when it comes to reading small things on those.
05:09:59 <earthy> the kinesis itself is roughly as big as a 12" iBook
05:10:04 <Maddas_> too many, even.
05:10:16 <Maddas_> only? Cool!
05:10:34 <earthy> somewhat wider, slightly less deep
05:10:58 <shapr> Maddas`: http://www.microopticalcorp.com/Products/HomePage.html
05:11:34 <Maddas`> ever tried one? I wish I could :)
05:11:43 <shapr> no, I haven't tried one. I also wish I could.
05:12:11 <shapr> that would be the perfect setup, eyeglass monitor, kinesis keyboard, and tiny PC
05:12:58 <Maddas`> That's even more geekish. Sheesh, IRCing in emacs through your glasses.
05:13:03 * Maddas` dreams
05:13:19 <shapr> oh my, they have a wireless bluetooth display
05:13:32 <Maddas`> yay!
05:13:45 <Maddas`> I wonder if one could remove monitor and keyboard from the powerbook and make it even smaller :-)
05:14:04 <earthy> not really
05:14:15 <shapr> I could keep a decent sized PC in my backpack if the keyboard and monitor were wireless.
05:14:21 <Maddas`> Remove optical drives too, then. Who needs those anyway
05:14:24 * shapr dreams big dreams
05:14:35 <shapr> or at least; small, expensive dreams
05:14:41 <earthy> maddas: battery plus disk take up lots of space. ;)
05:14:48 <Maddas`> earthy: Gnah :-)
05:14:56 <Maddas`> Put an ipod hard disk in then.
05:15:25 <Maddas`> or a microdrive!
05:15:35 <Maddas`> Hrm, actually, a Zaurus might work. Does emacs run on it?
05:15:47 <Maddas`> it does! hah
05:17:12 <Maddas`> I will have to learn some elisp and get an overview over all the commands to make my .emacs perfect. 
05:33:32 <DeezNuts> Anyone know of a good haskell compiler (and hopefully interpreter as well) that is known to work with gentoo-ppc?
05:34:50 <shapr> hugs is written in C, it should work wherever GCC does
05:34:57 <shapr> hugs is an interpreter
05:35:03 <Odiseo> hi there
05:35:08 <shapr> hi Odiseo 
05:35:45 <shapr> DeezNuts: I think ppc debs for GHC exist.
05:35:46 <Igloo> What do I need to do to have a symbol from a C file be global?
05:36:04 <Odiseo> i'm getting an error in my program and i'm clueless about what is it: (instEq_v20_v1429 instEq_v11) <--- it gives me an infinite amount of that
05:36:10 <Maddas`> GHC works on OS X, so it should support PPC at least.
05:36:32 <shapr> Odiseo: something to do with type classes, and to do with the Eq typeclass specifically.
05:36:34 <Odiseo> I'm on hugs98-nov2003 on linux
05:37:45 <Odiseo> shapr, oh, i'm using a function as parameter and i've put the type as (b->Bool) and in the function Int->Bool is it allowed to do that?Cause when I did a->b and in the function the same it complains (I guess cause I return True and False and hugs realize of that)
05:37:54 <Odiseo> how can I do?/
05:39:04 <Odiseo> I mean, to use a->b and stuff
05:39:28 <Odiseo> can I do more than one Eq a=>?
05:41:30 <Odiseo> hello?
05:45:05 <earthy> um, ghc-linux-ppc wasn't exactly trivial, right?
05:45:13 <earthy> even given ghc-darwin-ppc
05:45:19 <Lunar^> Maddas`: It will be even better with the new backend
05:45:30 <Lunar^> earthy: ghc-linux-ppc is still an unregisterised build
05:45:54 <Lunar^> Maddas`: Wolfgang really made great progress
05:48:53 <Odiseo> am I doing a stupid question that's why nobody answer or am wrong in what I'm saying?
05:49:59 <earthy> you could do Eq a, Eq b => a -> b
05:50:17 <earthy> but you're being quite unclear as to what you want
05:50:45 * DeezNuts is hoping to install Helium
05:50:58 <earthy> which version? :)
05:51:36 <Odiseo> Eq a, Eq b says unexpected comma
05:53:31 <DeezNuts> which version of helium?
05:53:44 * earthy nods
05:55:11 <DeezNuts> the latest
05:55:17 <earthy> ah, 1.2.1
05:55:38 <DeezNuts> darn
05:55:53 <DeezNuts> only ebuild i have is for 1.1
05:56:12 <DeezNuts> is it easy to compile and install self-contained in /usr/local?
05:56:23 <DeezNuts> i mean
05:56:27 <DeezNuts> as standalone
05:56:41 <DeezNuts> so it doesn't fling shit all over my filesystem
05:56:54 <earthy> shouldn't be too hard, no
05:57:05 <DeezNuts> well i heard the ghc one was tough
05:57:09 <DeezNuts> why is that?
05:57:25 <DeezNuts> shouldn't it just work if I have all the libs it needs?
05:57:45 <earthy> ghc is a compiler. it wants to place includes in appropriate places and such
05:58:54 <DeezNuts> well thats all good as long as theres an ebuild to uninstall if i want to
05:59:29 <DeezNuts> but you said it 'wasn't exactly trivial' to compile
05:59:29 <earthy> ah, sorry, my bad, odiseo: (Eq a, Eq b) => a -> b
05:59:41 <earthy> deeznuts: on linux ppc
05:59:47 <DeezNuts> thats what im on
05:59:51 <earthy> ah. ;)
06:00:11 <DeezNuts> B)
06:00:18 <earthy> but you have a functioning e-build for helium?
06:00:18 <DeezNuts> so what are the issues with compiling it?
06:00:31 <DeezNuts> i dunno i just installed hugs98
06:00:33 <DeezNuts> now ill try helium
06:00:34 <earthy> well, the issues are with getting it to run reasonably fast.
06:00:44 <earthy> well, building helium requires ghc
06:00:46 <earthy> :)
06:01:30 <DeezNuts> ahh i see heh
06:01:36 <DeezNuts> ghc-bin
06:01:43 <DeezNuts> so if i want helium i need ghc anyway
06:02:12 <DeezNuts> why are ebuilds so dependant on architecture?
06:04:11 <earthy> um, the issue is with ghc being a compiler
06:04:16 <earthy> it has to target the local machine
06:04:20 <earthy> but if it doesn't know how to...
06:04:35 <earthy> (which in the case of GHC is true in a sense for linux-ppc)
06:04:45 <earthy> there is no way to make it target that machine
06:04:49 <shapr> Odiseo: sorry, I'm working, and I only check the channel between bits.
06:05:13 <shapr> Lunar^: ZCatalog is a big useful chunk that we'd have to come up with.
06:06:23 <shapr> Odiseo: add parens around (Eq a,Eq b) =>
06:06:31 <Odiseo> let me see
06:06:50 * DeezNuts is going to manually install the latest hugs98 since theres no ebuild for it
06:06:56 <shapr> greetings andre_ and patanisca, looking for Haskell info?
06:07:20 <DeezNuts> shapr: yes
06:07:38 <Odiseo> doing this:seleccionar::(Eq a, Eq c)=>[a]->[(a,b)]->(b->c)->[a] and it complains with: *** Expected type : (Eq a, Eq b) => [a] -> [(a,c)] -> (c -> b) -> [a] , but what I want it's the former
06:07:45 <shapr> DeezNuts: yes what?
06:08:07 <DeezNuts> shapr: why does Haskell not suck?
06:08:25 <shapr> DeezNuts: because it allows greater pattern recognition and synthesis than any other language I have used.
06:08:32 <patanisca> shapr: no, thanks, just hanging around
06:08:48 <DeezNuts> shapr: hmm im coming from mostly a perl background, do you think i will like haskell?
06:08:49 <shapr> combinators, partial application, monads, higher order everything...
06:08:52 <earthy> odiseo: the types mentioned are identical
06:09:02 <earthy> i.e.: your type error is not in the signature ;)
06:09:08 <earthy> but in the code for seleccionar
06:09:22 <shapr> DeezNuts: I don't see why you wouldn't like Haskell. You like Perl, so you like powerful code.
06:09:23 <Odiseo> ohohohoh, then let me check
06:09:26 <patanisca> DeezNuts: it has perhaps the most elegante syntax i've seen. that counts a bit too
06:09:59 <shapr> yes, I like Haskell's syntax much.
06:10:11 <earthy> haskell sucks. just less than most other languages
06:10:13 <Maddas`> I love the do notation with layout :-)
06:10:20 <shapr> yah, I vote with earthy.
06:10:32 <shapr> much like Linux sucks, just less than anything else I've ever used.
06:10:45 * earthy nods
06:10:53 <shapr> and same for emacs
06:11:01 <earthy> though I must say I'm reasonably partial to MacOS X as well
06:11:04 <Maddas`> I don't think emacs sucks :)
06:11:05 <earthy> and to vim ;)
06:11:09 <DeezNuts> nice
06:11:13 <earthy> emacs sucks eggs through a straw
06:11:23 <DeezNuts> heh
06:11:24 <Maddas`> earthy: I take that as a compliment!
06:11:26 <DeezNuts> funny
06:11:28 <shapr> emacs is the most powerful editor I've ever tried, but I dearly wish it were multithreaded, nonblocking, and had a better extension language than elisp.
06:11:39 * DeezNuts loves linux and perl and hopefully haskell soon
06:11:40 <earthy> there ya go
06:11:41 <Maddas`> ah yes, I don't like elisp too much.
06:11:52 <patanisca> me neither
06:11:53 * DeezNuts is a vim head
06:12:00 <Maddas`> I like vim a lot
06:12:17 <earthy> as long as it lets me do what I want done
06:12:18 <shapr> I don't like vim much. I keep trying to like it, but it just doesn't fit the way I operate.
06:12:26 <kowey> hey Maddas, do you do literate programming with vim?
06:12:31 <Maddas`> literate programming?
06:12:32 <earthy> shapr: I have that with emacs. ;)
06:12:35 <kowey> i have to set my syntax=tex
06:12:38 <patanisca> it think  vim would be perfect if computers had pedals. left one for escape, the right one for insert
06:12:43 <shapr> earthy: yah, we all choose what works for us.
06:12:58 <Maddas`> patanisca: I never found that a problem, caps lock mapped to escape. I like the idea of pedals though
06:13:02 <shapr> patanisca: get a kinesis keyboard with foot pedals and do some remapping!
06:13:10 <Maddas`> woo!
06:13:19 <earthy> anyway, time to make a nice cup of Assam
06:13:19 <Maddas`> Sounds like it would end up being awesome :-)
06:13:27 <Maddas`> earthy: Can I have one too?
06:13:32 <shapr> DeezNuts: here's my Haskell for the impatient: http://www.scannedinavian.org/AvianWiki/HaskellDemo
06:13:41 <earthy> drop by at CGN B026 at cs.uu.nl ;)
06:13:54 <shapr> should be just enough to give you more questions than answers.
06:13:56 <patanisca> perhaps a steering wheel to move the cursor around? ;-)
06:14:12 <Maddas`> Hum. earthy: Just keep a cup warm, I'll pop around in a few years :P
06:14:13 <shapr> and a forcefeedback joystick so you can tell when you're dragging large pieces of text?
06:14:41 <Maddas`> I really like the gestures of the fingerworks keyboards
06:15:03 <shapr> anyways, I'm back to work until I reach another frustration point.
06:15:12 <DeezNuts> shapr: thanks will it work with hugs98?
06:15:19 <Maddas`> I'm back to reading until I get bored.
06:15:24 <Maddas`> Bored. :)
06:22:10 <kowey> ok literate haskell/vimmers, i challenge/beg you to find a better way:
06:22:11 <kowey> http://www.haskell.org/hawiki/LiterateProgramming
06:22:16 <kowey> (section 3.2)
06:22:24 * earthy thinks shaper will like the `canadian seasons': Almost Winter, Winter, Still Winter and Construction'
06:23:06 <earthy> kowey: Igloo's macro's win big
06:24:05 <kowey> hmm... i remember a link, but didn't somebody say that the vim one is an updated version of that?
06:24:06 <earthy> (his stuff scans the first 20 or so lines to find TeX style code
06:24:13 <earthy> kowey: nope
06:24:41 <kowey> ... ooh, sounds interesting... what would might be nice is to have both TeX and haskell highlighted
06:24:45 <earthy> actually, I'm trying to consolidate igloo's stuff with vim's own stuff with don stewarts stuff
06:24:53 <earthy> kowey: igloo's stuff does that already
06:25:20 <kowey> hmm... i suppose you'd have a link or a google clue?
06:25:34 <earthy> http://urchin.earth.li/~ian/vim/
06:26:01 <Igloo> Mine is already based on vim's own, no?
06:27:42 <earthy> Igloo: yes, but still quite a tad different
06:28:06 <Igloo> I thought I just added CPP stuff and changed the -- regexp
06:28:21 <Igloo> Maybe my memory is faulty
06:28:34 <earthy> well... not for lhaskell.vim, you didn't. ;)
06:29:17 <earthy> hm. what to do. read up on Yarrow or hack on haskell.vim and lhaskell.vim
06:29:52 <Igloo> Oh, I don't think the vim lhaskell did much at all when I wrote it
06:31:14 <earthy> it didn't. :)
06:31:31 <earthy> ah heck. goal for today: send off patches to Bram
06:33:12 <earthy> 'kay, your lhaskell.vim is nicer than don's is
06:33:23 * kowey is pleased
06:33:29 <kowey> thanks Igloo and earthy
06:35:45 <Igloo> Thanks  :-)
06:36:07 <earthy> the loop over the first 20 lines is extremely ugly though. :)
06:37:48 <kowey> how about searching for \begin{code}
06:37:50 <kowey> is that any less ugly?
06:38:30 <earthy> nah
06:38:33 <Igloo> General ugliness and not being perfect is oen of the major reasons I didn't get round to sending it off, although in retrospect it would have been better to send what I had back then than for the existing stuff to continue being shipped with vim until now  :-)
06:38:50 <earthy> which is why I'm cleaning it up ;)
06:39:14 <Igloo> What will you rewrite the loop to OOI?
06:39:34 <Igloo> kowey: \begin{code} won't necessarily appear anywhere near the top of the file
06:40:00 <kowey> well... i meant just searching the file
06:40:21 <earthy> nope, I'm going to call vim's built in search function over a range of lines to match the regex you match
06:40:25 <earthy> and see what returns
06:40:55 <Igloo> Ah, cool - I hoped you could do something like that  :-)
06:42:03 <kowey> anyway, i'm searching for \begin instead of \documentclass, since i input my lhs from another file
06:42:28 <earthy> um, yeah
06:42:43 <earthy> I was thinking of searching for \begin{code} actually
06:42:52 <earthy> which is the best indication of TeX style lhs
06:43:23 <Igloo> I often use that in non-TeX lhs files
06:43:41 <earthy> what, you mean bird-style TeX lhs files?
06:43:46 <earthy> or what?
06:44:18 <Igloo> I mean I use \begin{code}/\end{code} to surround code in .lhs files with plain English documentation
06:44:23 <earthy> (would coloring everything outside of \begin{code} and \end{code} as TeX break your usage like that ;))
06:44:53 <Igloo> And colouring it as TeX means it breaks with things like $
06:45:02 * earthy realizes
06:45:42 <Igloo> How about \documentclass|\begin{anything_other_than_code}? Not sure how to ask vim for that precisely, though
06:45:43 <earthy> that is *tough* to do heuristics against though...
06:45:46 * earthy ponders
06:45:57 <Marvin--> couldn't you just have a variable for triggering that?
06:46:13 <earthy> marvin--: ofcourse you want documented variables
06:46:29 <Marvin--> so if the user has a certain variable set in his .vimrc use TeX colouring otherwise leave it alone?
06:46:29 <earthy> but still... the heuristics must let things come out right most of the time
06:47:04 <kowey> a variable might be nice... some people might find the TeX colouring distracting
06:47:05 <Igloo> Marvin: That only works if you always do one or the other; also, it means you can't look at other people's code
06:47:12 <kowey> and prefer that be left in the comment-colour
06:47:23 <Odiseo> if I test for True and I define the type as b, then it's too general for that type isn't?
06:47:40 <Igloo> How about   ^\s*\(%\|\\documentclass\|\\begin{[^c]\)   ?
06:48:00 <Odiseo> that looks like tex
06:48:23 <Igloo> Or   ^\s*\(%\|\\documentclass\|\\begin{[^c]\|\\\(sub\)*section\)
06:50:22 <earthy> sounds almost right, igloo
07:13:30 <Lunar^> http://haskell.org/pipermail/cvs-ghc/2004-February/020001.html
07:13:31 <Lunar^> yeepee
07:18:17 <Odiseo> my type is: selecValidos::[a]->[(a,b)]->[b]->[a] what's the problem with this then:selecValidos [] _ _ = [] ? it complains about different arities
07:18:46 <Marvin--> that line is fine, what's the next line?
07:19:16 <Odiseo> is it possible that the error it's on the next line then?this is the next line: selecValidos (x:xs) ys = seleccionar xs ys esta (this is becoming more gcc each day)
07:19:26 <Odiseo> ouch
07:19:33 <Odiseo> missing a parameter
07:19:35 <Marvin--> yes
07:19:48 <Igloo> artiy = number of arguments
07:19:52 <Odiseo> sorry
07:20:18 <shapr> hej Marvin--, wazzup?
07:20:34 <Marvin--> same as always, trying to work on the report
07:20:43 <Igloo> I thought you'd handed it in?
07:20:52 <Marvin--> no, no
07:21:06 <Marvin--> I attached a draft version to the PhD student application
07:21:14 <Igloo> Ah
07:21:19 <earthy> pfewwww.
07:21:35 <earthy> ^\s*\(%\|\\documentclass\|\\begin{\([^c]\|c[^o]\|co[^d]\|cod[^e]\|code[^}]\)\|\\\(sub\)*section\)
07:21:40 <Marvin--> earthy: eeeevil
07:22:01 * earthy nods
07:22:36 * earthy not really happy with it, even
07:22:44 <Igloo> vim does have non-capturing grouping syntax which might be more efficient
07:22:53 <Igloo> Can't remember what it is OTTOMH though
07:22:56 <earthy> yeah, \%(
07:23:08 <earthy> but I'm still trying to get the grouping correct :))
07:23:36 <Igloo> :-)
07:24:00 <Igloo> That'll give \%(%\ - mmm  :-)
07:24:16 <earthy> I'm going to drop the ^\s* I think :)
07:34:16 * shapr boings happily
07:47:18 <earthy> okay, could people have a look at the vim code I've pasted on http://www.haskell.org/hawiki/HaskellIrcPastePage ?
07:48:22 <earthy> and suggest a preferred style for highlighting if I were to start with an empty .lhs? :)
07:49:02 <Igloo> Why do you differentiate between bird and plain?
07:49:28 <earthy> because the plain style doesn't use birdtracks but \begin{code} and \end{code}
07:49:51 <Igloo> But you can use both in the same file. What do you gain by differentiating?
07:50:33 <kowey> you can use both in the same file? why would you want to do that?
07:50:35 * earthy ponders
07:50:55 <Igloo> Why you would want to isn't relevant
07:50:56 * earthy ponders if he could handle both in the same file
07:51:07 * earthy tried to once, and failed
07:51:19 <Igloo> What's the problem?
07:51:23 <Igloo> I'm sure my stuff does
07:51:39 <earthy> defining the correct begin and end matches for the plain style
07:51:52 <earthy> I'll look into that again.
07:52:13 <Igloo> They're the same for mixed as they are for plain-only
07:54:01 <earthy> hm. I see what you do
07:54:16 <shapr> @arr
07:54:16 <lambdabot> Prelude.(!!): index too large
07:54:21 <shapr> eek!
07:54:41 <Igloo> Oh, BWT, when you send it off I'd suggest setting the maintainer to haskell@ or haskell-cafe@
07:55:00 <earthy> oh, *most* definitely. :)
07:55:39 * Igloo gets very confused by local and global symbols in C
07:55:42 <Riastradh> @arr
07:55:42 <lambdabot> Smartly me lass
07:55:50 <earthy> btw, I now see the difference between your approach and John Williams' approach
07:56:06 <earthy> and I couldn't get it to work using John Williams' approach
07:56:18 <earthy> which is why I made the distinction
07:56:32 <Igloo> Oh, OK
07:56:53 <kowey> sorry for not being to rtfre, but is \begin{\([^c]\|c[^o]\|co[^d]\|cod[^e]\|code[^}]
07:57:01 <kowey> supposed to mean \begin{anything-but-code}?
07:57:14 <Igloo> Yes
07:57:20 <earthy> well, roughly. :)
07:57:23 <earthy> yes. ;)
07:58:06 <kowey> cuz vim doesn't have an anything-but thingy in its patterns... ok
07:58:12 <earthy> ;)
07:58:22 <earthy> (yea, I checked for that ;))
07:58:28 <Igloo> It might do actually - has anyone actually checked?
07:58:30 <Igloo> Ah, OK
07:58:42 <Marvin--> dear god, that's painful
07:58:48 <kowey> there is an as few as possible...
07:59:07 <amb> hi
07:59:11 <shapr> y0
07:59:33 <shapr> gee, Alistair Bayley wants to contribute an Oracle binding to haskell-libs
07:59:35 <shapr> neat
07:59:40 * shapr bounces cheerfully
07:59:51 <Marvin--> wow
08:00:31 <shapr> man, I gotta clean up haskell-libs
08:00:33 <kowey> could you just use vim scripting lang instead of the regex?
08:00:50 <kowey> if we match something and if trying to match the other thing fails, then we succeed?
08:01:18 <earthy> you could do that, but methinks this is more efficient
08:01:22 <shapr> darcs is SO much simpler to use than CVS.
08:02:02 <Igloo> foo\(bar\)\@!           any "foo" not followed by "bar"
08:02:07 <Igloo> Isn't that what you need?
08:02:34 <earthy> ah, waitsec, true
08:02:35 <earthy> hadn't found that
08:05:18 <Marvin--> hrrm, I wonder how much (and what) I should write about denotational semantics in general, and Haskell's denotational semantics in particular
08:05:30 <earthy> so that'd turn it into \%(%\|\\documentclass\|\\begin{\%(\code}\)\@!\|\\\%(sub\)*section\)'
08:05:52 <Igloo> Stray \ before code
08:05:53 <earthy> okay, one \ and one ' too much, but still
08:06:09 <earthy> much nicer. ;)
08:06:54 * kowey cheers
08:07:50 <earthy> pfff.
08:07:56 <earthy> 'kay
08:08:13 <earthy> any ideas as to the default literate variant? plain or tex? :)
08:08:22 <earthy> (plain including birdtracks)
08:09:12 <earthy> (I'm gonna let the highlighting fail on birdtracks in TeX mode by the way)
08:10:08 <Igloo> The only difference is the highlighting of the non-code, right?
08:10:45 <earthy> highlighting of non-code and of code under birdtracks
08:11:04 <Igloo> Why is code under bird tracks not always highlighted?
08:11:16 <earthy> because it is not valid TeX ;)
08:11:27 <Igloo> But it's code!
08:11:37 <earthy> but it'll fail if you TeX the .lhs file
08:12:11 <Igloo> That's not necessarily true, there are TeX libraries that deal with it. But that's not the point, it's code and should be highlighted as such.
08:12:24 <Marvin--> I think it's a big mistake to allow mixing the TeX style and the birdtrack style
08:12:26 <earthy> yes, but what kind of code is it?
08:12:32 <Igloo> Haskell
08:12:45 <earthy> TeX code (and therefore faulty) or Haskell code (and therefore worthy of highlighting?)
08:12:50 <Igloo> I'm really not getting the problem here
08:13:01 <Marvin--> I would've preferred another extension
08:13:11 <earthy> the problem is one of UI
08:13:20 <Marvin--> like .ths or something
08:13:32 <Igloo> GHC, hugs, nhc98 know things starting with > are code, so the highlighter should too
08:13:56 <kowey> i agree with earthy, me the regular joe-vim-using-schmoe, would really rather that my editor tells me when i did something silly
08:14:01 <kowey> even if it is technically allowed
08:14:03 <earthy> but, LaTeX knows that things in \begin{code} and \end{code} is special, but doesn't know that is so for lines starting with >
08:14:38 <earthy> and, if you haven't specified a highlighting mode, and finds TeX markup, I'd like for the highlighter to indicate I might have done something silly
08:14:45 <Igloo> LaTeX doesn't know anything about special \begin{code} and \end{code} without certain packages
08:14:48 <Igloo> Same for >
08:15:04 <earthy> LaTeX knows that it's a special section
08:15:09 <earthy> which it doesn't with >
08:15:16 <earthy> (unless you use advanced trickery)
08:16:04 <earthy> (yes, I could allow birdtracks in TeX highlight mode... that *still* doesn't give me an answer as to whether TeX highlight mode or plain highlight mode should be preferred ;))
08:16:16 <earthy> (if starting to edit an empty .lhs file)
08:16:34 <Igloo> advanced trickery includes using some of the tools for doing Haskell to LaTeX
08:16:48 <earthy> you mean lhs2tex, perchance?
08:17:13 <Igloo> I think that should be overridable by the user in .vimrc. As to the default, no real opinion
08:17:18 <Igloo> Possibly, I can't remember details
08:17:28 <earthy> oh, yeah, ofcourse, it's all overridable
08:17:35 <earthy> I just want sane defaults and sane guesses
08:17:44 <Marvin--> I think non-TeX should be default
08:17:51 <kowey> would a statistical default be good?
08:17:57 <earthy> marvin--: that was my thinking as well
08:18:02 <kowey> i.e. hands up if you use one vs. the other?
08:18:02 <earthy> kowey: statistical default?
08:18:15 <earthy> not in this subset of people ;)
08:18:32 <Igloo> I use both  :-P
08:18:35 <Marvin--> because if you write TeX code in the comments, sure it won't be highlighted and you'll have to change it manually, but at least it won't look as weird as if you're trying to write plain text with TeX highlighting
08:18:52 * earthy nods
08:18:57 <earthy> plain by default it is then
08:19:29 <earthy> (not too bad, if you type TeX, don't set your own override and restart vim on the same file it'll guess TeX and happily highlight)
08:19:48 <earthy> 'kay, time to head home
08:19:53 <Marvin--> you don't even have to restart vim, just doing :e would be enough
08:20:03 <earthy> yeah
08:20:16 <Marvin--> well, :w and :e :)
08:20:19 <earthy> ;)
08:20:30 <earthy> that's almost the same as restarting ;)
08:20:42 <earthy> good, I'll hack on this a bit more.
08:23:44 <kowey> cool! now all we need is a runtime/compiler thingy for ghc
08:23:47 * kowey ducks
08:25:48 <kowey> anyone here named Martin Norbäck?
08:26:24 * Marvin-- points at norpan
08:26:43 <kowey> oh, well norpan, i'm trying out your set errorformat+=%A%f:%l:\ %m,%A%f:%l:,%C%\\s%m,%Z now
08:40:05 * kowey proposes http://www.haskell.org/hawiki/HaskellIrcPastePage
08:40:16 <kowey> .vim/compiler/ghc.vim unless someone else has a better idea
08:44:54 <amb> Hmm, sorry to interrupt you, but do you know any small "programs"(or anything really) I could do for practicing things like map, foldl and so on?
08:45:25 <kowey> Yet Another Haskell Tutorial has some nice exercises
08:45:34 <amb> ok, thanks a lot kowey
08:47:31 <amb> He wants to have the name/email address?!?
08:47:32 <amb> What for? :-/
08:47:53 <Marvin--> I've always complained about that too
08:48:02 <Marvin--> unfortunately, hdaume doesn't seem to be here
08:48:33 <amb> :-/
08:48:48 <shapr> name/email address for what?
08:49:14 <amb> For downloading Yet Another Haskell Tutorial... don't ask me why he needs it though :-/
08:49:28 <shapr> that is surprising.
08:49:41 <shapr> he probably wants to know if anyone's reading it.
08:49:56 <Marvin--> it is still stupid
08:50:10 <shapr> I know he put a lot of time into it, when others (like me) didn't.
08:51:19 <kowey> not that this helps amb any, but
08:51:43 <kowey> the haskell wikibook actually grew! http://wikibooks.org/wiki/Programming:Haskell, as in somebody else edited it
08:57:51 <shapr> hey jao, what's up?
08:58:03 <jao> hey shapr
08:58:18 <jao> re-trying to learn haskell :)
08:58:42 <shapr> hey Jad
08:58:52 <Cale> I can give you a link to that tutorial if you'd like
08:59:07 <Jad> hello guys
09:01:53 <Cale> http://vx.hn.org/autoshare/tutorial.ps
09:02:04 <jao> Cale, sorry... were you talking to me?
09:02:27 <Cale> no, they were complaining about having to sign up to get hdaume's tutorial.
09:02:31 <Cale> So there's a link.
09:02:49 <jao> ah. ok.
09:03:28 <jao> i'll take a look at it, anyway :)
09:09:34 <Jad> bye
09:10:58 <amb> oh, thanks Cale, but I already did sign up, although to say the truth under a fake nick :-/
09:11:01 <amb> *name
09:34:15 <amb> Hmm, is there a better way to do something like this:
09:34:17 <amb> giveback :: Tuple a b c d -> Either (Either a (a,b)) (Either (a,b,c) (a,b,c,d))
09:34:33 <amb> Eihtout defining a Either4 type or something like that?
09:34:45 <amb> *without
09:34:55 <Riastradh> No.
09:35:05 <amb> ok, thanks :-)
10:04:47 <shapr> yow!
10:07:52 <Igloo> Anyone know what time the CVS copy happens?
10:09:44 <shapr> for what?
10:12:18 <Igloo> For the public cvs.haskell.org repo
10:52:32 <esap> hmm.. it seems hawiki supports latex. When did that happen?
11:12:49 <amb> bbiab
12:06:09 <Odiseo> can I paste some code in here?it's short, I don't understand the error quite right
12:07:26 <stepcut> hold on
12:08:06 <Marvin--> use HaskellIrcPastePage on hawiki
12:08:08 <stepcut> http://www.haskell.org/hawiki/HaskellIrcPastePage
12:09:13 <stepcut> syntax highlighting and everything :p
12:12:22 <Odiseo> http://www.haskell.org/hawiki/HaskellIrcPastePage#preview ok
12:12:28 <Odiseo> there
12:12:40 <Odiseo> i'm getting the error on g x y
12:14:17 <Maddas> CoolPops: You might want to look at HaskellDB if you are interested in doing *SQL things.
12:14:50 <Odiseo> can anyone check at the code?
12:14:50 <Marvin--> Odiseo: that's not so strange, the type says that g has type a -> b, and you're using it as if it had type a -> b -> Bool
12:15:04 <CoolPops> Maddas: I will take a peek at it.
12:15:07 <Marvin--> that would unify b with b -> Bool
12:15:48 <bring> CoolPops: if you have any questions about HaskellDB, just come to #haskelldb
12:15:55 <Maddas> I don't know what exactly it is, but shapr seems to think it's good :P
12:16:13 <bring> Maddas: :)
12:17:26 <Odiseo> Marvin--, I got the code and I don't have the type, I was trying with that type
12:17:55 <Marvin--> Odiseo: then don't write the type, start hugs or ghci and type ":t func" ;-)
12:18:36 <Odiseo> damn, didn't knew I could do this, whole new world for odiseo!
12:18:53 <Marvin--> and then make sure you understand the type
12:19:27 <Odiseo> oh this is great
12:19:28 <Odiseo> yes!
12:20:01 <Odiseo> just didn't knew that I could avoid using == True
12:20:38 <Marvin--> well, True has type Bool, right?
12:20:48 <Marvin--> exactly when would   x == True  be equal to  True?
12:21:50 <Odiseo> when x has type bool
12:22:05 <Marvin--> so   False == True  would be equal to  True?
12:22:24 <Odiseo> but what I meant is that I haven't realized I could use | something = return, instead of | something == True or False = return
12:22:41 <Odiseo> that's what I meant
12:22:47 <Marvin--> my point is that guards take expressions of type Bool
12:23:09 <Marvin--> x == True  isn't "more" Bool than just x :)
12:23:24 <Marvin--> heck, why not write  (x == True) == True  ?
12:25:41 <Odiseo> good though
12:26:18 <Odiseo> | ((x==True)==True) == False = notreturn | otherwise = True
12:26:21 <Odiseo> that's good too:)
12:28:18 <Riastradh> How about [[| not ((x == True) == True) == False = True | otherwise = False]]?
12:28:27 <Riastradh> (or whatever the boolean negation function is)
12:29:14 <Odiseo> we could go on and on like the clinton vs britney spears topic the other day
12:29:35 <Marvin--> dear god, no more "vs" topics, please
12:30:44 * Marvin-- watches The Body
12:40:34 <Odiseo> who's body?
12:41:41 <Marvin--> supposedly, Jesus'
12:41:45 <Marvin--> it's a movie
12:48:57 <Odiseo> antonio banderas
12:49:18 <Odiseo> don't worry, at the end it's all a charade
12:49:23 <Odiseo> ups, sorry, spoiler
12:49:36 <Marvin--> heh
12:49:42 <Odiseo> just kidding that's not the end:)
12:49:53 <Marvin--> riiight
12:50:19 <Odiseo> how can I match only two objects? like, (x:y) but no more than that, doing (x:y:[]) seems odd
12:50:41 <Marvin--> well, (x:y:[]) is quite valid
12:50:50 <Marvin--> [x,y]  is syntactic sugar for it
12:51:37 <Odiseo> what do you mean sugar?
12:52:06 <Marvin--> well, the list type has two constructors, [] and (:)
12:52:07 <SyntaxNinja> he means what he said! and don't call him sugar!  ;)
12:52:17 <Marvin--> gee, thank you syntax
12:52:27 <SyntaxNinja> no problem, sugar
12:53:08 <Marvin--> "sugar, sugar..."
12:53:27 <Odiseo> what can I do, I got the way with the ladies
12:53:38 <Marvin--> o.O
12:53:39 <Odiseo> just kidding, and I think marvin it's a dude
12:53:50 <Marvin--> last I looked, anyway
12:55:44 <Odiseo> yea baby
12:56:26 <Odiseo> there's Ord and Eq, what else is it to stablish relations?
13:09:52 <Lunar^> IA32 is awfull
13:09:57 <Lunar^> *sigh*
13:10:49 <Igloo> ?
13:28:40 <shapr> esap: HaWiki got inline LaTeX when I became the HaWiki maintainer, and added the plugin.
13:31:49 <SyntaxNinja> shapr: you are the wiki maintainer now?
13:33:27 <Igloo> So a message to the lists claimed
13:34:12 * SyntaxNinja has some list catching-up to do
13:34:41 * SyntaxNinja reads
13:34:45 * SyntaxNinja high-fives shapr
13:34:52 <Igloo> *nod* - it was only a day or two ago
13:34:53 <SyntaxNinja> (modulo temporal drift)
13:35:58 <Marvin--> to which list?
13:36:13 <Igloo> haskell{,-cafe} IIRC
13:36:19 <Marvin--> ah, right, there it is
13:36:22 <Marvin--> coolies
13:38:19 * shapr grins
13:40:36 <shapr> hej bring 
13:41:13 <bring> hej shapr
13:41:42 <bring> s/hej/hi/ (we're in #haskell :))
13:41:45 <shapr> whoops
13:42:57 <shapr> oh bring, I got an email from Alistair Bayley today, he has an Oracle FFI binding
13:43:07 <bring> cool
13:43:10 <shapr> I was wondering if that would be interesting to the HSQL/HaskellDB projects.
13:43:38 <bring> yes, that would be nice to have in HSQL
13:43:47 <bring> is the code available anywhere?
13:44:56 <shapr> not that I know of
13:45:04 <shapr> but I'll talk to you when I get a copy.
13:45:12 <bring> great
13:46:38 <bring> code anything interesting lately?
13:46:58 <shapr> just reams of for-pay Python
13:48:07 <shapr> I'm off to bed, hopefully I'll have time for some HaskellDB tomorrow morning before work
13:48:13 * shapr forsv... disappears
13:48:26 <bring> good night
14:00:56 <Marvin--> sweet merciful somethingsomething what a crappy ending
14:26:14 <wagle> ?
14:30:18 <Marvin--> I just saw The Body
14:30:40 <Marvin--> good movie, but the ending was disastrous
14:38:26 <wagle> the banderas one?
14:41:13 <Marvin--> yeah
14:46:30 <Odiseo> tony flags
14:46:33 <Odiseo> antonio banderas
15:50:08 <esap> whoa, "semantics functor is left adjoint to the syntax functor" (http://en.wikipedia.org/wiki/Adjoint_functors). Hmm.. how many real programming languages actually have that property?
16:21:47 <Pseudonym> esap: Sorry, I'm only up to chapter three in the category theory book I'm reading at the moment.
16:22:04 <Pseudonym> Let me get my head straight over what you mean by "adjoint functor".
16:22:37 <Pseudonym> In operator calculus, an "adjoint" is an operator which can be moved over to the other side of an inner product.
16:23:02 <Pseudonym> So suppose you have the inner product <A x | y> where x and y are vectors and A is an operator.
16:23:33 <Pseudonym> If there exists an operator A* such that <A x | y> = <x | A* y>, then A* is the adjoint of A.
16:24:00 <Pseudonym> Or we say that A and A* are adjoint operators.
16:24:23 <Odiseo> how can I know in what position I am in a list?
16:24:37 <Pseudonym> Odiseo: What's a "position"?
16:25:30 <Odiseo> like, i'm trying to get the position of the elements 2 and 3 in a list [5,4,3,5,2], I want a list with the position, in this case position [2,3] [5,4,3,5,2] gives [3,5]
16:25:56 <Odiseo> I though about using a variable as a counter but... mmm 
16:25:58 <Pseudonym> Did you mean [5,3]?
16:26:46 <Pseudonym> A counter would work fine.
16:26:54 <Odiseo> but can I do it without a counter?
16:27:20 <Pseudonym> Is that important for some reason?
16:27:34 <Cale> you could use findIndices from the List module
16:28:31 <Pseudonym> Oh, that's true.
16:29:09 <Pseudonym> esap: OK, I think that that statement is actually true of _all_ programming languages.
16:29:29 <Cale> together with elem
16:29:31 <Pseudonym> A programming language is conceptually a set of strings.
16:30:03 <Pseudonym> It's a subset of the free monoid over the source code alphabet.
16:30:40 <Pseudonym> You can think of the front-end of a compiler as the process of removing subsets of the free monoid.
16:31:22 <Pseudonym> Until you get to the subset which actually corresponds to the set of valid programs in that language.
16:31:58 <Pseudonym> To some extent, it doesn't matter how you eliminate the invalid "programs".
16:32:12 <Pseudonym> I think that's the idea behind that statement.
16:32:58 <Pseudonym> Syntax-based analyses attack the problem from one end and semantics-based analyses attack the problem from the other end.
16:34:52 <Odiseo> so there's not an easy way of doing it?
16:40:56 <Pseudonym> Odiseo: Did you look at the findIndices function?
16:41:29 <stepcut> s
16:46:45 <Odiseo> Pseudonym, nop, I'll check that
17:04:06 <`John> http://homepage.mac.com/webmasterkai/kaicurry/gwbush/dishonestdubya.htm
17:10:31 <wagle> or, perhaps http://www.kaicurry.com/gwbush/dishonestdubya.html
17:26:48 <`John> wagle, thats it.
18:35:52 <Cale> Odiseo: yeah, I mentioned that what you're trying to do is solved by findIndices and elem.
18:42:11 <Odiseo> thanks
18:46:04 <Odiseo> doing anything?
18:52:47 <Cale> not much at the moment
19:53:41 <Odiseo> not much action
19:59:16 <Odiseo> is it impossible to know the value without using a counter and without using findIndices and elem?just with recursion I mean?
19:59:27 <Odiseo> I'm trying to find out a way but can't work this out
20:00:31 <Pseudonym> First off, the counter solution would use recursion, surely?
20:01:20 <Pseudonym> Secondly, all solutions use a counter.  findIndices uses a counter internally. :-)
20:01:40 <Pseudonym> There are ways to do it without the counter being obvious, though.
20:01:56 <Odiseo> I've been told that this can be made without any of those and I'm thinking but can't find a way
20:02:05 <Pseudonym> Who told you that?
20:02:53 <Odiseo> a dude I know that does some haskell programming, I've send him an email to see if he can pay the check with his code that his mouth sign:)
20:03:01 <Odiseo> but no news until this moment
20:03:38 <Pseudonym> The thing is, there's almost always goint to be a counter somewhere.  For most of the interesting solutions, you use someone else's counter.
20:03:47 <Pseudonym> Case in point: [1..] uses a counter internally.
20:04:14 <Pseudonym> (Yes, that's a hint.)
20:04:39 <Odiseo> I found the way, it's a counter but without declaring one
20:06:55 <Pseudonym> There's more than one way.
20:07:04 <Pseudonym> As a matter of curiosity, what was your solution?
20:07:26 <Odiseo> posicion::Eq a=>a->[a]->Int
20:07:26 <Odiseo> posicion x (y:ys) | x==y = 1
20:07:26 <Odiseo>                 | otherwise = 1+posicion x ys
20:07:44 <Odiseo> I found this, it's not mine, it's the dude's solution
20:07:50 * Pseudonym nods
20:08:00 <Odiseo> is it stupid?
20:08:18 <Pseudonym> Not completely.  Personally, I'd use accumulator recursion.  (Then it's a counter!)
20:08:22 <Odiseo> maybe I've expressed myself the wrong way when saying not counter at all
20:09:41 <Pseudonym> What happens if the list is empty, BTW?
20:10:05 <Odiseo> error i guess
20:10:15 <Pseudonym> Well what _should_ your code do?
20:11:05 <Odiseo> this is a tiny part, my code receives a list of tuplas conformed by lists, and it compares the lists on the tuplas and return a list of values... the position of the values, hence I've asked how to get the position
20:14:58 <Odiseo> well, have to go now, see ya all tomorrow, good night
21:13:12 <shapr> @yow ! Good Morning!
21:13:13 <lambdabot> I'm thinking about DIGITAL READ-OUT systems and
21:13:13 <lambdabot>  computer-generated IMAGE FORMATIONS..
21:15:16 <Pseudonym> Greetings.
21:16:10 <Riastradh> Pseudonym, why didn't you tell him that he was just using the stack as a counter?
21:16:50 <Pseudonym> I was mostly trying to find out if it was homework.
21:39:03 * shapr yawns
21:39:37 <Pseudonym> We're not that boring, are we?
21:40:40 <shapr> no, I'm just not that awake.
21:40:48 <Pseudonym> Ah.  Well, me too.
21:40:49 <shapr> what's going on Pseudonym? written any new code lately?
21:41:00 <Pseudonym> Toddler + teething = much fatigue.
21:41:00 <shapr> I'm reading about Category Theory right now.
21:41:04 <shapr> http://www.xp123.com/wwake/dissertation/model.shtml
21:41:07 <Pseudonym> Me too, actually.
21:42:01 <Pseudonym> http://citeseer.nj.nec.com/martini96element.html
21:42:09 <shapr> I find that url I just pasted easy to understand.
21:42:29 <Pseudonym> The one I pasted (mentioned on LtU) has many, many examples.
21:42:37 <shapr> oh, that looks nice.
21:42:39 <Pseudonym> Somethign that other category theory texts fail to include, IMO.
21:43:28 <Pseudonym> Oh, interesting.
21:44:59 <shapr> so, unit testing is the second arrow in a commuting diagram?
21:49:10 <Pseudonym> This is a really good page.
21:50:08 <shapr> the url I pasted?
21:50:13 <Pseudonym> Yes.
21:50:48 <shapr> I'm impressed with the application to character sets.
21:53:28 <Pseudonym> Oh, yes.  We deal with MARC here.
21:54:34 <shapr> from this viewpoint, category theory is just really explicit good sense
21:57:55 <Pseudonym> Oh, he's writing a Z39.50 serch system.  No wonder he's working with MARC.
22:00:24 <shapr> I like this: http://xp123.com/xplor/xp0006/index.shtml
22:00:30 <shapr> not, CT, but neat.
22:01:05 <Pseudonym> Oh, yeah, I noticed that.
22:03:23 <shapr> CategoryTheory is punny on TheWiki - http://c2.com/cgi-bin/wiki?CategoryTheory
22:07:58 <DeezNuts> hi
22:18:54 <DeezNuts> what sort of problem-spaces does haskell work best with?
22:19:15 <Pseudonym> Haskell compilers.
22:19:23 <Pseudonym> OK, I'm kidding.
22:19:38 <monotonom> I use it when I can frame a problem in terms of list or tree processing.
22:19:59 <Pseudonym> I find it's especially good for structure manipulation, too.
22:20:16 <DeezNuts> hmm
22:20:23 <Pseudonym> But I've used it for numeric stuff, too.
22:20:24 <DeezNuts> how is it better than perl
22:20:34 <Pseudonym> It's different than Perl.
22:20:37 <DeezNuts> i know
22:20:38 <DeezNuts> but 
22:20:44 <DeezNuts> does it do list/tree processing better than perl?
22:20:49 <Pseudonym> Oh, definitely.
22:20:59 <Pseudonym> Strong types really help with complex data structures.
22:21:16 <DeezNuts> im looking at http://www.haskell.org/tutorial/goodies.html but its not jiving
22:21:22 <DeezNuts> i installed hugs
22:21:29 <Pseudonym> Perl's conflating of scalars with references can get confusing when your structures get complex.
22:21:52 <DeezNuts> and would like a tutorial that sets out a task to solve in haskell and builds a working program
22:22:11 <Pseudonym> Oh, now there's a good idea.
22:22:28 <DeezNuts> is there such a haskell tutorial?
22:23:06 <Pseudonym> For a real beginner, it might not be so useful.  There's a certain amount of groundwork to cover before you get there.
22:23:14 <Pseudonym> If you've never used a functional language before, anyway.
22:23:29 <DeezNuts> i've used scheme
22:23:51 <Pseudonym> Oh, cool, then.  You're half-way there.
22:24:01 <monotonom> Haskell evaluates and creates lists lazily, one item at a time on demand as the processing goes. Perl creates lists first and then processes them. Most algorithms will use O(1) memory in Haskell and O(n) memory in Perl.
22:25:05 <monotonom> Also Haskell has a more complete higher-order library and a better higher-order notation. (Higher-order means extensive, liberal, deliberate use of "sub"s)
22:25:30 <Pseudonym> monotom: Someone who has used scheme probably knows what "higher-order" means.
22:25:53 <monotonom> Yeah I was not catching up :)
22:26:15 <DeezNuts> actually I didn't know what higher-order means but i get it
22:26:28 <DeezNuts> and i know that in scheme your suppose to write many very small subs
22:26:32 <Pseudonym> Ah, OK.  monotom: Scratch that.
22:26:46 <monotonom> And yeah, to hell with the value/pointer/ref complications in C++ and Perl.
22:26:52 <Pseudonym> DeezNuts: The two things you have to get your brain around are lazy evaluation and monads.
22:27:05 <DeezNuts> kew
22:27:13 <Pseudonym> After you've got basic FP worked out.
22:27:14 <DeezNuts> im reading a book on category theory
22:27:24 <DeezNuts> will i be able to do experiments with haskell?
22:27:31 <Pseudonym> Definitely!
22:27:37 <Pseudonym> Haskell _is_ category theory.
22:27:48 <Pseudonym> Incidentally, everyone seems to be reading a book on category theory these days.
22:27:54 <Pseudonym> Is category theory the new Java or something?
22:28:00 * Pseudonym didn't get the memo
22:28:11 <monotonom> You can implement functors and (co)monadic functors in nice notations in Haskell.
22:28:58 <DeezNuts> i guess category theory is a Really Good New Thing in mathematics
22:29:32 <Pseudonym> Or possibly that the hoi polloi have just worked out that it's really useful.
22:29:45 <DeezNuts> its suppose to help us correctly model problems and use the right maths in the right places... i think
22:29:47 <Pseudonym> I include myself in this, naturally.
22:31:01 <DeezNuts> im reading the book as we ..chat
22:31:06 <DeezNuts> just cracking it open
22:31:11 <DeezNuts> not familiar with the terminology yet
22:31:11 <Pseudonym> Which one?
22:31:28 <DeezNuts> Conceptual Mathematics: A first introduction to categories
22:31:35 <DeezNuts> Lawvere, Schanuel
22:31:46 <DeezNuts> Pub. Cambridge
22:32:13 <Pseudonym> http://haskell.org/hawiki/StudyGroup
22:32:19 <DeezNuts> ISBN 0 521 47817 0
22:32:53 <DeezNuts> phat
22:33:22 <Pseudonym> I'm working my way through this first: http://citeseer.nj.nec.com/martini96element.html
22:33:34 <Pseudonym> It's very, very basic stuff, but it's very full of examples.
22:33:52 <Pseudonym> That is helping a lot with the intuition, I think.
22:34:33 <DeezNuts> yeah the book i got is suppose to not require any prereqs in math
22:34:39 * Pseudonym nods
22:34:42 <DeezNuts> i just read the first few pages though
22:35:00 <Pseudonym> Well, you might want to hang around and "join" the study group.
22:35:13 <Pseudonym> The people on the study group list are all here.
22:35:18 <DeezNuts> sounds like they are all much more mathematically experienced than I :)
22:35:26 <Pseudonym> You'd be surprised.
22:35:38 <DeezNuts> heh
22:35:40 <Pseudonym> If you're a computer scientist, you always have _some_ maths.
22:35:44 <DeezNuts> i only went up to calc1
22:35:53 <Pseudonym> Didn't do any abstract algebra?
22:35:59 <DeezNuts> nope
22:36:02 <DeezNuts> i do know about sets
22:36:05 <DeezNuts> very little about groups
22:36:06 * Pseudonym nods
22:36:13 <Pseudonym> Don't know what a monoid is, then?
22:36:16 <DeezNuts> nope
22:36:19 <DeezNuts> but i will
22:36:31 <DeezNuts> a lot of people are really excited over monoids apparently
22:36:44 <Pseudonym> Well, many CS data structures are monoids.
22:37:00 <Pseudonym> Lists, arrays, strings etc.
22:37:24 <DeezNuts> what do those three data types you listed have in common?
22:37:26 <Pseudonym> I find it hard to get excited over monoids, personally.
22:37:53 <Pseudonym> They support concatenation.
22:38:04 <DeezNuts> kew
22:38:11 <DeezNuts> big woop
22:38:20 <Pseudonym> Oh, and they have an empty version.
22:38:29 <Pseudonym> Well, there's method in the madness.
22:38:57 <DeezNuts> heh theres a chapter called 'methods to our madness' in a java book i have
22:39:10 <DeezNuts> its not really about java per se but uses java
22:39:18 <Pseudonym> The idea is that by ignoring the details and focussing on the abstract view, you can find out what's really important for a given operation and what isn't.
22:39:20 <DeezNuts> "A little Java, A few Patterns"
22:39:21 <Pseudonym> Have you used C++?
22:39:24 <DeezNuts> nope
22:39:29 * Pseudonym nods
22:39:34 <DeezNuts> I've written OO in perl (painful)
22:39:36 <Pseudonym> OK, well think about a Java Iterator, then.
22:40:05 <DeezNuts> im not too well versed in java
22:40:12 <DeezNuts> perl would be best
22:40:21 <Pseudonym> OK... think about "foreach" in Perl.
22:40:21 <DeezNuts> but are you saying something like
22:40:24 <DeezNuts> ok
22:40:43 <Pseudonym> The "foreach" operation works on arrays and hashes.
22:41:06 <Pseudonym> Arrays and hashes are different, but "foreach" abstracts away the differences.
22:41:26 <Pseudonym> Because in some situations you only care about what they have in common, i.e., you can access all of the elements in some order.
22:41:43 <DeezNuts> yep
22:41:50 <Pseudonym> Well, abstract algebra is like that.
22:42:02 <Pseudonym> You ignore the details and look at what different objects have in common.
22:42:13 <DeezNuts> i have a book on abstract algebra
22:42:15 <DeezNuts> but its mad old
22:42:17 <DeezNuts> its a dover book
22:42:25 <DeezNuts> "An Introduction to Algebraic Structures"
22:42:34 <DeezNuts> i really hate the format
22:42:36 <Pseudonym> OK, don't know i.
22:42:44 <DeezNuts> you know those very terse math books
22:42:47 <DeezNuts> no pictures
22:42:48 <Pseudonym> But there are a lot of bad books on abstract algebra out there.
22:42:57 <DeezNuts> ya
22:43:06 <DeezNuts> is category theory considered part of abstract algebra?
22:43:17 <DeezNuts> is it ok to study it before going in depth with abstract algebra?
22:43:22 <Pseudonym> Kind of.  Category theory is actually one step further up.
22:43:51 <Pseudonym> I think that'd be okay, if your textbook is fine with it.
22:43:51 <DeezNuts> then why do you say kind of?
22:44:02 <DeezNuts> i think this one is suppose to be
22:44:04 <Pseudonym> You asked: is category theory considered part of abstract algebra?
22:44:09 <Pseudonym> Answer: Kind of.
22:44:12 <DeezNuts> ohh ok
22:44:23 <DeezNuts> sorry got it :) I should ask one at a time heh
22:44:26 <Pseudonym> :-)
22:44:38 <DeezNuts> so how far are you in your mathematical adventures?
22:44:41 <Pseudonym> See, most CT books I've seen so far use a lot of abstract algebra as examples.
22:44:56 <Pseudonym> Uhm... pretty far.
22:44:57 <DeezNuts> i think this book introduces the necessary concepts
22:45:01 <DeezNuts> i flipped through it
22:45:09 <DeezNuts> and it looks a lot like the abstract algebra book
22:45:24 <DeezNuts> as far as the sorts of syntax and diagrams used
22:45:43 <Pseudonym> Well, of course, category theory has its own diagrams.
22:46:02 <DeezNuts> so its just similar in appearence but not semantically?
22:46:15 <Pseudonym> So tell me.  What gave you the proverbial wild hair to learn about category theory?
22:46:26 <DeezNuts> well when i go to the bookstore
22:46:31 <DeezNuts> i usually just poke around the math section for fun
22:46:37 <Pseudonym> Fairy nuff.
22:46:45 <DeezNuts> and i saw this book and it looked interesting :)
22:46:49 <DeezNuts> heh
22:46:55 <DeezNuts> man
22:47:00 <Pseudonym> You have an odd sense of fun.  Good human.  You're in good company here.
22:47:20 <DeezNuts> heh thanks :)
22:47:27 <DeezNuts> i usually bite off a bit more than i can chew though
22:47:35 <DeezNuts> compulsive and idealistic
22:47:46 <DeezNuts> so i lack long-term commitment and stuff
22:47:51 <DeezNuts> cuz i get frustrated that it takes so long
22:47:57 <DeezNuts> (ADD doesn't help)
22:48:13 <DeezNuts> like i'll always come back to a subject
22:48:17 <Pseudonym> To answer your previous question... category theory is one step further up from abstract algebra, in the sense that all of the interesting algebraic structures are categories.
22:48:19 <DeezNuts> but i have to relearn it agani and again
22:48:29 <Pseudonym> But other things are categories too.
22:48:45 <Pseudonym> A lot of the CT books I've glanced at are all about topology, for example.
22:48:52 * Pseudonym has pretty much no interest in topology... yet
22:48:55 <DeezNuts> so conceptually CT describes things at a higher level?
22:49:00 <Pseudonym> Yes.
22:49:05 <Pseudonym> That's a fair way to put it.
22:49:17 <Pseudonym> See... OK.  History of maths time.
22:49:24 <DeezNuts> hmm then i would imagine it would be the preferred area to learn before any others
22:49:28 <DeezNuts> heh kew
22:49:30 <DeezNuts> im all ears
22:49:39 <Pseudonym> The 20th century was all about the limits of maths.
22:49:54 <Pseudonym> People were working out what you can actually do with maths and what you can't.
22:50:12 <Pseudonym> The 21st century will be about unifying maths.
22:50:54 <Pseudonym> Mathematicians have already discovered that some quite disparate fields are actually connected.  Or the same.
22:51:05 <DeezNuts> thank god
22:51:13 <DeezNuts> lol
22:51:25 <Pseudonym> The Taniyama-Shimura conjecture, proved by Andrew Wiles, is a good example.
22:51:56 <Pseudonym> Basically, the proof was that the fields of elliptic curves and modular forms are the same fiwld, pretty much.
22:52:01 <Pseudonym> s/fiwld/field/
22:52:42 <Pseudonym> I (possibly incorrectly) see CT as a tool for handling this kind of thing at a high level.
22:53:03 <Pseudonym> Looking at, say, differential geometry and logic and asking "what do these fields have in common?"
22:54:06 <DeezNuts> sounds like what i've heard others describe CT as
22:54:13 * Pseudonym nods
22:54:37 <DeezNuts> would CT help in modelling and simulation?
22:55:06 <Pseudonym> Hard question to answer.  Let me finish this book then I'll let you know. :-)
22:55:20 <shapr> DeezNuts: ritalin helps :-)
22:55:30 <DeezNuts> shapr: so does adderall ;)
22:55:38 <DeezNuts> shapr: helps but doesn't "cure"
22:55:47 <Pseudonym> Cutting out caffeine may help, too.
22:55:47 <shapr> I didn't like ADDerall
22:55:57 <DeezNuts> cutting OUT caffeine??
22:56:04 <shapr> yes, really
22:56:05 <DeezNuts> shapr: i didn't like ritalin heh
22:56:07 <Pseudonym> Yes, it really helped a friend of mine.
22:56:11 <DeezNuts> hmm
22:56:17 <DeezNuts> i didn't know it exasperated add
22:56:17 <shapr> I didn't like dextroamphetamines, too many side-effects.
22:56:26 <Pseudonym> For another friend, cannabis helps.  Not that I'd encourage anyone to break the law.
22:56:38 <DeezNuts> shapr: yeah i dont like the side-effects either but i really do like the strong effect of adderall
22:56:50 <DeezNuts> Pseudonym: i smoke :)
22:56:56 <shapr> DeezNuts: in my experience, it's more about not mixing methylphenidate or dextroamphetamines with caffeine
22:57:09 <DeezNuts> Pseudonym: and it does help a lot :) unless I get too stoned
22:57:13 <shapr> adderall is a combination of salts of methylphenidate and dextroamphetamines
22:57:30 <shapr> the salts take longer for your body to metabolize, that's how you get the time release effect.
22:57:46 <DeezNuts> i dont have the XR
22:57:48 <DeezNuts> just the regular
22:58:07 <DeezNuts> generic too :p i used to be able to get the brand-name which has the dual-salts
22:58:13 <shapr> the dextroamphetamine spansules have a similar effect, but they achieve it via alternating layers of protective coating and drug doses.
22:58:29 <shapr> gee, maybe we should start #add :-)
22:58:36 <DeezNuts> yeah :)
22:58:43 <DeezNuts> it would be nice actually
22:58:49 <Pseudonym> shapr: Everyone would forget to maintain it.
22:58:51 <DeezNuts> trade tips and stuff
22:58:52 <DeezNuts> lol
22:58:56 * shapr grins
22:59:02 <DeezNuts> nah we would keep it new and fresh ;-)
22:59:08 <shapr> if we could remember to
22:59:12 <Pseudonym> Oooh!  Look!  A new channel!
22:59:13 <DeezNuts> lol
22:59:15 <DeezNuts> hehe
22:59:17 <DeezNuts> damnit
22:59:46 <DeezNuts> so what about caffeine though??
22:59:52 <DeezNuts> why should I not have it?
22:59:58 <DeezNuts> cuz right now i have plenty heh
23:00:20 <shapr> me too, but if you want the best effect, don't use much caffeine with ritalin or dex
23:00:31 <SamB> what is to remember? I guess we would need to remember to look at IRC
23:00:50 * DeezNuts roots, another player on the team heh
23:00:59 <shapr> my doc in Birmingham said that, and it's true according to my personal experience.
23:01:01 <DeezNuts> shapr: i'll try it and see
23:01:24 <DeezNuts> shapr: do you know of any long-term treatments?
23:01:33 <shapr> yah, build sane habits.
23:01:44 <DeezNuts> shapr: I heard of EEG/psychometrics being used to train ADD heads
23:01:46 <shapr> buy a Palm pilot, synchronize it with your computer
23:02:19 <shapr> I would be surprised if it can be treated with anything other than gene therapy
23:02:28 <shapr> anyways, if I'm not close to a deadline, I like being this way.
23:02:58 <shapr> much entertainment at parties :-)
23:03:22 <shapr> where are you in meatspace? USA?
23:03:40 <SamB> shapr: Pilot is b0rk! need new usb drivers on pilot!
23:03:56 <shapr> I have a IIIc, it works well enough.
23:04:01 <DeezNuts> ya
23:04:04 <DeezNuts> near boston
23:04:05 <SamB> that is to say, the only software that I can get to talk to it is pilot-link
23:04:07 <shapr> I do wish it would auto-sync when I plug it in to charge.
23:04:26 <shapr> I often forget to start up pilot-manager and hit the button to do the sync
23:04:32 <DeezNuts> shapr: just curious, how far have you gotten in math so far and how long has it taken you?
23:04:48 <shapr> DeezNuts: I passed a calculus course on the third try
23:05:12 <shapr> but I've also recently gotten interested in math for the first time
23:05:22 <shapr> and suddenly, it's a lot easier to learn.
23:05:35 <DeezNuts> shapr: hmm, i passed calc1 on first try (i happened to find the wonders of adderall right before the class started) but i have to go back and relearn it all since i took too long a break from math :(
23:05:58 <DeezNuts> yeah i only really got interested at a certain point after highschool
23:05:58 <shapr> I only got meds a few years back, I haven't taken any college courses since then.
23:06:09 <shapr> I got meds in 99, I think.
23:06:11 <DeezNuts> ahh
23:06:19 <DeezNuts> yeah i've only had them for about a year
23:06:25 <shapr> my last college course was in ... 95? 96?
23:06:30 <DeezNuts> damn
23:06:34 <DeezNuts> see thats what i fear
23:06:37 <DeezNuts> i took two courses
23:06:39 <DeezNuts> and im 22
23:06:47 <shapr> I got ten years on ya
23:06:53 <DeezNuts> i neeed to f*ing slam college :(
23:06:58 <DeezNuts> did u get a 4-year degree?
23:07:06 <SamB> shapr: mine is a Zire 71, which only connects to the USB bus when you press the hotsync button...
23:07:21 <shapr> and I've discovered that a college degree is nice for a resume, but it doesn't necessarily help you learn.
23:07:30 <shapr> nah, many years of college but no degree.
23:08:01 <Pseudonym> I found that university gave me the time to learn.
23:08:07 <shapr> I do have credits in archeology, art history, paleontology, drawing, watercolor, computer science, etc
23:08:10 <Pseudonym> I wasn't so busy.
23:08:14 <DeezNuts> yeah i do a lot of self-study but the resume thing is very important since that determines how much u get paid even if u do get hired at the job u want and usually just outright determines which jobs u can get
23:08:22 <SamB> I specialize in learning. that is what homeschooling is all about
23:08:29 <DeezNuts> Pseudonym: do you mean ur parents? ;-)
23:08:34 <shapr> I'm addicted to learning.
23:08:38 <DeezNuts> me too
23:08:39 <shapr> SamB: how old are you?
23:08:39 <DeezNuts> heh
23:08:50 <shapr> everyone knows I'm 100,000 in binary :-)
23:08:51 <DeezNuts> just wish i didn't have to frikn' work fulltime
23:09:00 <shapr> I'm self-employed
23:09:05 <SamB> shapr: hmm, 17 ;-)
23:09:07 <DeezNuts> how is that working out for ya
23:09:17 <Pseudonym> I work for The Man.
23:09:25 <shapr> actually, the best kept secret I have is that my woman is really organized :-)
23:09:29 <DeezNuts> The Man?
23:09:33 <shapr> I'd never get anything done without her.
23:09:38 <DeezNuts> heh same here
23:09:40 <Pseudonym> Yeah.  Defence contractor.
23:09:44 <DeezNuts> ewww
23:09:50 <DeezNuts> sorry Pseudonym
23:09:54 <DeezNuts> :(
23:09:57 <Pseudonym> That's not all we do, of course, but still.
23:09:57 <shapr> SamB: you're doing homeschooling?
23:10:00 <SamB> shapr: don't the commas go every *fourth* bit?
23:10:18 <DeezNuts> Pseudonym: do you have anything of a moral dillema?
23:10:22 <SamB> shapr: yeah
23:10:39 <Pseudonym> DeezNuts: Occasionally, but our stuff is used for both niceness and evil.
23:10:51 <SamB> oh, that reminds me, I have reading to do, so I better go to bed now ;-)
23:11:02 <DeezNuts> Pseudonym: u work for the US?
23:11:15 <Pseudonym> No.  I'm an Australian.
23:11:20 <DeezNuts> same diff
23:11:22 <DeezNuts> ;)
23:11:26 * DeezNuts jabs Pseudonym
23:11:47 <Pseudonym> Australia is not the same as the US.  Please.
23:11:49 <DeezNuts> i hear that au's current pm is bending over for gw in general
23:11:53 <Pseudonym> Australia is the US' doormat.  Everyone knows that.
23:11:56 <DeezNuts> lol
23:11:57 <DeezNuts> yeah
23:12:01 <DeezNuts> thats what i meant
23:12:18 <DeezNuts> whats up with that it makes me sad :(
23:12:23 <SamB> Pseudonym: wouldn't the feet get all muddy again before the people got inside with a doormat so far away?
23:12:36 <DeezNuts> i read about a lot of laws being passed in au that are directly influenced by the us
23:12:37 <Pseudonym> Oh, now there's a thought.
23:13:18 <Pseudonym> One of my favourite W quotes is that Australia "is a bit like Texas".
23:13:20 <Pseudonym> Gee, thanks.
23:13:23 <DeezNuts> lol
23:13:28 <DeezNuts> W's an asshole
23:13:30 <Pseudonym> We should make that our motto.
23:13:33 <DeezNuts> i can't wait till november
23:13:37 <Pseudonym> Australia: It's a bit like Texas.
23:13:40 <DeezNuts> either way i will cry
23:13:52 <Pseudonym> We have an election due soon, too.
23:13:56 <DeezNuts> but im pretty sure Kerry's gonna win it
23:13:56 <Pseudonym> SOme time this year.
23:14:00 <Pseudonym> Not sure when.
23:14:01 <SamB> Pseudonym: ha, I think you should have "W is an idiot" as your motto
23:14:12 <Pseudonym> SamB: Everyone should have that as their motto.
23:14:19 <DeezNuts> Pseudonym: are people getting fed up with the right-wing bs in au?
23:14:34 <DeezNuts> SamB: in the US the motto is now 'anyone but bush'
23:14:46 <Pseudonym> OK, the first thing you have to realise is that "right wing" doesn't mean the same thing.
23:15:05 <Pseudonym> Remember that Tony Blair, another US lap-dog, is from the Labor party.
23:15:11 <Pseudonym> Supposedly the party of the trade unions etc.
23:15:22 <DeezNuts> yeah but his policy is malaligned
23:15:29 <SamB> I think everything is too confused for "left" and "right" to be usefull political terms at this point
23:15:37 <Pseudonym> Yes.  My point is that it's not a "right wing" problem.
23:15:52 <DeezNuts> "the right" is a general direction
23:16:01 <DeezNuts> towards hardline politics
23:16:04 <shapr> so, any other darcs users here? :-)
23:16:07 <Pseudonym> Australia is pretty fed up with Howard though, yes.
23:16:11 <DeezNuts> and picking on the populous's prejudice and fears
23:16:12 <SamB> that is to say, I don't think everyone is necessarily pointed in the same direction
23:16:15 <shapr> I haven't tried cvsps yet.
23:16:22 <Pseudonym> The leader of the opposition, Mark Latham... now there's a real statesman.
23:16:33 <Pseudonym> He referred to Howard as, and I quote, "an arselicker".
23:16:36 <shapr> I'm a Finite Statesman.
23:16:38 <DeezNuts> lol
23:16:39 <DeezNuts> nice
23:16:53 <Pseudonym> I challenge your politicians to say that in public.
23:17:48 <DeezNuts> please dont it would automatically discredit whoever says it :p
23:18:01 <DeezNuts> and that would suck if whoever says it would be a Finite Statesman
23:18:12 <DeezNuts> ppl here are way too uptight
23:18:12 <SamB> I want a complex statesman, or at least an imaginary one
23:18:25 <DeezNuts> (and hypocritical)
23:18:44 <Pseudonym> In Australia you can say words like "arselicker" and get away with it.
23:19:02 <DeezNuts> i think most ppl who voted for bush voted on one issue, pro-life vs. pro-choice... i tend towards pro-life but i would never vote for a republican bastard
23:19:48 <Pseudonym> It's past my hometime, so I must away.  Nytol.
23:19:59 <shapr> cya
23:20:01 <DeezNuts> goodnight Pseudonym
23:20:06 <SamB> I don't really think there is much chance of stopping abortion, regardless, and there are certainly more important issues
23:20:08 <DeezNuts> i as well must leave so i can actually study this book heh
23:20:17 <DeezNuts> ttyl all
23:23:53 <DeezNuts> damnit
23:23:54 <DeezNuts> im back
23:24:00 <DeezNuts> cuz hugs isn't giving me love
23:24:33 <DeezNuts> im trying to just copy and paste code from http://www.haskell.org/tutorial/goodies.html into the hugs interpreter (at the Prelude prompt)
23:24:35 <DeezNuts> and nothing works
23:26:12 <cptchaos> what exactly does not work?
23:27:11 <DeezNuts> for example
23:27:11 <DeezNuts> data Color = Red | Green | Blue | Indigo | Violet
23:27:32 <DeezNuts> ERROR - Syntax error in expression (unexpected keyword "data")
23:27:47 <DeezNuts> Prelude> :version
23:27:48 <DeezNuts> -- Hugs Version November 2003
23:27:59 <DeezNuts> any ideas?
23:28:11 <cptchaos> I am not sure, but I think that hugs can only evalute expressions
23:28:23 <DeezNuts> thats not an expression?
23:28:40 <cptchaos> it is a abstract type declaration
23:29:20 <cptchaos> expression are somthing like (1+2) or   head (xs++ys)
23:29:51 <DeezNuts> damn
23:29:53 <DeezNuts> thats worthless
23:30:03 <DeezNuts> i want to learn haskell
23:30:14 <DeezNuts> :(
23:30:15 <cptchaos> make an file and load it with hugs, than you can play with your own datatypes
23:30:25 <DeezNuts> ahh ok
23:30:40 <DeezNuts> can I run haskell programs the same way I run shell scripts?
23:31:00 <DeezNuts> (ie, by adding #!/path/to/haskell as the first line of the file)
23:31:24 <cptchaos> if your environment EDITOR is set to something reasonable, you can use the command :editor inside hugs, to edit the file
23:31:33 <cptchaos> it gets reloaded afterwards
23:31:54 <DeezNuts> can I run haskell programs the same way I run shell scripts?
23:32:11 <cptchaos> hm, never tried, but I guess not
23:32:20 <DeezNuts> im gonna look into ghc
23:32:23 <cptchaos> but you could compile them
23:32:23 <Cale> You normally compile haskell programs
23:32:28 <Cale> ghc is nice
23:32:40 <Cale> I use ghci for interactive stuff, and ghc to compile.
23:32:40 <DeezNuts> Cale: i hear ghc is for some reason unstable on non-x86 platforms
23:32:55 <Cale> hmm, I've never tried it there, so I'm not sure.
23:33:05 <Cale> Still, give it a shot.
23:33:06 <DeezNuts> Cale: can u think of any reasons why it would be?
23:33:09 <Riastradh> GHC works fine for me on a PPC.
23:33:09 <DeezNuts> k
23:33:15 <DeezNuts> Riastradh: kew which distro?
23:33:20 <Riastradh> ?
23:33:45 <Cale> DeezNuts: Riastradh is a MacOS user?
23:34:01 <Cale> no
23:34:03 <Cale> :)
23:34:06 <DeezNuts> ohh
23:34:09 <DeezNuts> sorry
23:34:12 <DeezNuts> i meant linux-ppc
23:34:16 * DeezNuts is using gentoo
23:34:28 <DeezNuts> i have os x but i only boot to it to play games and watch movies
23:34:40 <Cale> I'm not sure now, apparently Riastradh is also running linux-ppc. (by VERSION)
23:34:42 <DeezNuts> and os x can't read ext3
23:34:51 <DeezNuts> Riastradh: yo
23:34:54 <Cale> Well, try ghc out anyway
23:34:56 <Riastradh> No, I'm using OS X.
23:35:00 <DeezNuts> oh ok
23:35:07 <Riastradh> The box from which I'm running irssi happens to run MkLinux.
23:35:14 <Cale> ah
23:35:18 <DeezNuts> im going to have to compile ghc manually
23:35:25 <DeezNuts> anyone know of any gotchas?
23:35:43 <Cale> well, it takes a while.
23:37:36 <DeezNuts> actually
23:37:42 <Cale> http://www.haskell.org/ghc/dist/5.04.3/ghc-5.04.3-powerpc-unknown-linux.tar.bz2
23:37:48 <DeezNuts> i would have to personally port it to my distro
23:37:50 <DeezNuts> hmm
23:37:54 <DeezNuts> isn't that a mad old version
23:37:56 <Cale> get that first - it will make the whole process a lot easier
23:38:09 <DeezNuts> oh k
23:38:16 <DeezNuts> im gonna have to set aside some time for all this
23:38:17 <Cale> then compile the latest one
23:38:24 <Cale> (ghc is written in Haskell)
23:38:55 <DeezNuts> yeah
23:38:56 <DeezNuts> bad move
23:39:00 <DeezNuts> :p
23:39:12 <Cale> no, most compilers are written in the language they compile to
23:39:25 <Cale> I mean from
23:39:27 <DeezNuts> like perl or java? :p
23:39:27 <Cale> heh
23:39:38 <DeezNuts> i can understand C having that requirement
23:39:54 <Riastradh> Why is C special?
23:40:28 <DeezNuts> Riastradh: most os kernels and system utilities, etc, are written in C
23:40:45 <Riastradh> And...what does this have to do with what language a compiler is written in?
23:40:46 <Cale> It's good to have your compiler written in the language that it compiles. Then you just have to bootstrap it once per platform.
23:41:12 <DeezNuts> Riastradh: im not sure, your right i take it back
23:41:29 <DeezNuts> Cale: well evidently its not making things easier for people on minority platforms :p
23:41:35 <DeezNuts> ill stop bitching and try to get it work later though
23:41:53 <Cale> They really should update the linux-powerpc package there.
23:42:12 <Cale> Perhaps if you build it, you should let someone know, so that they can put up a package.
23:42:20 <Riastradh> You said you have OS X, didn't you?
23:43:12 <DeezNuts> Riastradh: ya
23:43:39 <DeezNuts> Cale: yeah gotta learn the gentoo e-build system as well if i want to do that... 
23:43:57 * DeezNuts wishes he didn't have to work full-time :(
23:44:01 <Cale> I mean, just a straight binary distribution to the GHC folks.
23:44:17 <Riastradh> You could get the binary distribution for that, and I'm sure you could figure something out with that.
23:44:30 <DeezNuts> i would probably do a lot more of these kinds of things but as it stands now i don't have too much time to dick around with getting apps to work
23:44:49 <DeezNuts> Riastradh: yeah but i dont want to boot to os x just to use haskell
23:45:32 <Riastradh> DeezNuts, I meant about compiling it for gentoo with the OS X distribution.
23:45:55 <DeezNuts> you think that would make things easier??
23:46:18 <Cale> System types:
23:46:18 <Cale>   --build=BUILD     configure for building on BUILD [guessed]
23:46:18 <Cale>   --host=HOST       cross-compile to build programs to run on HOST [BUILD]
23:46:18 <Cale>   --target=TARGET   configure for building compilers for TARGET [HOST]
23:46:25 <Cale> (from configure)
23:46:38 <DeezNuts> i dont think it will have flags specific to gentoo
23:46:41 <DeezNuts> :p
23:46:46 <Cale> you'd want --target
23:47:11 <DeezNuts> if its really that simple why hasn't it already been done?
23:48:15 <Riastradh> Not enough gentoo users care, perhaps?
23:48:32 <DeezNuts> nah
23:48:35 <DeezNuts> not if its that easy
23:48:36 <Riastradh> (where 'not enough' is somewhere around, oh, 0)
23:48:48 <DeezNuts> there are plenty of other low-frequency apps ported to ppc
23:48:51 <Riastradh> Anyhow, I really ought to get to bed.
23:49:02 <DeezNuts> i think it has to do with the pain in the ass it is to do it :p
23:49:03 <DeezNuts> goodnight
23:49:09 <DeezNuts> btw what is GHCi?
23:50:35 <Cale> the interactive ghc
23:50:50 <Cale> (it's somewhat like hugs, but a little more capable)
23:51:30 <DeezNuts> too bad its dependent on x86
23:51:47 <DeezNuts> oops nm misread something
23:51:59 <DeezNuts> ok my binary format should still be ELF on ppc right?
23:52:12 <Cale> right
23:52:32 <Cale> I'm just seeing if it will let me build a ghc to run on ppc
23:52:47 <DeezNuts> u have a ppc?
23:53:15 <Cale> no but ./configure --host=ppc-linux --target=ppc-linux seems to be the thing you want to run
23:53:33 <DeezNuts> oh yeah :p
23:53:33 <DeezNuts> heh
23:53:39 <Cale> and it works for me
23:53:44 <DeezNuts> phat
23:53:48 <DeezNuts> but
23:53:54 <DeezNuts> i still need to install that older binary build?
23:54:00 <DeezNuts> s/ build//
23:54:03 <Cale> I would
23:54:20 <Cale> Or a newer one for OSX
23:54:26 <DeezNuts> ok and even thought I specify target=ppc-linux I can still use --prefix=/usr/local to install there?
23:54:39 <DeezNuts> s/thought/though/
23:54:43 <Cale> yeah
23:54:58 <DeezNuts> ill give it a try tomorrow then
23:55:01 <Cale> actually, if you're compiling on ppc-linux, it will assume you want there
23:55:03 <Cale> that*
23:55:08 <DeezNuts> ok
23:55:09 <DeezNuts> kew
23:55:21 <Cale> you only need to specify target, etc if you're compiling on OSX
23:55:31 <DeezNuts> got it
23:55:44 <DeezNuts> i've compiled plenty of stuff before
23:55:56 <Cale> heh
23:55:56 <DeezNuts> except things that need to be "bootstrapped" heh
23:56:24 <DeezNuts> so how is haskell written in haskell?
23:56:26 <Cale> actually building it fails for me of course, because I think that you actually have to have a ppc to do that.
23:56:37 <Cale> hugs is written in C, iirc.
23:56:46 <DeezNuts> doesn't it have to link against C libraries?
23:56:58 <Cale> there have been other compilers for haskell written in other languages
23:56:59 <DeezNuts> i meant how is ghc written in haskell if it is the case that it must link against c libs
23:57:12 <Cale> Haskell programs can link against C libs.
23:57:55 <DeezNuts> how does that work
23:58:00 <Cale> http://www.cse.unsw.edu.au/~chak/haskell/ffi/
23:58:46 <DeezNuts> kew
23:59:03 <DeezNuts> btw if i only use the compiler part of hugs can i wrote complete haskell programs?
23:59:08 <DeezNuts> (haskell 98)
23:59:45 <Cale> well, hugs is specifically an interpreter.
23:59:52 <Cale> but yes, you can
