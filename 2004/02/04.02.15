03:40:11 <shapr> good morning #haskell!
03:40:16 <shapr> wassup?
03:40:23 <saz> hi shapr 
03:40:31 <shapr> hi saz, what's going on?
03:40:57 <saz> not a whole lot, you're the first person to utter anything since the netsplits
03:41:08 <saz> er, the server upgrade, or whatever it was
03:41:38 <shapr> I like the new look of haskell.org
03:42:03 <shapr> anyone else seen it?
03:42:07 <saz> looks much nicer!
03:42:11 <saz> I just had a look
03:44:24 <shapr> now we just need a wiki upgrade and some added plugins, and the website will be just right.
03:45:05 * shapr volunteers to upgrade the wiki
03:47:58 <shapr> hi cptchaos 
03:48:14 <cptchaos> hi shapr
03:48:20 <shapr> what's happening?
03:49:43 <cptchaos> yesterday, i finished the first version of the event system of my High Avaibillity project
03:49:49 <shapr> neat
03:50:47 <cptchaos> not all featureas are implemented jet, but the framwork is done
03:51:32 <cptchaos> but I have to do a lot other stuff before I can test ist
03:51:59 <cptchaos> and what are you doing?
03:52:20 <shapr> reading MoinMoin docs at the moment, I'm going to upgrade the Haskell Wiki to the latest version of MoinMoin
03:52:50 <earthy> let's put it like this: I like the current look of haskell.org ;)
03:52:58 <earthy> but I don't really know what it was before
03:53:14 <shapr> it was really basic before.
03:54:43 <earthy> it still looks really basic to me
03:55:04 <earthy> oh, wait!
03:55:07 <earthy> now I see. ;)
03:55:21 <earthy> (I must've been seeing a cache for the past few days)
03:55:57 <earthy> but yeah, it's still really basic
03:56:12 <earthy> and I think there's too much whitespace at points.
03:56:44 <cptchaos> i like basic sites
03:57:46 * earthy too
03:58:01 <earthy> now, as shapr says, update the wiki software
03:58:07 * earthy thinks most wiki's are *ugly*
03:58:14 <shapr> moinmoin 1.1 isn't too bad.
03:58:17 <earthy> (including the hawiki)
03:58:27 <shapr> well, if you have css changes, I can put them in
04:00:49 <Heffalump> shapr: you're running the haskell.org wiki?
04:00:59 <shapr> yup
04:01:20 <shapr> I asked Keith Wansbrough if he would upgrade the wiki and he said, I have a better idea...
04:02:03 <shapr> this means I can add the enscript syntax highlighting :-)
04:02:08 * shapr bounces
04:03:07 <shapr> Heffalump: do you have any feature requests?
04:03:27 <Heffalump> can it syntax highlight Haskell? :-)
04:03:53 <shapr> yes, with the enscript syntax highlighting
04:04:05 <shapr> which I will install as soon as I've upgraded
04:05:02 <Heffalump> oh, nice.
04:06:31 <shapr> I'm going to install 1.1 for the moment, and then try out the cvs version on AvianWiki
04:06:48 <shapr> the guys on #moin say the cvs version is stable and more featureful than the 1.1 release
04:07:33 <Heffalump> put in LaTeX highlighting too if it's not already there
04:07:41 <Heffalump> s/highlighting/processing/
04:07:52 <shapr> ok, will do
04:08:22 <shapr> do you know if the category theory TeX lib that Darius mentioned is installed on haskell.org?
04:10:07 <shapr> ok, upgraded, please make a quick check to see if you see anything obviously broken
04:30:37 <shapr> ok, the enscript plugin is working
04:31:16 <shapr> feel free to test it out
04:35:37 <Heffalump> cool.
04:58:06 <cm> hey
04:58:32 <cm> not sure whether i already asked you what you think about that: http://rafb.net/paste/results/qI414139.html http://rafb.net/paste/results/d2823236.html
05:40:41 <shapr> ok, the latex plugin works also, but it takes a few seconds for convert to turn the .ps into a .png
05:41:26 <earthy> am I right to conclude that syntaxhighlighted haskell will not be cut&pasteable?
05:41:43 <shapr> ?
05:41:46 <earthy> due to being piped through enscript and ps2png?
05:42:04 <Heffalump> oh
05:42:12 <shapr> works for me
05:42:16 <shapr> try it: http://www.haskell.org/hawiki/HaskellIrcPastePage
05:42:37 <earthy> ah, 'kay
05:42:43 <Igloo>        enscript  -  convert  text files to PostScript, HTML, RTF,
05:42:43 <Igloo>        ANSI, and overstrikes
05:42:43 <earthy> it lets enscript output html
05:42:44 <Heffalump> goodgood :-)
05:42:49 <Heffalump> ahh.
05:42:50 <earthy> good good :)
05:42:55 <shapr> there's no handling of .lhs files if that's what you mean.
05:42:57 <earthy> doubleplusgood
05:43:10 <shapr> I do have an auto-haddockizer, but it's not particularly useful.
05:43:48 <shapr> ok, any other wiki feature requests?
05:44:28 <shapr> I'd like to request that someone improve the enscript highlighting support it's pretty basic atm
05:47:35 <shapr> btw, you may need to control-r to force a reload to uncache the various moin css files, if the HaWiki has a blank bar at the bottom/top
05:47:38 <Igloo> It looks like the regexp starting _ is wrong
05:48:01 <shapr> which regexp?
05:48:23 <shapr> is that a response to cm?
05:48:26 <Igloo> Well, whatever enscript uses to match things
05:48:32 <Igloo> cm?
05:49:02 <shapr> can you point me to a specific example of the _ regexp?
05:49:18 <Igloo> "_:xs)" is all in purple
05:49:31 <shapr> oh
05:49:40 <shapr> I see
05:50:06 <Igloo> From memory it should be _[a-zA-Z0-9]* when it look like it is _[^ ]* or something
05:52:30 <shapr> ibid: 2.6.1?
05:52:40 <cm> sorry?
05:52:51 <shapr> hi cm
05:52:54 <cm> hi
05:52:58 <shapr> how's life?
05:53:25 <ibid> 2.6.2-1-686
05:53:26 <cm> good, thanks. preparing some talk for school tomorrow (implementing a simple interpreter ;)
05:53:29 <cm> how about you?
05:53:54 <shapr> I'm doing cool wiki tricks.
05:54:23 <cm> the paste page is cool :)
05:54:24 <shapr> has anyone tried andrew cooke's halipeto?
05:54:31 <shapr> yah, I'm happy I added the pretty colors.
05:54:39 <shapr> the latex demo is on 
05:54:43 <shapr> @wiki ShaeErisson
05:54:43 <lambdabot> http://www.haskell.org/hawiki/ShaeErisson
05:55:42 <cptchaos> wow
05:55:54 <cm> cute :)
05:56:03 <shapr> yah, it looks pretty sexy
05:56:23 <shapr> I wonder if the category theory LaTeX lib is installed on haskell.org
05:56:27 <shapr> I'll see if I can enable it.
05:58:09 <shapr> whoa, awesome
05:58:23 <shapr> reload the page :-)
05:58:38 <cm> :]
05:59:22 <shapr> if you guys want any specific LaTeX libs enabled, ask me
06:00:58 <cm> did you guys try that bootable-from-cd-windows thingy slashdotted earlier today? seems to work here :)
06:02:23 <shapr> nah, what is it?
06:02:38 <cm> like knoppix, just for windows ;)
06:03:14 <cptchaos> and how much is the license?
06:03:47 <cm> none, you generate the image from an existant windows installation cd
06:04:26 <cptchaos> ah, ok
06:04:31 <shapr> ok, hawiki is upgraded, plugins are in-place.
06:04:37 <shapr> I guess I could do real paying work now.
06:04:49 <cm> python? :)
06:04:53 <shapr> yes
06:05:03 <shapr> though if I can find an NNTP lib for Haskell, I can get paid to use it.
06:06:29 <cm> i'm gonna try and add macro support to the scheme evaluator.. i'll bbl
06:06:32 <cm> cya
06:44:01 <shapr> bonjour rubix 
06:44:44 <liiwi> hello
06:45:36 <shapr> hei liiwi 
06:51:32 <liiwi> hei hei
06:51:37 <liiwi> savage?
06:52:43 <shapr> ut2004demo? :-)
06:53:07 <liiwi> sure
06:53:12 <shapr> which server?
06:53:16 <liiwi> no idea
06:56:02 <shapr> you know any nearby servers? since the ping code is broken, I can never tell when a server will be nearby
06:56:09 <shapr> I wonder if the buddy stuff works
06:56:15 <shapr> do you have a tracker id?
06:56:25 <liiwi> not yet, hold on a sec
06:58:07 <liiwi> hrmpf
07:00:51 <liiwi> RecvFrom returned SOCKET_ERROR 111
07:02:28 <shapr> liiwi: meet me on 66.244.230.22
07:05:59 <liiwi> connection failed
07:06:14 <liiwi> buh, I have to run in ten minutes
07:06:55 <liiwi> play tomorrow evening? I might be able to set up server on a fat pipe
07:12:33 <Metlmkr> mornin all
07:12:46 <Metlmkr> any code assemblers here and awake?
07:14:41 <Metlmkr> mornin matt
07:14:55 <Matt-W> afternoon
07:14:56 <Metlmkr> i am looking for a code assembler who wants a project
07:15:50 <Metlmkr> any awake?
07:16:23 <Heffalump> what's a code assembler?
07:16:38 <Matt-W> I was just wondering that
07:16:41 <Matt-W> hi heffalump
07:16:59 <Metlmkr> a person who can write in assembly
07:17:11 <Matt-W> well that's definitely not me
07:17:32 <Heffalump> why are you asking on #haskell?
07:17:43 <Metlmkr> i've tried everywhere on this server
07:17:52 <Heffalump> well, please go and try elsewhere.
07:18:07 <Matt-W> Nowhere are you less likely to find one
07:18:12 <Matt-W> except maybe in #cooking
07:18:15 <Heffalump> :-)
07:18:37 <Matt-W> As far as I'm concerned, CPUs should run functional languages natively
07:19:08 <Heffalump> hmmm...
07:19:28 <Heffalump> I think the community used to think that back in the 80s, but changed their minds.
07:19:37 <Heffalump> (ICFP used to be called FPCA, the CA being Computer Architecture)
07:21:20 <Matt-W> Well, I just don't like getting my hands dirty
08:19:25 <lordjim> the point is that in real world there is no important industrial software develloped using a functionnal language
08:21:30 <Lunar^> lordjim: One answer : Erlang
08:22:03 <lordjim> yep but erlang is not really an all purpose language
08:23:24 <lordjim> ocaml or lisp are not used as much as C or java 
08:26:45 <amb> hi everyone!
08:26:59 <lordjim> hi amb
08:30:44 <amb> I've been wondering, I've come to like Haskell after learning it from lectures, now, I've only got a very limited knowledge in it, but I was wondering if there is any good i/o library/module for it that would allow to actually create graphical applications (without too much hassle that is)
08:31:06 <Heffalump> wxHaskell, amongst others
08:31:31 <amb> Thanks Heffalump
09:48:17 <TripleDES> hi
09:54:49 <shapr> y0
11:56:03 <pimpbot5000> hi, im writing a gui interface with gtk2hs.  does anyone know of a nice way to store data structures associated with gui elements (besides using IORef)
12:33:46 <ibid> one thing i'd like to have in Data.Set: pick :: Set a -> a
12:33:47 <ibid> :)
12:34:00 <Heffalump> nondeterministic, or random?
12:34:01 <ibid> pick = head . setToList
12:34:07 <ibid> is one implementation
12:34:13 <ibid> demonic nondet
12:35:13 <ibid> but with committed choice, naturally
12:37:40 <Heffalump> right, and remember referential transparency too :-)
12:37:59 <earthy> :)
12:38:02 <Igloo> extract :: Set a -> (a, Set a) is one I wanted
12:38:26 <ibid> Heffalump: committed choice gives you that
12:39:19 <Heffalump> oh, yeah, right
12:39:41 <Heffalump> so what's wrong with head . setToList ?
12:39:46 <ibid> i want a function that picks a member from a nonempty set, i don't care which one as long as once the choice is made for that set the function commits to that choice, but i want the function to be as light as possible
12:40:10 <ibid> Heffalump: i would assume that there is a more efficient method if implementation is accessible
12:40:21 <Heffalump> I suspect not, given laziness.
12:40:40 <ibid> (for any tree-like structure with data in each node, picking the datum at root node seems best to me)
12:41:32 <ibid> i assume that head . setToList would have to go fetch the least element
12:41:40 <ibid> which is usually not at the root
12:41:43 <Heffalump> oh, yes, it is ordered, I missed that
12:42:12 <Heffalump> and the implementation is actually fairly strict
12:44:48 <ibid> and it's not memoized (unless i explicitly do that), so every time i pick, it goes to the least element
12:45:19 <ibid> i'd rather have it to be so light that it would not matter much whether i grab the result of one call or i call repeatedly
12:46:28 <ibid> but i guess i can grab it
12:50:54 <Marvin--> evening guys
12:51:50 <amb> hey marvin
12:51:54 <amb> Did you level up?
12:52:02 <Marvin--> heh, no session yet
12:52:16 <amb> :-)
12:52:36 <Marvin--> probably no time until earliest next weekend
12:57:42 <Marvin--> interesting documentary on Sweden's first "reality" show
12:58:52 <ibid> hmm?
12:59:06 <shapr> yow!
12:59:31 <shapr> @yow
12:59:32 <lambdabot> My FAVORITE group is "QUESTION MARK & THE MYSTERIANS"...
12:59:35 <Marvin--> hey shapr
12:59:38 <shapr> hej Marvin-- 
12:59:41 <shapr> wazzup?
13:01:22 <Marvin--> recuperating from the party last night
13:01:39 <Marvin--> by watching a documentary on expedition Robinson
13:02:08 <shapr> HaWiki is now MoinMoin 1.1, up from 1.0
13:02:25 <shapr> and has syntax highlighting of Haskell sources, and inline LaTeX support
13:05:22 <shapr> bedtime for me
13:05:28 <Marvin--> "Sweden created reality television"
13:05:29 <Marvin--> yay :(
13:06:37 <andersca> Marvin--: I hate mpd
13:07:09 <Marvin--> andersca: why?
13:07:26 <andersca> Marvin--: because it's a horrible horrible language with horrible sytnax
13:15:25 <ibid> Marvin--: i seem to remember that term being used for rescue 911 & cops more than ten years ago...
13:16:31 <Marvin--> ibid: yeah, which have way more with reality to do than what's called reality shows nowadays
13:16:46 <ibid> yeah
13:16:58 <Marvin--> ibid: in Sweden it's called "docu-soaps"
13:17:55 <ibid> how about "vulgar fiction"? ;)
13:18:10 <Marvin--> even better, but not very selling :)
13:18:13 <ibid> in finland, they are called boringly "reality-sarjat"
13:18:57 <ibid> Marvin--: nothing a good copywriter can't fix :)
13:20:29 <ibid> vulgarity could become the next boom :)
13:22:59 <earthy> the reality stuff is mainly cheap to produce while still being `interesting' enough to watch
13:24:28 <Marvin--> I'm not sure expedition Robinson was all that cheap :)
13:25:06 <earthy> now contrast that against as many hours of costume drama.
13:25:08 <ludde> they said somewhere that it costs 2mill SEK per episode to produce
13:25:16 <Marvin--> earthy: point
13:25:29 <earthy> or SF even
13:25:49 <earthy> and they don't even have to pay actors...
13:30:40 <earthy> anyway, I think shapr had a point in going to bed
13:33:48 <earthy> night all
13:33:52 <Marvin--> night earthy
13:34:22 <ibid> no bed before csi rerun ends :)
13:34:26 <Marvin--> heh
16:44:30 * CosmicRay is a Python fan looking at haskell for the first time...  I'm looking for two things: 1) a generalized database API similar to JDBC, DBI, or DB-API; and 2) libraries with network client modules (ie, IMAP, POP, FTP, etc.) -- or really any good-sized library for interacting with the world (Python has a sizable standard library)
16:46:36 <forcer> CosmicRay: i would recommend looking at the different haskell implementations and what they have to offer...
16:47:30 <CosmicRay> I have looked a bit at ghc, but I couldn't find these things there -- and anyway, they should be doable in pure Haskell, so I'd expect them to be portable
16:48:56 <stepcut> CosmicRay: http://haskelldb.sourceforge.net/
16:49:13 <forcer> :)
16:50:12 <CosmicRay> ahh.
16:50:27 <CosmicRay> that is along the lines of what I'm looking for indeed.
16:50:35 <CosmicRay> only supports 2 DB engines though :-(
16:50:58 <CosmicRay> how does ODBC work in Haskell on Unix?
16:51:02 <CosmicRay> or does it?
16:52:41 <stepcut> haskelldb should support postgres, mysql, odbc, and SQlite
16:53:31 <stepcut> the original version of haskelldb only supported ODBC and required hugs, but that port (which is not quite complete yet), aims to support all haskell implementations and uses HSQL to support multiple database backends
16:55:16 <stepcut> I am not sure how odbc works on unix, I believe postgres and mysql have odbc wrappers around them?
16:55:55 <CosmicRay> yes...
16:56:04 <CosmicRay> I do have some postgres databases here
16:56:12 <CosmicRay> unfortunately I must also connect to a Progress database
16:56:19 <CosmicRay> it's a commercial one with only ODBC and JDBC drivers.
16:57:08 <CosmicRay> In Python, I can do this quite cleverly with zxJDBC...  it is a part of Jython, the Python interpreter written in Java.  It maps Java's JDBC to Python's DB-API and looks makes JDBC sources look like "just another database"
16:57:22 <CosmicRay> I'm not worried about postgres at all
16:57:29 <CosmicRay> it's the Progress one that I'm concerned about
16:58:27 <stepcut> Dunno, I just use mysql
16:58:35 <CosmicRay> but those links give me something to go on anyway
16:58:37 <CosmicRay> thanks.
16:58:43 <CosmicRay> know anything about networking libraries for Haskell?
16:58:59 <CosmicRay> I'm looking for common client-side libs for things like IMAP, FTP, etc.
17:00:52 <CosmicRay> or are these things that are not well-suited to a functional language?
17:01:06 <Riastradh> They're pretty easy to write.
17:01:11 <stepcut> haskell has a 'low level' BSD socket interface, but I don't think people have written much in the way of libraries
17:01:13 <stepcut> http://cvs.sourceforge.net/viewcvs.py/*checkout*/haskell-libs/libs/Imap.hs?rev=1.1.1.1
17:01:31 <CosmicRay> yeah I saw that
17:01:47 <CosmicRay> it does very little, and in fact, probably won't actually work.
17:01:56 <stepcut> I suspect as much also
17:02:44 <stepcut> I think the lack of libraries simple means no one has needed them enough to write them, not that it could not be done
17:04:16 <CosmicRay> true, I have noticed the presence of the socket code
17:04:46 <CosmicRay> my problem though is that if I am to convert to haskell, it'll take quite awhile if I have to re-implement all the basic libs that Python gives me for free
17:05:03 <stepcut> CosmicRay: yes.
17:07:02 <stepcut> CosmicRay: Haskell is getting more libraries of that nature, but it is certainly behind compared to python
17:07:52 <stepcut> I think the rate of library development has been picking up, but there is definately a bit of a void -- depending on what you are doing.
17:15:28 <amb> ciao
19:28:47 <esap> here's a theory question: what is the type of the program that is supposed to be given as counterexample [e.g. program that returns the opposite of what the termination tester says] in the standard proof of undecidability of the halting problem?
19:41:57 * esap wonders if the standard proof of the undecidability of the halting problem requires that all strings represent some algorithm.
20:51:58 <shapr> good morning #haskell!
20:54:59 <Cale> good morning!
20:55:05 <Cale> er, night here :)
20:55:10 <Pseudonym> G'day.
21:36:06 <shapr> what's going on?
21:36:19 <Pseudonym> Why would anything be going on?
21:36:23 * Pseudonym looks nervous and stuff
21:37:52 <shapr> hey Pseudonym, hawiki is upgraded to moinmoin 1.1, and now has syntax highlighting and inline latex
21:38:00 <Pseudonym> Ooh, cool.
21:38:13 <Pseudonym> So I can write my JFP pages on the wiki.
21:38:16 <Pseudonym> Collaborative and stuff.
21:38:39 <shapr> yah, it's all collaborative
21:42:34 <Cale> http://haskell.org/hawiki/CategoryTheory
21:43:14 <shapr> happiness :-)
21:43:40 <shapr> the xypic lib is enable, so the isomorphism squares(?) are there
21:44:06 <Cale> You mean commutative diagrams? :)
21:44:59 <Pseudonym> He means "them arrow picture thingies".
21:45:39 <Cale> yeah, commutative diagrams :) I should write an article on the Seifert-van Kampen theorem just to make use of it.
21:46:10 <Cale> Despite the fact that the SvK theorem has nothing to do with programming.
21:46:21 <Cale> :)
21:46:35 <Pseudonym> You might want to write some articles on basic CT concepts.
21:47:05 <Cale> yeah, that might be good.
21:47:15 <Pseudonym> Like, I dunno... pullbacks, pushforwards...
21:47:37 <Pseudonym> Those kind of terms.
21:47:57 <Cale> Yeah - I'd also like to know what those are in common programming contexts, so maybe if I write the initial article, others will fill me in. :)
21:48:00 * Pseudonym has a syntax error in his English
21:48:05 <Pseudonym> Yes, why not?
21:48:10 <Pseudonym> Someone has to start the ball rolling.
21:48:31 <Pseudonym> Let's see...
21:48:51 <Pseudonym> The basic kinds of morphism.
21:49:01 <Pseudonym> monomorphism, epimorphism, isomorphism etc
21:50:04 <Cale> product, coproduct, pullback and pushout
21:50:11 <Riastradh> I like 'pseudomorphism' the most of all those morphism thingies.
21:50:28 * Pseudonym does too
21:50:30 <Pseudonym> It strokes my ego.
21:50:47 <Cale> hmm... a pushout of datatypes...
21:50:50 * Riastradh sends electricity through Pseudonym's ego.
21:53:45 <Cale> it would be some sort of union type with gluing.
21:56:05 <shapr> random question, I want to backup my home dir and lots of it (flacs of my CDs) don't need to go into a tgz, is there a good utility for picking and choosing what to slurp onto another box?
21:57:34 <Etaoin> would rsync work?
21:57:56 <harsha123> hi #haskell
21:58:01 <shapr> hello harsha123!
21:58:11 <andersca> morning
21:58:16 <shapr> Etaoin: can I rsync a subset of a dir?
21:58:19 <shapr> god morgon andersca 
21:58:36 <Pseudonym> Is there a reason why these thingies aren't in their own directory?
21:59:11 <shapr> they are in their own dir, but I'd like to backup "all of my home dir except for these X things"
21:59:35 <Pseudonym> Do you want to do it just once?
21:59:36 <shapr> because I'm not sure what I might want later, like settings in some ~/.* dirs
21:59:53 <Pseudonym> If so, here's the ugly approach:
21:59:59 <Pseudonym> ls -A > /tmp/files
22:00:03 <harsha123> shapr: what would you recommend Python Tkinter or Wx for doing a installer?
22:00:17 <Pseudonym> Using your favourite text editor, turn /tmp/files into a shell script which does the job.
22:00:20 <Pseudonym> :-)
22:00:34 <shapr> harsha123: if you mean a WISE InstallShield kind of installer, then Tkinter is more portable, but WX looks nicer.
22:00:44 <shapr> Pseudonym: that's a good solution.
22:01:10 <harsha123> shapr: its more of linux installer!
22:02:33 <shapr> oh, you mean a Linux bootdisk installer? in that case, I've seen framebuffer and curses installers. I'd guess that Tkinter will take up less space than wxSomething
22:03:03 <shapr> I've heard that wxWindows is heavier than Tk
22:03:09 <harsha123> yeah Linux boot disk installer
22:03:46 <shapr> I'm about to try the debian-boot beta2, I've heard it's much improved.
22:04:01 <harsha123> yeah, it has.. quite a lot actually!
22:04:09 <harsha123> shapr: tried 2.6?
22:04:17 <shapr> not yet
22:04:34 <harsha123> i heard it has a standby mode..
22:04:45 <shapr> I have maxtor's EZ-BIOS c/h/s remapper on my bootsector and therefore 2.6 won't speak to my drive.
22:04:50 * shapr was thinking "eftersom"
22:10:34 <harsha123> shapr: how is WxPython?
22:48:04 <shapr> I've only tried it once, so I don't have much to say about it.
22:48:08 <shapr> I've used Tkinter more
22:48:19 <shapr> have you guys seen this slashdot article? http://developers.slashdot.org/article.pl?sid=04/02/13/1814202&mode=thread&tid=126&tid=128&tid=156
22:48:28 <shapr> "Intuitive Bug-less Software"
22:50:10 <Pseudonym> I read the slashdot article.  Didn't read the link, but I commented anyway!
22:54:17 <shapr> hah --> "A lot of the problems could be solved with true functional languages (Haskell, OCaml, etc) but the learning curve is too high. Especially when you can get a team of second rate VB coders for the price of one haskell coder (if you can find one)"
22:54:51 <Pseudonym> How to write intuitive bug-less software: Sack the second rate VB coders.
22:54:57 <shapr> truly
22:55:07 <Pseudonym> Don't hire a script kiddie to do an application developer's job.
22:55:27 <shapr> I've been hanging out on #icculus.org, where the former employees of lokigames.com hang out
22:55:32 <Pseudonym> I'm being flippant, of course.
22:55:45 <shapr> and I've spoken to icculus himself, who's done most of the recent ports of win32 games to linux
22:55:52 <Pseudonym> Fact is, a lot of the software industry is VB applications built on top of Office and Back office.
22:56:03 <Pseudonym> Which _is_ scripting, pretty much.
22:56:09 <Pseudonym> Oh?
22:56:10 <shapr> I asked him what sort of testing technology game programmers use, unit testing, random testing, etc
22:56:25 <Pseudonym> I know the answer to that.
22:56:30 <Pseudonym> "Tight deadlines."
22:56:45 <shapr> yah, none.
22:57:03 <Pseudonym> The game industry is what we refer to in Australia as "a mug's game".
22:57:08 <shapr> what does that mean?
22:57:21 <Pseudonym> It means only "a mug" would do it.
22:57:31 <shapr> haha
22:57:34 <Pseudonym> "Mug", I believe, is here derived from the British "muggins".
22:57:46 <shapr> I'm not familiar with that term either
22:57:49 <Pseudonym> @wn muggins
22:57:51 <lambdabot> *** "muggins" wn "WordNet (r) 2.0"
22:57:51 <lambdabot> muggins
22:57:51 <lambdabot>      n : a person who lacks good judgment [syn: {fool}, {sap}, {saphead},
22:57:51 <lambdabot>           {tomfool}]
22:57:53 <shapr> aha
22:57:58 <shapr> I was about to do that
22:58:02 <Pseudonym> :-)
22:58:28 <Pseudonym> Basically, in games, there's so much competition that the deadlines are short and the margins are small.
22:58:34 <Pseudonym> Therefore, the hours are long and the pay is lousy.
22:58:36 <shapr> the more I hear about "professional" software developers, the more I think we could make a mint with a team of Haskell developers.
22:58:49 <Pseudonym> Yeah, if we want to move to Portland. :_)
22:58:56 <shapr> I could live with that.
22:59:05 <shapr> Portland is a nice place to live.
22:59:23 <Pseudonym> The problem is that Haskell is untested, unproven etc etc.
22:59:26 <shapr> though lately I'd rather move to UNSW
22:59:29 <Pseudonym> You need clients who don't care about the language.
22:59:35 <shapr> right, I've got one of those right now
22:59:41 <shapr> but I don't have an NNTP lib in Haskell :-/
22:59:59 <shapr> this is my yearly "dump the contents of this nntp server into an MS Access database" job.
23:00:00 <Pseudonym> NNTP is a fairly straightforward protocol.
23:00:09 <Pseudonym> You know what I'd do?
23:00:15 <shapr> FFI?
23:00:16 <Pseudonym> I'd get the Perl NNTP library and hand-translate it.
23:00:25 <shapr> hmm
23:00:31 <Pseudonym> But I speak fluent Perl, so I'm biassed.
23:00:36 <shapr> I'd rather do it from python's nntplib, but I agree with the basic idea.
23:00:41 <Pseudonym> Then once it's working, I'd refine it.  Probably after the paying job is done.
23:00:48 <shapr> right, I see.
23:01:32 <shapr> the deadline for the database is 5th of march
23:01:56 <shapr> I have existing Python code that does this, but it's not very inspired.
23:02:24 <harsha123> shapr: so are you writing nntp lib for haskell? :)
23:02:44 <shapr> I don't know if I'll have time, but I would like to...
23:05:37 <Pseudonym> I must away.  Nytol, and fare well.
23:05:41 <shapr> I could take the route that Pseudonym suggested, write enough to make it work...
23:05:43 * shapr thinks
23:05:45 <shapr> g'night Pseudonym 
23:06:38 <shapr> hi skylan 
23:30:16 <stepcut> shapr: someone was on the channel earlier asking for imap, ftp, etc libraries written in haskell... maybe the time is starting to become ripe for doing some higher level network libraries..
23:31:19 <stepcut> but first the Binary.hs and friends need to be brought up to snuff
23:31:45 <shapr> I think the time has been ripe for years :-)
23:32:54 <stepcut> :p
23:33:06 * shapr grins
23:33:17 <shapr> do you have a Binary.hs that's improve over what Hal has?
23:33:42 <stepcut> shapr: no, I don't expect to work on that for at least a month
23:33:46 <shapr> ok
23:34:11 <stepcut> I am working on a project that will require it, but I am not going to work on it until I actually need it
23:34:11 <shapr> I think we should whip out libraries that work, but aren't refined
23:34:51 <stepcut> Are you sure its possible to write a haskell library without submitting a conference paper?
23:34:55 * shapr laughs
23:35:08 <shapr> that is an excellent question.
23:35:12 <stepcut> maybe the network code can be based on 'spears'
23:35:15 <stepcut> :p
23:35:19 * shapr snickers
23:46:03 <shapr> gutentag go_home 
23:46:09 <shapr> looking for Haskell info?
23:46:26 <go_home> hi, no i am looking for Chilly
23:46:37 <shapr> oh, he hasn't been on #haskell lately.
23:46:51 <shapr> I haven't seen him for several months.
23:46:59 <go_home> shit. his smtp server bounces my mails
23:47:20 <go_home> Its worse than spam, nowadays
23:47:27 <go_home>     550 Rejecting mail with forged sender address
23:47:31 <go_home> bullshit
23:47:48 <shapr> maybe you have a shell account somewhere else where you can send email to him?
23:48:01 <go_home> I'll try
23:48:38 <go_home> ok, thanks and see you later. I have to go to work, where I am galority ;o)
23:48:51 <shapr> ok :-)
23:54:46 <shapr> ohio gozymus juhp 
23:54:55 <shapr> or however you spell that
23:56:48 <shapr> hiya
23:58:16 <shapr> konichiwa
23:58:33 <Cale> In UTF-8 it's spelled お早うございます
23:58:47 <shapr> huh, that didn't work for me, I wonder why.
23:58:56 <shapr> ~~~~~
23:59:31 <shapr> ~~~~~
23:59:43 <Cale> 今日は
23:59:44 <shapr> charsets can be so much fn
23:59:51 <shapr> I can't see that either.
