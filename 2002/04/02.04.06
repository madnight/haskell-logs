08:05:32 <fullets> when a function has multiple = statements, it goes with the first one that matches, yes?
08:07:28 <Logan> I think so.
08:07:41 <Logan> The first pattern that matches, I presume.
08:07:52 <fullets> yay! thanks a million
08:08:04 <Logan> At least, I've always ordered my patterns from more specific to less.
08:32:49 <Heffalump> yep, top to bottom
08:34:04 <Logan> The one place where order is significant. :P
08:36:30 <Heffalump> in terms of definitions, yeah
08:37:03 <Logan> You can have the same name bound to different functions of different types in haskell, can't you?
08:38:43 <smkl> yes, by using typeclasses
08:39:38 <Igloo> Although some people prefer to write non-overlapping patterns, which confused me for a minute when I first saw it
08:39:40 <Logan> It's not permitted in general?
08:39:58 <Igloo> No
08:40:39 <Logan> Seems like it shouldn't matter -- the combination of indentifier and type should be unique.
08:41:47 <smkl> if you have "a :: x" and "a :: y", then which type should "f = a" have?
08:42:21 <Logan> I was thinking of types that didn't overlap.
08:42:26 <Logan> But I see your point.
08:42:29 <Heffalump> you can't do that
08:42:42 <Heffalump> it'd break type inference if you could
08:42:48 <Heffalump> (aside from being extremely confusing)
08:42:50 * Logan nods.
20:50:41 <olczyk> Anyone out there who's read "Tackling the Awkward Squad"?
20:53:54 <clausen> what's that?
20:55:01 <olczyk> By Simon Peyton-Jones. One of the papers describing monads.
21:00:43 <clausen> geez, they have strange names for their papers
21:01:11 <clausen> composing haggis, hehe
21:01:19 * clausen hasn't read either yet
21:08:20 <olczyk> I don't think so. The "Awkward Squad" is a set of problems which stand between pure functional languages and real world applications.
21:10:39 <clausen> "squad" means "a group of specialists", or similar
21:10:48 * clausen thinks it's a really strange name
21:11:02 <clausen> (specialists, as in "the drug squad" or "the swimming squad")
21:11:21 <clausen> "the awkward squard" is surreal
