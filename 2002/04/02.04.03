01:15:27 <shapr> whee
03:56:41 <Sirp> what is the best way to debug haskell programs?
03:58:07 <ChoJin> I don't know, but I would like to know :)
03:58:24 <shapr> hat seems to be popular
03:58:26 <Sirp> uhhh....right :)
03:58:29 <Sirp> hat?
03:58:35 <Sirp> what's that?
04:01:57 <shapr> look it up on haskell.org
04:02:06 <shapr> it's also a debian package for nhc
04:02:09 <Igloo> It's part of the nhc suite
04:02:34 <Igloo> trace in IOExts (I think) can be useful too
04:03:22 <ChoJin> apt-cache search nhc                                                                         14:01 #1022
04:03:22 <ChoJin> green-card - A foreign function interface prepocessor for Haskell
04:03:22 <ChoJin> hat - The nhc98 HAT source-level tracer
04:03:22 <ChoJin> hmake - The Haskell Make System
04:03:22 <ChoJin> nhc98 - aNother Haskell Compiler (the nhc98 Haskell Compiler)
04:03:24 <ChoJin> nhc98-doc - The nhc98 Documentation
04:04:07 <Sirp> ok I see
04:04:21 <Sirp> also, are the performance characteristics of standard haskell library functions documented anywhere?
04:04:39 <Igloo> They vary across implementations so they can't be
04:05:01 <Igloo> (assuming you mean time and space complexity etc)
04:05:24 <Sirp> but surely there are minimum performance characteristics that conforming implementations must comply to, no?
04:06:24 <Igloo> Implementations must have the same semantics, strictness and terminate under the same conditions (ignoring things like stack overflows), but that's it
04:06:48 <Sirp> oh...ok
04:06:58 <Sirp> but doesn't that make it rather difficult to write efficient programs?
04:07:45 <Igloo> In practise most people probably write for GHC and use profiling to find out what is inefficient
04:08:04 <Sirp> ok I see
04:08:24 * Igloo adds a bit more complexity to my Makefile as hmake is being silly
04:12:19 <Sirp> are there any associative types in the haskell standard library?
04:13:12 <Igloo> Is lookup what you are looking for?
04:13:35 <Sirp> if I knew what I was looking for I wouldn't be asking :)
04:14:38 <ChoJin> associatives type ?
04:14:47 <ChoJin> like map in C++ stl ?
04:14:52 <Sirp> yes, exactly
04:15:02 <Sirp> or like set, multiset, or multimap in the STL
04:15:46 <ChoJin> dunno, but now Igloo should understand the question :)
04:16:09 <Igloo> I have never looked at the STL
04:16:29 <Igloo> If you mean something like perl's hashes then lookup is what you want
04:16:44 <Igloo> FiniteMap modules floating around are more efficient but not part of the standard libraries
04:17:03 <Sirp> ok right, thanks
12:19:35 <Igloo> Oh how I wish I could get nhc hat tracing to do something more useful than segfaulting
12:31:41 <Heffalump> :-)
