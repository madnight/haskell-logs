00:59:36 * Chilli is away: Not at the machine...
01:01:08 * pesco drops in
01:01:13 <pesco> *blam* Ouch.
01:01:48 <pesco> Woah, the Char/IO discussion on haskell@haskell.org is really getting thrilling.
01:03:43 <pesco> Hahah, now they're bashing on GHC's intestines, too! :)
02:06:36 <delYsid> haskell@haskell.org, does that have an archive?
02:10:08 <Jii> http://www.haskell.org/pipermail/haskell/
02:20:17 * delYsid fetches the .mbox file
04:24:15 <Jii> delysid, you got a quick answer for your request on the haskell-list :)
04:28:38 <Jii> i somehow have a feeling that there are endless amounts of haskell resources but they are mostly done in academic environments, so they might not be found easily
04:31:01 <ChilliX> it's called technology transfer :-)
04:31:36 <Jii> yeah, and it usually takes around 20 years (transfer from academia to industry) ;-)
04:31:48 <ChilliX> yes, BUT
04:32:00 <ChilliX> "modern" academic projects are structured much like OSS projects
04:32:16 <ChilliX> so, the transfer time from academia -> OSS is much shorter
04:32:29 <Jii> that is true
04:32:40 * pesco giggles manically
04:33:35 <Jii> but (i would guess that) it is rare that academic people advertise their contributions outside the academic world
04:34:25 <Heffalump> a lot of academic projects are just prototypes rather than really usable systems, too
04:36:08 <ChilliX> Jii: academic projects and OSS projects more and more overlap; so they are advertised in the same way (web pages, freshmeat, ...)
04:36:43 <ChilliX> Heffalump: doesn't matter; for an OSS projects you need a seed, enough code that others can continue hackign at it; a prototype is often enough
04:36:51 <ChilliX> GHC is a good exmaple of that
04:37:14 <ChilliX> and it works the other way around
04:37:16 <Heffalump> well, GHC was made usable mostly inside academia, wasn't it?
04:37:21 <Jii> prototype that does the difficult things, others can hack the boring (and important) stuff on it :)
04:37:26 <ChilliX> OSS infrastruture is good for research projects
04:38:15 <ChilliX> Heffalump: sure, but it is being used outside of it
04:40:01 <Heffalump> yeah, sure, it's an example of a non-prototype system
04:40:25 <Heffalump> can you give an example of something that originated in academia and was taken over by people outside?
04:40:42 <Heffalump> s/people/OSS people/
04:43:00 <ChilliX> How about *BSD?
04:43:49 <Heffalump> point
04:44:56 <ChilliX> and it's not that important whether the project in the end is maintained outside of academia
04:45:18 <ChilliX> eg, often the main developer will remain the same person
04:45:37 <ChilliX> but as soon as outside people contribute and use it, there is some technology transfer
04:46:08 <ChilliX> another one is ORP
04:46:21 <ChilliX> Open Runtime Platform (a JVM JIT compiler)
04:46:27 <Jii> which reminds me that our department advertises on the front page that "Linux was invented here" which isn't quite true, although torvalds studied, worked and graduated here
04:46:55 <ChilliX> the guy who started it did so at a uni, but then moved to Intel Research, where he is still the principal developer
04:47:26 <ChilliX> a lot of OSS work originates at unis in that it is started by students
04:47:41 <ChilliX> Linux, Gimp, and many more
04:47:57 <ChilliX> (I mean, the GNU project originated at MIT after all)
04:48:53 <ChilliX> I think OSS is the natural structure for projects at unis and research institutions
04:49:15 <ChilliX> science and OSS share many basic principles
04:49:19 <ChilliX> such as peer review
04:50:11 <Jii> it's just that it takes a little too much effort to initiate a OSS project for a lazy old professor ;-)
04:50:32 <ChilliX> hehehe
04:51:21 <ChilliX> but then, in computing, there are at least as many hackers disguised as academics as there are lazy old professors
04:53:04 <delYsid> Jii: Yeah, the reply was hyperfast.
04:53:11 <delYsid> I didnt expect to get that gem at all :)
04:53:25 <delYsid> SO now I have a Move generation mdoule also ! :)
04:53:34 <delYsid> Although the solving part is unreadable to me...
04:55:46 <Jii> unreadable or not understandable?
05:05:43 <pesco> "And then there was a group called, quite affectionately, 'The Crazies', whose position was utterly unintelligable. Simon was among the Crazies."
05:13:22 <delYsid> Jii: well, not understandable
09:25:37 <delYsid> hmm, does anyone know how legal it could be to offer postscript->text re-formatted papers for download to fellow GUI-disabled people?
09:25:58 <delYsid> Of course only of material which was originally free to download.
09:26:51 <Jii> well, google does make text versions of various pdf-files
09:28:57 <Jii> so i don't see any legal objections, but, i am not a lawyer :-)
09:29:27 <delYsid> yeah, me neither :)
09:31:37 <Jii> i wish people would move their navigation bars in web pages to the right side, literally
10:22:50 <delYsid> grrrr
10:22:50 * delYsid is back (gone for 00:03.46)
10:23:34 <Jii> grr?
10:23:39 <delYsid> Anyone good with ascii-art and willing to transcribe the figures in "Tackling the Awkward Squad"?
10:23:53 <delYsid> from ps to ascii?
10:24:19 <Jii> what's tackling the awkward squad?
10:24:49 <delYsid> monadic input/output, concurrency, exceptions, and foreign-language calls in Haskell
10:24:49 <delYsid> Simon Peyton Jones
10:24:49 <delYsid> Microsoft Research, Cambridge
10:24:49 <delYsid> simonpj@microsoft.com
10:24:49 <delYsid> http://research.microsoft.com/users/simonpj
10:24:50 <delYsid> 1st August 2000
10:26:54 <delYsid> "The pictures for these actions look like this (the box for putChar
10:26:54 <delYsid> takes an extra input for the Char argument):
10:26:54 <delYsid> a
10:26:54 <delYsid> a
10:26:54 <delYsid> a
10:26:56 <delYsid> Suppose we want to read a character, and print the character we have read. Then we need to glue
10:26:57 <delYsid> together putChar and getChar into a compound action, like this:
10:26:59 <delYsid> a
10:27:02 <delYsid> a
10:27:03 <delYsid> a
10:27:05 <delYsid> To achieve this ..."
10:27:18 <Jii> let's see
10:28:10 <Jii> wait a second :)
10:32:52 <Jii> http://spy.hole.fi/~jajvirta/pic.txt
10:34:01 <Jii> .. with a minor correction just right now adde
10:34:02 <Jii> d
10:35:23 <Jii> oh, was that the wrong one, wait :)
10:38:30 <delYsid> cool
10:38:33 <delYsid> which one is it now? :)
10:39:00 <delYsid> ahh, both, right?
10:40:03 <delYsid> thanks Jii
10:40:12 <Jii> now, there's three :)
10:41:08 <Jii> the first two are just after "extra input for the Char argument):" in the text and the third is just after "compound action, like this:"
10:43:36 <delYsid> wow, thanks again
11:10:41 <Jii> that was some net split
11:15:40 <delYsid> er
11:15:49 <delYsid> Anyone using LambdaTeX or haskell.sty?
11:16:41 <delYsid> I've looked at haskell.sty, but it seems to require specially written code in the \code{haskell} env.
11:16:46 <delYsid> I've read that LambdaTeX does automatic typesetting, is that true?
11:22:23 * dark is in SGML land now.
13:08:01 <jadrian> hello
13:09:27 <jadrian> anyone going to the advanced functional programming summer school at Oxford?
13:09:36 <gabor> yesterday I managed to set up an ADSL connection. not from home though
13:09:53 <gabor> sorry wrong channel :-)
13:09:57 <jadrian> lol
13:09:59 <jadrian> thought so :)
13:10:17 <Heffalump> jadrian: I am
13:10:41 <jadrian> hi Heffalump
13:10:43 * gabor gets confused at times :-)
13:10:48 * jadrian is going there too
13:10:51 <Heffalump> cool
13:10:55 <jadrian> Heffalump: from england?
13:10:59 <Heffalump> yes, Oxford :-)
13:11:05 <jadrian> ah
13:11:09 * Heffalump and Igloo are helping with registration and showing people around and stuff
13:11:13 <jadrian> <- Portugal
13:11:30 <jadrian> cool :)
13:13:17 <jadrian> the summer school seems pretty cool, with lab sessions and all
13:15:49 <Heffalump> you haven't seen the lab yet :-)
13:16:05 <jadrian> good lab?
13:16:24 <Heffalump> well, I was being rude about it
13:16:25 <Heffalump> but it's ok
13:16:30 <jadrian> ah lol
13:16:33 <Heffalump> can get a bit hot though
13:16:45 <Heffalump> I'm not entirely sure which lab it'll be in
13:17:03 <jadrian> there was *one* thing I didn't like!
13:17:17 <jadrian> the evening meal prices lol :)
13:17:22 <Heffalump> oh, how much are they?
13:17:27 <jadrian> 17 £
13:17:31 <Heffalump> ouch!
13:17:38 <jadrian> that is a lot right?
13:17:44 * Heffalump isn't paying for anything but is presumably also not getting any meals
13:17:47 <Heffalump> yes.
13:17:56 <Heffalump> did you have to get them?
13:18:19 <jadrian> it's kind of complicated for me to know if it's cheap or not, since prices are lower here
13:18:21 <jadrian> nope
13:18:26 <jadrian> I didn't choose any evening meals
13:18:33 <Heffalump> what kind of food do you like to eat?
13:18:53 <jadrian> well I can eat all kinds of stuff :)
13:18:58 <Heffalump> you can eat fast food for <£5, pizza for ~£10, Chinese for ~£10
13:19:27 <jadrian> that's not bad at all
13:19:45 <Heffalump> there's a nice chinese place near the lab and St. Anne's
13:19:59 <Heffalump> pizza and fast food you have to go into the centre of town for
13:20:04 <Heffalump> what are the lunch arrangements?
13:20:06 <Jii> stupid brits that have not switched to euros
13:20:09 <jadrian> oh yeah, nice
13:20:13 <Heffalump> s/stupid/clever/ :-p
13:20:28 <jadrian> hehehe yeah euros would be really nice now
13:20:36 * Heffalump is very anti-euro but won't get into a political conversation on here :-)
13:20:43 <dark> I think I paid like five pounds for a decent pub meal in Cambridge.
13:20:47 <dark> Hard to remember, though :)
13:20:51 <Heffalump> oh yes, pub food, forgot about that
13:20:53 <jadrian> I had to buy £s, then I'll have to sell them
13:20:56 <Heffalump> yes, that is around £5 too
13:21:07 <dark> Heffalump: How could you forget?  It's the one thing that allows foreigners to survive there :)
13:21:12 <jadrian> Heffalump: I'll live to see the US people using euros heheh :P
13:21:13 <jadrian> :)
13:21:14 <Heffalump> dark: :-)
13:21:29 <jadrian> Heffalump: wjay is pub food?
13:21:37 <jadrian> "what"
13:21:48 <dark> jadrian: Interesting mistake... which hand do you use for t and y?
13:21:48 <Jii> grease
13:21:49 <Heffalump> are you asking what kind of food it is, or just what it is at all?
13:22:00 <jadrian> dark: left hand
13:22:06 <dark> jadrian: For h too?
13:22:15 <jadrian> dark: no no no right hand
13:22:25 <jadrian> dark: for both
13:23:07 <dark> jadrian: I guess it's no weirder than me using the knuckle of my pinky for control.
13:23:19 <jadrian> Heffalump: what kind of food
13:23:43 <dark> jadrian: It was "normal" food :-)  Chicken and potatoes, that sort of thing.
13:24:16 <jadrian> oh normal food in pubs
13:24:29 <dark> I think I had an omelette.
13:24:34 <jadrian> our pubs don't really sell that much food
13:24:41 <jadrian> mostly drinks...
13:24:43 <jadrian> :)
13:24:53 <dark> Not fancy stuff like filet mignon with red wine sauce :)
13:25:02 <jadrian> hehehe
13:25:17 <dark> And no burgers with fries either.  Er, chips, sorry.
13:25:55 <jadrian> :)
13:25:56 <dark> Served by pretty girls, too.  I guess they were students working part-time.
13:26:04 <jadrian> :)))
13:26:27 <Jii> do they (pubs) still close at around 10 or 11 pm?
13:26:30 <dark> Actually I'd be happy if I could get similar food for those prices here.  It's either greasy fast food or overly classy (pricy) restaurant food.
13:26:34 <jadrian> dark: you're going to the AFP summer school too?
13:26:44 <dark> jadrian: No I visited Cambridge last year :)
13:26:47 <jadrian> ah
13:27:14 <dark> So, yeah, I would visit England for the food ;-)
13:27:19 <jadrian> Heffalump: by the way, what are we going to use, do you know? Win, Linux?
13:27:38 <jadrian> Heffalump: (or can we choose...)
13:27:51 <Heffalump> errm, almost certainly Solaris
13:28:00 <Heffalump> jii: 11pm, yes
13:28:00 <jadrian> nice 
13:28:14 <Heffalump> no, it's not :(
13:28:20 <Heffalump> solaris is horrible.
13:28:35 <dark> The one nice feature about Solaris I remember is that renice works on other people's processes.
13:28:47 <dark> This was useful when the naughty web server was competing with our MUD :)
13:28:48 <Jii> solaris the movie, by tarkov is great :)
13:29:01 <jadrian> mmm I don't have that many experience with it... I said nice because I like to try new stuff :)
13:29:31 <Heffalump> ah, ok
13:29:38 <Heffalump> I hope they make sure there's a recent version of GHC installed.
13:30:34 <jadrian> hope so too
13:30:40 * jadrian is a implicit parameters freak :)
13:30:55 <Heffalump> damn, I don't have an account on the machines we'll probably be using, so I can't check
13:31:48 <Heffalump> are you going to the generic programming workshop too?
13:32:35 <jadrian> Heffalump: yeap :)
13:33:17 <jadrian> Heffalump: I still didn't get my receipt/confirmation for that one, but I've been credited already... hope everything is ok...
13:33:55 <Heffalump> I suspect Jeremy is just busy
13:33:56 <Jii> generic programming in general or in haskell?
13:34:11 <jadrian> Jii: in general
13:35:15 * Heffalump notices that food during the day is 16.50
13:35:52 <jadrian> Heffalump: I choose that one
13:35:58 <jadrian> just didn't select evening meals
13:36:18 <Heffalump> 16.50 is way over the top, though I guess not being able to have coffee and tea with people could be inconvenient
13:36:33 <Heffalump> but getting a sandwich for lunch would be something like £2-£3
13:37:00 <jadrian> damn... I thought 16.50 for two meals would be ok...
13:37:22 <Heffalump> breakfast is included with the accomodation, isn't it?
13:37:27 <dark> Oh that's a price, not a time :)
13:37:41 <dark> Here I thought 16:50 was a bit late for lunch :)
13:37:46 <Heffalump> :-)
13:38:02 <jadrian> Heffalump: do you know you can have a full meal for about 1£ in our University? (full meal=soup, main, bread, dessert, water)
13:38:41 <Heffalump> jadrian: nope, but then I know living costs in Portugal are a lot lower than here
13:39:12 <Heffalump> the trouble with having a conference in an Oxford college is that they are used to being able to rip off American summer schools who want the "Oxford experience"
13:39:15 <jadrian> Heffalump: yes, a lot lower. 
13:39:25 <dark> I almost had a chance to move to portugal for a job once, but the company closed that branch before they hired me.  Good thing, I guess.  Slightly later would have been awkward :)
13:39:28 <jadrian> hehehe
13:40:45 <jadrian> Heffalump: and are we going to get it? the "Oxford Experience"? :)
13:40:59 <Heffalump> hmmm...
13:41:02 <dark> jadrian: You mean, canings in the morning? :)
13:41:12 <Heffalump> Oxford != English public school
13:41:19 <jadrian> canings? what's that? 
13:41:48 <jadrian> Heffalump:  "!=" ?? shame on you :P
13:41:51 <Heffalump> :-p
13:42:01 <dark> Heh.
13:42:06 <dark> I'm still confused by /=
13:42:11 <dark> Looks silly to me.
13:42:19 <Heffalump> canings = being caned, i.e. hit with a stick sort of thing as a punishment
13:42:27 <Heffalump> yes, it does
13:42:37 <Heffalump> I generally just use not (... == ...)
13:42:53 <jadrian> ah... I'm usually the Dom one...
13:42:56 <dark> But non-geeks don't understand !=.  Then again they don't understand /= either.
13:43:08 <jadrian> well it makes more sence than !=
13:43:15 <jadrian> sense
13:43:23 <jadrian> (sense, sence?)
13:43:26 <Heffalump> well, if you're used to ! for not, != is fine
13:43:27 <Heffalump> sense
13:43:35 <dark> I've seen a very confused conversation where one side thought != meant "really really equal"
13:43:35 <jadrian> Oh
13:43:46 <jadrian> I had never thought about that :)
13:44:22 <jadrian> I just whish we could use real math symbols 
13:44:42 <dark> jadrian: You can, in a way.
13:45:01 <jadrian> dark: in theory, because it should handle Unicode
13:45:08 <jadrian> dark: not in practice
13:45:12 <dark> Right, then you just need a module that defines all the math symbols.
13:45:38 <dark> I don't think it'll be that hard to patch ghc for it.
13:45:47 <dark> Doing it in a way that will not make the ghc authors barf is harder :)
13:45:56 <jadrian> there is an easy solution, and I kind of advertised it in the haskell mailing list.
13:46:04 <jadrian> for Xemacs only
13:46:29 <jadrian> http://x-symbol.sf.net
13:46:33 <dark> One of my plans is to make a Linux distribution that uses utf8 from the ground up.
13:46:39 <dark> But I have many plans :-)
13:47:12 <jadrian> have you ever used LaTeX in Xemacs?
13:47:12 <Jii> well, '=' makes sense in haskell, that's a bonus :)
13:47:19 <dark> jadrian: No, never used Xemacs.
13:47:33 <jadrian> dark: do you know LaTeX?
13:47:50 <dark> jadrian: Yes, but I haven't used it in years.
13:47:53 <Heffalump> = makes sense if you're prepared to accept that least fixed points are the correct way to resolve ambiguities
13:47:58 <Heffalump> (in Haskell, that is)
13:48:06 * Heffalump uses LaTeX in xemacs all the time
13:48:08 <dark> Heffalump: What would be an ambiguity?
13:48:16 <jadrian> There is a x-symbol mode for xemacs that parses your buffer and changes some tokens into math symbols
13:48:24 <Heffalump> dark:
13:48:25 <Heffalump> foo = foo
13:48:28 <jadrian> you type: \alpha and it changes into a real alpha
13:48:46 <Heffalump> that's true about any value of foo, but in Haskell it defines foo to be bottom
13:48:47 <jadrian> that could be used in Haskell
13:48:58 <jadrian> you'd type _alpha and you'd get an alpha
13:49:11 <dark> jadrian: Hmm but _ already has a meaning :)
13:49:33 <jadrian> dark: that was just an example, you can define the parser
13:50:04 <jadrian> dark: but what is the meaning of _? I have used it already
13:50:06 <dark> jadrian: Personally I would rather leave this to the input engine, and have the Haskell compiler accept UTF-8.
13:50:32 <Jii> i can't get over the fact that '==' for equality testing looks unnatural to my eye ;-)
13:50:43 <jadrian> dark: yes me too, but even then I would like to have a xemacs mode to be able to get alphas by typing _alpha (or whatever)
13:50:44 <dark> jadrian: Well in pattern bindings, the Report encourages compilers not to warn if an identifier that starts with _ is not used on the right-hand side.
13:51:13 <jadrian> dark: ah, I didn't know that
13:51:24 <dark> jadrian: Right :)  But I'd want that not to use _, but a special key on the keyboard that means "start of special character"
13:51:37 <dark> jadrian: I have plenty of keys that i'm not using :)
13:51:57 <jadrian> dark: that is a good idea too
13:52:00 <dark> jadrian: And then nothing else ever sees that it wasn't an alpha to begin with.  I think it shouldn't be emacs that does this, but X and/or the console.
13:52:18 <dark> jadrian: This is part of what I mean with "a linux distribution that uses utf8 from the ground up".  That sort of thing :)
13:52:45 <jadrian> dark: that would be great, but we are going to have to wait a loooong time before we can use that. So in the mean time an x-symbol mode would be nice :)
13:53:04 <dark> jadrian: Sure, just remember that these are all patchwork solutions that will be swept away when the Revolution comes :-)
13:53:35 <jadrian> dark: yeap...
13:54:06 <Jii> in the haskell 2000? :-)
13:55:24 <jadrian> well I got to go, later!
13:55:39 <jadrian> (either here or at the summer school)
13:55:45 <Heffalump> bye :-)
13:55:50 <jadrian> bye ;)
14:00:50 <Jii> that dijkstra memorial and his death is getting a lot of mentions in personal weblogs of all sorts of programmers and such
14:05:22 <dark> Jii: Well I know it made me feel older.
14:06:03 <Jii> but luckily it's not that he didn't get any honors or awards during his life, he did
15:42:14 <dark> Anyone for a game of Go?  I've gotten hooked again, but I don't want to play with strangers :)
15:56:31 <delYsid> hey shapr
15:56:49 <hdaume> shapr: yup, it helps
15:57:38 <shapr> hdaume: excellent :-)
15:57:40 <shapr> y0 delYsid
15:58:12 <hdaume> does anyone else get weird results when they do ':t uncurry flip' in ghci?
15:58:28 <shapr> delYsid: looks like your question returned useful info, have you had time to check out the recommended urls?
15:58:40 <delYsid> shapr: yeah.
15:58:44 <shapr> cool stuff?
15:58:49 <delYsid> the alpha-beta library looks promosing.
15:59:16 <delYsid> And the Mate.hs stuff is nice, I can used the Board datastructure and the Move generation functions from there...
15:59:25 <shapr> Prelude> :t uncurry flip
15:59:25 <shapr> forall a c b. (a -> b -> c, b) -> a -> c
15:59:32 <shapr> hdaume: that's what I get from 5.04
16:02:32 <hdaume> shapr: why isn't it (c,b)?
16:03:35 <hdaume> nm, i'm dumb
16:03:42 <dark> hdaume: Wouldn't that be uncurry . flip?
16:04:47 * shapr thinks about that
16:18:40 <shapr> hdaume: sometimes the act of asking the question stimulates the brain cells enough to discover the answer.
16:18:45 <shapr> happens to me all the time.
16:19:25 <shapr> I have a stuffed purple pterodactyl that I describe my problems to before asking someone else.
16:21:02 <shapr> I heard about that great idea on the original Wiki, where the head developer in some company had a cardboard Wookie in the room before his office.
16:21:29 <shapr> and he required his developers to describe their problem to the Wookie first, and then if they didn't have the answer, they could come and ask him.
16:21:46 <shapr> I've heard that described as "rubber ducking" also.
16:24:34 <hdaume> hehe
17:01:03 * shapr goes to sleep
17:02:52 * ChilliX is away: Doing stuff...
17:02:54 * ChilliX is back (gone 00:00:02)
19:40:53 <delYsid> hmm
19:41:06 <delYsid> Does a prelude have a function with a sig like Monad m => m a -> m b -> (a -> b -> m c) ?
19:44:10 <clausen> what's c?
19:45:36 <delYsid> say I do
19:47:05 <delYsid> a >>= \x1 -> b >>= \x2 -> return . combine x1 x2
19:47:06 <clausen> there should be an easy way of searching
19:47:20 <clausen> well, in hugs, you can do ":t X"
19:47:45 <delYsid> then with this function I could just say
19:48:17 <delYsid> func a b (return.combine)
19:48:31 <clausen> can you please put brackets in?
19:48:36 * clausen confused with precedence
19:48:53 <delYsid> brackets?
19:49:41 <delYsid> do { x1 <- a; x2 <- b; return . combine x1 x2}
19:50:54 * delYsid just found either and thinks such combinators are really cool
19:51:37 <delYsid> Reading Appendix A of the Report is really interesting
19:51:50 * clausen doesn't have "combine"
19:52:00 <clausen> one day, I'll read this stuff
19:52:07 <delYsid> combine is just to illustrate.
19:52:08 <clausen> but, first I'm more interested in data structures
19:52:23 <delYsid> combine:: a -> b -> c
19:52:36 <delYsid> er, or
19:52:39 <clausen> some aggregate function?
19:52:41 <delYsid> combine:: a->a->a
19:52:52 <delYsid> combine could be (+) for instance.
19:53:00 <clausen> yep
19:53:01 <delYsid> It's just a function which takes to arguments
19:53:34 <clausen> anyway, that looks useful
19:53:52 <delYsid> yeah, so I thought it probably already exists :)
19:54:19 <clausen> otoh, why wouldn't you just do it manually?
19:54:34 <delYsid> well, of course I can.
19:54:40 <clausen> like, writing (magic a b +) isn't much clearer
19:54:41 <delYsid> I'm just experimenting with the language...
19:54:44 <clausen> yep
19:55:12 * clausen doing a massive dist-upgrade
19:57:04 <delYsid> ahh :)
19:57:25 * clausen thinks he's been 0wn3d
19:57:41 <delYsid> hehe :)
19:57:45 <delYsid> well, I need to sleep now
19:58:09 <clausen> cya
