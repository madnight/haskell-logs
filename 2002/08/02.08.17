03:53:38 <shapr> boing
04:23:32 <Jerub> shapr: boing
04:23:34 <Jerub> hows things?
04:24:16 <Jerub> I've come (independantly) to the conclusion that there are technologies invented for the sole purpose of making consultants money.
04:33:01 <shapr> Jerub: I agree with you... what tech are you thinking of ?
04:34:05 <Jerub> XML/XLANG/WDSL
04:34:17 <shapr> heh
04:34:23 <shapr> what's WDSL again?
04:34:31 <shapr> XML is minorly useful.
04:34:57 <Jerub> Workflow blah blah Language
04:35:38 <Jerub> I'd url you, but its 90% consultantspeak
04:35:54 <shapr> thanks for saving my brain cells ;)
04:36:57 <shapr> XML is good for separate content from presentation. XML can be a domain specific representation.
04:39:35 <Jerub> shapr: XML is good for large datasets being transfered between organisations.
04:40:16 <shapr> XML is better than ASN.1
04:40:28 * Jerub laughs
04:40:29 <Jerub> yes.
04:42:39 <shapr> I like the HaXml approach
04:42:49 <Jerub> hows that?
04:43:24 <shapr> haxml compiles DTDs to haskell datatypes
04:43:38 <shapr> so it allows you to directly manipulate an XML document in Haskell.
04:44:18 * Jerub grins
04:44:22 <shapr> that sounds a realization of the dream of the guys who designed XML.... transparent integration into the programming language you're using.
04:44:53 <shapr> I've worked with XML and ASN.1 in Java, and it's always a huge struggle.
04:45:57 <dark> shapr: haxml sounds cool.
04:47:18 <dark> Yeah, my primary complaint against XML is that even if you use an "XML parser" (lexer, really), you still end up having to write hundreds of lines of code to pick apart the document structure.
04:48:04 <dark> I could have used those hundreds of lines of code to parse a language that doesn't wear out the < and > keys on my keyboard :-)
04:49:37 <shapr> right
04:53:10 <Jerub> I found a keyboard where the <> keys are inadvertantly mapped to a non-shift combination under some keyboard encodings.
04:53:16 <Jerub> I can't remember what it was, but it was funky
04:53:24 <Jerub> made html easier
05:20:05 <shapr> is there a hidden markov model module for haskell somewher
05:20:06 <shapr> e?
05:24:57 * Jerub thinks
05:25:06 <Jerub> I dunno, but I think I could write one if given the inclination.
05:43:53 <shapr> hi loom2, pesco
05:44:32 <loom2> shapr, pesco :)
05:46:01 <shapr> ya know...
05:46:14 <shapr> there's a resemblance to suffix trees and hidden markov models
05:46:18 <shapr> er "between"
05:49:50 <loom2> didn't know ;) i did not yet encounter any of the two in my studies.
05:50:38 <shapr> well, I'm just guessing.
05:50:54 <shapr> statistics of time related associations?
06:26:32 * shapr boings
06:43:33 * dandelion- is away: I'm busy
06:57:58 <shapr> boing
07:03:49 <dandelion-> shapr: have you got hopengl to run?
07:04:06 <shapr> not the debian package
07:04:33 <shapr> I think michaelw packaged the hslibs OpenGL, which is the wrong one
07:05:59 <dandelion-> yes, i think so, too
07:06:12 <dandelion-> found that out after 3 hours
07:07:28 <shapr> I'll send him an email about it.
07:21:44 <dark> I've been reading up about gcc's asm statement.  Its flexibility is scary :)
07:21:51 <shapr> ??
07:21:55 <dark> *grin* Maybe I'll just uncompile to a list of asm statements.
07:22:00 <shapr> heh
07:22:22 <shapr> I'm very curious about the -athlon-mp opt in gcc 3.1+
07:22:32 <shapr> almost curious enough to read up on it.
07:23:01 <dark> Anyway... some instructions to have to be represented as asms.  I'm hoping to eliminate those by e.g. parsing linux kernel headers and back-translating to the macros there.  Assuming that any programs that use those instructions are part of the kernel :-)
07:23:51 <shapr> good idea
07:23:56 <dark> But it looks like the only way to represent the asm statement is as an operation with lists of inputs and outputs.  That will make life difficult for my simplifier :)
07:24:05 <shapr> can you autogen that info from kernel source?
07:24:15 <dark> (I'm going to use something similar to compiler optimization, to eliminate registers from the expressions)
07:25:34 <dark> shapr: Well I intend to have a header parser anyway, as an easy way to get function prototypes.  And I'll need some sort of macro matching to figure out when a sequence of instructions is actually an inlined strcpy, for example.  Matching random macros from the kernel headers would be a generalization of the idea.  It might even be easier, it's hard to represent asms as anything else, while there are oodles of ways to do a strcpy :)
07:26:56 <dark> Simple example:
07:26:59 <dark> #define __cli()                 __asm__ __volatile__("cli": : :"memory")
07:27:27 <dark> Of course doing it properly means figuring out that there's also a
07:27:29 <dark> #define cli() __cli()
07:27:35 <dark> and that it makes more sense to use that one :)
07:27:42 <dark> Anyway this is still in the future.
07:32:37 <Jerub> shapr: hows things?
07:33:20 <shapr> Jerub: I'm working on J2EE at the moment....
07:33:37 <shapr> big deadline on wednesday, after which I'll have more time to spend on Haskell.
07:33:48 <shapr> two weeks till ICFP
07:35:19 <Jerub> shapr: eek.
07:35:30 <Jerub> I should learn zope+j2ee, but I don't have the time atm.
07:35:35 <shapr> zope rocks
07:35:44 <shapr> j2ee is painful
07:35:49 <Jerub> I wish I could learn zope+j2ee so I can apply principals at work.
07:36:01 <Jerub> php sucks, and the way we do php is actively painful.
07:36:17 <shapr> the principles are: separate content from presentation
07:36:54 <Jerub> we have all content+presentation intrinsically interwined.
07:37:24 <shapr> that's difficult to refactor, and difficult to add new presentations.
07:40:32 <shapr> if you use XML as your source, and XSLT to turn your source into html and xhtml
07:40:42 <shapr> then it's easy to add a new bunch of XSLT to make WAP pages.
07:49:23 <Jerub> yeap
07:49:28 * Jerub frowns.
07:49:35 <Jerub> And its easier to write verification software.
07:49:49 <shapr> truly
07:49:56 <Jerub> testcases work better when you can parse XML, instead of having to parse HTML.
07:50:12 <dark> My girlfriend has worked on a system with HTML, WAP, and SMS interfaces :)
07:50:26 <dark> It can get difficult to figure out what is 'content' and what is 'presentation'.
07:50:48 <shapr> yup
08:08:20 <Jii> bleh, i suck at pool billiards
08:08:24 <Jii> it sucks
08:10:09 <dark> Jii: what, a simple application of kinetics?
08:10:46 <dark> Jii: Actually I think Hofstadter constructed a model for a computer based on frictionless billiard balls, thus showing that Newtonian physics can run into the halting problem :-)
08:11:56 <Jii> my games halt too soon, and too often not for my advantage
08:12:48 <dark> Well at least they're not infinite, like what they call 'biljart' in dutch.
08:13:16 <dark> I don't know its english name, but you have one white ball and two red, and no pockets.  The idea is to hit both reds with the white.
08:13:34 <Jii> there's a nice paper about physics of billiards but it doesn't help much on the table
08:13:56 <Jii> it's called 'carom', i think
08:13:59 <dark> A good player can get all three balls together and then use small strikes to 'walk' them around the edge of the table, scoring points every time.
08:14:13 <dark> Game ends when player develops wrist cramps :-)
08:14:20 <Jii> yes, that's why they have made modifications to the rules
08:14:35 <dark> Jii: Which modifications?
08:15:17 <Jii> well, i can't remember then specifically, but they were to prevent that 'walking'
08:15:24 <Jii> it's not very popular game though
08:15:57 <Jii> as far as i know there are several rule sets
08:18:29 <Jii> what's nice about it that they have to make very difficult shots all the time
08:19:06 <Jii> whereas in 9/8 ball the usual game consists mainly of pretty boring (looking) shots
08:21:46 <Jii> dark, basically there's some rule about hitting the walls
08:21:54 <Jii> added hit, that is
08:26:37 <Jii> doing an extended monolog is rather boring, too
08:32:22 <dark> Jii: Sorry, I'm coding at the same time :)
08:32:39 <shapr> I'm coding java
08:32:53 <Jii> don't have to be sorry, i just noted
08:33:04 * shapr grits teeth
08:34:01 <Jii> shapr, are you ready to read a paper that test-first programming to the traditional way and the results weren't that convincing? ;-)
08:34:30 <shapr> I'll read it, but I won't believe it.
08:34:47 <Jii> you have data that proves otherwise? :)
08:34:55 <shapr> sure, my own experience.
08:35:06 <Jii> heh, that's not very reliable
08:35:17 <shapr> it is to me ;-)
08:35:25 <Jii> yeah, that is true
08:35:29 <shapr> it's my number one source of data
08:35:50 <Jii> you could gather data of your own doings too, though
08:36:10 <shapr> it was immediately obvious.
08:36:20 <shapr> kind of like the difference between using a handsaw and a motorized saw.
08:36:24 <Jii> it requires a bit of work
08:36:34 <shapr> I didn't need to gather data, I just thought "oh, wow."
08:37:07 <shapr> yah, TDD requires more discipline.
08:37:09 <shapr> significantly more.
08:37:13 <Jii> umm yes, this is where i don't agree exactly, but you are of course entitled to your opinions :)
08:37:27 <shapr> what do you think?
08:38:39 <Jii> that one needs data to gain knowledge of, even own, doings (i mean programming and such now)
08:38:50 <Jii> well, anyway, http://www.ipd.uka.de/EIR/xp/ease02.ps.gz
08:39:10 <Jii> it's just an experiment, so they can't make too broad conclusions
08:39:20 <Jii> which they state, too
08:39:47 <Jii> i think they found that test-first programming increased knowledge of the program and increased reuse too
08:40:50 <Jii> i like the way that empirical informatics research group works
08:42:40 <shapr> Jii: they missed a basic part in that experiment
08:42:54 <shapr> the method declarations are already given, just not the bodies.
08:43:23 <shapr> part of the strength of test-first is that it forces you to think about the API before you write the code.
08:44:19 <shapr> you continue thinking about the API as you write the code.
08:45:25 <shapr> Jii: once again, this is just my opinion :-)
08:45:45 <shapr> Jii: have you tried TDD?
08:46:08 <Jii> yeah, it just that i haven't done any serious large scale programming for a while
08:46:30 <shapr> what do you think about TDD?
08:46:41 <shapr> from your experience?
08:47:10 <Jii> i think it's good, but i do fear that i get that false sense of security :)
08:47:24 <shapr> how so?
08:47:42 <Jii> well, unit tests cover only so much
08:47:47 <shapr> really?
08:47:51 <shapr> what do they miss?
08:48:52 <Jii> even cumulative testing with practically all methods use don't get near 100% coverage
08:49:42 <shapr> the XP books say at one point "test what could possibly break"
08:50:15 <shapr> in another part they say "there will always be bugs, decide how many bugs you can tolerate, and write enough tests to get you below that amount of bugs"
08:50:23 <shapr> there are also different approaches
08:50:41 <shapr> I've been thinking of a testing suite that includes xUnit, Design By Contract, and QuickCheck for every language.
08:50:52 <dark> I was once shown the Holy Grail of bug-free programming, and I've been chasing it ever since :)
08:51:36 <shapr> I suspect that Design by Contract is actually a subset of QuickCheck, but I haven't proven that to myself yet.
08:51:38 <dark> My teacher wrote down a list of programs that had had no bugs during their entire span of operation.  There were five :-)
08:51:52 <shapr> what were they?
08:52:25 <Jii> tex?
08:52:32 <dark> One was a program for the U.S. census in the late '60s.  Another was an automatic pilot for a combat helicopter.  I don't remember the others.
08:53:39 <dark> Of course, we'll never know if this just means their span of operation wasn't long enough to uncover some bugs :)
08:54:27 <dark> Jii: Not TeX.  IIRC it had some small number of bugs.
08:54:44 <shapr> Jii: have you tried Design By Contract and QuickCheck?
08:56:38 <dark> Heh, indentation for a case inside a where is tricky.
08:56:43 <shapr> imho, TDD reduces time spent changing the API, and reduces time spent tracking down bugs. It does give a better sense of security, mostly because you know that some parts of your program do work to some degree.
08:59:23 <Jii> i have only read about design by contract
08:59:33 <Jii> at least it *sounds* very convincing :)
09:09:16 <Jii> (EIR has a study on the effects of design by contract too)
10:32:03 <jleuner> anybody around?
10:41:28 <shapr> jleuner: yah
10:41:29 <shapr> what's up?
10:46:14 <jleuner>  john will be back
10:46:34 <shapr> ?
10:46:37 <shapr> ok
10:50:03 <jleuner> hello, how are you?
10:50:20 <shapr> I'm frustrated... trying to figure out how to get a jdbc source available inside a jsp
10:50:42 <jleuner> mm, I haven't really done much jsp
10:50:51 <shapr> lucky you :)
10:50:58 <jleuner> why would jdbc not work?
10:51:11 <jleuner> Is it a problem to establish a connection every time?
10:51:59 <shapr> anything that works at this point :-)
10:52:41 <jleuner> have you tested your jdbc setup outside of the jsp?
10:52:49 <shapr> yes, it works.
10:53:00 <shapr> that's why I'm frustrated.
10:53:25 * Igloo waves from home at last!
10:53:31 <shapr> hiii Igloo!
10:53:33 <shapr> ltns!
10:54:40 <jleuner> Igloo has been travelling?
10:55:20 <Igloo> No, recently moved house and just got ADSL sorted
10:56:00 <jleuner> happy days
10:56:17 <jleuner> I'm at home on 28k dialup
10:57:40 <jleuner> So next weekend is the competition?
10:57:44 <Igloo> Bummer - I decided it wasn't even worth setting that up for a couple of weeks
10:57:53 <Igloo> Eeep, is it?
10:58:53 <shapr> is it next week? or the week after?
10:58:54 * shapr looks
10:59:43 <shapr> http://icfpcontest.cse.ogi.edu/
10:59:45 <Igloo> Heff and I can't make next weekend (at least most of it), so I hope it's not
11:00:01 <shapr> august 30th - september 2nd
11:00:08 <shapr> it's the weekend after
11:00:10 <Igloo> Ah, cool
11:00:18 <shapr> this is the 17th, yes?
11:00:20 <jleuner> Ah, just me that's lost in time
11:00:22 <Igloo> OK, I have bandwidth and am not aware of anything else I have to do
11:00:46 <jleuner> I think I sent a status report at work yesterday with a date of August 26
11:01:07 <Igloo> :-)
11:01:13 <shapr> jleuner: I was 24 for two years because I got confused the first time...
11:01:16 <shapr> so you could be right.
11:01:24 <jleuner> hehe
11:01:48 <Igloo> I've decided to give cook a whirl, BTW (make/scons-a-like)
11:06:10 <jleuner> ?
11:08:25 <Igloo> I'm looking at build tools (like make)
11:09:33 <jleuner> ah
11:29:37 <jleuner> bye
12:06:34 <hornby__> hornby__? geez
12:06:58 <hornby> man, I never get to hang out here anymore. 
12:07:26 * hornby goes away again, sigh
13:00:37 <Lunar^> Hi
13:38:51 <shapr> hi Lunar^
13:39:17 * shapr bounces
13:39:27 <shapr> wish I could write Haskell Server Pages instead of Java
13:39:29 * shapr sighs
13:40:34 <shapr> I just ordered the other Functional Datastructures book...
13:40:39 <shapr> not the Okasaki book
13:40:42 <shapr> Guy LaPalme I think
13:41:22 <shapr> and I ordered Analysis Patterns by Martin Fowler
13:41:55 <Lunar^> shapr: There were a project about it once dunno if it works... any way, you could use cgi-bin
13:42:28 <shapr> I just wish I could persuade my boss to let me do HSP ;-)
13:48:23 <Lunar^> shapr: Tell him that you are going to be 400% faster
13:49:22 <shapr> tried that already.
13:51:27 <Lunar^> Damn! ;)
13:58:41 <hornby> shapr: HSP? exists? 
13:58:53 <shapr> hornby: I don't know.
13:59:01 <hornby> shapr: heh, oh. probably not then :)
13:59:01 <shapr> WASH exists.
13:59:04 <hornby> WASH?
13:59:32 <shapr> yah, Peter Thiemann wrote it
13:59:39 <shapr> does HTML generation and CGI stuff too
14:00:06 <hornby> neat
14:13:15 <shapr> hornby: I'd be using WASH for CGI already, but there's a weird compilation problem I haven't finished tracking down.
14:13:24 <shapr> someone recently mentioned it on ghc-users
14:13:52 <shapr> for WASH-CGI, the CGIInternals.hs can eat at least 300MB of stack without a successful compile.
14:14:11 <shapr> I've cut out about half of that file, and I'm still getting the stack problem
14:14:16 <shapr> so I figure I'm on the right track.
14:17:46 <hornby> shapr: wow
14:18:29 <hornby> Is WASH-CGI still being maintained? Can't the maintainers fix it? :0
14:18:38 <shapr> yah, I emailed Peter Thiemann
14:18:43 <shapr> he said "that's a compiler problem."
14:19:04 <shapr> so I'm going to keep cutting down the file till I can't cut anymore, and then send the leftovers to the ghc-users list
14:20:25 <hornby> coo,.
14:20:35 <shapr> hornby: what are you doing lately?
14:20:38 <hornby> what about trying a different compiler? 
14:21:31 <hornby> shapr: not much. mostly running around doing real life things. busy week. housemates moving to Japan, new ones moving in, road trips, squash games, sushi eating. Fun, but not very productive. 
14:21:45 <shapr> fun is just as important as productivity.
14:21:53 <hornby> shapr: Well fun is fun. 
14:21:59 <hornby> shapr: What're you up to? 
14:22:48 <shapr> j2ee
14:22:57 <hornby> jsp? 
14:23:00 <shapr> big deadline on wednesday.
14:23:01 <shapr> yah, jsp
14:23:09 <shapr> painful stuff.
14:23:12 <hornby> gonna finish? :)
14:23:20 <Lunar^> Plain JSP are always painful
14:23:32 <hornby> I hate deadlines
14:23:32 <shapr> hornby: maybe.
14:23:41 <shapr> some pressure is a good thing.
14:23:59 <hornby> I agree. But I find pressure can be applied without deadlines. 
14:24:36 <hornby> I mean some deadlines are fair. Ie, "We are launching a new product on the 21st. We NEED you to do this by then" -- thats fair. 
14:24:58 <hornby> But deadlines like : "Uh, have it done in 2 days so we can work you hard on something else ASAP" is evil
14:25:10 <hornby> are evil
14:25:18 <shapr> that's not a deadline, that's a deathmarch.
14:26:17 <hornby> Whats the purpose of the JSP? 
14:26:57 <shapr> to write an appointment booking system for a chain of doctor's offices.
14:26:59 * hornby is reading the /. thread on software consulting .. looks fun
14:27:03 <hornby> shapr: neat
14:27:12 <shapr> I said I could do it in 1.5 weeks with Zope, but they ignored that =)
14:27:31 <hornby> shapr: They don't seem to value your input. You should kill them
14:27:37 <shapr> heh
14:27:42 <shapr> actually, I'm going contract instead.
14:27:52 <shapr> this is my last salary project for them.
14:28:24 <shapr> They've already started talking about setting up Zope server.
14:30:25 <hornby> contract, yay
14:30:33 <hornby> You'll make more, and have more control?
14:30:41 <shapr> I dunno about make more money
14:30:52 <shapr> it will give both me and the company more flexibility though.
14:30:57 <shapr> I'm happy about that.
14:31:23 <shapr> there are some good people in this company, I'd like to keep working for them.
14:32:09 <hornby> yeah, flexibility is good
14:33:08 <shapr> they're beginning to come out of their java fixation also, which I like.
14:33:44 <hornby> cool, you can change the culture :)
14:34:05 <hornby> ack, okay, back to real life. later :)
14:36:26 <shapr> cya
14:51:16 <shapr> Jii: aha, check this out: http://citeseer.nj.nec.com/miller90empirical.html
14:51:51 <shapr> see, QuickCheck *should* be part of the standard testing software.
14:57:47 <jadrian> hello all
14:58:32 <jadrian> hi jagular
14:59:02 <jadrian> hello Heffalump! Are you around?
14:59:13 <jagular> yo
14:59:16 <jadrian> hey
14:59:32 <shapr> hiya
14:59:37 <jadrian> hi shapr
15:00:00 <shapr> I think QuickCheck needs to be ported to Python. I like that tool.
15:00:22 <shapr> It's a lot easier to specify conditions for Haskell I think.
15:00:25 <jadrian> shapr: have Heffalump or Igloo been around?
15:00:33 <shapr> jadrian: yah, they have...
15:00:46 <shapr> Igloo was on earlier, haven't heard from Heffalump today though.
15:00:50 <jadrian> :(
15:00:56 <shapr> what's up?
15:01:20 <jadrian> I could use some info about the Oxford Dunctional Programming school
15:01:26 <shapr> jadrian: I still haven't tried your x-symbol hack, but Luke Gorrie posted something much like it to g.e.sources today.
15:01:30 <jadrian> s/Dunctional/Functional lol
15:01:34 <shapr> or yesterday... whenever.
15:01:44 <jadrian> shapr: my hack sucks lol :)
15:02:09 <jadrian> shapr: I did that in a couple of minutes... I just wanted to see how it looked..
15:02:12 <shapr> if it works I'll use it.
15:03:00 <jadrian> shapr: nope not working, just some decodings (tokens->math) :) 
15:03:32 <jadrian> I thought I'd share it just to see if people liked the idea...
15:03:38 <shapr> I like the idea
15:03:52 <jadrian> I'll probably try doing something nice if I have the time later.
15:04:11 <jadrian> I'm just *way to busy* now
15:04:11 <jadrian> :((
15:04:58 <jadrian> In fact, one of the things I wanted to ask Heffalump, was if it would be possible to work on the laboratory after the summer school classes or something like that :(
15:05:27 <jadrian> I need to get a project finished by 2 September and I'm going to be in Oxford from 19-31 Aug. 
15:05:33 <jadrian> I need a laptop lol 
15:06:11 <jadrian> shapr: are you going to the summer school
15:06:14 <jadrian> ?
15:07:15 <shapr> nah, I wish.
15:07:31 <shapr> my time and money are tied up in moving to sweden.
15:08:07 <jadrian> well speaking of time... I got to go... *now*
15:08:25 <jadrian> bbl 
16:18:43 <lodewijk> does anyone here have some HaXml examples?
