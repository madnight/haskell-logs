00:26:22 <jens> yes, i confess it was me, i did it....
00:26:24 <jens> ;-)
01:37:10 * shapr awakens
01:37:19 <shapr> good morning #haskell!
01:43:06 * shapr bounces
01:49:22 <hornby> yoyo
01:49:39 <shapr> hey hornby, wassup?
01:49:50 <hornby> not much. should be sleeping
01:50:07 <shapr> and I should be working...
01:50:19 <hornby> what're you doing instead? :) 
01:50:36 <shapr> reading my email and chatting on irc :-)
01:51:09 <hornby> ah, classic
01:51:39 <hornby> ouch, i'm losing at chess
01:51:52 <shapr> who are you playing against?
01:52:00 <hornby> oh wait, no I'm not, this guy is blind
01:52:01 <hornby> heh
01:52:06 <hornby> some random net person
01:52:37 <shapr> ok
01:53:17 <hornby> just playing random guests on xboard -ics
01:53:37 <shapr> I'd like to play go
01:53:47 <hornby> I'm no good. the board is too big ...
01:54:09 <shapr> I don't think I've ever played go.
01:54:50 <hornby> there is a client for internet play ... hrm
01:55:03 * shapr installs gnugo
01:55:25 <hornby> try cgoban
01:55:55 <hornby> gnugo is okay, but its just a computer sim, and its slow
01:56:16 * shapr installs cgoban
01:57:30 <hornby> go would be a cool game on a small board
01:57:40 <hornby> but on that huge 19 x 19 monster, its just too slo
01:57:42 <hornby> slow
02:00:08 * shapr reads Go directions
02:03:48 <jewel> you can play on small boards
02:04:04 <hornby> can you?
02:04:13 <hornby> is it common?
02:04:20 <jewel> oh yes
02:04:25 <jewel> 9x9 and 13x13 games
02:04:28 <hornby> cool
02:04:38 <jewel> 9x9 is probably a bit like 5-minute chess
02:04:47 <jewel> 13x13 is about 20 minutes
02:04:48 <hornby> 13x13 might be okay
02:05:20 * jewel is a go addict
02:06:08 <hornby> neat
02:06:18 <hornby> I'll have to try that
02:08:47 <shapr> the rules look pretty simple
02:08:52 <pesco> Yo!
02:09:03 <hornby> simple rules yes
02:09:13 <pesco> Break the rules!
02:09:24 <hornby> yes, smash them!
02:09:40 <shapr> y0 pesco
02:09:56 <pesco> Let us join and lift the curse!
02:10:33 <pesco> What's the topic, btw?
02:10:43 <shapr> the game Go
02:10:50 <pesco> Ah!
02:10:57 <shapr> do you play Go?
02:11:15 <pesco> No, I don't know the rules :)
02:11:28 <pesco> But I know a little.
02:12:00 <pesco> Players take turns.
02:12:13 <pesco> You can put your stone on any free field.
02:12:25 <Jii> reminds of this one japanese go guru who said at the age of 80 or so that he has to retire for competitions but that he still studies go 10-12 hours a day :)
02:12:56 <hornby> thats insane
02:13:13 <Jii> "has to retire" because he's so old, that is
02:13:37 <pesco> The goal is to enclose the other players' stones with chains of your own ones. Something like that. But I don't remember how the scoring works.
02:13:43 <pesco> shapr: Can you update me on that?
02:13:54 <shapr> http://www.cwi.nl/~tromp/go/learn/learn.html
02:14:03 <pesco> Thanks.
02:14:17 <Jii> and the funny thing is that computers suck in Go
02:14:29 <pesco> Heh, nice.
02:15:02 <hornby> yeah, and they are slow
02:22:30 <hornby> aha, I still love chess
02:22:33 <hornby> chess is more dramatic
02:25:35 <pesco> shapr: OK, thanks for the URL. Now I can finally play Go! :)
02:29:36 <hornby> anyone wanna play chess? :)
02:31:29 * delYsid didnt like Go when he tried it
02:31:39 <delYsid> hornby: fics?
02:31:57 <hornby> delYsid: ya
02:32:11 <hornby> delYsid: or wherever xboards -ics drops ya
02:32:26 <delYsid> ok, whats your handle?
02:32:33 * delYsid uses chess.el
02:32:48 <delYsid> er, mlang as handle, and chess.el as client software
02:33:06 <hornby> I'm just a lowly guest
02:33:28 <hornby> guest495
02:34:02 <delYsid> 'guest495' is not a valid handle.
02:34:09 <delYsid> huh?
02:34:38 <hornby> hold on
02:35:02 <hornby> whats the server?
02:35:11 <delYsid> www.freechess.org:5000
02:35:16 <delYsid> er, without the www
02:35:48 <hornby> hrm
02:35:54 <delYsid> Anyone interested in helping write chess.hs?
02:36:14 <hornby> aha
02:36:16 <hornby> chess.hs?
02:36:28 <hornby> GuestFTJF
02:37:33 <delYsid> hornby: yeah, using lazy evaluation, it could be quite fun to implement say, a alpha-beta search for chess...
02:37:45 <hornby> delYsid: hrm neat
02:38:06 <shapr> sounds interesting to me
02:40:09 <Jii> a lazy data structure that holds all possible games? :)
02:40:30 <shapr> Jii: yah, like the fibonacci sequence
02:40:44 <hornby> oh yuck
02:40:55 <shapr> you can lazily build a list that holds the fibonacci sequence and only pull out the parts when you need them.
02:41:00 <hornby> hey thats cool
02:41:48 <shapr> Jii: have you read the "Why Functional Programming Matters" memo by John Hughes?
02:41:53 <Jii> shapr, i know, i know, although i don't know whether that's a smart structure for chess games :)
02:41:58 <hornby> what would such a structure look like?
02:42:02 <Jii> shapr, yes
02:42:23 <delYsid> whyfp.ps has an example.
02:42:33 <delYsid> not based on chess, but its a gametree evaluation anyway.
02:42:39 <delYsid> based on lazy lists.
02:42:43 <hornby> hm
02:43:09 <Jii> shapr, i mean, i know already about laziness (in haskell, and in life too ;-)
02:43:12 <shapr> hah
02:43:22 <shapr> what's your impression of Haskell so far?
02:44:06 <Jii> it seems like a very powerful system
02:44:33 <shapr> what good and bad points do you see?
02:44:42 <Jii> but i don't think i yet fully think in pure functional manner
02:44:47 <shapr> hm, I wonder if I sound like a teacher :-)
02:44:53 <hornby> shapr: just a bit :)
02:44:54 <delYsid> argh!
02:44:58 <delYsid> stupidity!
02:45:01 <shapr> where?
02:45:01 <hornby> delYsid: :)
02:45:04 <hornby> delYsid: takeback?
02:45:25 <hornby> bad point #1: its different
02:45:28 <delYsid> nah, takeback is lame
02:45:30 <hornby> bad point #1: its complex
02:45:35 <hornby> er 2
02:46:00 <delYsid> shapr: my game with hornby, I just gave it up
02:46:15 <shapr> oh
02:46:32 <shapr> cool, I just got an email virus.
02:46:38 <hornby> cool, which one?
02:46:43 <shapr> I dunno
02:46:47 * shapr adds it to his collection
02:47:08 <Jii> shapr, i once in a while miss the kind of dynamicity that for example python has (yet i understand it is suitable for haskell per se :)
02:47:12 <delYsid> hmm, playing chess while doing work is not a good idea :)
02:47:26 <hornby> heh
02:47:35 * shapr runs strings on the virus
02:47:52 <shapr> QUIT
02:47:53 <shapr> DATA
02:47:53 <shapr> HELO %s
02:47:53 <shapr> MAIL FROM: <
02:47:53 <shapr> RCPT TO:<
02:48:01 <shapr> ah, it's one of those.
02:48:02 <hornby> wierd
02:48:27 <shapr> delYsid: hey, at least your boss never looks over your shoulder
02:48:35 <shapr> This program must be run under Win32
02:48:37 <hornby> shapr: yours does?
02:48:48 <hornby> shapr: What makes you say that?
02:49:07 <shapr> hornby: other people complain about their bosses looking over their shoulder?
02:49:21 <shapr> my boss can't seem to make any sense of an emacs window.
02:49:25 <hornby> shapr: I mean, why must the program run under windows?
02:49:30 <hornby> heh
02:49:36 <Jii> shapr, you do everything in emacs? cool :)
02:50:50 <shapr> Jii: well, I also use xmms and galeon
02:51:03 * delYsid also does everything in Emacs, including playing chess with hornby
02:51:21 <delYsid> -KR+-+-Q
02:51:21 <delYsid> PPPB+P+-
02:51:21 <delYsid> -+-+-+-P
02:51:21 <delYsid> +-+-+-+-
02:51:21 <delYsid> -q-NP+-+
02:51:22 <delYsid> +-+-+-+-
02:51:24 <delYsid> ppp+pBpp
02:51:26 <delYsid> +k+r+b+r
02:51:28 <shapr> yah, delYsid uses emacs more than I do... and maybe johnw too
02:51:31 <shapr> but not many people do :-)
02:51:55 <hornby> there has to be SOMETHING emacs can't do
02:52:07 <shapr> it's not multithreaded :-(
02:52:19 <hornby> isn't that a good thing? :)
02:52:28 <shapr> no
02:52:38 <hornby> see, delYsid, thats why you're doing bad
02:52:41 <shapr> if my news server or irc server blocks, I can't edit code.
02:52:43 <delYsid> shapr: methinks it is :)
02:52:43 <hornby> crappy display
02:52:50 <hornby> shapr: oh, thats lame
02:53:11 <delYsid> hornby: man, being blind doesnt leave any alternatives then text-mode
02:53:20 * shapr grins
02:53:21 <delYsid> maybe I'm loosing because I dont see well, maybe.
02:53:25 * shapr laughs
02:53:35 <hornby> delYsid: you're blind?
02:54:16 * shapr grins
02:54:43 <shapr> I really need to get some work done.
02:54:44 * shapr sighs
02:54:49 <hornby> shapr: jsp again?
02:54:53 <shapr> yes... still...
02:55:10 <hornby> enjoy :)
02:55:18 <shapr> delYsid: hey, chess.hs sounds very cool, anything you can point me towards to read beforehand?
02:55:46 <delYsid> shapr: whyfp.ps, the second part of it...
02:55:49 <delYsid> It has examples...
02:55:53 <delYsid> hornby: true
02:56:00 <shapr> ok, cool
02:56:06 <shapr> I'll read that after work...
02:56:18 * shapr goes away to focus on Java :-/
02:57:25 <hornby> delYsid: So you have your client read out the board? And then try to visualize it in your head?
02:57:48 <delYsid> nah
02:57:51 <delYsid> I use a braille display
02:58:00 <delYsid> So I get everything text-mode in a 80-char line
02:58:08 <delYsid> I can move this line of text over the screen...
02:58:40 <hornby> still, it must be hard to get a complete picture of the board?
02:59:16 <delYsid> well, it much be hard to work with monitors :)
02:59:26 <delYsid> What I'm trying to say is, it's normality for me
03:00:10 <hornby> well sure, if thats how you learned ... 
03:00:50 <delYsid> doesnt matter imo. everyone can do everything, it only depends on how much you actually want it
03:01:10 <hornby> sure
03:01:19 <hornby> wow, I never knew they had braille displays, thats really cool
03:02:05 <hornby> do you do everything in braille then? or do you have any of it voice synthesized?
03:03:32 <delYsid> I read long texts with a voice synth, yes.
03:03:42 <delYsid> but braille isnt really usual for computers
03:03:53 <delYsid> In US, no one has a braille display, because Gov. doesnt pay it
03:04:02 <delYsid> (the things usually cost aroun $10.000,-)
03:04:06 <hornby> wow
03:04:25 <hornby> you had yours paid for? where are you?
03:04:32 <hornby> that really seems too expensive
03:05:10 <delYsid> I'm from austria.
03:05:23 <delYsid> Europe (germany, austria, ...) usually get those paid for.
03:05:32 <hornby> awesome
03:07:08 <hornby> I don't see why braille systems are so expensive though. 
03:07:21 <delYsid> Its quite logical.
03:07:31 <delYsid> First of all, the use a quite complicate piezzo technology.
03:07:49 <delYsid> And, of course the rule #1: If not much people need something, it's expensive like hell.
03:07:58 <delYsid> If it's a mass-market, price drops dramatically.
03:08:10 <delYsid> But we are far from having 20% blind people on this planet, so well...
03:08:28 <hornby> Sure, but still.. It would be nice if there were a cheaper way to do it
03:08:42 <Heffalump> how fast do they respond to changes?
03:11:01 <delYsid> changes, well, I'd say 0.05s
03:11:11 <delYsid> or something like that.
03:11:20 <delYsid> It depends on the model, some scroll very fast, some are a bit slower
03:11:54 <hornby> and for input you use a regular keyboard?
03:13:09 <delYsid> sure
03:13:48 <delYsid> hornby: gg
03:13:53 <hornby> aw, gg
03:14:03 <delYsid> But this blunder was too extreme...
03:14:07 <hornby> :)
03:14:26 * delYsid needs to practice chess a bit again.
03:14:32 <delYsid> I didnt play in two months or so.
03:14:37 <hornby> you recovered from the first one nicely, but yeah, two in one game .. 
03:14:45 <hornby> gg tho
03:14:55 <hornby> nice opening
03:15:11 <delYsid> well, I also had my chance (Bc3+)
03:15:30 <delYsid> er, bXc3+ actually :)
03:15:43 <hornby> right
03:16:01 <delYsid> ok, back to work, till later
03:16:13 <hornby> *nod* later
03:16:41 <Jii> alexander alekhin played blind simultan game against around 30 players, lost couple, won most, and got few draws
03:17:02 <hornby> yeah, but he's insane
03:17:15 <Jii> agreed ;-)
03:18:03 <Jii> he had to learn to play in his head since students weren't allowed to do much in lessons at his time in russia :)
03:18:08 <hornby> akelhein is it? alekhien?
03:18:24 <Jii> i don't remember how it was spelled correctly
03:18:59 <hornby> thats cool
03:19:14 <hornby> man, I wish I was that cool. 
03:19:22 <hornby> I need more hardship in my life
03:19:23 <Jii> quite few are ;-)
03:21:11 <Jii> .. by definition
03:22:07 <hornby> The only problem is that self-imposed, artificial hardship doesn't really work
03:22:40 <hornby> or maybe I just don't have the willpower
03:23:41 <Jii> or passion?
03:24:00 <hornby> passion might be an acceptable substitute
03:24:22 <hornby> I have passion, but without direction or wisdom
03:24:55 <Jii> yeah, i mean, if you have a deep passion to something, say, like alekhin to chess, the hardship comes more naturally, or something :)
03:25:23 <hornby> well if you're going to be stubborn, have that passion to such a degree, than yeah, obstacles will appear :)
03:26:06 <Jii> i started to play pool a year ago, and although doing training alone is rather painful (for mind) sometimes, i still keep doing it (more than i should, probably)
03:26:07 <hornby> I guess I just don't have that passion for one single thing. I have it for too many. And balance requires wisdom
03:26:37 <hornby> You any good/ :)
03:28:05 <Jii> it's difficult to measure, but i'm getting better all the time :)
03:29:00 <hornby> now you gotta try to hustle someone :)
03:29:52 <Jii> that's the american way of playing pool ;-)
03:30:16 <hornby> I wonder if there are ANY americans here?
03:32:01 <hornby> shapr doesn't count, cuz he's in Finland
03:33:10 <hornby> hrm, australians, english, finns, austrians
03:33:26 <hornby> someone from liechtenstein? neat
03:33:37 <Heffalump> is that Igloo?
03:33:45 <hornby> Ig
03:33:52 <hornby> ya, 
03:33:56 <Heffalump> he's not really from Liechtenstein :-)
03:34:01 <hornby> Ig == Igloo apparently. oh
03:34:16 <hornby> shame, cool place
03:34:25 <ganesh> see, I can do that too :-)
03:34:45 <hornby> hmm
03:35:17 <hornby> whats urchin.earth.li?
03:35:59 <Heffalump> a machine a couple of friends and I run
03:36:02 <hornby> ooh france
03:36:11 <hornby> ah
03:36:24 <Heffalump> earth.li is basically a cool domain name that a group of us registered
03:36:52 <hornby> why earth.li?
03:37:32 <hornby> signifigance?
03:38:17 <Heffalump> just cos of the sound - it makes us earthlings
03:38:31 <pesco> Heffalump: You run earth.li? I used your Gabber service for some time!
03:39:03 <hornby> ahh
03:40:04 <Heffalump> I don't run it, bloke called Jonathan McDowell does
03:40:11 <Heffalump> the.earth.li is the Gabber server
03:40:35 <Heffalump> urchin is just another random machine in the domain
03:52:26 * Heffalump reads back and notes that .uk /= England
03:57:35 <hornby> well
03:57:43 <hornby> United Kingdom
03:57:48 <hornby> But you're in England. 
04:01:39 <Heffalump> oh, I suppose ox.ac.uk gives that away :-)
04:01:44 <Heffalump> damn :-)
04:05:04 * hornby is all knowing, all seeing
04:10:26 <Heffalump> oh yes?
04:11:07 <hornby> well sort of
05:29:38 <Jii> i wonder if there is some beatiful convenience for writing finite state automata in haskell
05:30:42 <Jii> i made just functions for eache state and the recognition with guards
05:36:43 <Jii> i have a feeling that this should look more elegant ;-)
05:39:27 * hornby writes his own, elegant language
05:41:16 <Jii> was this a comment on my comments anyhow? :)
05:47:06 <hornby> I'm mostly just rambling to myself
05:59:49 <Jii> i am so desperately trying to unteach my imperative habits, that's all ;-)
06:01:18 <delYsid> well, Richard Bird didn't even reply yet!
06:01:37 <Jii> huh?
06:02:02 <delYsid> I wrote him about a digital version of his Haskell book (2nd Ed.)
06:02:34 <Jii> that he should publish it as digital version or what?
06:10:44 <Jii> kinda natural or easy way of writing finite state machines but still .. :)
06:20:55 <Jii> well, maybe i'll get an enlightenment some day
06:27:45 <Heffalump> he's on sabbatical at the moment, so he might not be reading his email very frequently
06:29:04 <Jii> sabbatical?
06:29:42 <Heffalump> time off teaching to concentrate on research
06:29:54 <Heffalump> he's not coming in very often
06:30:20 <Jii> oh
06:48:40 <Jii> do you know what he is working on?
06:52:27 <Heffalump> not sure. functional implementation of pointer algorithms partly, I think
06:54:32 <Jii> hmh
07:02:47 <Jii> yes, there is some "unfolding pointer algorithms" paper in his homepage section named Papers in preparation :)
07:04:26 <delYsid> Jii: Not really, I asked him if he could give me one digital copy of his book.
07:04:34 <delYsid> Cos I want avoid having to ocr the thing
07:06:12 <Jii> ocr?
07:06:26 <Heffalump> jii: that's mostly what makes me think that too :-)
07:20:25 <delYsid> Jii: Optical Character Recognition
07:20:43 <delYsid> Because, reading dead trees is impossible to me...
07:21:11 <Jii> delysid, oh, right
07:21:55 <Heffalump> what about reading live trees? :-)
07:43:54 <hornby> delYsid: did you explain why you wanted a digital copy?
07:50:01 <delYsid> hornby: sure
07:50:30 <delYsid> Heffalump: Ahem, I hope no one prints book on live trees! :)
07:50:41 <delYsid> s/book/books/
07:50:43 <hornby> delYsid: Hope he gives you a copy
07:51:00 <delYsid> hornby: ChilliX did with his stuff (very nice)
07:51:11 <hornby> delYsid: But I don't think he will. Probably can't ... part of his contract?
07:51:24 <hornby> ChilliX has books?
07:51:29 <delYsid> well, there is a can't and a can't
07:51:37 <delYsid> One is categorical, the other is real :)
07:52:12 <delYsid> I mean, if I had written a book in latex, and sold it to a publisher, if I would write myself a mail about it, I'd give myself the thing :)
07:52:18 <delYsid> No matter what my publisher thinks...
07:52:20 <delYsid> But thats me
07:52:46 <hornby> well yeah, you can always just not tell the publisher :)
07:52:59 <delYsid> right
07:53:10 <hornby> And I don't think its the sort of book he's afraid of showing up on #bookwarez
07:53:15 <delYsid> After all, it's a single event, and I promise I will not give it away.
07:53:30 <delYsid> In fact, I've stored sChilliX's book on my usbdrive to avoid having it on a hard disk :)
07:53:46 <Jii> what's sChilliX's book?
07:54:14 <delYsid> s/sChilliX/ChilliX/
07:54:29 <delYsid> comp-intro, a little introduction to comp-sci based on Haskell.
07:55:07 <Jii> is it published?
07:55:26 <delYsid> I think so.
07:55:32 <delYsid> lemme look up the exact title.
07:55:45 <Jii> well, i don't know what's his real name ;-)
07:55:58 <delYsid> An Introduction to Computing
07:55:58 <delYsid> with Haskell
07:55:58 <delYsid> Manuel M. T. Chakravarty
07:55:58 <delYsid> Gabriele C. Keller
07:56:27 <hornby> can't find it on Amazon
07:56:51 <delYsid> well, ask ChilliX about it, maybe it has been release recently, dunno
07:57:11 <hornby> wow, maybe you have the only copy :)
07:57:40 <delYsid> A bunch of students also has it methinks :)
07:57:50 <Heffalump> it's only published in .au, he said
07:57:56 <Heffalump> possibly only NSW, in fact
08:00:08 <hornby> wish they had courses like that here
08:00:31 <hornby> I complain too much, methinks
08:04:08 <delYsid> stupid newbie Q: What is the equiv. of nth in haskell?
08:08:08 <dandelion-> [1,2,3]!0 == 1
08:08:23 <dandelion-> if that is what you asked for...
08:08:53 <delYsid> ! ?? strange.
08:09:11 <dandelion-> why? what would you prefer?
08:09:30 <dandelion-> sorry, it's !!, not !
08:09:56 <dandelion-> i pretend to know haskell when in fact i have forgotten it mostly
08:13:58 <delYsid> Another simple Q: type Coord = (Int, Int) -- what is wrong there?
08:18:49 <hornby> whats type do?
08:20:30 <dandelion-> my hugs accepts it.. it works fine for me
08:21:09 <pesco> horby: declares a type alias.
08:26:44 <hornby> mine doesn't
08:26:48 <delYsid> ghc says: /home/mlang/haskell/ChessBoard.hs:18: Illegal data/newtype declaration
08:27:48 <Heffalump> errm, are you sure you wrote type and not newtype?
08:27:51 <Heffalump> (or data)
08:28:17 <hornby> chessboard? are you working on a chess game?
08:28:18 <delYsid> it's type, not newtype or data
08:28:33 <delYsid> hornby: Yeah, I'd like to do chess.hs...
08:28:49 <hornby> delYsid: Whats ChessBoard.hs?
08:29:04 <Heffalump> can you put the entire file on the web somewhere?
08:29:14 <delYsid> hornby: It will contain the data-types and primitives one needs to implement a chess position.
08:29:20 <hornby> delYsid: yay
08:29:25 <delYsid> That's a board, pieces, coordinates...
08:30:02 <dandelion-> what if you alter the name, to MyCoord?
08:30:11 <Igloo> Is the next line more indented than the type line?
08:30:22 <delYsid> Heffalump: http://212.17.102.236/ChessBoard.hs
08:31:00 <dandelion-> the link doesnt work for me..
08:31:06 <Heffalump> or me
08:31:20 <Heffalump> our (enforced) proxy reports "111 Connection refused"
08:31:33 <delYsid> try again
08:32:00 <Heffalump> it's your data Board line above that's wrong
08:32:06 <hornby> ERROR "ChessBoard.hs":18 - Syntax error in data type definition (unexpected `;', possibly due to bad layout)
08:33:01 <delYsid> well, but line 18 is the data Coord line here.
08:33:14 <Heffalump> well, it's a bad error message
08:33:17 <delYsid> Heffalump: How should it be written instead?
08:33:22 <Heffalump> data Board = [[Piece]]
08:33:26 <hornby> yeah, there are no ;'s at all in that file
08:33:29 <Heffalump> should be data Board = Board [[Piece]]
08:33:36 <delYsid> ahhh! tnx
08:33:40 <Heffalump> and in fact you can then replace data with newtype
08:33:48 <delYsid> could I also write type Board = [[Piece]] ?
08:33:51 <Heffalump> yep.
08:33:53 <delYsid> And whAT WOULD BE THE DIFF?
08:34:10 <delYsid> oops, sorry for caps
08:34:19 <Heffalump> the distinction is that you can declare your own type class instances for a newtype/data, whereas for a type it just inherits those of the type that is aliased
08:34:41 <Heffalump> type declares a type alias, which means that the old type and the new type can be used interchangeably
08:35:30 <delYsid> ahhh, if it's a type, I can use !!, if it's a newtype, I have to reinvent all that.
08:35:31 <Heffalump> data/newtype declare new types - newtype is a specialised form of data for when you have a single constructor with a single parameter (the parameter can be a tuple) - it allows certain extra compiler optimisations
08:35:35 <Heffalump> yep.
08:35:53 <Heffalump> (I'm being technically inaccurate when I claim newtype is a specialised form of data, but you can think of it as such)
08:38:34 <hornby> delYsid: what does pieceAt do? returns whatever piece is at coords (x,y)? If so, why the B? thats a board?
08:38:43 <delYsid> yes
08:38:58 <delYsid> pieceAt :: Board -> Coord -> Piece
08:39:10 <hornby> delYsid: oh, right, duh :)
08:42:33 <delYsid> but I'm not really convinced that [[Piece]] is an efficient data structure for a Chess board.
08:42:35 <delYsid> Any comments?
08:43:17 <Igloo> I used an Array for something similar
08:44:19 <hornby> how do you represent empty squares?
08:44:38 <delYsid> ahh, yeah, I need to do something about that.
08:44:43 <Igloo> Either have a NoPiece in the datatype or use Maybe Piece
08:45:00 <delYsid> Either change data Piece or the data Board...
08:45:17 <hornby> empty = Piece None Empty?
08:45:52 <delYsid> data Piece = Piece Color Kind | NoPiece
08:45:55 <delYsid> -- what about this?
08:46:16 <hornby> also .. line 6 .. you forgot Rook :)
08:46:33 <delYsid> ah :)
08:46:39 <Heffalump> who needs 'em anyway
08:46:40 <pesco> Maybe Piece makes the most sense if you ask me.
08:46:58 <delYsid> k
08:47:05 <hornby> ChessBoard> pieceAt board (0,0)
08:47:05 <hornby> Piece Black Rook
08:47:06 <hornby> awesome
08:47:45 <delYsid> pesco: But then I need a newtype, right?
08:47:50 <hornby> I like NoPiece
08:48:06 <pesco> delYsid: No. type Board = [[Maybe Piece]]
08:48:46 <pesco> hornby: But a NoPiece isn't a piece. :)
08:49:10 <hornby> but I don't understand Maybe :)
08:49:44 <pesco> hornby: data Maybe a = Just a | Nothing
08:49:59 <hornby> yeah, I know that
08:50:14 <pesco> Which part of it puzzles you?
08:50:20 <hornby> the maybe bit :)
08:50:42 <hornby> okay, say we've got
08:50:44 <hornby> type Board = [[Maybe Piece]]
08:50:51 <hornby> startPos :: Board
08:50:51 <hornby> startPos = [[bR, bN, bB, bQ, bK, bB, bN, bR],
08:50:51 <hornby>             [bP, bP, bP, bP, bP, bP, bP, bP],
08:50:55 <hornby> Whats the next line?
08:51:23 <delYsid> [Nothing, Nothing, Nothing, ...]
08:51:27 <pesco> [Nothing, Nothing, Nothing...]
08:51:32 <hornby> oh
08:51:46 <hornby> do I need Just bR, etc?
08:52:06 <pesco> Depends on what bR is of course.
08:52:16 <hornby> bR = Piece Black Rook
08:52:25 <pesco> Then you need Just bR
08:52:48 <hornby> okay, is there an easier way of doing [Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing]?
08:52:50 <delYsid> hmm, I wonder if this extra level is good for efficiency.
08:53:09 <pesco> repplicate 8 Nothing
08:53:09 <delYsid> Wouldnt it be a bit more efficient just to have a Empty piece too?
08:53:20 <pesco> delYsid: I have no idea about that.
08:53:39 <hornby> repplicate?
08:54:11 <delYsid> hornby: replicate 8 Nothing
08:54:20 <pesco> eplicate n x = x : replicate (n-1) x
08:54:27 <pesco> replicate even.
08:54:29 <hornby> oh neat
08:54:54 <pesco> horby: The Prelude has lots of handy functions...
08:55:44 * hornby tries to be clever with replicate 4 [replicate 8 Nothing]
08:56:16 <Heffalump> you want ( ) not [ ]
08:56:20 <Heffalump> probably
08:56:45 <hornby> Prelude> replicate 8 Nothing
08:56:47 <hornby> ERROR - Cannot find "show" function for:
08:57:09 <Heffalump> try replicate 8 Nothing :: [Maybe Int]
08:57:20 <hornby> Nice
09:01:51 <hornby> ugh, it does have to be Just bR, etc. 
09:02:31 * delYsid wonders if he should introduce a Square
09:02:59 <hornby> square?
09:03:00 <delYsid> data Square p = Sq Black p | Sq White p
09:03:06 <delYsid> Would that work?
09:03:36 <Heffalump> no
09:03:41 <Heffalump> you've repeated the same constructor twice
09:03:56 <delYsid> ahh
09:04:11 <delYsid> data Square a = Bsq a | Wsq a
09:04:19 <delYsid> that way?
09:04:33 <Heffalump> sounds better
09:04:40 <delYsid> nah, that adds unnecessary complexity too...
09:04:44 * Heffalump isn't really looking at what you're trying to do overall though
09:04:52 <Heffalump> just commenting on little local questions :-)
09:05:17 <hornby> delYsid: what does your startPos look like?
09:08:08 <delYsid> hornby: later
09:08:49 <hornby> this whole Maybe thing .... I distruct
09:08:52 <hornby> er distrust
09:08:57 <Heffalump> why?
09:09:07 <hornby> It seems ugly
09:09:58 <ibid> hm, a book says "that which was until a few years ago known as 'denotational semantics of programming languages'". what is it now called, anybody know?
11:22:09 <shapr> does anyone know of a Haskell module for reading and manipulating zipfiles?
11:53:41 <buggs> hi
11:55:12 <shapr> hi buggs, what's up?
11:56:17 <buggs> working
11:56:53 <buggs> hope i can spend a bit time on playing later
11:56:57 <shapr> me too
13:44:11 <shapr> boing
13:49:13 * shapr reads whyfp.ps
13:49:21 <shapr> hi jagular
13:49:37 <jagular> hello
13:50:18 <shapr> I don't think I've seen you on #haskell before, are you learning haskell, or very experienced?
13:50:23 <shapr> do you have any questions I can help you with?
13:53:25 <jagular> hm.. "considering learning haskell" might be more appropriate.. not really any questions as of yet, but I suppose there might be quite a few once I get started.. this could conceivably be the least active channel I've ever seen, however.. ;) .. is there any other place to ask questions?
13:53:54 <shapr> sure, there's also comp.lang.functional, and the various haskell mailing lists.
13:54:02 <Heffalump> there's usually people around who'll answer questions when asked
13:54:07 <shapr> right
13:54:15 <shapr> this channel gets very active when someone talks ;-)
13:55:12 <shapr> jagular: if you check out the logs mentioned in the topic, you'll see that conversation does occur, just needs starting.
13:55:53 <shapr> I'm interested in the Chess.hs idea that delYsid was talking about.
13:55:59 <shapr> lazy game trees sound very cool.
13:56:09 <shapr> I don't know anything about alpha beta trees though...
13:56:33 <jagular> yeah.. i suppose that could be said of many channels.. it's just that hardly a word have been uttered these last few hours I've been here :)
13:56:45 <shapr> well, ask some questions :-)
13:56:54 <shapr> hey jagular, where in sweden are you?
13:56:59 <shapr> anywhere close to Lulea?
13:58:42 <jagular> ah, not really.. that'd be some 1100 kilometers from here.. :)
13:59:02 <shapr> oh well
13:59:13 <shapr> I'm always looking for nearby computer people.
14:00:17 * shapr finds info on alpha-beta pruning in Haskell
14:00:50 <shapr> nifty
14:01:42 <shapr> jagular: have you tried functional programming before?
14:03:16 * shapr unsuccessfully tries to read swedish comments in Haskell sources
14:03:42 <jagular> haskell would be the first "pure" fpl, but I've programmed in lisp for a few years, so I guess I'm not entirely unfamiliar with the concepts..
14:04:04 <shapr> hi dandelion- what's up?
14:04:33 <shapr> jagular: excellent, you'll probably enjoy Haskell then.
14:04:39 <dandelion-> hello shapr
14:05:05 <buggs> shapr what about books about haskell?
14:05:17 <dandelion-> anybody who has an opinion about how to organize (haskellize) a GUI for haskell use, i would like to know it
14:05:41 <shapr> buggs: well, I own Thompson's Craft of Functional Programming, which I like..
14:05:57 <shapr> and Hudak's School of Expression, which I like, but was unable to start with.
14:06:19 <shapr> on the other hand, ChilliX prefers Hudak's book, and he's been teaching Haskell for much longer than I've been learning it.
14:06:20 <buggs> then i got the right one i guess :)
14:06:34 <shapr> do you have the Thompson book?
14:06:38 <buggs> yes
14:06:43 <Heffalump> shapr: the Hughes/Bird paper?
14:06:44 <shapr> cool, I can help you with that one.
14:07:04 <shapr> Heffalump: huh?
14:07:18 <shapr> oh, for swedish comments? nah, I found homework in swedish =)
14:07:28 <buggs> all the haskell guys around here have it so i figured i need it too
14:07:33 <shapr> does Richard Bird speak swedish also?
14:07:40 <shapr> buggs: you have haskell where you are??
14:07:53 <shapr> er "haskell guys"
14:08:07 <buggs> of course, being at a university
14:08:17 <shapr> dandelion-: I don't know, I haven't tried it, have you looked at some of the examples for the available Haskell GUI libraries?
14:08:56 <shapr> these guys get fun homework even if I can't read most of the comments: http://www.hh.se/staff/vero/AI/noticeBoard.html
14:09:47 <shapr> much nifty stuff there
14:09:49 <dandelion-> shapr: i have. but i have not yet formed a definite opinion about them
14:10:41 <shapr> dandelion-: do you have any indefinite opinions?
14:10:46 <shapr> I'd like to hear what you think so far.
14:11:04 <dandelion-> however, i find the fact that efforts are divided between many different libraries, unfortunate
14:11:20 <dandelion-> shapr: no, i have not such, either, sorry :)
14:11:47 <dandelion-> many of the libs seem to be abandoned, i could neither of them make run for me
14:11:57 <shapr> which libs have you tried?
14:12:27 <dandelion-> gtk+hs, gtk2hs, ihaskell, hgl, hopengl, haggis, fudgets
14:12:48 <shapr> none of them worked for you?
14:13:08 <shapr> I've gotten gtk, gtk2, and hopengl to work, I haven't tried the others you listed.
14:13:21 <dandelion-> i think, i could make gtk+hs or gtk2hs work for the first examples... then i went on my own and soon came across sth which did not work
14:13:35 <dandelion-> and then i gave up... it was all too cumbersome and badly documented for me, either
14:13:48 <dandelion-> i know, if i try harder, i could probably get them to work... i will some day
14:13:53 <shapr> ok
14:14:20 <dandelion-> but, as i said, i would prefer to have one standard lib, well documented and proven to work
14:14:53 <shapr> well, gtk is available from many languages.
14:15:05 <shapr> so is opengl
14:15:20 <shapr> it would be interesting to try something higher level though.
14:15:46 <dandelion-> i think the gtk port leaves much to wish for. on first try i could not find all functions to be implemented - not all from those used in the gtk tutorial, either
14:17:30 <shapr> well, I think ChilliX wrote the gtk port...
14:17:32 <shapr> so you could ask him ;)
14:17:44 <dandelion-> chillix = manual chakravarty?
14:17:49 <shapr> I think so.
14:17:49 <dandelion-> manuel, sorry
14:17:56 <dandelion-> wow, we have a prominent in here
14:18:05 <shapr> yes, we do :-)
14:18:21 <shapr> maybe even others ;)
14:18:24 <dandelion-> i thought we were all poor suckers in here... ahem... 
14:18:30 * shapr laughs
14:18:50 <shapr> I may be a poor sucker now, but I'll keep studying Haskell...
14:20:08 <shapr> ah, his page says that gtk+hs is in development, but already usable for GUIs of medium complexity.
14:20:38 <shapr> as in, it's not finished yet.
14:22:05 <shapr> Chess.hs sounds like a fun thing to write.
14:26:28 <dark> shapr: I prefer to work on things that haven't been done before :) 
14:26:29 <shapr> aha, someone has written some chess code for Haskell before...
14:26:38 <shapr> dark: well, hacking on existing code would be fun also
14:27:33 <shapr> if only I could find some =)
14:29:46 <dark> If I opened up my project (uncc) would anyone be interested in working on it?
14:30:10 <shapr> I think you'd have several interested people.
14:30:33 <shapr> do you have code that does something?
14:31:00 <Heffalump> uncc?
14:31:20 <dark> shapr: Yes... but it doesn't do much :-)
14:31:37 <dark> I was indeed planning to have something that works end-to-end in some way (however creakily) before opening it up.
14:31:54 <dark> Heffalump: I'm working on an uncompiler, which will take a binary and output valid C source.
14:31:59 <Heffalump> ooh, cool.
14:32:14 <dark> Heffalump: It's something I have done by hand a few times, I now want to automate what I know about it :)
14:32:18 <shapr> dark: I think that's a good idea, end-to-end creaky functionality...
14:32:37 * Heffalump knows a reasonable amount about decompilation
14:33:26 <dark> I currently have a limited ELF parser (just enough to "load" the program), a partial disassembler, and some code for expression trees.  So... not much yet :)  
14:34:10 <dark> My next step will be to get the type system straightened out and decide how to approach the problem of deciding what is code and what is data.
14:34:37 * Heffalump knows a reasonable amount about turning assembly into high-level code
14:35:01 <dark> I've found out that automating it can be a lot trickier than doing by hand, because a program can't just "ignore for now" the parts it doesn't understand :)
14:35:55 <shapr> lazy decompilation? :)
14:36:03 <dark> Also, this program is intended to help in figuring out what malicious code does.  So it needs to be protected against counterattacks, mostly: code that's designed to look innocent when uncompiled but actually does something different.
14:36:13 <dark> Since it's Haskell I don't have to worry about buffer overflows :-)
14:36:17 <shapr> :)
14:36:59 <dark> shapr: Yeah that's the idea :)  The disassembler is wildly inefficient by imperative standards, but I realized that the parts that get pruned (such as assignments to registers that aren't used) won't even be created.
14:37:30 <dark> (I decided to handle the x86 overlapping registers by pretending that they're actually not overlapping, and I generate multiple assignment statements to compensate.)
14:38:23 <Heffalump> there's some fairly complicated algorithms around to recover loop structure
14:38:47 <dark> Heffalump: un-unfolding will be the most difficult, I think.
14:39:02 <dark> Er, unrolling
14:39:16 <dark> Actually, un-inlining might be the most difficult :)
14:39:20 <Heffalump> hmm.
14:39:50 <dark> But I'll be happy with even a rudimentary result, as long as it's valid C.  That will already help with decomilations, and I can improve it incrementally from there.
14:40:20 <shapr> plus you can always use it to optimize existing code if you get bored :)
14:40:22 <dark> The plan is for it to read a "spec file" which can be improved, which contains the user's guesses at function names and parameters, complex types, etc.
14:40:28 <shapr> er, sorry... existing binaries.
14:40:51 <dark> shapr: Well one possible use for it would be to make an x86 binary run on another platform, by going to C and then compiling :)
14:41:00 <shapr> whoa... mind altering.
14:41:11 <dark> That's why I want to get the type handling exactly right.
14:41:41 <shapr> I suspect the interactive decompilation aspect would be instantly popular.
14:42:03 <shapr> refactoring binaries is an entertaining thought...
14:42:21 <Heffalump> type handling in what sense?
14:43:18 <dark> shapr: The spec file?  Well, one thing I dread most about decompiling by hand is making the decision to stop fiddling with my script and start the by-hand part.  Once you make that decision you can't go back and regenerate your file, if you notice a new pattern.  So this project is actually an effort to push that decision into the future :)
14:44:00 <Heffalump> you want to be able to script the by-hand part
14:44:00 <dark> Heffalump: Mainly, compensating for the fact that the binary uses types of exact bit sizes, and C doesn't.  It should generate C code that will give the same behaviour even if compiled on a machine with a different size for int, for example.
14:44:14 <Heffalump> how is it going to work that out for sure?
14:44:48 <shapr> dark: why can't you go back and regenerate?
14:44:57 <Heffalump> because that would overwrite the new by-hand work
14:45:06 <dark> shapr: Usually by that point, I've already done considerable by-hand transformations.
14:45:16 <shapr> if both your scripted translations and by hand translations are undoable ...
14:45:23 <dark> shapr: The scripts I've been using are limited perl scripts that massage disassembler output into something that looks more like C :)
14:45:47 <shapr> oh, I see what you mean.
14:46:02 <dark> Heffalump: One way might be to use the stdint classes, int32 etc.
14:46:05 <shapr> like trying to forwardport kernel fixes.
14:46:15 <dark> Heffalump: Or insert "& 0xffffffffL" when needed :-)
14:46:19 <Heffalump> dark: hmm, yes
14:46:22 <Heffalump> ick! :-)
14:46:45 <dark> Heffalump: Unfortunately C coders rarely worry about possible overflow... so it can be hard to detect when it makes sense to exactly emulate overflow behaviour.
14:47:57 <dark> Anyway... I deliberately decided that all grand plans take second place after getting uncc to work on the specific binary used for the Honeynet Reverse Challenge :)
14:48:20 <shapr> ah
14:48:34 <dark> Mainly because I know that one inside out after participating in the challenge :)
14:49:28 <shapr> that's cool :-)
14:49:36 <shapr> do you have your source online for perusal?
14:49:56 <Heffalump> so your code is in Haskell?
14:50:30 <dark> Heffalump: Yep.  I decided to try Haskell after I gave up on writing it in Java.  (This is also my "try new things" project)
14:50:50 <shapr> gee, I wish I could convince my boss of the same thing ;-)
14:51:03 <dark> shapr: No, not yet.  I wanted to have it working end-to-end first :)  But that turns out to take more time than I expected.
14:51:14 <dark> Partly because I keep learning more Haskell and then rewriting existing modules...
14:51:33 <shapr> sounds like a good process to me
14:53:02 <dark> shapr: Yeah.  After our earlier conversation I realized that if I couldn't make the disassembler easy to read, it meant that I didn't understand it yet :)  So I went back and read the specs from Intel.  That turned out to help a lot.
14:53:46 <shapr> I like being helpful. but usually I know when I'm being helpful.
14:54:12 <dark> Now I have the actual instructions in a table (er, list), and the disassembler support is like 300 lines :-)
14:54:52 <dark> I dread the thought of profiling this, though.  The profiler will probably sit down and weep.
14:54:56 * shapr laughs
14:55:35 <shapr> I think if you get it up to end-to-end functionality, no matter how creaky, others will join you and uncreak.
14:58:10 <dark> Yeah, and say things like, "Is this supposed to be Haskell code??"
14:58:29 <dark> I won't mind though :)  As long as they say how it could be better.
14:59:14 <dark> Actually I also expect "Wah! Why did you write it in Haskell?  Use a NORMAL language!"
15:00:41 <dark> Then I will give them a lollipop.
15:20:21 <hornby> ChessBoard> (pieceAt board (1,1)) == Just bP
15:20:21 <hornby> True
15:20:37 <hornby> I hate Just
15:28:11 <shapr> hornby: you've started on Chess.hs? or found Cherry?
15:28:20 <shapr> dark: a lollipop??
15:28:26 <shapr> for being a small child?
15:28:39 <hornby> shapr: delYsid was working on it
15:28:50 <hornby> shapr: he posted some code, and I made it work
15:28:56 <hornby> shapr: I think he made it work too, independently
15:29:03 <hornby> shapr: It doesn't do anything though, its pretty basic
15:29:33 <shapr> where's the code?
15:29:38 <dark> shapr: It's from an ancient saying :)
15:29:46 <dark> When someone says "I want a programming language in which I need only say what I wish done," give him a lollipop. 
15:30:14 <shapr> oh...
15:30:19 <shapr> that sounds familiar.
15:30:21 <hornby> shapr: i forget
15:30:31 <hornby> shapr: I'd show you mine, but its too embarassing
15:30:31 <shapr> hornby: no worries, I'll check the logs.
15:30:32 <dark> Google says it's from Alan J. Perlis
15:30:41 <dark> http://www.cs.yale.edu/homes/perlis-alan/quotes.html
15:30:42 <shapr> It does sound like a perlis quote.
15:30:45 <shapr> hi pesco
15:31:14 <pesco> hi there shapr.
15:32:27 <shapr> whoa, I found a nice realworld usage of Haskell... http://www.research.avayalabs.com/user/wadler/realworld/peval.html
15:33:27 <pesco> wew
15:33:42 <shapr> wadler looks like a very cool guy to hang out with.
15:33:52 <pesco> Heheh
15:38:18 <shapr> ohhh
15:38:26 <shapr> I got access to cvs.haskell.org yesterday....
15:38:36 <pesco> Congratulations. :)
15:38:39 <shapr> I checked out the YAHT cvs tree
15:38:53 <shapr> I'm not working on haskell itself, just documentation ;-)
15:39:00 <pesco> :)
15:39:40 <shapr> hey Igloo, new Vim mode for Haskell on the mailing list!
15:39:48 <pesco> *g*
15:40:29 <shapr> hey pesco, did you respond to the haskell refactoring survey?
15:40:30 <pesco> Important underground news spreading rapidly through the grapevine again, hm?
15:40:36 <shapr> heh, yah :-)
15:40:44 <pesco> shapr: No, haven't noticed it. Where?
15:41:01 <shapr> ummm
15:41:04 * shapr looks for url
15:41:26 <shapr> http://www.cs.ukc.ac.uk/research/groups/tcs/fp/Refactor/
15:41:45 <shapr> oh, I think the survey is over... you can still send them responses, they might take them.
15:42:17 <shapr> cool, Thompson is part of that project.
15:42:19 <pesco> Let's see.
15:43:16 <shapr> hey cool, the python refactoring browser project I started (and dropped) is listed there
15:45:27 <shapr> ohhh, there's a Haskell Aterm library...
15:45:45 <shapr> I want that...
15:47:10 * shapr reads about Strafunski
15:48:29 <shapr> wow, strafunski is powerful stuff...
15:48:54 * shapr downloads
15:49:25 <pesco> What is Strafunski? I've heard that somewhere.
16:01:45 <shapr> http://www.cs.vu.nl/Strafunski/
16:06:08 * hornby doesn't get it. 
16:06:27 <hornby> surprise surprise. heh, ah, nap time
16:06:37 <hornby> I think I'm in the wrong business
16:25:28 <shapr> hornby: how so?
16:25:49 <hornby> shapr: its all over my head :)
16:25:58 <hornby> the more I learn, the less I seem to know :)
16:26:05 <shapr> I think that's normal.
16:26:11 <shapr> it is for me at least.
16:26:20 <shapr> there's a good side to that...
16:26:25 <shapr> you will *never* be bored.
16:26:33 <hornby> heh
16:26:42 <shapr> I think that's why I do this....
16:27:10 <shapr> on a world of uncharted territories, I would have been an explorer  (and probably dead by this age ;)
16:27:52 <shapr> I don't think I'll get to mars, so the territory of the mind is the only uncharted land...
16:28:06 * shapr reads http://www.cs.rpi.edu/~robbic3/proglang/project3/introduction.html
16:29:03 <dark> shapr: Sounds like you might like Go :-)
16:29:13 <dark> shapr: It's the game where you're always a beginner.
16:29:25 <shapr> I'd like to try it.
16:30:59 <pesco> I tried it today, after the discussion came up here. I lost horribly.
16:31:13 <pesco> But I learned a big chunk of it, too.
16:31:28 <shapr> where did you play?
16:31:57 <pesco> Via cgoban on one of the Internet servers. Forgot what the system was called...
16:32:50 <dark> NNGS? IGS?
16:32:58 <pesco> NNGS.
16:33:27 <hornby> ics is chess
16:33:32 <hornby> chess I can manage
16:33:57 <shapr> igs /= ics
16:34:24 <shapr> hornby: we should play chess sometime... not like it'll take long.. (I suck)
16:34:51 <shapr> can two people with cgoban play against each other?
16:34:54 <dark> pesco: How much handicap did you get?
16:35:13 <dark> shapr: only if they're at the same computer.  Or if they go through a Go server.
16:35:24 <pesco> dark: What is handicap again?
16:35:47 <dark> pesco: The number of stones you get for free at the start of the game.
16:36:04 <dark> pesco: True beginners usually get 9, or 5 when playing on a tiny (9x9) board.
16:36:13 <dark> pesco: They usually still lose, but well... :)
16:36:32 <pesco> dark: Oh, I didn't get any free stones.
16:37:06 <dark> pesco: Were you playing against another beginner?
16:37:16 <dark> shapr: You can play on the Go servers without being registered, though.
16:37:30 <pesco> dark: Yes, not as much a beginner as me, but still.
16:37:30 <hornby> shapr: ya, that'd be fun
16:37:44 * hornby is always up for a game of chess
16:38:36 <pesco> "Calculating world dependencies...  *spin*"
16:38:38 <dark> It's been a long while since I used cgoban :)  But I can play on NNGS if someone wants to learn.
16:38:39 <pesco> Gentoo is so cute.
16:38:51 <dark> "World depends on Peace.  Peace not found.  Aborting."
16:39:21 <shapr> wow, igs has 138 games going on right now
16:40:36 <dark> shapr: It's always been active :)
16:40:57 <dark> shapr: I remember about that many games in... 1995 I think.
16:41:30 <shapr> wow
16:42:21 * shapr tries to get nngs working
16:42:30 <dark> Hmm worked right away for me.
16:42:38 <dark> Are you using cgoban on Debian?
16:43:10 <dark> I could go over to IGS.
16:43:22 <shapr> yup, I'm using debian/unstable
16:43:37 <shapr> ok, I'm shapr on nngs
16:44:55 <shapr> anyone else on nngs?
16:47:00 <dark> Oops, since I just reregistered on nngs, I have to wait for my password :)
16:47:13 <shapr> heh
16:47:19 <shapr> maybe I should register also
16:48:15 <dark> Hmm, there's something wrong with my new login.
16:48:23 <dark> This might be a Bug in cgoban :)
16:48:40 <shapr> suckage
16:48:51 <shapr> time to rewrite it in some other language
16:50:09 <dark> author already did, but he picked Java :)
16:50:18 <shapr> oh
16:50:21 <shapr> more suckage
16:50:38 <dark> cgoban2, it only works as a java applet in a browser, if I understood correctly.
16:50:46 <shapr> yuck
16:51:02 <dark> Okay I seem to be logged in, but I can't type anything and I don't have games or players lists.
16:51:11 <shapr> it did that to me once or twice
16:51:19 <shapr> you are logged in
16:51:30 <shapr> my problem was that I tried to click stuff too fast...
16:51:31 <dark> Maybe I'll just keep trying t log in until it goes right :)  The Windows approach, ha ha!
16:51:40 <shapr> yah, windows. good stuff.
16:51:42 <shapr> not
16:52:02 * shapr decides not to challenge dark instantly this time.
16:52:18 <shapr> I'll be nice, I'm already logged in.
16:52:39 <dark> I already figured out that clicking on 'OK' makes it stop :)
16:53:21 <shapr> yah, that took me a bit to figure out.
16:54:12 <dark> Logging in as a registered user seems not to work :)
16:54:32 <shapr> that sucks
16:54:37 <shapr> very much
16:54:52 <dark> I'll try to debug this using telnet at some point.  But not now :)  I'll log in as darktest or something.
16:55:15 <shapr> you appear to be logged in
16:55:27 <shapr> and again
16:55:42 <dark> Right, finally one that works :)  As 'darkish'
16:55:44 <shapr> PBEM might be faster ;-)
16:55:54 <dark> Heh.  PBIRC?  I have a go board here :)
16:56:04 <shapr> I don't...
16:56:20 <shapr> I've never played before..
16:56:57 <dark> Okay :)  In that case you might want a handicap.  5?
16:57:31 <shapr> wow, nifty
16:58:28 <shapr> why do you have a score of five and I have zero?
16:59:03 * shapr reads the go tutorial again
16:59:04 <dark> Oh I forgot to adjust that.  In tournament games white usually gets a score bonus, because black gets first move.
16:59:14 <shapr> oh
16:59:55 <dark> Let's pretend it's not there :)
17:00:05 <shapr> ok, cool with me
17:00:51 <shapr> ohh
17:01:40 <shapr> hm
17:01:59 <shapr> your score is rising
17:02:10 <shapr> ohh, I see why.
17:02:19 <dark> I got one point for taking a prisoner.
17:02:44 <dark> This is later added to my territory points.  At least, if they're using the scoring system I think they're using.  That's a point where go rules can differ :)
17:03:34 <shapr> ok..
17:07:23 <shapr> yay, I have score 1!
17:08:03 <dark> Territory is going to count for far more than prisoners, though :)
17:08:20 <dark> Remember there's 81 points on the board and we're not likely to fill up more than half of them.
17:08:24 <shapr> hm
17:08:30 <shapr> I didn't know
17:08:33 <shapr> this is my first game =)
17:08:55 <dark> Okay :)  I wasn't sure how much you knew of the actual rules.  You play pretty well so far.
17:09:16 <shapr> cool, thanks
17:09:28 <shapr> taking one of my marbles woke me up ;-)
17:09:37 <dark> Heh :)
17:11:25 * shapr treasures his one point
17:11:36 <shapr> oh, that's cute
17:13:49 <shapr> still there?
17:14:09 <shapr> wow
17:14:13 <dark> Yeah I had to think deeply on this one :)
17:14:34 <shapr> cool, I made you think!
17:14:35 <shapr> yay!
17:15:35 <shapr> oops
17:15:44 <shapr> yah, that was obvious
17:16:07 <dark> Actually it was a mistake :)  I should have played E1
17:16:39 <shapr> E1 is already yours...
17:16:43 <shapr> nothing I can do about that
17:18:59 <dark> Oh I just noticed you're talking on the game server itself :)
17:19:10 <dark> Maybe it would be more ontopic there, at that :-)
17:26:38 <shapr> hey delYsid
17:26:52 <delYsid> hey shapr
17:27:16 <shapr> wassup?
17:27:31 <delYsid> copiing data from old to new disk...
17:27:39 <shapr> ah
17:27:46 <shapr> any new data on the disk problem?
17:27:55 <shapr> hi Lunar_fr
17:28:10 <delYsid> heh, fun is, since I inserted the second disk, the old one didnt have any more problems!
17:28:18 <delYsid> Like it were lonely or something :)
17:28:21 <Lunar_fr> hi shapr
17:28:36 <shapr> Lunar_fr: looking for answers to haskell questions?
17:29:00 <Lunar_fr> Not at the moment
17:29:08 <Lunar_fr> Just looking for interesting channels on OPN
17:29:35 <Lunar_fr> It's been quite a while I didn't touch to any Haskell code :(
17:31:21 <shapr> oh, would you like to?
17:31:27 <shapr> delYsid: that's very funny
17:31:39 <shapr> dark: thanks for the game
17:31:44 <dark> shapr: It was a pleasure :)
17:32:01 <Lunar_fr> shapr : Maybe... it would be nice to fine some project
17:32:38 <shapr> Lunar_fr: do you have any projects in mind? there are many available if you're looking for something fun to do.
17:32:40 <dark> shapr: Actually you played better than I've seen a beginner play before.  You just overlooked something at the end :)
17:32:49 <shapr> wow, I'm cool =)
17:32:51 * shapr grins
17:33:00 <shapr> thanks dark, that's a great compliment.
17:33:08 <shapr> I learned it all from here: http://www.cwi.nl/~tromp/go/learn/learn.html
17:33:21 <Lunar_fr> shapr : Depends on funniness I suppose, and also on people.. I can't start working if I can't met (or chat with) people
17:33:42 <shapr> Lunar_fr: well, spend some time here, get to know Haskell again, see what you think.
17:34:05 <shapr> I really enjoy #haskell, lots of smart people, good conversation, and nifty projects.
17:34:29 <Lunar_fr> shapr : That's what I had in mine by coming here :)
17:34:29 <pesco_> :)
17:34:30 <shapr> and brain exercise more than anything else
17:34:51 <shapr> right now, I think I'l exercise my pillow....
17:35:00 <shapr> delYsid: hey, I heard you have some Chess.hs, can you you mail it to me?
17:35:20 <shapr> or is it online?
17:35:25 <delYsid> soon, wait
17:35:33 <shapr> ok...
17:36:22 <shapr> time for sleep, be back tomorrow...
17:36:27 <pesco> Night.
17:36:37 <delYsid> shapr: k, send it to you tomorrow.
17:36:41 <shapr> cool
17:36:41 <delYsid> What it can do for now :)
17:36:42 <delYsid> *ChessBoard> pieceAt startPos (0,3)
17:36:43 <delYsid> Piece Black Queen
17:37:03 <shapr> wow, nifty :-)
17:37:09 <shapr> ok, now I'm really outta here...
17:37:50 <dark> shapr: That's tutorial is good, I just bookmarked it :)
17:38:50 <dark> shapr: It explained the other main variant of scoring system.  On NNGS, score is prisoners + empty territory.  What the tutorial explains is occupied points + empty territory.  There's usually not more than 1 point difference between the two systems.
23:09:23 * Jerub kicks work
23:09:24 <Jerub> work bad.
23:10:13 <Jerub> I would be more productive if I had somethign to focus on.
