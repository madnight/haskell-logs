05:28:51 <Karsus> anyone ever written a language processing system in haskell ??
05:29:41 <smkl> no, but see http://www.cs.chalmers.se/~aarne/GF/index.html
05:30:09 <Karsus> cause i'm doing one and it's kinda funky :)
05:30:59 <Karsus> nice
05:31:15 <Karsus> maybe i should read that then i'd get some tips :)
05:49:36 <Heffalump> natural language?
05:49:40 <Heffalump> oh, he went
11:31:11 <|Fo|Ns> hi
11:31:49 <|Fo|Ns> is there a function in haskell to execute externat programs
11:32:00 <|Fo|Ns> or to acces shell variables?
11:34:18 <Heffalump> yeah
11:34:39 <Heffalump> import System
11:35:03 <Heffalump> and use "system" and "getEnv"
11:35:53 <|Fo|Ns> System, ok thanks
11:36:27 <|Fo|Ns> and... are there unix sockets implemented in haskell?
11:37:02 <Heffalump> I think so, but I can't remember the details
11:41:51 <|Fo|Ns> and... can I include binary code in a script?
11:42:03 <Heffalump> do what?
11:47:09 <|Fo|Ns> include binary code in a .hs file
11:47:18 <|Fo|Ns> or asembler
11:48:54 <|Fo|Ns> or lhs, nevermid
11:50:02 <Heffalump> no, you can't
11:50:13 <Heffalump> well, there's interfaces to call binary code
11:50:25 <Heffalump> have a look at the stuff on haskell.org about it
11:50:50 <Heffalump> hsc2hs with some inline assembler in the C would allow you to do it, I suppose
13:37:18 <|Fo|Ns> someone using emacs21 with hugs
13:38:09 <|Fo|Ns> are you all vi people?
13:39:03 <arete> I use hugs from emacs from time to time
13:41:30 * Heffalump uses emacs but I don't use hugs from inside it
13:43:47 <|Fo|Ns> no, I mean emacs from hugs using emacsclient
14:27:11 <|Fo|Ns> function [[1,2,3,4],[3,4,5,6],[]] = [1,2,3,4,3,4,3,4,5,6]
14:27:20 <|Fo|Ns> whats the name of that function
14:29:10 <Heffalump> concat
14:29:20 <Heffalump> oh, no, too many 3,4s
14:31:08 <Igloo> If I was a pedantic man I'd say "function", seeing as it is a perfectly good definition of a function  :-)
14:32:09 <Heffalump> :-)
14:38:00 <|Fo|Ns> Igloo: it was just an example
14:38:19 <Igloo> I know  :-)
14:39:06 <Igloo> Is the example actually right or did you mean concat? If it isn't right I'm not entirely sure what you mean
14:39:38 <Heffalump> \[[a,b,c,d],[e,f,g,h],[]] -> [a,b,c,d,c,f,e,f,g,h]
14:40:03 <|Fo|Ns> I meant concat
14:40:17 <Heffalump> hmm, is it possible to catch pattern matching exceptions?
14:40:32 <Heffalump> preferably outside IO, but I think that's a bit hopeful
14:44:31 <|Fo|Ns> when I instance a class which depends on another such as class Enum a => Ord a
14:44:47 <|Fo|Ns> can I define all the functions at the same time?
14:44:49 <|Fo|Ns> ie:
14:45:20 <|Fo|Ns> instance Ord Mytype where
14:45:30 <|Fo|Ns> `==` ......
14:45:38 <|Fo|Ns> >= ...
14:45:45 <|Fo|Ns> is that right?
19:52:16 <Pseudonym> Would someone like to proofread a wiki article?
