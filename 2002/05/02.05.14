02:18:14 <Heffalump> ooh, HTTP client
05:36:37 <Heffalump> \a b->e is just syntactic sugar for \a->\b->e, isn't it?
05:38:40 <smkl> yes, afaik
05:39:07 <Heffalump> David Feuer appears to be implying on the mailing list that `seq` can distinguish between them
05:42:14 <jewel> What is this stg thing?
05:42:16 <jewel> /usr/lib/c2hs-0.9.9/ghc5/libc2hs.a(C2HSBase.o): In function `C2HSBase_zdwcToEnum_entry':
05:42:16 <jewel> C2HSBase.o(.text+0x46): undefined reference to `stg_update_PAP'
05:42:16 <jewel> /usr/lib/c2hs-0.9.9/ghc5/libc2hs.a(C2HSBase.o): In function `C2HSBase_zdwcToEnum_fast3':
05:42:16 <jewel> C2HSBase.o(.text+0x66): undefined reference to `stg_chk_1'
05:42:58 <Heffalump> how are you linking?
05:43:04 <Heffalump> using ghc, or manually?
05:46:38 <jewel> with ghc, I used the command specified in the source:
05:46:56 <jewel> ghc -o booled `gtkhs-config --cflags --libs` BoolEd.hs
05:48:13 <smkl> perhaps seq can be used in guards, or something
05:48:44 <Heffalump> but you can't distinguish between the two externally, which is the important thing
06:38:12 <smkl> ok, foo1, foo2 :: Z -> () -> (), foo1 = \(1) -> \a -> a, foo2 = \(1) a -> a ... seq (foo1 Z) 1 => infinite loop, seq (foo2 Z) 1 => 1, when Z is instance of Num where all ops are defined to be nonterminating
06:39:00 <Heffalump> ick!
06:40:42 <Heffalump> umm, what op is executed?
06:41:36 <smkl> perhaps fromInt and (==)
06:42:02 <Heffalump> oh, for the pattern match
06:43:41 <smkl> "\a b -> e" is syntactic sugar for "\x -> \y -> case (x,y) of (a,b) -> e" or something
06:44:04 <Heffalump> oh. errm, why?
06:44:08 * Heffalump --> look at the report
06:44:47 <smkl> x and y are just variables there ... 
06:45:10 <Heffalump> oh, right, pattern matching
06:45:37 <Heffalump> \a b -> ... matches a and b simultaneously, whilst \a -> \b -> ... doesn't
06:47:29 <smkl> here is a more simple example: seq ((\True x -> x) False) 1, seq ((\True -> \x -> x) False) 1
09:49:05 * xray greets
09:52:03 <xray> I have this "data Seq a = Nil | Unit a | Cat (Seq a) (Seq a)" and try to create instances of Eq and Show of it. But how Nil never seems to be an instance of Eq and Show. How would you define a Show for this structure?
09:54:01 <Logan> Maybe you overloaded Nil?
09:54:08 <Logan> Like it's defined in some other data type?
09:54:32 <xray> in the prelude?
09:55:11 <Logan> Not that I know of, but it's the first thing I can think of.
09:55:56 <Logan> Try Nil :: Seq a in place of Nil and see what happens.
09:56:11 <Logan> Or paste what the error message is when you try to show Nil.
09:56:24 * xray tries
09:58:27 <xray> ERROR - Cannot find "show" function for:
09:58:27 <xray> *** Expression : Nil
09:58:27 <xray> *** Of type    : Seq a
09:58:46 <Logan> Ok, what does your instance declaration look like for Show, then?
09:59:18 <xray> instance (Show a) => Show (Seq a) where
09:59:19 <xray>     show (Unit a) = "Unit " ++ show a
09:59:19 <xray>     show (Cat a b) = show a ++ " ## "++ show b
09:59:19 <xray>     show Nil = "Nil"
09:59:32 <Igloo> You need to do Nil :: Seq Int
09:59:43 <Logan> Ohhh.
09:59:44 <Igloo> (or any other type)
09:59:56 * xray tries
10:00:03 <Logan> I wasn't thinking.
10:00:20 <Igloo> As different types may show Nil in different ways, e.g. [] or "" for lists of most things and Chars respectively
10:01:14 <xray> you mean like show Nil::Seq Int = "Nil"
10:01:23 <xray> ERROR "/home/mlocher/ps/seq.hs":11 - Haskell 98 does not support pattern type annotations
10:01:33 <Igloo> No
10:01:39 <Igloo> Leave your Show instance as above
10:01:48 <Igloo> Then type Nil :: Seq Int at the prompt
10:02:02 <Logan> No, when you call show on a Nil value, unless it's possible to infer a type of (Show a => Seq a) for Nil, you have to specify it explicitly.
10:02:41 <Logan> Otherwise, Nil will be of type Seq a, and a fully polymorphic Seq a is not an instance of Show.
10:02:58 <xray> ok. i see.
10:03:43 <Logan> For instance, you could define a showSeq :: (Show a) => Seq a -> String, and then have showSeq Nil = show Nil, and I think it'd work, because it would infer that Nil is of type (Show a) => Seq a
10:03:52 <Logan> But odds are that's never going to happen in most cases. :P
10:04:10 <Logan> You're probably never going to need to say "show Nil" ever, either.
10:04:31 <xray> can i define somewhere that Nil should always of given type in a context.
10:05:00 <Logan> Not really.
10:05:12 <Igloo> It will normally be inferred
10:05:40 <Logan> I was wrong about showSeq Nil = show Nil, I think.  The Nil on the right side has nothing to do with the Nil on the left side, whose type is determined by the pattern it is matching.
10:06:00 <Logan> When you just have a literal Nil, not derived from anything, it's not apparent what type it is.
10:06:34 <Logan> Unless you're returning it in a function that returns an explicit type, or applying a function to it that has an explicit type.
10:07:13 <Igloo> Normally anywhere you can create a Nil you could also create a Unit or Cat, so the type will be inferred from that
10:07:55 <Igloo> And if you're being sensible you're giving your top level functions explicit type anyway which will cover a lot of cases (although the explicit types will often still be polymorphic)
10:09:56 <xray> i am a tutor in a 'programming langugages' course and this stuff is intended to be "an official" solution. so i try to do it right. would you mind to have a quick look at it, and tell me if there are major bugs?
10:10:03 <xray> it can be found at:  http://www.iam.unibe.ch/~locher/seq.hs
10:12:34 <Logan> So tailSeq (Cat (Cat (Unit 1) (Unit 2)) (Cat (Unit 3) (Unit 4))) => (Cat (Unit 3) (Unit 4))) ?
10:14:31 <xray> no. this should be 2 # 3 # Unit 4. thanks
10:17:25 <Logan> You might want to note that eqSeq is of type Eq a => Seq a -> Seq a -> Bool
10:18:57 <xray> ok.
10:19:00 <xray> tailSeq (Cat (Unit a) b) = b
10:19:00 <xray> tailSeq (Cat Nil b) = b
10:19:00 <xray> tailSeq (Cat a b) = tailSeq a
10:19:11 <xray> seems not enough for tailSeq....
10:19:27 <xray> 1 2 3 4 => 2 instead of 2 3 4
10:20:56 <Logan> You want tailSeq (Cat Nil b) = tailSeq b
10:21:15 <Logan> And tailSeq (Cat a b) = Cat (tailSeq a) b
10:21:39 <Logan> If you want the same semantics as tail
10:22:15 <xray> yes, i want the same semantics. let me think about your solution...
10:22:52 <Logan> tailSeq (Cat Nil b) = tailSeq b just discards the Nil and recurses on b...
10:23:02 <Logan> Er.
10:23:09 <Logan> tailSeq (Cat Nil b) = tailSeq b, that is.
10:23:19 <Logan> And tailSeq (Cat a b) = Cat (tailSeq a) b fixes the problem you observed.
10:23:49 <xray> you convinced me :-) 
10:24:12 <Logan> Just like you'd want tail (x ++ y) => (tail x) ++ y
10:24:18 <Logan> (if x is not [])
10:24:30 <Logan> tail ([] ++ y) => tail y
10:26:31 <xray> thanks a lot!
11:35:09 * Igloo reads scrollback and hmms
12:01:54 <toadx> I want to call grep from my program and redirect the output of grep back into my program. Is that possible? I can call grep with the system function, but how do I pipe stuff in and out of it?
12:55:48 <seraphim> sup
12:56:00 <shapr> na'much
12:56:03 <shapr> wassup wi you?
12:56:22 <seraphim> wondering if someone could help me get a haskell script running with hugs98
12:56:40 <shapr> possibly
12:56:50 <shapr> ask away..
12:56:52 <seraphim> it's a Tetris game i downloaded from a german website, almost completely loads but then complains about FAL not being previously loaded
12:57:00 <seraphim> but it's defined > import FAL 
12:57:10 <seraphim> and i can see it loading not 3 lines above it
12:57:22 <shapr> I've heard of Functional Animation Language
12:57:26 <shapr> I thought it was FRAN though...
12:57:36 <shapr> you'll probably need to look at the requirements.
12:57:42 <seraphim> with the school of expression it's FAL.lsh
12:57:42 <seraphim> lhs excuse me
12:57:46 <shapr> ah
12:57:55 <shapr> do you have that installed and working?
12:58:06 <seraphim> yup on a linux box and a windows box
12:58:26 <seraphim> the linux box complains about not loading Win32Misc so i moved the project to windows which now complains about FAL
12:59:01 <shapr> the libs for SOE are available from the associated website
12:59:08 <seraphim> yup
12:59:13 <shapr> but I'm not quite sure if that what you need...
12:59:25 <seraphim> and FAL.lhs comes in the src folder
12:59:38 <seraphim> this program was written for FAL
13:00:03 <seraphim> wanna take a look ?
13:00:59 <shapr> this is the webpage? http://www.inf.uni-konstanz.de/~strohm/informatik/haskell.html
13:01:27 <seraphim> yup
13:02:18 <shapr> you have this installed? http://haskell.cs.yale.edu/graphics/
13:02:42 <seraphim> yeah that comes with the SOE 
13:04:22 <shapr> hm
13:04:31 <seraphim> yeah that's what i said
13:04:46 <seraphim> "Module FAL not previously loaded"
13:05:01 <shapr> you ran the win32 installer from that page?
13:05:32 <shapr> is that the only error line you get from it?
13:05:44 <shapr> if you get several lines of errors, can you paste them?
13:06:02 <seraphim> yup 
13:06:05 <shapr> cool
13:06:05 <seraphim> one error
13:06:40 <shapr> my best guess is that FAL didn't actually come with SOE
13:06:44 <shapr> and that you need to run the win32 installer from http://haskell.cs.yale.edu/graphics/downloading.html
13:06:45 <seraphim> yes it did
13:06:59 <shapr> maybe it didn't register the path or module or something?
13:07:24 <shapr> I know I've had to manually register modules with GHC once or twice
13:07:39 <shapr> and it's just a matter of telling it where the dirs are
13:08:37 <shapr> if the separate win32 installer doesn't do it, then I suggest you talk to someone else on the channel who has more of clue than I do :-)
13:10:03 <shapr> sorry I can't help more, I don't use hugs, and I haven't used FAL :-(
13:10:38 <seraphim> right on, thanks anyway though
13:10:47 <seraphim> i'm gonna just keep screwin with it i guess
13:11:14 <shapr> ok
13:11:21 <shapr> if you find the answer, mention it here
13:11:34 <shapr> and I'll hopefully remember it when/if someone else asks
13:12:20 <Heffalump> are you sure it's not just a capitalisation problem?
13:12:28 <Heffalump> though I guess under win32 that ought not to be an issue
13:12:45 <shapr> aha, the clueman has arrived
13:17:27 <seraphim> okay i got it
13:17:41 <seraphim> the Tetrisgraphik.lhs file had it named FAL 
13:17:52 <seraphim> runs slower than shit and the window is way too big for the game
13:17:54 <seraphim> :(
13:18:22 <shapr> what kind of machine are you running it on?
13:18:31 <seraphim> 400Mhz AMD win98
13:18:33 <shapr> oh
13:18:42 <shapr> how fast is your linux box?
13:18:49 <seraphim> 700 
13:19:28 <seraphim> 90% of the time the windows computer is just running an emulated KDE 
13:19:35 <shapr> heh, amusing :-)
13:19:40 <seraphim> i CTRL-ALT-DEL explorer
13:19:52 <shapr> if you fix the case problems, does it run on Linux?
13:20:00 <seraphim> no cause it need Win32Misc
13:20:15 <seraphim> might be able to tweak it to run with wine but i'm set with that
13:21:33 <shapr> yah, I see.
13:21:49 <shapr> I don't have windows at all.
13:22:00 <seraphim> i may as well not
13:22:10 <seraphim> this desktop serves all the apps i run on the windows computer
13:22:13 <seraphim> staroffice and all that
13:22:32 <seraphim> all the processing is done right here when i'm working on a project or a paper
13:22:44 <seraphim> and i just slide the chair back and forth between em ;)
13:23:08 <shapr> so... why do you have a win32 box?
13:23:45 <seraphim> well the windows box (laptop) got the ethernet card fried (PCMCIA) and i bought a cheap one to replace it that linux doesn't support
13:23:57 <seraphim> so until i get a new card which will probably not happen i'll get a new computer first
13:24:32 <shapr> which card?
13:24:46 <seraphim> umm lemmy check again, it's the $19.99 eBay model :)
13:25:07 <seraphim> Eiger PC Lan Card
13:25:32 <shapr> sound scary :-)
13:25:38 <shapr> any idea what chipset it's using?
13:25:59 <seraphim> nope :)
13:26:03 <shapr> oh well
13:26:13 <seraphim> came with nothign, works quite well under win98 tho 
13:26:30 <seraphim> basically just plays starcraft and quakeworld :)
13:26:39 <shapr> well, so does linux :-)
13:27:21 <seraphim> yes and i play it everyday on the linux bos
13:27:29 <seraphim> q3, cs, starcraft, all work
13:27:48 <seraphim> pisses me off there's no OpenGL version of quakeworld for linux, only the shitty 3dFX
13:28:15 <seraphim> i have to play it in vid_mode 55 in software mode :)
13:29:12 <seraphim> even the new builds like quakeforge and zquake don't have basic Mesa or GLX support
13:29:27 <shapr> I got tired of dealing with the instability and lack of quality and flexibility of win32
13:29:31 <shapr> so I just stopped using it.
13:30:21 <seraphim> well i've been with linux a while and i've unfortunately experienced linux experiencing the same downfalls
13:30:41 <seraphim> when you try to make a linux computer do what a windows computer does (basically gaming) it screws up
13:31:56 <shapr> works for me
13:32:04 <shapr> I have my own Tribes2 tribe :-)
13:32:18 <shapr> gaming on linux can actually be far better than windows
13:32:50 <seraphim> can
13:33:10 <shapr> I'm using a dual Athlon MP 1800+ machine for gaming on linux
13:33:15 <shapr> that works quite well.
13:33:26 <seraphim> say that after you're hooked on counter-strike and it takes you a week+ to get it to run on your linux box
13:33:38 <shapr> I've been hooked on counter-strike.
13:33:51 <seraphim> or when stupid artsd and esd conflicts keep games from starting or havign sound 
13:33:51 <shapr> at the time, I was the third best player I knew of :-)
13:33:59 <shapr> ah, but that I can help with.
13:34:28 <shapr> what Linux distro?
13:36:42 <seraphim> redhat
13:37:09 <seraphim> gets as far as "Connecting to 1.23..23.2" and then just crashes out
13:38:34 <seraphim> woah i just found a page on how to recomplile the Quake1 source for GLX support
13:40:01 <shapr> hm, nifty :-)
13:40:48 <seraphim> http://www.comptechnews.com/~reaster/cse.html
13:40:54 <seraphim> that has a precompiled version
13:43:35 <seraphim> shit got it runnin first time, same kind of artsd problem, but a killall -9 artsd and a esdctl off fixed it :)
