03:33:29 <shapr> xbill: your imap haskell source works as advertised, it was my imap server that was broken.
03:41:34 <shapr> g'morning fokes
03:42:32 <Heffalump> morning
03:43:30 <shapr> anything exciting going on?
03:44:03 <Logan> My gallery software seems to be working well. :P
03:44:15 <Logan> I should move all my old pictures over to it.
03:48:45 <shapr> Logan: how do you like php?
03:51:33 <Logan> It's all right.
03:51:40 <Logan> Pragmatism over elegance.
03:51:51 <Logan> But a little more orthogonal than perl, at least. :P
03:51:56 <shapr> really?
03:52:01 <Logan> And a very generous library.
03:52:05 <shapr> hm
03:52:10 <Logan> If you know C or perl, PHP is trivial to pick up.
03:52:22 <Logan> http://www.php.net/manual tells you almost everything you need to know.
03:52:42 <shapr> I have argument with the standard programming style in PHP, it seems the culture isn't very pushy about writing maintainable code
03:53:00 <Logan> I've been struggling to write maintainable code myself.
03:53:07 <Logan> I had to scrap my first attempt at this out of disgust.
03:53:29 * Heffalump should convert his photo gallery software into Haskell
03:54:23 <shapr> yah! haskell gallery software!
03:54:31 <shapr> Logan: tried unit-test-first style?
03:55:27 <shapr> I'm really happy with unit-test-first
03:59:52 <Heffalump> I'd need to have Haskell bindings for ImageMagick first, though
04:01:57 <Logan> Heh, I'm just execing mogrify.
04:02:09 <Logan> Since all I need is some simple scaling and 90 degree rotations.
04:02:17 <Logan> That's how my old gallery software worked.
04:02:34 <Logan> http://www.loganh.com/newgallery/browse.php has a few pictures already.
04:02:39 <shapr> Haskell would be good at doing image processing stuff
04:02:44 <Logan> I haven't gotten around to making icons and making things look good.
04:02:48 <shapr> since it's basically array ops
04:02:57 <Logan> shapr: I did a bunch of image processing last weekend in Haskell.
04:03:06 <shapr> got the code posted?
04:05:45 <Logan> Not yet.
04:05:50 <Logan> It's still under heavy development.
04:05:54 <Logan> But I'd like to release it.
04:06:03 <Logan> I'm going to let my girlfriend try it out first.
04:06:28 <Heffalump> I used to exec mogrify but I thought that was horrible so I stopped
04:06:43 <Heffalump> shapr: why would Haskell be particularly good at array ops?
04:07:25 <shapr> from a usability standpoint
04:07:49 <shapr> I'm aware that in-place array changes don't really happen in Haskell
04:08:18 <Heffalump> well, they do happen in the array modules, I think
04:08:20 <Heffalump> s/think/hope/
04:09:27 <shapr> maybe an Image module that's a few convenience methods for reading in and writing out of an Array
04:09:40 <Logan> Heffalump: Any particular reason why you thought it horrible?
04:10:09 <Logan> What I found made my image processing code was just all the number crunching, I think.
04:10:22 <Logan> I was using mutable arrays wherever I could.
04:10:36 <Logan> It was still kind of neat, though...
04:10:55 <Logan> If I was applying a local operator to an image, and then just pulling out a fragment of that image for results, lazy evaluation would come in handy.
04:11:17 <shapr> show an example?
04:11:32 <shapr> you should just post your code anyway it sounds like... ;)
04:11:50 <Logan> The code's a mess, I haven't gone back through to clean it up and fix the design.
04:11:56 <Logan> I wrote it mainly to get an assignment done.
04:12:02 <Logan> Let me make a copy accessible for you to see.
04:12:06 <shapr> hey, if it does stuff that's better than most Haskell I've written.
04:13:15 <Logan> http://www.loganh.com/haskell/Image.hs.html
04:13:23 <Logan> http://www.loganh.com/haskell/Image.hs if you just want the code directly.
04:13:38 <Logan> It's generally undocumented and contains a lot of my newbie idioms. :P
04:13:49 <Logan> Some of that Hough transform code is rough. :P
04:14:23 <Logan> And the binary image morphology doesn't work at all (and is incredibly inefficient :P).  I was just playing around with that.
04:15:09 <Logan> So, for instance, to perform Sobel edge detection on a PGM: main = do { x <- readPGM "filename.pgm"; writePGMBinary "sobel.pgm" (sobel x) }
04:15:19 <Heffalump> logan: well, it's inefficient, and since I like to run my photo stuff under mod_perl, it removed half the advantages of doing so
04:15:35 <Heffalump> using mod_perl does actually provide quite a big speedup
04:15:50 <Logan> Hmm, mogrify does seem slow.
04:16:02 <Logan> When I import a photo gallery, I have to create two new scaled images of each image, and it takes forever.
04:16:17 <Heffalump> my thumbnails get created dynamically
04:16:20 <Heffalump> (and cached)
04:16:21 <Logan> Thing is, I'm not sure what image formats PHP's image library supports.
04:16:26 <Logan> I considered doing that...
04:16:33 <Logan> But if someone loaded up a page with a ton of images, they'd have quite a weight.
04:16:36 <Logan> s/weight/wait
04:16:43 <Logan> At least for the first viewing.
04:17:00 <Logan> And since most people would probably check over their imported gallery before leaving it, I decided it wasn't worth the complexity.
04:17:39 <Heffalump> I generally view the default pages when I first upload pictures
04:17:49 <Heffalump> but people have the option to view them at lots of different scalings etc
04:18:01 <Heffalump> (and colour balancings, rotations, ...)
04:18:02 <Logan> Cool.
04:18:16 <Heffalump> so I didn't want to waste the space and time to generate the whole lot
04:18:19 <Logan> I kept mine simple... you just have the original, a mid-size, and a thumbnail.
04:18:33 <Logan> And the admin can go through and rotate things 90 degrees when browsing, but that's about it.
04:21:52 <Heffalump> my camera does that automatically (it has a tilt sensor) but some friends who use the script have cameras which don't, so there's an option to rotate photos manually
04:22:29 <shapr> have you considered using your camera as an input device? ;)
04:22:35 <Logan> I think the only feature I'm thinking of adding to what I have right now is attaching message threads to any image or gallery.
04:22:53 <Logan> Unfortunately the SmartMedia reader I have is not supported under Linux.
04:47:26 <shapr> I like that Image.hs
04:53:12 <Logan> :runtime! syntax/2html.vim in vim. :P
04:53:30 <shapr> oh, I thought it was M-x htmlize-buffer
04:53:31 <shapr> :-P
06:35:56 <cuelebre> hi 
06:36:03 <shapr> hiya
09:39:20 <shapr> y0
09:41:51 <Heffalump> 'lo
09:43:13 <shapr> excitement?
09:43:51 <Heffalump> not really
09:43:53 <Heffalump> having fun making CVS behave
09:44:01 <shapr> that's an accomplishment
09:45:07 <Heffalump> I'm not there yet
09:46:14 <shapr> heh
09:46:27 <shapr> how goes the battle?
09:48:08 <shapr> cvs is a real pain
09:48:17 <shapr> I hope subversion is easier to use
09:51:37 <Heffalump> I'm having to strace cvs pserver atm.
10:04:03 <shapr> yikes
10:04:07 * Heffalump fumes
10:45:01 * shapr lights the fumes
10:45:27 * Heffalump has fixed it now
10:46:57 <shapr> yay!
10:47:12 <Logan> Heffalump emits flammable fumes?
10:47:48 <shapr> only when irritated I think.
10:48:27 <Heffalump> this is quite frequent, however, ask Igloo :-)
10:50:58 * shapr puts out that cigarette
10:51:49 <shapr> actually, my one year anniversary of no smoking is coming up this saturday.
10:52:00 <Heffalump> congratulations
10:52:03 * shapr grins happily
10:52:49 * Heffalump 's 24 year anniversary comes up in February
10:52:49 <shapr> you never started, eh?
10:52:49 <Heffalump> indeed :-)
10:52:52 <shapr> I smoked for eight years before that.
11:04:28 <Logan> I've smoked a few times but never made a habit of it.
11:04:32 <Logan> I used to have a girlfriend that smoked.
11:04:45 <Logan> It's too much work for a lazy guy like me.
14:06:56 <shapr> w00
14:08:16 <Igloo> Oh?
22:17:04 <Pseudonym> Yuck.  Ugly, ugly code.
22:17:41 <Pseudonym> KMP algorithm in continuation passing style.
