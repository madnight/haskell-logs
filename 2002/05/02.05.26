04:43:44 * polo is away.. fora ..(log+page)
04:50:22 * polo is back.. hi ..gone/6m38s
16:08:02 <exa> hi
16:08:17 <exa> anybody alive?
16:08:41 <clausen> yep
16:08:44 <Heffalump> yep
16:08:45 <exa> how to best read binary data in haskell?
16:08:45 <Heffalump> just
16:08:54 <clausen> readFile ?
16:09:22 <exa> say it consists of a format that has fields for each records such as floating point numbers, etc.
16:09:38 <exa> double someplace, float some other, and a string somewhere
16:10:15 * clausen doesn't know
16:10:24 <clausen> (never had to do it!  I only use haskell for really theoretical stuff)
16:10:32 <Heffalump> it's been covered on the Haskell list
16:10:40 <Heffalump> search the archives
16:10:43 <Heffalump> sorry, can't remember the details
16:11:53 <exa> such stuff is hard to do in haskell :/
16:12:09 <clausen> well, it could be solved by a nice library, or whatever
16:12:13 <clausen> (and probably has been)
16:12:33 <exa> there is a library called Binary but I couldn't get it to work
16:12:59 <exa> I had had to write my own routines to do a very simplistic thing, writing a list of 16 bit words
16:13:11 <exa> Pfff
16:13:21 <exa> It shouldn't be this hard :P
16:13:30 <exa> I last used FFI for this sorta thing
16:13:42 <exa> Any of you know how to read a, say, floating number using FFI?
16:15:58 <Logan> Where's this Haskell list at?
16:16:58 <exa> go to haskell.org
16:17:09 <exa> nice to see you people around, btw :)
16:17:24 <exa> i'm eray ozkural, a phd student from bilkent university, ankara
16:17:34 <exa> cs dept surely :P
16:17:59 * Heffalump is Ganesh Sittampalam, postdoc from Oxford university, England
16:18:46 <exa> nice to meet you Heffalump
16:19:03 <exa> Heffalump: You do PL research?
16:19:17 <Heffalump> exa: yeah
16:19:49 <Heffalump> PhD was using Haskell to transform a subset of Haskell, currently using SML to transform .NET programs
16:23:22 <exa> funded by MS? ;)
16:23:42 <exa> I like PL stuff, too bad we don't have many PL people in Turkey
16:23:58 <exa> I am interested in data mining/machine learning/parallel programming
16:24:13 <Logan> Heh, there's one PL guy at my university, and he's more into things like automated testing.
16:24:17 <Heffalump> exa: yeah :-)
16:24:17 <exa> I worked on a parallel frequency mining algorithm in my msc thesis
16:24:46 <exa> I had this old PL design that I had to throw away after I learnt Haskell  ;)
16:25:02 <Heffalump> :-)
16:39:44 <exa> if it weren't for these silly problems haskell would rule
18:54:24 <dennisb> People always leave before I can help them...
18:55:03 <dennisb> To read a binary file is not that hard. I have an example I write to try it out some time ago:
18:55:13 <dennisb> f filename = do
18:55:14 <dennisb>   (ptr,len) <- slurpFile filename
18:55:14 <dennisb>   putStrLn $ "Length " ++ show len
18:55:14 <dennisb>   x <- peekByteOff ptr 0 :: IO Int
18:55:14 <dennisb>   y <- peekByteOff ptr 4 :: IO Int
18:55:14 <dennisb>   z <- peekByteOff ptr 8 :: IO Double
18:55:16 <dennisb>   putStrLn $ "Elem 0 " ++ show x
18:55:18 <dennisb>   putStrLn $ "Elem 1 " ++ show y
18:55:22 <dennisb>   putStrLn $ "Elem 2 " ++ show z
18:55:24 <dennisb>   return ()
18:56:25 <dennisb> It just reads in the file into an array and then pulls out the parts that are interesting
18:56:48 <dennisb> (not array, memory chunk I should say)
18:59:17 <dennisb> of course you don't have to slurp the whole file if you don't want to
