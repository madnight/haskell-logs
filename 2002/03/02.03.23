04:47:27 --- topic: set to 'Pixar sues Exluna for patent infringement, film at 11' by Pseudonym
04:47:35 <Pseudonym> Shoops.
04:47:38 <Pseudonym> Whoops, I mean.
04:47:56 * Pseudonym really needs to get a better IRC client
04:48:06 <Heffalump> do you know what the old topic was?
04:48:18 <Pseudonym> Nope, sorry.
04:48:37 <Heffalump> cos it had the URL of the logs and stuff
04:48:53 <Pseudonym> It'll be in the logs, won't it.
04:49:04 <Heffalump> I guess, but where are they?
04:50:05 <Pseudonym> Someone should add the log location to http://haskell.org/wiki/wiki?HaskellIrcChannel
04:50:21 <Pseudonym> That way we won't forget. :-)
04:51:01 <Pseudonym> Found 'em.
04:51:17 --- topic: set to 'Logs are at http://tunes.org/~nef/logs/haskell/' by Pseudonym
04:53:01 --- topic: set to 'Have a library you'd like to donate, or one you'd like to see? Talk to us at http://sf.net/projects/haskell-libs/ | we be loggin' http://tunes.org/~nef/logs/haskell/ | welcome to the Haskell Dojo | julien is up to white belt! jewel and shapr are up to green belt!' by Pseudonym
04:53:13 <Heffalump> most of it's kind of out of date anyway
04:53:20 <Pseudonym> True.
04:53:25 <Heffalump> but the logs and the libraries project are useful, I thikn
04:53:30 * Pseudonym nods
04:55:02 <Pseudonym> How recent is haskell-libs?
05:33:04 <Pseudonym>  /leave #c++
05:33:08 <Pseudonym> Whoops.
05:33:21 * Pseudonym isn't doing too well with the IRC client thingy today
05:34:42 <Pseudonym> I have this bad feeling that Haskell I/O is going to need to be revamped to support sockets properly.
05:35:03 * Pseudonym was just looking through ways that other declarative languages have done it
05:36:43 <Pseudonym> Systems which added network I/O as an afterthought either needed to be redesigned a bit or are gross hacks.
05:37:56 <Pseudonym> I think in Haskell, the Handle type would need to be turned into a type class.
05:42:01 <Igloo> Why?
05:42:07 <Igloo> And what would be instances of the class?
05:43:45 <Pseudonym> Well... Handle isn't extensible.  You can't add new kinds of file handle easily.
05:44:08 <Pseudonym> Ideally, a socket library should not depend on the details of how IO is currently implemented.
05:44:23 <Pseudonym> I think.
05:44:35 <Igloo> What would this gain the user of the language?
05:44:51 <Pseudonym> The ability to add new "things" which could be accessed as files.
05:44:59 <Pseudonym> Like network connections.
05:45:17 <Pseudonym> Or IPC.
05:45:45 <Pseudonym> Maybe even file handle filters, like in Java.
05:56:43 <Igloo> It's only important if you would want a file handle for something you could write in Haskell. Admittedly filters may be such a thing
05:57:08 <Pseudonym> It's also important if you don't want to have to rewrite it for every Haskell implementation.
05:57:11 <Igloo> But you could always use Strings or something for the abstraction
05:58:31 <Igloo> I don't get what you mean about rewriting it
05:58:37 <Pseudonym> Not that there are that many implementations around at the moment...
05:58:58 <Pseudonym> Well, at the moment, implementing a socket as a Handle means getting into the implementation of Handle, which is, at the moment, implementation-defined.
05:59:26 <Pseudonym> If there was a nice way to map between Handles and POSIX fds, that would be sufficient, I think.
05:59:41 <Pseudonym> But I don't think you can even assume that Haskell is running under POSIX.
06:00:17 <Pseudonym> So you need a way to do it that doesn't depend on how the Haskell implementation defines the Handle type.
06:00:21 <Igloo> Implementations would still have to write their own sockets stuff, they'd just make the type an instance of a class rather than having a tuple identifying it as a socket rather than normal file handle
06:00:46 <Pseudonym> That's okay for sockets, but what about the next stream-like abstraction?
06:01:20 <Igloo> Unless you are talking about things you can implement in Haskell code it doesn't make a difference
06:01:32 <Pseudonym> I can think of a few such things.
06:02:06 <Igloo> I said I agreed in that case up a page or so
06:02:19 <Pseudonym> Yeah, I know that. :-)
06:02:43 <Pseudonym> Filters are one such case.  Others are devices which don't present to the OS as normal files.
06:03:26 <Pseudonym> Unix is a bit spoiled in this regard. :-)
06:04:04 <Pseudonym> It would also, I think, help with different kinds of streams, like those that are seekable and those which aren't.
06:05:30 <Pseudonym> hGetPosn :: (SeekableHandle h) => h -> IO HandlePosn
06:05:34 <Pseudonym> ...and so on
06:06:20 <Igloo> *nod*
06:06:50 <Pseudonym> It might also be good to differentiate between text and binary streams.
06:06:58 <Igloo> I think I'd rather see efforts focussed on efficient implementation of IO personally
06:07:03 <Pseudonym> Well true.
06:07:27 <Pseudonym> Haskell at the moment is highly optimised for the efficient implementation of Haskell compilers.
06:22:41 <Heffalump> in what way?
06:24:02 <Pseudonym> Let me put it this way: Do you know of an I/O-bound Haskell application?
06:26:36 <Heffalump> I have an I/O-bound shell script that I rewrote in Haskell :-)
06:26:44 <Pseudonym> :-)
06:27:34 <Pseudonym> I'm not saying it can't be done, but I certainly don't know of any "real" (and I do use that word advisedly) Haskell applications which mostly do I/O.
06:27:59 <Pseudonym> All the ones I know of mostly do complex structure manipulation.
06:33:36 <Pseudonym> You know a language has taken off when it has a Comprehensive Archive Network.
06:35:56 <Igloo> Hmmm, I only know of 2 OTTOMH, and neither of them are C
06:37:08 <Pseudonym> I think it's impossible for any single C archive to win the title of "comprehensive", somehow.
06:38:01 <Pseudonym> I didn't mean ubiquitous languages, obviously.
06:40:10 * Pseudonym thinks of it as a sufficient rather than a necessary condition
08:22:24 * Yurik is away: just for few minutes, will be back shortly
08:27:39 * Yurik is away: I'm busy
08:47:26 * Yurik is away: home, beer, sleep
09:32:55 --- topic: set to '' by zorb
09:33:01 <zorb> doh
09:33:08 <Heffalump> what is it with today?
09:33:22 <zorb> ?
09:33:35 <zorb> I haven't been here in a while.
09:33:37 <Heffalump> you're the second person to mess up the topic today
09:33:46 <Heffalump> after it survived for months completely unchanged
09:33:58 <zorb> did anybody have op status?
09:34:04 <Heffalump> channel isn't +t
09:34:22 <zorb> yeah.
09:34:34 <zorb> (was it?)
09:34:34 --- topic: set to 'Have a library you'd like to donate, or one you'd like to see? Talk to us at http://sf.net/projects/haskell-libs/ | we be loggin' http://tunes.org/~nef/logs/haskell/ | welcome to the Haskell Dojo | julien is up to white belt! jewel and shapr are up to green belt!' by Heffalump
09:34:39 <Heffalump> dunno
09:34:42 <Heffalump> hi, anyway :-)
09:34:56 <zorb> heh, hi
09:35:24 * zorb checks the recent channel logs
09:35:50 <zorb> ooh, nice.
10:00:54 <zorb> oye.
10:01:09 <zorb> I need to get back to working on Strictness FAQ
10:02:19 <zorb> anybody here want to comment on things that once confused them?
10:02:24 <zorb> (if anybody is available.
10:04:58 <zorb> ah, for future reference, if anybody wants to know where the logs are, just /whois clog
11:02:00 <zorb> brb
23:15:09 <zorb> ick! must sleep
