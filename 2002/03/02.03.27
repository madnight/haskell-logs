00:05:20 <ganesh> gah!
00:05:35 <shapr> wheee
00:26:01 <noz> ta Heffy
02:08:04 * shapr bounces
02:08:26 <Heffalump> why does shapr bounce?
02:08:36 <shapr> because I'm working on Jython
02:08:46 <shapr> which I prefer very much over Java
02:09:06 <Heffalump> ah :-)
02:09:37 <shapr> I'm trying to persuade my boss that Jython is worth checking out
02:09:44 <shapr> that's just one step of my evil plan of course...
02:10:14 <shapr> the end point of this plan is where we use one of many languages for a project, whichever fits best. (including Haskell of course)
02:11:02 <Heffalump> heh
02:11:23 <Heffalump> how does writing something in Jython compare performance-wise with using Java?
02:11:53 <shapr> it adds a few percent
02:12:44 <shapr> and about 740k for the latest jython.jar (earlier versions are much smaller)
02:12:58 <Heffalump> right
02:13:50 <shapr> I could go on in extreme detail about jython, but that's probably more than you wanted to know already. ;)
02:14:31 <Heffalump> have you looked at the bytecode compiling with Jython produces?
02:15:25 <shapr> nope, should I?
02:27:31 <Heffalump> no, just wondering what it looked like
02:27:52 <shapr> now that you mention it, I am curious how similar IL/Python/Java bytecodes are to each other.
02:31:06 <Heffalump> IL and Java bytecodes are relatively similar
02:31:15 <Heffalump> dunno about Python
02:54:20 <jewel> does the python runtime have a JIT?
02:56:33 <shapr> python source files are compiled to bytecode at runtime, but not to native binary
02:57:41 <Igloo_> \xs -> snd $ minimum $ zip xs [0..]
03:00:13 <Heffalump> oh, is min defined for tuples?
03:00:27 <Heffalump> of course, instance of Ord, duh
03:01:03 <Igloo_> *nod*
03:19:35 <shapr> boink
