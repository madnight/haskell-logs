04:43:20 <shapr> hi pesco
04:43:26 <pesco> I'm trying to get profiling output out of GHC, but it complains that it cannot find the interface file for 'Prelude'. Compilation works perfectly without -prof.
04:43:30 <pesco> shapr: Hi there.
04:43:51 <pesco> This channel seems to have grown in Population...
04:43:54 <shapr> truly
04:44:31 <shapr> I've been unable to get profiling working myself with the Debian ghc5 packages.
04:44:42 <pesco> Any other way?
04:44:54 <shapr> are you using Debian?
04:45:11 <pesco> Certainly.
04:45:28 <Igloo> Have you got the -prof package installed?
04:45:31 * pesco breaks into maniacal lauphter.
04:45:38 <pesco> laughter
04:45:42 <shapr> well, http://purl.org/wiki/haskell/HaskellNiftyTricks might help, but then, it might not
04:46:06 <pesco> Let me try apt-get install ghc5-prof first... ;)
04:47:09 <pesco> LOL, seems to work, thanks for the hint, shapr. :)
04:47:24 * shapr points to Igloo 
04:47:41 <pesco> Oh, er, sorry.
04:47:50 <shapr> credit where credit is due ;)
04:47:54 <Igloo> :-)
04:56:30 <pesco> I'm trying to find out, exactly which part of the process is to blame for my Haskell CRC implementation requiring more than thrice the time as the C reference impl.
04:57:13 <Igloo> Could just be the boxing and unboxing of Chars
04:58:58 <pesco> What's that?
05:06:44 <Igloo> Chars need to be put into boxes when they lists are built from them (and possibly any time they are put on the heap - don't know much about actual implementatino details)
05:11:29 <pesco> Hm.
05:11:51 <pesco> Can the overhead be avoided?
06:03:10 <smkl> probably only with better implementation
06:05:08 <smkl> but also the processors might have different performances with boxing
06:06:22 <Heffalump> GHC certainly does some unboxing
06:09:29 <smkl> well then that shouldn't be a problem. i think thrice c is quite good for that kind of program
06:16:11 <pesco> smkl: Cool, I feel better, then. :)
06:19:39 <dennisb> you can tell ghc to unbox things also, I have not played with it much. But you can have things like 4# which is an unboxed 4
08:15:18 <Igloo> It's quite restrictive in what you're allowed, and also means you're not writing portable Haskell any more
