01:32:30 <ChoJin> hi
01:34:02 <Heffalump> hi
01:41:00 <shapr> hi guys
01:52:05 <Heffalump> hi
01:52:29 <shapr> hey Heffalump, how's life?
03:29:21 <shapr> hi Grimace 
03:29:27 <Heffalump> hi shapr (belatedly)
03:29:41 <Heffalump> been playing with IPv6 (and writing up a paper) instead of fixing your deb, I'm afraid :-)
03:29:58 <shapr> heh, no worries
03:30:06 <shapr> does Haskell have IPv6 support?
03:30:17 <shapr> I've been thinking about purely multicast games
03:30:21 <Heffalump> that'd be to do with the underlying resolver library surely
03:30:34 <Heffalump> s/resolver library/resolver and sockets libraries/
03:30:40 <shapr> I'm looking forward to the whole net going multicast
03:30:57 <shapr> er, going IPv6
03:31:00 <Heffalump> I was having fun just getting it set up at all, let alone talking Haskell in it
03:31:04 <Heffalump> me too
03:38:25 * Igloo doesn't think you'll want to be holding you breath...
03:39:04 <Heffalump> given that all major OSes now ship with IPv6 support by default, I think it could get there in the not too distant future
03:39:32 <shapr> yah, I agree
03:40:16 <Igloo> I'll believe it when I see it
03:41:00 <Heffalump> I guess it'll require ISPs to take it up
03:43:21 <shapr> I'm surprised they haven't already
03:43:29 <shapr> it would allow them to give real IPs to their users
03:43:51 <shapr> rather than using all this NAT crap
03:44:13 <Heffalump> very few ISPs give NATed IPs to their users atm, at least in this country
03:45:20 <Igloo> And ISTR Cambridge uni recently switched to NAT for security reasons despite having a shedload of IPs
03:45:45 <Heffalump> I thought Cambridge switched to NAT because they have an IP shortage, actually
03:45:55 <Heffalump> their computing or engineering department has a class B it won't give up to the uni
03:46:05 <Heffalump> so that doesn't, but the rest of the uni does
03:46:12 <Heffalump> ICBW
03:46:32 <Igloo> Oh, fair enough
03:46:46 <shapr> well, in this country it's expensive to get a real IP
03:46:55 <Heffalump> anyway, who cares about security. Having a house network wide open to the IPv6 world is good :-)
03:47:19 <shapr> I do care about security, but I'd also like to get incoming connections
03:47:35 <shapr> without it, VoIP is very difficult
03:48:10 <Heffalump> so 195.156.199.166 isn't really the IP you're on?
03:49:19 <shapr> I'm at work, where they have a block of IPs
03:49:29 <shapr> and these IPs are still not able to get connections from the outside.
03:49:32 <shapr> :-(
03:50:43 <shapr> I guess what really pisses me off is any system that thinks it knows what I want/need, and so keeps me 'safe'
03:50:47 <shapr> I at least want the choice.
03:50:50 <Heffalump> so they give you real IPs and then firewall incoming connections?
03:51:29 <shapr> yah, my workplace isn't always the brightest of stars
05:34:29 * Grimace is away: concert
05:34:51 * shapr is away: working
05:35:01 * shapr actually doesn't have away messages
05:35:04 * Heffalump is here: not working
05:35:10 <shapr> heh =)
05:35:11 <shapr> that's a good one
07:30:12 <jadrian> hi all
07:30:49 <jadrian> any of you has any experience with "literate haskell" + LaTeX + Xemacs
07:31:00 <jadrian> please... 
07:31:02 <jadrian> :-)
07:31:23 <Igloo> I have the first two...
07:31:54 <jadrian> eh not enough
07:31:55 <jadrian> :-)
07:32:05 <jadrian> xemacs it's the most important here
07:32:40 <Igloo> You have my deepest sympathy </holy war bait>
07:34:34 <jadrian> :-)
07:35:00 <Igloo> Presumably you have looked at the stuff on www.haskell.org BTW?
07:35:41 * Heffalump uses xemacs with haskell
07:36:34 <Heffalump> the emacs mode I use (from www.haskell.org) isn't perfect but it does ok
07:52:05 <jadrian> Heffalump: I'm using it, but what I need here now is not an haskell mode that works fine
07:52:22 <jadrian> Heffalump: the problem is when I want to edit the lhs file as a LeTeX document
07:52:28 <jadrian> LaTeX even
07:56:04 <Heffalump> oh, eright
07:56:10 <Heffalump> s/eright/right/
07:56:25 <Heffalump> sorry, didn't notice that bit. No idea how to help you there, aside from just shifting mode.
08:02:28 <Igloo> I think it was shapr who said it was possible
08:03:01 <Igloo> And just shifting mode will screw up if you use things like $
08:03:35 <Igloo> Still, syntax highlighting LaTeX properly is infeasible with the machinery editors use to do it anyway
09:22:38 * rik miaows.
09:40:58 <Heffalump> hello
12:45:50 <rik> just a warning, people.. i'm going to start asking some kinda newbie questions, so i can accomplish something unreasonably advanced.
12:46:32 <rik> I'm trying to write a CPU emulator in Haskell, because I need to write one anyway, and my Haskell is not as good as I think it should be... so I'm going to be asking questions here :)
12:47:00 <Heffalump> a CPU emulator kind of thing is one of the first year practicals here, I think
12:47:06 <Heffalump> (in a hardware course, not a Haskell course)
12:47:17 * rik nods
12:47:25 <rik> yep, it sorta was for us too
12:47:33 <rik> in software engineering, i think
12:48:01 * rik searches for his copy of Haskell: The Craft Of Fun
12:48:01 <Igloo> You don't write a CPU emulator, though, you add a handful of lines in one
12:48:09 <Heffalump> well, ok
12:48:50 <rik> well, i want to write from scratch
12:49:20 <rik> my first question: is there a datatype that is a 32 bit integer?
12:49:48 <Igloo> Int32, but I don't know if it's standard
12:50:24 <Igloo> Or Word32 - I can't remember what the difference is - possibly boolean operations are only defined on one?
12:50:37 * rik nods
12:51:39 <rik> my /usr/local/share/hugs/lib/exts/Int.hs appears to reference Int32
12:51:42 <rik> a lot..
12:52:01 <rik> oh
12:52:22 <rik> though the header says "Suitable for use with Hugs 98 on 32 bit systems."
12:52:38 <rik> and this will eventually run on a sparc64 system
12:53:10 <Igloo> Try
12:53:13 <Igloo> :l Int
12:53:16 <Igloo> (2^34) :: Int32
12:53:34 <Igloo> on the sparc64 - if you get 0 you'll probably be fine
12:53:45 <rik> uhm
12:54:02 <rik> <finds someone that has access to a sparc64 right now>
12:54:23 <Heffalump> bah, why don't we have hugs installed on our pet sparc64?
12:54:44 <Igloo> Integer is portable and arbitrary precision, so if you don't mind doing the odd mod then you could use that
12:55:29 <rik> I wanted to avoid the arbitrary precision though. that's the point.
13:27:00 <rik> confirmed.
13:27:07 <rik> Int32 works fine on sparc64's.
14:44:51 * rik blinks
14:44:53 <rik> a Jiriki
