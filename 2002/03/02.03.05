03:40:01 <Heffalump> 'lo
03:45:38 <Heffalump> hello
03:45:46 <Karsus> oi
03:45:52 <Heffalump> oi?
03:46:26 <Karsus> hi
03:46:44 <Karsus> just the wierd way i say hi
03:47:04 <Heffalump> ah :-)
21:46:21 <foonley> is there a function in the standard prelude that will take a list and split it into a list of lists?
21:46:59 <foonley> something like the reverse of concat?
21:47:36 <dennisb> foonley: but where should it split?
21:48:26 <juhp> what exactly do you have in mind?
21:49:08 <foonley> well, it would take a list, then break it into a list of lists with each list some given length
21:49:44 <foonley> I have written a function to do it but I get the feeling someone may have already done it
21:49:46 <dennisb> I don't think there is such a function, but it's probably just a two liner
21:49:52 <foonley> yah that's what I have
21:50:58 <dennisb> yes, I think that would be usefull in the standard, much more usefull then for example group that are in the standard
21:51:41 <foonley> what does 'group' do?
21:51:55 <dennisb> groups together equal elements
21:52:06 <foonley> ah
21:52:14 <dennisb> List> group "aaabbcc"
21:52:14 <dennisb> ["aaa","bb","cc"]
21:52:28 <foonley> ah nice I see
21:52:35 <dennisb> groupBy is a little more usefull, where you can supply the equality function
21:52:55 <foonley> hmnn handy
21:53:10 <dennisb> hmm, it's "useful", isn't it
21:53:21 <dennisb> yes
