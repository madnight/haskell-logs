04:21:18 <lament> Do you think Haskell is suitable for real-world programming?
04:21:38 <lament> More specifically, is it fast enough, both in terms of development time and execution time?
04:22:22 <tez> Hi lament
04:22:40 <lament> hi.
04:22:56 <tez> I noticed your chat with systems on #c
04:24:14 <tez> I think, in answer to your question, that there is a web server written in Haskell.
04:24:29 <tez> I haven't tried it, but I've read it performs reasonably well
04:27:14 <lament> Well, that doesn't really answer my question, but thanks anyway.
04:33:58 <ibid> lament: your question is unanswerable. you first need to define "real-world", ie. the application domain
04:43:48 <lament> All right, let me rephrase: For what application domain is Haskell fast enough, terms of development time and execution time?
04:43:54 <lament> s/terms/in terms
04:55:37 <ibid> lament: anything but hard real time ;-)
04:56:47 <lament> What does "non-strict semantics" mean?
04:57:16 <Heffalump> it means that computations whose result isn't used later don't get run
04:58:15 <lament> oh, the same as lazy. silly me.
04:59:33 <Heffalump> well, to be precise it means that you won't be able to tell if they were run or not
04:59:40 <Heffalump> i.e. any errors they would have produced don't show up
05:25:05 <ibid> laziness is one implementation strategy for laziness :_)
05:25:10 <ibid> bah
05:25:18 <ibid> laziness is one implementation strategy for non-struct semantics :_)
05:35:21 <Heffalump> hi
05:35:38 <Heffalump> ibid: yeah, and Eager Haskell is another.
05:35:47 <ibid> yes
05:35:55 <ibid> non-strict
05:36:02 * ibid is tyoping a lot
06:14:04 <Stewart002> hiya heffalump
06:22:36 <dark> Hmm, what lament was asking about is exactly what I'm investigating :)
06:22:50 <dark> I've been trying out Haskell for various systems programming tasks.
06:23:03 <Stewart002> heya dark :P
06:23:39 <dark> Hello :)
06:24:06 <dark> I've been idling a lot because this week I finally got Wine to do something useful :)  I've been digging out all my old games.
07:59:52 <dark> It's amazing, even answers.google.com gets Haskell homework questions.
08:00:00 <dark> hi shapr
08:00:13 <dark> Still dialup, I see :)
08:03:26 <shapr> hi dark!
08:03:33 <shapr> yes, telia has decided we don't exist.
08:04:03 <shapr> actually, they hooked up our DSL almost instantly, ( ~ two weeks ago ) and haven't gotten around to sending us the login and password for it yet.
08:04:27 <dark> And you can't hack it? :-)
08:04:44 <shapr> so I can cruise around inside the local chunk of DSL @ 512k... and I get to check my email at 56k
08:05:03 <shapr> oh, I'm sure I could hack it.... but telia is already pissy at us
08:05:16 <dark> *scratch* So they have one of those icky "portal" sites instead of just giving an IP connection?
08:05:34 <shapr> right, exactly
08:05:37 <Igloo> Can you get UDP or ICMP out?
08:06:01 <shapr> I can't get icmp or tcp out, haven't tried udp
08:06:09 <dark> "local chunk of DSL" sounds weird -- isn't it only cable that has local chunks?  I thought DSL was always point-to-point.
08:06:18 <Igloo> If ICMP doesn't work then UDP is very unlikely to
08:06:54 <shapr> dark: I can get to their login page (requires javascript)
08:07:01 <shapr> just can't get past it.
08:07:03 <dark> More and more evil.
08:07:22 <shapr> also, from what I've heard, you have to login once a day @ midnight
08:07:27 <dark> I would prefer a 56k line to that :-)
08:07:42 <shapr> because people were running servers, and telia doesn't like that.
08:08:13 <ayrnieu> Oh dear, people running servers?  How dare they?!
08:08:30 <ayrnieu> shapr - do you have an alternative to telia?
08:08:40 <Igloo> F2S actually say they give you a static IP so you can run servers if you want
08:08:45 <shapr> ayrnieu: not sure yet
08:08:53 <Igloo> Unfortunately they are too incompetent to set up reverse DNS
08:09:50 <dark> shapr: Well at least you should be able to set up a cron job to log in :-)
08:10:08 <shapr> dark: yes, that's true.
08:10:48 <dark> http://teliaadslcon.axnet.nu/
08:11:18 <dark> Isn't the web amazing :-)
08:11:42 <shapr> dark: wow, handy :-)
08:33:03 <shapr> hi hal
08:33:05 <shapr> what's up?
08:49:47 <hdaume> not a whole lot.  you?
08:51:20 <shapr> just playing around with HTTP.hs and HaXml, trying to make an automated webform filler
08:55:28 <hdaume> :)
08:55:37 <hdaume> fun
08:55:59 <shapr> yah, if I can figure out HaXml ;-)
09:13:31 <shapr> lazy evaluation is really trippy
09:16:59 <shapr> has anyone played with HTTP.hs ?
09:35:20 * shapr wonders
09:35:37 <Igloo> Not I
09:36:15 <ayrnieu> shapr - why do you ask?
09:36:39 <shapr> ayrnieu: just trying to pull data out of it
10:55:02 <bas_> what does the operator '!!' do?
11:00:48 <lament> "[list] !! n" takes the n'th element of the list
11:01:15 <ayrnieu> (zero-counted)
11:02:03 <lament> Of course, since that's the one true way :)
11:07:30 <bas_> okay thanks..
11:08:33 <bas_> i am looking at this function which is suggested to have better performance with a table implemented, but i think it doesn't matter, because hugs memorizes calls to function... what are your oppinions on http://www.cs.lth.se/Education/Courses/EDA120/assignment3/mcs.html ?
11:08:49 <ayrnieu> bas - 'memoizes'
11:09:10 <bas_> ayrnieu: memoizes!?!?
11:09:22 <bas_> ayrnieu: what does that mean?
11:10:00 <ayrnieu> bas - it's what you meant to say, instead of 'memorizes'.
11:10:39 <bas_> ayrnieu: ok i will look for a dictionary...
11:11:07 <bas_> ayrnieu: no such word memoizes...
11:11:34 <ayrnieu> bas - dictionaries are rarely a help for such things.
11:12:12 <bas_> ayrnieu: but i don't think mcsLength' is better than mcsLength ...do you?
11:13:20 <ayrnieu> I'm sorry, I'm not very interested in the problem.
11:14:38 <bas_> ayrnieu: doesn't matter, i was just wondering if haskell would perform better with hard-coded table results compared to 'memoized' results...
11:16:18 <ayrnieu> A hard-coded table is just a greater memory-speed tradeoff than memoziation; I'd ask your profiler if the gain in speed is meaningful.
11:18:09 <bas_> ayrnieu: ok, i think it off course also depends on machine memory, hugs would probably garbage collect all entries to called functions and its parameters when it needs memory...
11:40:02 <ludde-> Marvin--: is there some simple way to insert a newpage break in lyx?
11:40:20 <Marvin--> I don't know, actually
11:40:43 <ibid> it looks we're getting a quality student seminar here :-)
11:40:47 <ibid> btw, hi to all
11:42:42 <Marvin--> ?
11:43:12 <ibid> my popl course includes a student seminar
11:43:20 <ibid> today was dealine for submissions :-)
11:44:03 <Marvin--> and none so far?
11:44:21 <Marvin--> or maybe you weren't sarcastic? :)
11:45:09 <ibid> i was sincere
11:45:24 <ibid> eleven submissions
11:45:27 <ibid> ten accepted
11:45:41 <ibid> most of them quite good considering
11:48:20 <Marvin--> col
11:48:23 <Marvin--> cool even
11:49:01 <ibid> and we are going to hold a "geek seminar" for all interested students
11:49:25 <Marvin--> haha
11:49:32 <ibid> quite serious though
11:49:56 <Marvin--> meh, I've been wrestling with number theory all week
11:49:58 <ibid> if one has an idea or something (preferably new and interesting) one can submit a paper to it
11:50:22 <ibid> the fun thing is that this was announced yesterday, the deadline is monday and seminar is on tuesday :-)
11:50:49 <ibid> (it's a seminar where we can talk about bits without the audience yawning)
13:36:30 <hdaume> sigh.  seeing 'Dalroth ()' makes me think of a monadic action.
14:08:50 <Marvin--> haha
