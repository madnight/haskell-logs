01:47:20 <dark> Fail: unsupported operation
01:47:20 <dark> Action: openFile
01:47:20 <dark> Reason: unknown file type
01:47:20 <dark> File: /dev/tty
01:47:23 <dark> bastards
02:02:52 <dark> Okay, I have a Brainfuck interpreter in 47 lines of Haskell :-)
02:03:13 <phriik> lol
02:03:19 <lament> sounds like a lot
02:04:12 <dark> Yeah, well, it needs some framework for I/O.  The core is 24 lines.
02:05:13 <dark> It's at http://www.xs4all.nl/~dark/Brainfuck.hs, see if you can do better :-)
02:06:16 <o3> what about an Ook! interpreter? :)
02:06:30 <lament> That would be trivial
02:07:52 <dark> o3: That could be done as a frontend to this one.
02:08:18 <dark> Perhaps activated automatically if the first program letter is O.
02:08:50 <o3> sure
02:08:58 <o3> just making sure you guys don't slack off and all that ;)
02:11:33 * Marvin-- ponders writing a core wars interpreter in haskell
02:13:12 <o3> Marvin--: hey, great work on HWS-WP!
02:13:19 <o3> read your report the other day.  fantastic stuff
02:14:21 <Marvin--> thanks :)
02:14:34 <o3> will be very useful for my thesis and all that ;)
02:15:24 <Marvin--> heh
03:06:42 <dark> I was silly :)  Brainfuck in Haskell and it didn't even have an infinite tape.  Corrected now.
03:08:09 <andersca> you should use a monad for the state
03:09:24 <dark> Wouldn't that just make it harder to access?  It never needs more than the current position or the ones next to it -- pattern matching takes care of that.
04:30:57 <TheOtherRainer> dark: Do you mind sharing your brainfuck interpreter with us? I think I could learn something from looking at the code.
04:34:05 <lament> he did
04:34:15 <lament> http://www.xs4all.nl/~dark/Brainfuck.hs
04:34:19 <TheOtherRainer> oh, sorry
04:37:05 <mgoetze> yeah, Brainfuck is just [Char] -> [Char] -> [Char]...
05:45:51 * ayrnieu` notes that Haskell appears to violate Alan Perlis's epigram #2.
07:02:02 <olczyk> Is there a good xml and html parser, that I can export for use toother languages?
07:03:20 <ayrnieu`> You might look at HaXml: http://www.cs.york.ac.uk/fp/HaXml/
07:03:46 <ayrnieu`> I'm not too clear on how you might "export that for use to other languages", though.
07:05:04 <olczyk> So that I can call it from other languages. For example exporting via Corba. I must confess that at this point
07:05:15 <olczyk> I am not that comfortable with Haskell. 
07:05:30 <olczyk> Also, other's may wind up maintaining it.
07:06:51 <ayrnieu`> "others".  Sorry, I don't know how you would do that -- except possibly through HDirect or GreenCard.
07:08:22 <olczyk> HaskellDirect sounds good enough for export
07:08:49 <olczyk> sorry for the export part.
07:09:29 <ayrnieu`> Oh, cool.
07:10:21 <olczyk> Can it handle really bad html?
07:10:58 <ayrnieu`> I only knew that it existed, olczyk.
07:11:29 <olczyk> OK.
08:24:05 <phriik> Kvaeser
09:11:59 <jadrian> hi 
09:12:25 <Vulpyne> Hi.
09:12:35 <jadrian> hello Vulpyne
09:13:03 <jadrian> I was trying to profile a program in which I use concurrency
09:13:31 <Vulpyne> jadrian: I'm a newbie. Won't be able to help you. :)
09:13:50 <ayrnieu`> jadrian - but you might continue.
09:13:51 <jadrian> jadrian@linux:~/Program/Haskell/Tests/CreatTest> ghc -prof -auto-all Streaming.hs
09:13:53 <jadrian> Streaming.hs:3:
09:13:53 <jadrian>  failed to load interface for `Control.Concurrent':
09:13:53 <jadrian>  Could not find interface file for `Control.Concurrent'
09:13:53 <dark> Ooh, profiling and concurrency... I had a hard time with that even in C :-)
09:14:04 <ayrnieu`> dark - 'even'?
09:14:04 <jadrian> Vulpyne: welcome then Vulpyne ;)
09:14:11 <jadrian> hi ayrnieu`, dark
09:14:20 <dark> ayrnieu: gcc's profiling support is focused on C
09:14:45 <ayrnieu`> dark - oh, GHC uses profiling from gcc?
09:15:06 <jadrian> it complains about not finding the interface file for "Control.Concurrent" 
09:15:13 <Vulpyne> Heh, thanks.
09:15:14 <jadrian> know how to fix this?
09:15:43 <dark> ayrnieu: No, I was profiling a C program at the time :)
09:15:47 <jadrian> dark: by the way, my concurrency idea with streams seems to work after all (in most cases anyway :)
09:15:53 <ayrnieu`> jadrian - it only so complains when you try to profile?
09:16:03 <jadrian> ayrnieu`: no, when I try to compile it with -prof
09:16:14 <ayrnieu`> dark - then I don't at all understand your first remark, but OK.
09:16:22 <jadrian> actually wait... I used -prof -auto-all
09:16:39 <jadrian> maybe it tries to get all functions in the concurrency module...
09:16:41 <jadrian> hmmmm
09:17:02 <jadrian> nope
09:17:08 <jadrian> even with just -prof
09:17:10 <ayrnieu`> jadrian - this is probably a bug, then.
09:17:14 <jadrian> I get that error 
09:17:27 <jadrian> ayrnieu`: damn another one! it's the second in less than one week!
09:17:37 <jadrian> I got to get my project done! :)
09:17:58 <ayrnieu`> jadrian - curiously, what was the first?
09:18:10 <jadrian> ayrnieu`: impliciti parameters one
09:18:25 <jadrian> ayrnieu`: let me get the link to the archives
09:20:26 <jadrian> ayrnieu`: http://haskell.org/pipermail/glasgow-haskell-users/2002-November/004368.html
09:20:44 <ayrnieu`> jadrian - thanks.
09:20:53 <jadrian> ayrnieu`: yw ;)
09:21:48 <moxx> hi
09:21:56 <jadrian> hello
09:21:57 <ayrnieu`> hello moxx.
09:22:01 <jadrian> brb or bbl
09:23:01 <moxx> Anybody here using vim to edit haskell files?
09:23:36 <ayrnieu`> There are at least two people, and I've occasionally so used vim.
09:24:19 <moxx> My problem is, that I don't know how to activate indenting
09:24:57 <moxx> right now it indents the code kind of cindent-like
09:25:06 <ayrnieu`> Hit C-j, which is usually bound to newline-and-indent.  I rebind C-m to newline-and-indent, also.
09:27:29 <moxx> hmm, are you speaking of emacs or of vim?
09:28:22 <ayrnieu`> Sorry, I was speaking of Emacs.  I didn't know that there was indentation support for Haskell.
09:28:52 <moxx> I do not _know_ either ;)
09:29:56 <ayrnieu`> I tend to set 'expand' 'softtabstop=4' 'tabstop=4' (and maybe something more; tabbing in Vim is complicated.) and do everything manually.
09:30:20 <ayrnieu`> If you're not too attached to vim, you could use Emacs in viper-mode =)
09:30:30 <moxx> :h expand
09:30:33 <moxx> sorry
09:30:34 <moxx> ;)
09:31:33 <ayrnieu`> expand just forces Vim to always insert spaces instead of tabs; softtabstop makes spaces feel like tabs (or smartsomethingorother?  I don't have Vim on me, sorry.)
09:32:27 <moxx> np, thanks so far
09:32:50 <moxx> i'll fiddle around a bit with my .vimrc
09:34:01 <ayrnieu`> You might be able to use one of the extension languages to program real automatic indentation, if you're motivated enough.
09:34:29 <moxx> I'm not, at least not yet
09:35:19 <moxx> still my first day learning haskell
09:35:37 <Heffalump> igloo uses vim to edit Haskell
09:36:13 <ayrnieu`> ah, day 1.
09:36:21 <moxx> yep :)
09:36:36 <ayrnieu`> moxx - keep a diary! =)
09:36:45 <moxx> Why?
09:36:56 <moxx> Fun afterwards?
09:37:56 <ayrnieu`> For yourself, possibly.
10:03:06 <jadrian> back
10:03:27 <jadrian> Seems like profile is not working even when I remove all imports
10:03:31 <jadrian> I end up with
10:03:59 <jadrian> Streaming.hs:14:
10:03:59 <jadrian> failed to load interface for `GHC.Real':
10:03:59 <jadrian>         Could not find interface file for `GHC.Real'
10:04:01 <jadrian> etc
10:04:22 <jadrian> same for GHC.Num and GHC.Base
10:04:33 <ayrnieu`> A broken install, possibly?
10:04:41 <jadrian> I used SuSE Rpms
10:04:46 <jadrian> /usr/lib/ghc-5.04/imports/
10:04:50 <ayrnieu`> What version of GHC?
10:04:51 <jadrian> I got my hi files there
10:04:57 <Igloo> Do you have an RPM of profiled libraries installed?
10:05:15 <jadrian> I'm pretty sure I did installed it
10:05:17 <jadrian> let me check
10:05:38 <Igloo> I'd expect .p_hi files in somewhere like lib/ghc-5.05/imports/haskell98/
10:05:48 <jadrian> ghc-prof-5.04-1
10:05:53 <jadrian> yeap I installed it
10:06:24 <jadrian> yes I have .p_hi files
10:06:36 <jadrian> /usr/lib/ghc-5.04/imports/base/Prelude.p_hi
10:06:39 <Igloo> Including lib/ghc-5.05/imports/base/GHC/Real.p_hi?
10:06:41 <jadrian> etc
10:06:48 <ayrnieu`> I used the tarball binaries for 5.04.1, and have had no such errors with profiling a program with minimal imports.
10:07:09 <Igloo> strace -o strace -f -F ghc ... and then look in strace to see where it is looking for the interface files
10:07:11 <jadrian> Igloo: hmmm no Real...
10:07:20 <Igloo> Ah, that'll be why then  :-)
10:07:25 <jadrian> and no base
10:07:27 <jadrian> argh!
10:07:30 <jadrian> :(
10:07:38 <Igloo> Oh, no base/ at all? It may not be in 5.04 then
10:07:59 <jadrian> I mean no Base.p_hi
10:08:12 <Igloo> Oh, no, I have a /usr/lib/ghc-5.04/imports/base/GHC/Real.hi here
10:08:29 <jadrian> ?
10:08:40 <jadrian> do you have a Real.p_hi?
10:09:28 <Igloo> No, but I do have other p_hi files. I'm not responsible for that installation though
10:09:37 <jadrian> same here
10:09:46 <jadrian> I have other .p_hi files but not that one
10:09:47 <Igloo> And I do have one on a Debian system I am responsible for
10:09:57 <jadrian> I am resposible for this installation thought
10:09:58 <jadrian> :)
10:10:00 <Igloo> I'd guess the spec file is broken
10:11:17 <jadrian> Igloo: by the way, remember that error I asked you to check with your CVS version?
10:11:28 <Igloo> Yup
10:11:29 <jadrian> Igloo: seems like it was a bug
10:11:33 <jadrian> Igfixed noe
10:11:34 <jadrian> now
10:11:38 <Igloo> Yeah, I saw the discussion on the lists
10:11:59 * jadrian shots whoever is typing for him
10:15:45 <jadrian> I might try installing RH 7.3 rpm in my SuSE system...
10:17:32 <Igloo> This is a RH 7.3 system
10:17:40 <jadrian> oh :(
10:18:09 <Igloo> Although it was built by one of the admins, but I suspect it uses the same source as thr RH (and SUSE) RPMs
10:18:10 <jadrian> I haven't seen anyone mentioning this problem on the mailing list yet
10:19:15 <Igloo> * doesn't recurse directory trees in spec files does it?
10:19:30 <jadrian> I have no idea...
10:19:54 <Igloo> I'm suspect not, and that would be consistent with "%{prefix}/lib/ghc-%{version}/imports/*/*.p_hi" and base/Prelude.p_hi being matched
10:20:52 <Igloo> Adding another line with another */ would probably fix it - I'd have to look in teh rpm docs to see if you can fix it properly
10:20:53 <jadrian> let me see
10:20:55 <jadrian> Ah
10:21:02 <jadrian> you are right
10:21:08 <Igloo> You'll actually need several lines otherwise to match the deeper nested libraries
10:21:16 <jadrian> but wait
10:21:29 <jadrian> you are right
10:21:35 <jadrian> :(
10:22:14 <jadrian> will you report the problem or should I do it?
10:22:49 <Igloo> Feel free - if you don't then I will, but not until I've had a chance to look in the docs to see if you can do it properly
10:23:50 <jadrian> I was asking cause I don't know much about spec files... I think you might be able to explain the problem better then me
10:24:30 <Igloo> Ah, OK
10:24:46 * Igloo takes a break from the fascinating task of generating webpages  :-)
10:24:51 <jadrian> thanks Igloo!
10:24:53 <jadrian> lol :)
10:25:52 <jadrian> Igloo: meanwhile where can I get the missing .p_hi files?
10:26:18 <jadrian> Igloo: in the source rpm right?
10:26:50 <jadrian> bbl
10:40:01 * Igloo finds it's fixed in CVS anyway
10:40:10 <dark> I hate it when that happens.
10:42:33 <Igloo> Saves me the effort of sending patches I can't test  :-)
11:08:14 <jadrian> back
11:10:24 <Igloo> * -> Igloo finds it's fixed in CVS anyway
11:10:33 <jadrian> good :)
11:10:56 <Igloo> And no, the files won't be in the source RPM as they are built at compile time
11:11:05 <jadrian> by the way, I just noticed I have a  concurrent/Concurrent.hi and a base/Control/Concurrent.hi
11:11:15 <jadrian> and they're different
11:11:38 <Igloo> That seems plausible
11:11:48 <jadrian> why to concurrent.hi?
11:12:03 <hdaume> jadrian: the former is for when you do '-package concurrent' and import Concurrent; the latter is if you use the hier libs and import Control.Concurrent.
11:12:11 <Igloo> The former may be an older one exporting a backwardly compatible interface, for example
11:12:44 <jadrian> hdaume: I thought that should be it because of the structure, but what is the difference between both
11:13:49 <jadrian> I mean between using package or importing Control.Concurrent
11:17:42 <hdaume> using package is old-style
11:19:39 <ayrnieu`> Well, in using the concurrent package is old-style.  Packages themselves are not old-style.
11:20:59 <ayrnieu`> hm.. or are they?  I suggested otherwise because network and posix packages need to be loaded, but these could be those libraries that have not yet been moved over.
11:25:12 <hdaume> ayrnieu`: i think that using packages for stuff which is in the hier libs is old style.  obviously using a package like Gtk2HS isn't.
11:25:33 <ayrnieu`> ah, OK.
11:40:10 <ayrnieu`> jadrian - I think it was bbl.
14:29:59 <jadrian> hi
14:34:31 <hdaume> hi
14:36:14 <jadrian> hi hdaume
14:58:12 * Pseudonym tries to bounce and only succeeds in flopping
17:12:38 <^Munson^> anyone in here from saba
17:13:07 <Pseudonym> What's saba?
17:13:13 <Pseudonym> Here, it's a furniture retailer.
17:14:49 <^Munson^> saba is an island in the carribean where halfe the people have the surname "Haskell"
17:15:13 <Pseudonym> There you go.  Learn something every day.
17:15:42 <^Munson^> only 12 last names i there telephone book
17:16:25 <Pseudonym> Well Haskell the language is actually named after someone's _first_ name.
17:16:51 <^Munson^> what is the first name?
17:16:57 <Igloo> Haskell...
17:17:00 <Pseudonym> Haskell Brooks Curry
17:17:15 <Pseudonym> http://www-groups.dcs.st-and.ac.uk/~history/Mathematicians/Curry.html
17:17:28 <Igloo> Brooksing really needs to be something
17:17:40 <Igloo> "I curried some Brooks in Haskell today"
17:18:22 <Pseudonym> Ask Phil Wadler to invent something.
17:18:29 <^Munson^> wow..I learned something from you, i hope you learn something from me
17:18:29 <Pseudonym> He's good at obscure metaphors.
17:18:38 <Pseudonym> I did.  I learned about Saba.
17:19:19 <Pseudonym> Can I ask how you know this factoid?  Are you from there or something?
17:19:21 <Igloo> Dear Phil, please invent something that can be curried and called it a Brook. Your sincerely, #haskell.
17:19:27 <Pseudonym> :-)
17:20:37 <Fractal> Heh.
17:22:20 <^Munson^> haskell is not a bad name
17:28:17 <stepcut> I curried some Brook Trout in Haskell today.
19:59:34 <o3> what about Ada?
19:59:51 <o3> or was Ada invented after Haskell
