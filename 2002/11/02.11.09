02:01:40 <andersca> hey Marvin--
02:01:58 <Marvin--> morning
03:05:48 <andersca> is there a float type that handles big integers?
03:05:50 <andersca> like 10e100?
03:06:08 <andersca> Prelude> (read "10.0e100")::Float
03:06:08 <andersca> inf
03:06:24 <Marvin--> dunno
03:07:03 <Marvin--> Double handles 1e100, but not 1e1000 I think
03:08:10 <andersca> double doesn't seem to handle 1e100
03:09:15 <andersca> I'll just use double and hope no one uses big numbers :)
03:09:23 <Marvin--> Prelude> read "1e100" :: Double
03:09:24 <Marvin--> 1.0e100
03:10:00 <andersca> hmm
03:10:06 <andersca> is that hugs or ghci?
03:12:23 <Marvin--> ghci
03:12:36 <andersca> yeah
03:13:09 <Marvin--> but there shouldn't be a difference between hugs' and ghci's perception of a Double, should there?
03:13:26 <andersca> looks like it is...
03:17:27 <Marvin--> meh
03:17:30 * Marvin-- fixes a bug in cdebconf
03:24:50 <Marvin--> hmm, it would be really cool if debian-corba was deployed
03:35:17 <dennisb> hugs always uses float, unless one compiles it to support double
03:35:35 <dennisb> or something like that, i've never cared about it
03:35:40 <andersca> hey dennisb
03:35:42 <andersca> oh interesting
03:36:16 <andersca> Marvin--: so what was the difference between symbols and specials again? :)
03:36:55 <andersca> Marvin--: (in progsparse)
03:38:06 <Marvin--> andersca: specials are lexed one by one, symbols are lexed with longest possible match
03:38:29 <andersca> right
03:38:42 <Marvin--> "((" -> [Sym "(", Sym "("], "+-" -> [Sym "+-"]
03:39:17 <Marvin--> haskell does the same thing, which is kinda irritating at times
03:39:32 <Marvin--> Prelude> --+ foo
03:39:33 <Marvin--> <interactive>:1: parse error on input `--+'
03:47:49 <Marvin--> eeek
03:49:24 <Marvin--> lazy product matching is scary
04:04:34 <shapr> boing
04:06:52 <Igloo> Bounce!
04:08:32 <shapr> hi Igloo!
04:09:06 * shapr listens to Tenacious D
04:12:05 <shapr> is there Core docs included in the fptools tree somewhere?
04:19:03 * shapr has a self-ping time of 51 seconds
04:20:09 * Igloo isn't sure about the docs issue
04:21:11 <Igloo> Ooops
04:21:30 <Igloo> My C Mandelbrot generator makes a big blue square
04:21:37 <Igloo> Just goes to show that Haskell is better really
04:22:08 <shapr> truly, Haskell is better :-)
04:31:47 <Igloo> Bah, the C version takes about 1/10 of the time as opposed to the TH speedup of 25%
04:51:24 * shapr likes this url: http://c2.com/cgi-bin/wiki?MysticalProgramming
09:33:51 <shapr> hey, anyone know what happened to the -nohi option from ghc 4.08 ?
09:34:07 <shapr> I'm trying to build hMPI, it won't get through the configure :-/
09:38:39 * Igloo points anyone interested to http://web.comlab.ox.ac.uk/oucl/work/ian.lynagh/Fraskell/
09:39:20 * shapr surfs over
09:39:24 <Igloo> What does -nohi do?
09:39:53 <shapr> I don't know what -nohi does, I assume it has something to do with .hi files
09:40:47 <Igloo> The release noes just say it's been removed
09:41:32 <Igloo> It just doesn't generate the .hi file apparently. So is probably safe to remove it, unless maybe you have multiple modules with the same name in teh same place
09:41:35 <shapr> hm, maybe I have a different problem here anyway.
09:44:03 <shapr> hm, starting with a freshly untarred dir and just whacking -nohi fixed it.
09:44:15 <shapr> cool :-)
09:44:15 <shapr> thanks igloo
09:44:32 <Igloo> :-)
09:46:27 <shapr> hm, what does this mean:
09:46:39 <shapr> HaskellMPI.hs:78:
09:46:39 <shapr>     failed to load interface for `MPI':
09:46:39 <shapr> 	Could not find interface file for `MPI'
09:47:05 <shapr> it's looking for .hi files?
09:47:26 <Igloo> Yes
09:49:55 <shapr> looks like a Makefile problem from here
09:51:29 <shapr> you going to post a link to Fraskell on haskell-cafe?
09:53:34 <Igloo> Possibly - I'll e-mail a handful of people at the very least
09:54:04 <shapr> aha, it looks like it can't find the .hi files for CTypes and friends...
09:54:11 * Igloo is trying to make employ the cunning use of colour first, though
09:55:24 <Igloo> Damn, I'm getting line breaks if I end the pre to change colour
09:55:29 <shapr> your current use of blue and black is very elegant and clean
09:55:38 <Igloo> Oh, of course I am, it's block level
09:56:02 <Igloo> I mean to make it clear what is new in the unrollings in the Speed section, not the generated image
09:56:15 <shapr> hm, any idea what parameter I can use to point to the .hi files?
09:56:30 <shapr> -L maybe?
09:56:36 <Igloo> Not OTTOMH
09:56:41 <Igloo> Do you have -fffi?
09:57:19 <shapr> nope, no -ffi
09:57:31 <shapr> make MPI_MarshalInternal
09:57:31 <shapr> ghc -DHAVE_CONFIG_H -I. -I. -I.. -cpp  '-#include <hmpi.h>'  -fglasgow-exts  -I/usr/lib/lam/include    -hisuf hi -ohi MPI_MarshalInternal.hi -c -package-name hmpiXlam -hisuf hi -ohi MPI_MarshalInternal.hi -c MPI_MarshalInternal.hs -o MPI_MarshalInternal.o
09:57:31 <shapr> MPI_MarshalInternal.hs:46:
09:57:31 <shapr>     failed to load interface for `CTypes':
09:57:32 <shapr> 	Could not find interface file for `CTypes'
09:57:43 <shapr> that's probably far more than you wanted to know :-)
09:57:55 * shapr tries adding -ffi
09:58:14 <Igloo> -fglasgow-exts implies it
09:58:33 <shapr> oh, ok
09:58:45 <shapr> cool
09:59:11 <Igloo> Do you have something like /lib/ghc-5.05/imports/haskell98/CTypes.hi?
09:59:48 <shapr> yah, I have those on my system
10:01:17 <shapr> they're in /usr/local/lib/ghc-5.04.1/imports/lang/
10:01:46 <Igloo> Oh, try adding -package lang then
10:02:10 <shapr> oh.. I'll try that
10:02:46 <shapr> yay!
10:03:08 <shapr> hm, now it has some other problem....
10:05:53 <shapr> very weird... first I had to persuade it to spit it out all the .hi files... before that it wouldn't compile any one of them
10:06:21 <shapr> yay, it compiles!
10:06:28 * Igloo gives up on cunning colours and starts thinking about where to e-mail
10:08:25 <shapr> ok, it's installed.. but it doesn't use ghc-pkg... so I'm not sure how to specify where package MPI is
10:08:37 <shapr> er, module MPI that is
10:11:03 <shapr> bbl
10:25:44 <ibid> is there any way to implement a cache of return values for a pure function, without affecting its interface?
10:25:48 <ibid> in ghc
10:29:48 <Heffalump> not without unsafePerformIO
10:30:03 <Heffalump> but that could be considered a reasonable use of it
10:30:24 <ibid> would it be safe enough?
10:30:30 <ibid> i can live with uPIO
10:30:54 <ibid> (i'm using it anyway, in my FFI stuff related to this)
10:31:51 <Igloo> Why do you need uPIO in your FFI stuff?
10:32:08 <Igloo> You can just leave the "IO" off of pure imported functions
10:32:11 <ibid> CString to String
10:32:29 * Igloo -> food
10:33:07 <ibid> is there any docs on caveats of uPIO?
10:33:12 <ibid> are there, actually :-)
10:36:02 <Heffalump> probably, but not sure where
10:39:44 * ibid is googling
10:46:41 * ibid hates acm digital library
10:46:50 <ibid> it opens too many windows
10:47:24 * andersca isn't an acm member anymore :(
10:47:40 * ibid is, but i don't have a dl subscription
10:47:46 <ibid> the university has one for me
10:48:19 <andersca> I wonder if GU has that too
10:53:19 <ibid> here it's based on ip addresses, so i just need to use a computer that is attached to the university network...
12:27:23 <andersca> hmm
12:27:29 * andersca looks around for Happy experts
12:28:12 * Igloo might be able to help
12:28:33 <andersca> Igloo: is there any way to define the start production rule?
12:28:39 <andersca> it looks like it's just using the one I put at the top
12:29:20 <Igloo> However, I can't
12:35:10 <dennisb> http://www.haskell.org/happy/doc/html/sec-directives.html
12:35:50 <dennisb> or you could use the first rule to just refer to some other rule
21:01:49 <Vulpyne> Is there an interface to select/poll?
21:56:54 <Vulpyne> Hmm... Clean looks pretty much like Haskell.
