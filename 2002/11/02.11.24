15:10:26 <tinus> 'lo
15:10:35 <tinus> to grab a Float from a String, is that possible?
15:10:54 <Heffalump> read
15:10:59 <tinus> read?
15:11:01 <tinus> hmm
15:11:03 <Heffalump> yes, "read"
15:11:10 <Heffalump> read :: Read a => String -> a
15:11:18 <tinus> Recepten2> read "5.0"
15:11:18 <tinus> ERROR - Unresolved overloading
15:11:24 <Heffalump> read "5.0" :: Float
15:11:33 <tinus> ah, wow
15:11:35 <tinus> thanks
15:15:00 <tinus> hmm, just howto use it as a parser combinator?
15:15:14 <Heffalump> ah, that's a bit trickier
15:15:18 <Heffalump> which implementation are you using?
15:15:25 <Heffalump> (or are you trying to make your code portable?)
15:15:43 <tinus> euhm, the Parser a b one if that's what you mean ...
15:15:52 <Heffalump> I meant of Haskell
15:16:11 <tinus> not sure what you mean ...
15:16:14 <Heffalump> does the combinator library have an example of how to read in Ints?
15:16:23 <tinus> hmm, lemme see
15:16:41 <tinus> newdigit  :: Parser Char Int
15:16:41 <tinus> newdigit  =  f <$> digit
15:16:41 <tinus>   where  f c = ord c - ord '0'
15:16:43 <tinus> is one
15:18:02 <Heffalump> ah, so that just does a single digit
15:18:12 <tinus> yup
15:18:13 <Heffalump> I think the answer then is that you can't use read to parse Floats
15:18:31 <Heffalump> because it would interact badly with the rest of the combinator library
15:18:58 <tinus> hmm, ok
15:19:19 <tinus> then i was thinking of summit like:
15:19:23 <tinus> hoeveelheid = undefined <$> natural <*> symbol '.' <*> natural
15:19:42 <tinus> maybe 'many natural', not sure
15:19:43 <Heffalump> sounds reasonable
15:19:59 <tinus> need to look howto make the undefined part though
16:57:28 <Pseudonym> G'day clausen.
16:58:27 <clausen> gday Pseudonym
16:58:56 <clausen> Pseudonym: you subscribe to crickey?  it's hilarious
16:59:24 <Pseudonym> No, but I visit occasionally.
16:59:36 <clausen> btw, the free subscriber option
16:59:41 <clausen> you get half the "sealed sections"
17:00:02 <clausen> I think it's a really clever marketing strategy
17:00:28 <Pseudonym> Might check that out.
