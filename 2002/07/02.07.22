01:32:20 * shapr sings happily
01:32:26 * shapr bounces around
01:32:35 <shapr> goood morning everybody!
01:47:39 <ChilliX> Hi shapr - you seem to be in a pretty happy mood.
01:48:01 <shapr> yah, I feel good.
01:48:02 <shapr> how are you?
01:51:15 <shapr> I made progress on my Haskell code over the weekend, thanks to your suggestion, and thanks to Heffalump and Igloo patiently helping me out.
01:51:46 <ChilliX> cool
01:52:01 <shapr> the show and showList was just what I needed.
01:52:38 <ChilliX> you are using this for marshalling?
01:52:46 <shapr> yup
01:52:55 <ChilliX> that's what I thought
01:53:35 <shapr> how's data parallelism treating you today?
01:55:31 <ChilliX> at the moment, it's more the basic array infrastructure without any parallelism
01:56:19 <ChilliX> initially, we started to write our own compiler (for a simple functional language)
01:56:29 <ChilliX> now that it is being integrated into GHC
01:56:49 <ChilliX> things become more complicated as we have to deal with all the language features that are already in GHC
01:57:03 <ChilliX> so, it's back to basics
01:57:27 <ChilliX> but I think, I have made some progress over the weekend
01:57:56 <ChilliX> (using half of the type system extension supported by GHC...)
01:58:31 <shapr> you're modifying the basic array infrastructure in ghc? or in your ported language?
01:59:39 <shapr> I haven't gotten around to reading all of the url you gave, maybe I'll understand more after that.
01:59:51 <ChilliX> more like adding new array infrastructure in GHC (the old stuff remains as it is)
01:59:54 <shapr> I've been thinking about data parallelism, still not sure what I think of it.
02:00:31 <ChilliX> GHC's array infrastructure is aimed at supporting the array semantics defined in H98
02:00:51 <ChilliX> however, that is for various conceptual reasons not really well suited for high-performance code
02:01:33 <ChilliX> so, we use only the most primitive definitions of what GHC provides for arrays (namely, (MUtable)ByteArrays)
02:01:46 <ChilliX> the rest is done differently
02:02:00 <ChilliX> in what respect don't you know what to think of it?
02:02:24 <shapr> it's a new concept for me
02:02:37 <shapr> I've not thought of splitting parallelism that way
02:03:02 <ChilliX> for a wide range of parallel algorithms it is a rather natural way to formulate them IMHO
02:03:04 <shapr> I'm trying to figure out how it compares to process parallelism
02:03:30 <shapr> from what you wrote, I see that it is more natural in some cases.
02:03:42 <shapr> I'm just trying to find the edges of DP :)
02:03:52 <ChilliX> classic (flat) data parallelism is more restricted than process parallelism
02:04:06 <ChilliX> nested data parallelism, hwoever, is much more general than the classic one
02:04:24 <ChilliX> (eg, you can do a parallel quicksort in nested dp, but not classic dp)
02:04:51 <ChilliX> the border line between nested dp and control parallelism is much harder to grasp
02:05:39 <ChilliX> reactive parallelism is clearly a domain of control parallelism only
02:06:10 * shapr mulls that over
02:06:14 <ChilliX> however, with everything else, AFAIK, there is no conclusive proof that there are algos that you can do in control parallelism, but not in nested dp
02:07:13 <shapr> I don't understand the difference between nested and classic dp.
02:07:18 <shapr> what's that url again? :)
02:07:21 <ChilliX> and for massively parallel, numeric or data structure-oriented algos, nested dp seems to be often easier to use
02:07:30 <ChilliX> the project url?
02:07:32 <shapr> yah
02:07:34 <shapr> the stuff you wrote
02:07:52 <ChilliX> http://www.cse.unsw.edu.au/~chak/project/haskell+ndp/
02:08:41 <ChilliX> and here are the papers: http://www.cse.unsw.edu.au/~chak/papers/papers.html#ndp-haskell
02:59:06 <ibid> 2
02:59:08 <ibid> argh
02:59:18 <ibid> mistype hell
02:59:23 <Heffalump> 3
02:59:48 <ibid> ISO standards are soooo expensive...
03:00:37 <ChilliX> this is so to further the development of non-standards-compliant implementations
03:00:49 <ibid> heh
03:01:15 <ibid> ECMA rules - at least at this point
03:02:24 <ChilliX> Or maybe it is meant to give large companies an edge over individual developers?
03:03:25 <ibid> the new Z standard costs over two hundred euros
03:06:02 <ibid> and the EBNF standard (12 pages!) costed about 60
03:06:34 <ChilliX> 60 euros for 12 pages?
03:06:45 <ibid> yes
03:06:50 <ibid> including postage
03:07:05 <ChilliX> yeah, but 12 pages should cost that much postage
03:07:07 <ibid> well, the page count excludes the frontmatter
03:07:27 <ibid> no, i mean it includes less than 10 euros for postage
03:07:31 <ChilliX> should = shoudln't
03:07:32 * clausen wonders what's some good haskell paraphenalia to put in his photos
03:07:54 <clausen> any haskell books with good front-covers?
03:08:04 <ibid> ChilliX: the plain price was slightly lower
03:08:25 * shapr returns from lunch
03:09:01 <ChilliX> clausen: not really...
03:09:06 <clausen> maybe a big lambda?
03:09:13 <clausen> (someone must have a lambda soft toy?!)
03:09:23 <shapr> don't they get wool from lambdas?
03:09:32 <clausen> shapr: that was TERRIBLE
03:09:35 * clausen slaps shapr
03:09:37 * shapr cackles
03:09:58 <clausen> <plug>members.optushome.com.au/clausen/photos</plug>
03:10:35 <shapr> bonjour ChoJin
03:10:56 <ChoJin> lo
03:11:06 <shapr> clausen: nice books
03:11:17 <hornby> ya, compilers, crunchy
03:11:20 <clausen> :)
03:11:28 <clausen> the dragon book rulez
03:11:30 <clausen> and it's got a cool cover
03:11:36 <shapr> I don't have one yet
03:11:40 <clausen> that happens to go nicely with my red velvet :)
03:11:55 * hornby pokes shapr for a status update
03:12:05 <hornby> brb, cheese
03:12:09 <shapr> hornby: very close :-)
03:12:18 * shapr looks for shapr pictures
03:12:18 <hornby> shapr: :)
03:12:46 <shapr> http://purl.org/wiki/python/ShaeErisson
03:12:50 <shapr> two small photos
03:14:04 <shapr> I've seen a small photo of ChilliX
03:14:17 <shapr> and pics of Igloo and Heffalump
03:14:26 * Heffalump has seen Igloo and ChilliX in person :-)
03:14:31 <shapr> wow, cool :)
03:14:42 <Heffalump> though ChilliX is unlikely to remember this
03:15:07 <hornby> shapr: too small :)
03:15:07 <shapr> Heffalump: you've met simonyi also
03:15:28 <shapr> hornby: I have some larger photos somewhere, but I've forgotten where
03:15:30 <Heffalump> yes, but he's not on here so he doesn't count
03:17:01 <ChilliX> Heffalump: where have we met?  PLI?
03:18:23 <Heffalump> chillix: FLOPS '99
03:18:41 <Heffalump> I was Oege de Moor's student
03:18:50 <Heffalump> (I still work with him)
03:18:52 <ChilliX> ic
03:19:14 <ChilliX> What are you doing now?
03:19:47 <Heffalump> working on .NET stuff
03:23:05 <shapr> re shreya
03:23:34 <ChilliX> me with Python ;-) http://www.cse.unsw.edu.au/~keller/batemansbay/IMG_0531.JPG
03:23:50 <shapr> wow, cool
03:23:57 <clausen> cute!
03:24:34 <clausen> you could almost do the crocadile dundee thing
03:24:58 * clausen was so tempted to tell a .br'n who was mugging him "That's not a knife.  This is a knife!"
03:25:05 * shapr sniggers
03:25:21 <clausen> (I don't think he would have seen that movie, unfortunately :( )
03:25:31 <shapr> well, finnish people here think I should be just like the Americans they see in the movies.
03:25:32 <ChilliX> hehehe
03:25:45 <shapr> so the .br guy probably would have believed you :-)
03:25:55 <clausen> and attacked
03:26:05 <clausen> I prefered the "boring" option
03:26:13 <shapr> aww
03:26:36 <clausen> (he was nice... he only took $R 21 - about US$10)
03:26:43 <shapr> he left money?
03:26:47 <clausen> yep
03:26:52 <clausen> I had about $R150
03:27:04 <shapr> that's bizzarre, you got slightly mugged =)
03:27:08 <clausen> yep
03:27:13 <clausen> probably wanted a hit
03:27:16 <clausen> but no trouble
03:27:18 <clausen> dunno
03:27:23 <clausen> he looked relatively healthy, etc.
03:27:38 <clausen> prolly a middle-class addict driven "down"
03:28:59 <clausen> he did go on a rant which I didn't understand much of... he spoke really fast
03:29:11 <shapr> wow, you have cool adventures :)
03:29:23 <clausen> :)
03:29:26 <clausen> yeah, it was quite fun
03:29:28 <shapr> I've never been mugged.
03:29:34 <clausen> most of my friends thought I was crazy!
03:29:41 <clausen> I would have paid $50 for the experience!
03:29:51 <clausen> (that said, losing credit card, etc. would be bad)
03:29:58 <shapr> probably because I'm 100 kilos and look something like an american football player.
03:30:21 * clausen tv
03:30:26 <shapr> yah, I'd hate to lose credit cards.
03:30:49 <shapr> back to coding for me
04:34:53 <shapr> ok, NDP == SIMD
04:37:07 * shapr notes that "clean I/O framework" is a cute pun when describing Haskell
04:41:53 <shapr> hm, NDP would make my fractal processing stuff *much* simple
04:41:53 <shapr> r
04:42:41 <shapr> I bet I could come up with some entertaining NDP suffix tree implementations.
04:42:58 <shapr> google would like that :-)
04:45:57 <shapr> nifty, parallel array pattern matching
04:46:42 <ChilliX> hehehe :-)
04:46:54 <ChilliX> DP = SIMD
04:47:00 <shapr> it's true, isn't it?
04:47:05 <ChilliX> NDP in fact goes beyond SIMD
04:47:09 <shapr> ?
04:47:14 <ChilliX> it's more like SPMD
04:47:23 <shapr> ?
04:47:33 <shapr> P ?
04:47:36 <shapr> processor?
04:47:39 <ChilliX> Single Program Multiple Data
04:47:42 <shapr> oh
04:48:05 <shapr> I bet Nepal code would be very happy on transputers
04:48:37 <ChilliX> http://www.jics.utk.edu/I2PP/I2PPhtml/sld061.htm
04:49:18 * shapr reads SPMD
04:49:34 <shapr> hey, that's how pvm actually does work
04:50:15 <shapr> wow, that's cool stuff
04:56:57 <shapr> looks like I might be able to get this running at home
04:57:19 <shapr> I have four PCs, currently running PVM. Happily, debian has MPI packages also
04:59:48 <ChilliX> MPI is better than PVM
04:59:52 <shapr> really?
05:00:04 <ChilliX> much better
05:00:06 <shapr> ok
05:00:10 <shapr> I've only used PVM
05:00:20 <ChilliX> for Linux, LAM MPI is a good implementation
05:00:28 <shapr> debian has lam3 packages
05:00:30 <shapr> I'll use that.
05:00:56 <shapr> sounds like a fun thing to do with an evening.
05:01:13 <shapr> lam3 handles SMP linux machines also?
05:01:19 <shapr> well, I can read docs :-)
05:01:30 <ChilliX> yes, it does shared memory, too
05:01:41 <shapr> yay
05:02:24 * shapr wonders how high the electric bill will be this month
05:03:00 * shapr remembers there are more computers on his home lan
05:03:34 <ChilliX> lam has a nice architecture and some nice support for debugging etc
05:04:02 <shapr> cool, I'll check it out.
05:08:19 <ChilliX> to get started with MPI, this book chapter is quite good, I think: http://www-unix.mcs.anl.gov/dbpp/text/node94.html#SECTION03500000000000000000
05:09:26 <shapr> why is the Nepal logo cow spotted? some kind of joke?
05:09:45 <ChilliX> no, just Gabi playing with gimp
05:09:50 <shapr> oh, ok :)
05:52:31 <shapr> hi dblack
06:00:49 * Igloo gets confused and reads about GHC's threads
06:00:59 <shapr> ?
06:01:12 <shapr> Igloo: were you trying to read about SML threads? :-)
06:01:34 <Igloo> No, I was trying to work out how to use installHandler
06:02:04 <Igloo> Oh, maybe getting a SIGINT is interacting with the read somehow
06:03:12 <dblack> hi
06:03:15 <shapr> y0
06:05:34 <shapr> ChilliX: NDP is cool stuff, from what you've said, you're working on the porting Nesl to a transformation based haskell compiler, how close is that to finished?
06:15:07 <Igloo> Ah, SIGINT loses all characters on stdin in C too
06:15:43 <ChilliX> shapr: porting it to GHC actually
06:17:21 <shapr> ChilliX: any ETA?
06:19:04 <ChilliX> nothing definitive
06:19:16 <ChilliX> we are trying to do it in parts, so that intemediate stages are useful
06:19:58 <Heffalump> what's the correct infix declaration for an associative operator?
06:19:59 <ChilliX> it will do much more than Nesl (basically because the host language (Haskell) is much more expressive)
06:20:31 <shapr> sounds great, I'm looking forward to it.
06:20:45 <ChilliX> Heffalump: you can just use infix (instead of infixl or infixr)
06:21:09 <Heffalump> that was what I thought, but then it complains about ambiguous use of the operator when I do foo &&& bar &&& baz
06:21:24 <Igloo> infix means it is nether left nor right associative
06:21:37 <Heffalump> what does left associative mean?
06:21:44 * Heffalump --> read the report
06:21:49 <Igloo> a + b + c = (a + b) + c
06:21:59 <Heffalump> by definition, YM?
06:22:11 <Igloo> huh?
06:22:21 <Heffalump> well, a+b+c isn't well-defined in general
06:22:46 <Igloo> For any left associative operator +, a + b + c = (a + b) + c
06:23:14 <Heffalump> but what does "a + b + c" mean?
06:23:36 * Heffalump decides infixl is probably what he wants
06:23:47 <Igloo> If you write "a + b + c" in a Haskell program it will be parsed in the same way as "(a + b) + c"
06:24:03 <Heffalump> for any operator + ?
06:24:14 * shapr remembers reading a discussion on that somewhere
06:24:48 <Igloo> any left associative operator +, i.e. where you have given infixl [decima_number] operator (or not given an explicit fixity at all)
06:25:12 <Heffalump> ok, so what you're saying is that left associative means that "a+b+c" is defined as "(a+b)+c"
06:25:28 <Igloo> Yes
06:25:37 <Heffalump> ok
06:25:50 <Heffalump> and if you declare something infix then "a+b+c" is an error
06:26:29 <Igloo> Yup
07:34:17 <shapr> hi buggs
07:34:20 <shapr> how's life?
07:34:23 <buggs> hoi
07:34:40 <shapr> learned anything cool about Haskell today?
07:34:52 <buggs> as i have lotsa time to play around currently, it is a pleasure
07:35:12 <buggs> just woke up ;)
07:35:15 <shapr> ah
07:35:30 <shapr> your sleep schedule is worse than mine.
07:35:31 <shapr> I'm impressed.
07:35:57 <Heffalump> whereabouts are you?
07:36:04 <buggs> germany
07:36:10 <Heffalump> oh, right, I thought you were North America :-)
07:36:14 <Heffalump> that is quite bad :-)
07:36:15 <buggs> it is 4 pm
07:36:26 <shapr> 5:30pm here
07:36:41 <buggs> yeah 4:30 
07:37:30 <buggs> am trying to sleep when i am tired
07:38:00 <shapr> good policy
07:50:51 <ChilliX> 'nite
07:50:52 * ChilliX is away: Not at the machine...
07:51:10 <shapr> g'nite
10:58:14 <shapr> y0 redcrosse
10:58:16 <shapr> wassup?
10:58:24 <redcrosse> nada mucho
10:58:31 <redcrosse> what're you doing?
10:59:03 <shapr> responding to the "refactoring functional programs" survey atm
10:59:14 <shapr> more Haskell afterwards
10:59:18 <redcrosse> ooo...
10:59:34 <redcrosse> yeah, i read a thread on that at lambda.weblogs.com
11:00:30 <shapr> you can send a survey reply to c.reinke about your haskell editing habits if you want
11:01:55 <redcrosse> yeah, i saw that survey, but thought i was too much a neophyte to do any good by responding
11:02:08 <shapr> I'm an editor geek
11:02:19 <shapr> *especially* when people start talking about refactoring
11:02:39 <redcrosse> what do you use most often?
11:02:51 <shapr> I'm using ERC 2.93 $Revision: 1.292 $ with XEmacs 21.4 (patch 8) "Honest Recruiter" XEmacs Lucid!
11:03:14 <shapr> XEmacs21 for irc,news,mail,editing,etc
11:03:33 <shapr> what about you?
11:03:41 <redcrosse> vim mostly
11:03:54 <redcrosse> i used xemacs and emacs for awhile
11:04:05 <shapr> not your style?
11:04:38 <redcrosse> eh...it was nice, but i never had enough time to tailor it to me
11:04:42 <shapr> ah
11:04:59 <shapr> yah, that's important in the emacs world
11:05:10 <shapr> my config files are many and large
11:05:58 <redcrosse> is there a nice haskell mode for it?
11:06:08 <shapr> 612 lines in 15 files
11:06:17 <shapr> yah, nice haskell mode.
11:06:20 <redcrosse> ha
11:06:45 <shapr> I've refactored my emacs config mercilessly :-)
11:07:16 <shapr> that doesn't include my utility elisp functions...
11:07:21 <shapr> sadly, elisp sucks
11:07:32 <shapr> and emacs is single threaded and blocking
11:07:37 <redcrosse> have you looked into pymacs (i think it's pymacs)?
11:07:45 <shapr> it's still the best editor I've found, but it has warts
11:07:51 <shapr> yah, I've used pymacs, it's quite nifty.
11:07:51 <redcrosse> they all do
11:08:16 <shapr> I think I'd be much happier with an editor written in Haskell.
11:08:52 <shapr> maybe just an interactive ghci style shell that would let me treat lines/characters/files/etc as a list that I could map haskell functions onto
11:09:09 <shapr> Joy would probably be better for that though
11:09:22 <shapr> I think Joy could be a powerful shell scripting lang
11:09:37 <redcrosse> haven't looked into Joy
11:09:43 <shapr> it's nifty
11:09:51 <shapr> it's still very much in the toy stage of life though
11:09:59 * shapr looks around for Joy code
11:10:40 <shapr> DEFINE pairs == [["ward" "shae"] ["shae" "irene"] ["shae" "al"] ["al" "jewel"] ["irene" "lynda"] ["lynda" "jewel"]] .
11:10:40 <shapr> DEFINE buildFilter == [] cons [first] swap concat [=] concat .
11:10:40 <shapr> DEFINE collectEdges == pairs swap buildFilter filter .
11:11:03 <shapr> joy is past concise
11:11:08 <redcrosse> i'll say
11:11:32 <shapr> since it's a stack-based concatenative language, you never give names to anything
11:11:37 <shapr> you just operate on the top of the stack
11:11:48 <shapr> that's some code that jewel and I worked on
11:12:34 <shapr> Joy has some extra nifty features. each set of square brackets is both a list and a subprogram.
11:12:54 <redcrosse> huh.
11:12:56 <shapr> you can do cute tricks to a program fragment in a list, and then execute that fragment.
11:13:08 <redcrosse> interesting
11:13:14 <shapr> it's mind-altering stuff
11:13:20 <shapr> worth learning
11:13:22 <jewel> long time back :-0
11:13:27 <shapr> hi jewel!
11:13:32 <shapr> was it really that long ago?
11:13:37 <jewel> feels like it
11:13:40 <shapr> yah it does
11:13:49 <jewel> but just because my life has been fairly hectic
11:14:21 <shapr> jewel: did the second version ever get finished?
11:14:32 <shapr> I know you and I were working on it, and you did a bunch of stuff I didn't quite understand
11:14:40 <jewel> no, it kind of stalled
11:14:45 <jewel> (life got in the way)
11:15:00 <shapr> if you have the latest version, can you send it my way?
11:15:03 <shapr> it's fun to play with :-)
11:15:20 <shapr> I wonder if Joy would run on my Palm IIIx
11:15:28 <jewel> no, I think you did the most recent work
11:15:33 <shapr> oh, ok
11:15:56 <shapr> aha
11:16:04 <shapr> DEFINE makepath == [] swap makepathhelper .
11:16:04 <shapr> DEFINE makepathhelper == [source =] [swons] [dup [swons] dip collectEdges accessSourceNode makepathhelper] ifte .
11:16:04 <shapr> "ward" makepath .
11:16:28 <redcrosse> oy.
11:16:33 * shapr grins
11:16:34 <jewel> hehe
11:16:54 <shapr> redcrosse: you want me to send you the entire file?
11:17:00 <shapr> 63 lines totaly
11:17:05 <shapr> "total"
11:17:19 <redcrosse> i dunno.  i might explode.
11:17:22 <shapr> heh
11:17:29 <redcrosse> i'm looking at the page for it now though
11:17:39 <redcrosse> it == Joy
11:17:40 <shapr> once you put your brain back together, it works better :-)
11:17:44 <shapr> yah, I dig
11:31:56 * shapr has fun reading the haskell mailing lists
11:50:32 <shapr> ah cool, there's a plan to add a separate continuation stack to Joy
11:50:46 <shapr> that should increase its ability to alter ones mind.
11:55:57 * shapr fails to subscribe to comp.lang.haskell
11:56:04 <shapr> :-/
12:31:15 <redcrosse> hmm.  LIBRA the initiator in libraries.  i'm a libra.  maybe that means something.  is there a #joy?
12:31:31 <shapr> nah, we nearly started one, but this is pretty much it
12:31:42 <shapr> or you can use #functional if you wish
12:31:51 <shapr> more people here though
12:32:06 <redcrosse> true.
12:40:52 <shapr> y0 hornby
12:40:54 <shapr> wassup?
12:41:40 <shapr> hornby: I *think* I'm fixing the last error in Banana.hs
12:41:43 <shapr> I surely hope so.
12:41:54 <hornby> shapr: :) is it producing somewhat proper output?
12:42:07 <shapr> hornby: yah, mostly
12:42:18 <shapr> for some reason, decode gets called with "" though
12:42:34 <shapr> that shouldn't happen.
12:42:53 <hornby> got a fresh version somewhere?
12:42:59 <shapr> yah, just a sec
12:43:55 <shapr> ok, latest are up at http://purl.org/net/shapr/haskell/
12:44:00 <hornby> cool
12:44:14 <shapr> how's school treating you?
12:44:22 <hornby> good -- no summer session :)
12:44:27 <shapr> yay
12:44:54 <hornby> although they are currently debating on whether or not I deserve to come back for a fall/winter/spring session :)
12:45:01 <shapr> yikes
12:45:28 <hornby> :)
12:45:50 <hornby> I'm not all that concerned. Its mostly a formality. 
12:45:56 <shapr> ?
12:46:00 <shapr> I'm curious.
12:46:09 <shapr> are you on scholarship?
12:46:25 <hornby> no 
12:46:34 <hornby> kind of the opposite ;)
12:46:39 <shapr> they didn't like your conduct/grades/social life/etc ?
12:46:48 <shapr> they found some reason to disapprove of you?
12:46:48 <hornby> grades mostly ;)
12:46:50 <shapr> ah
12:47:26 <hornby> I had a couple good ones, but mostly I just did my own thing ... they don't really recognize that sort of thing
12:47:35 <shapr> yah, I remember.
12:47:44 <hornby> they are pretty focused on coursework, homework assignments, showing up for exams, stuff like that
12:48:30 <hornby> So they wrote me a letter saying that they think I "could benefit from a year off"
12:48:39 <shapr> heh
12:49:00 <shapr> I got a few of those in my time in college.
12:49:24 <hornby> But I think I want to go back and actually do stuff this time, so I'm appealing the decision. I've got an inside source (housemate/former member of the board) that says 90% of appeals are succesful, so I stand a good chance
12:49:41 <shapr> cool
12:49:50 <shapr> I think college is good for impressing prospective employers.
12:49:56 <hornby> I think my biggest problem was that first year university was such a major dissapointment, intellectually
12:50:05 <shapr> yah I understand that.
12:50:19 <shapr> I expected to be able to discuss parallel algorithms with my teachers.
12:50:25 <shapr> didn't happen.
12:50:29 <hornby> First year computer science: C. Unix paths. 
12:50:58 <shapr> I turned to 'exploring' the univesity network rather than succumb to complete boredom
12:51:09 <hornby> "If we have directory stucture X, the current working directory is Y, what path does ../../Z correspond to?
12:51:19 <hornby> Actual question from the exam. 
12:51:20 <shapr> and then anonymously emailing security holes to the people responsible
12:51:42 <shapr> they thought they were being attacked by a cracker community :-/
12:51:52 * hornby stumbled across an administrator password. Wasn't even trying ...
12:52:01 <Heffalump> what uni do you go to?
12:52:21 <hornby> Heffalump: a crappy one, for comp. sci. at least. Trent. its in Canada
12:52:43 <shapr> on the other hand, I've had a hard time learning math, so I figure it might be exciting to get a degree in that.
12:53:11 * hornby can't wait to take Discrete Structures (MATH 230 ... if they let me)
12:53:19 <hornby> it looks fun
12:53:25 <shapr> math works for you?
12:53:38 <shapr> I was traumatized at an early age by a crappy math teacher.
12:53:48 <hornby> sometimes. university calculus was OAC calculus all over again. 
12:53:52 <redcrosse> try being left handed...
12:53:56 <hornby> my math marks are my most variable. 
12:53:58 <shapr> me me! I'm left handed!
12:54:03 <redcrosse> ah!
12:54:07 <shapr> redcrosse: why should I try it?
12:54:12 <redcrosse> there's your problem
12:54:16 <shapr> how so?
12:54:23 <redcrosse> 'cause they teach to us in a right handed way
12:54:27 <hornby> I bounce between barely passing and As. I got a 92% in OAC calculus, and 22% in university calculus, my lowest mark :) 
12:54:41 <redcrosse> using the method of "here repeat this..."
12:54:42 <shapr> redcrosse: programming is mostly right to left
12:54:49 <shapr> redcrosse: oh, that's true.
12:54:53 <hornby> Even though the course was about 10% harder :)
12:54:55 <shapr> rote memorization doesn't work for me
12:55:04 <hornby> sigh. Brb
12:55:07 <shapr> hornby: you require something challengi?
12:56:44 <redcrosse> shapr: yeah, lefties need to learn the whys not the hows
12:56:52 <shapr> that's true of me
12:56:56 <redcrosse> shapr: most can work out the hows for themselves
12:57:17 <shapr> I usually do
12:59:59 <redcrosse> they did studies in the US about the usefullness of splitting kids up into groups of lefties and righties
13:00:06 <redcrosse> and teaching them accordingly
13:00:09 <shapr> what results?
13:00:18 <redcrosse> not surprisingly the lefties showed an overwhelming improvement
13:00:29 <shapr> interesting
13:00:35 <shapr> know where I can find those studies?
13:00:35 <redcrosse> but the department of education decided it wasn't feasible financially
13:00:47 <redcrosse> gosh...let's see
13:00:49 <shapr> iirc, lefties are less than 10%
13:00:57 <Heffalump> 20% I thought
13:00:58 <Heffalump> ICBW
13:01:01 <redcrosse> yeah, and it's probably even smaller than that
13:01:06 <redcrosse> 'cause it's a spectrum
13:01:19 * shapr uses spectral imaging on his left hand
13:01:33 <redcrosse> so there may only be a small percent that would need to be taught differently
13:03:47 <redcrosse> i'll have to go home if i'm to find the journal name
13:04:05 <redcrosse> i was a pyschobiology major...almost wrote my thesis on handedness
13:04:38 <redcrosse> the name has to be in my notes somewhere...
13:13:13 <hornby> shapr: I require something not boring. 
13:28:40 <shapr> I suspected as much
13:28:58 <shapr> redcrosse: I'd like to read that article if you can find references for it
13:29:33 <redcrosse> shapr: yeah, i don't know if it'll be available on the web, but i'll look when i go home
13:29:41 <shapr> cool, thanks
13:32:56 <shapr> ok, I think I've figured out part of the problem
13:36:56 <shapr> maybe not
13:45:16 <shapr> I've heard of using trace to get debugging output, how does that work?
14:00:27 <Heffalump> trace :: String -> a -> a
14:00:47 <Heffalump> give it a string and a value, and it'll evaluate to that value and print out the string as a side-effect
14:00:57 <shapr> oh
14:01:06 <shapr> where do I get it?
14:01:12 <shapr> which module?
14:02:19 <Heffalump> errm, Trace I think
14:02:21 <Heffalump> in hugs, anyway
14:02:26 <Heffalump> IOExts for GHC, possibly
14:02:35 <shapr> aha
14:02:36 <shapr> IOExts
14:02:40 <shapr> yes, I grepped the docs
14:12:38 <shapr> wow
14:12:49 <shapr> trace shows just how lazily stuff happens in haskell
14:12:52 <shapr> that's very cool
14:13:47 <Heffalump> yeah, I get really confused by that sometimes :-)
14:14:06 <shapr> I admit, the output is nothing like I expected.
14:18:30 * shapr is confused
14:19:05 * Heffalump finds traceval str v = trace (str ++ show v ++ "\n") v
14:19:09 <Heffalump> to be useful quite often
14:20:15 <shapr> I tried that manually, it looks way ugly
14:20:26 <shapr> thanks for that useful snippet
14:20:32 <Igloo> hugs has a traceShow or something
15:53:24 * ChilliX is back (gone 00:00:42)
16:02:40 <Pseudonym> Did somebody want a CVS server for the ICFP competition?
23:59:17 <shapr> gooood morning!
