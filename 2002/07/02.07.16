00:57:08 * shapr bounces
00:57:48 <shapr> hello everybody.
00:57:48 <shapr> everyone feeling referentially transparent today?
01:00:21 <Chilli> Hi shapr
01:00:50 <shapr> hi Chilli, how are ya?
01:01:27 <Chilli> Not too bad
01:01:33 <Chilli> pretty quite here
01:01:38 <Chilli> how are you going?
01:01:57 <shapr> well, it's lunchtime right now
01:02:14 <shapr> but I have a question about overlapping typeclasses that I couldn't figure out last night...
01:02:20 <shapr> lunch first...
01:02:29 * shapr will return in ~ 1 hour
01:02:35 <Chilli> bon appetite
01:08:14 <jens> Chilli: how's it going? :)
01:08:28 <Chilli> Hi Jens :-)
01:09:19 <Chilli> Good (apart from running after stupid deadlines all the time)
01:09:25 <Chilli> How about you?
01:09:50 <Chilli> BTW, sorry for never answering to your profiling questions re c2hs
01:09:56 <jens> not bad thanks
01:10:04 <Chilli> I just didn't have any time to look in to that stuff :-(
01:10:15 <jens> no problem
01:10:54 <Chilli> How is life in Tokyo?
01:10:56 <jens> any idea how to proceed from there?
01:11:33 <jens> we just had another typhoon pass by this morning!
01:11:50 <Chilli> oops - hope you were indoors
01:11:55 <jens> life seems too busy in general
01:12:01 <Chilli> agreed
01:12:16 <Chilli> did you ever try the graphical profiler?
01:12:23 <Chilli> profile browser, I mean
01:12:35 <jens> well mostly out of the rain thankfully
01:12:47 <jens> in ghc?
01:13:08 <Chilli> yep
01:13:19 <Chilli> browser is said too much really
01:13:31 <Chilli> there is a tool converting profile info into .ps file
01:13:33 <jens> i did make some plots as i recall but they didn't help me much
01:13:44 <Chilli> hmm, ic
01:14:00 <jens> perhaps they would make more sense to you
01:14:21 <Chilli> After the AFP summer school, I'll be able to look into that stuff again
01:14:49 <Chilli> (c2hs & Gtk+HS, I mean)
01:14:50 <jens> ah, maybe that was before i rebuilt c2hs to profile everything
01:15:30 <jens> so maybe i should try again with profile-all, or whether it's called
01:15:42 <jens> ok, cool
01:15:43 <Chilli> -prof-all
01:16:21 <jens> right
01:16:24 <jens> are you giving lectures at the school?
01:16:46 <Chilli> yeah
01:17:02 <jens> what are you talking about?
01:17:21 <Chilli> about a new approach to arrays
01:17:48 <Chilli> basically, the goal is to specify array algos purely functionally and automatically transform that code into 
01:17:56 <Chilli> efficient state-based loops
01:18:17 <Chilli> we are currently adding this stuff to GHC
01:18:55 <jens> sounds interesting - yes, i think i noticed some paper you wrote about it
01:18:57 <Chilli> and then all these corner problems creep up...
01:19:09 <Chilli> yep, last year's ICFP paper
01:19:09 <jens> hmmm
01:19:28 <jens> when i found time i'd like to read it
01:20:11 <Chilli> the overall research project is described at http://www.cse.unsw.edu.au/~chak/project/haskell+ndp/
01:20:14 <jens> find time, even
01:20:23 <Chilli> and has references to all the papers
01:20:37 <jens> ok, thanks
01:20:44 <Chilli> we even have an open position here for somebody to join this research group
01:21:04 <jens> really
01:21:12 <Chilli> yep
01:21:34 <Chilli> I posted it on the Haskell list a while ago
01:22:00 <jens> oh, i missed that
01:23:17 <jens> btw did you have a look at gtk2hs?
01:23:22 <Chilli> if you come across anybody interested to work on this stuff, let me know
01:23:26 <Chilli> sure
01:24:01 <Chilli> but my plan is to make gtk+hs support GTK+ 1.2 and 2.0
01:24:11 <Chilli> basically by adding a form of conditionals to c2hs
01:24:24 <Chilli> where the condition depends on a constant C expression
01:24:54 <Chilli> so, one chs source for both versions
01:25:14 <Chilli> should be pretty painless
01:25:16 <jens> probably a good idea, cos one of these days there will be gtk-2.2 ;-)
01:25:32 <Chilli> and other libraries have the same problem
01:25:40 <Chilli> you really have to be able to track multiple version
01:26:06 <Chilli> and with conditions in c2hs, I think, it'll be quite convenient
01:26:21 <jens> actually it would be nice if the two could get merged at some point
01:26:35 <jens> do you think that is possible?
01:26:58 <Chilli> to be honest, I doubt it; the architecture is completely different
01:27:16 <jens> since Axel has already made quite a lot of progress on gtk2 stuff
01:27:27 <Chilli> actually before releasing gtk2hs, Axel send me his tarball and asked me whether I can strip any of the stuff off and add it to gtk+hs
01:27:47 <Chilli> I had a good look, but couldn;t find anything tghat would require quite some rewriting
01:28:07 <jens> ok, i see
01:29:20 <jens> i agree at the high there are plenty of differences, but at the function level i thought some merging might be possible
01:29:55 <jens> but i'm probably being overoptimistic, and i admit i haven't thought that much about the nitty-gritty of it
01:30:21 <Chilli> I am happy about incorporating any code that saves us work on gtk+hs
01:30:37 <jens> anyway just thought i'd bring the question up :-)
01:30:49 <Chilli> but I really couldn't see how to do it
01:31:01 <Chilli> sure, it's a good point
01:33:04 <jens> when is the icfp competition anyway btw?
01:33:47 <Chilli> 30/8 - 2/9
01:34:08 <Chilli> I have to go now for a while (Karate training)
01:34:10 <Chilli> cu later
01:34:13 * Chilli is away: Not at the machine...
02:48:52 * shapr bounces
02:50:54 --- topic: set to 'GHC 5.04 released http://www.haskell.org/ghc/download_ghc_504.html || http://icfp2002.cs.brown.edu/ - looking for net accessible cvs and team members for a #haskell ICFP contest entry (August 30 - September 2) (shapr)' by shapr
03:02:55 <shapr> hi Igloo
03:02:58 <shapr> how's life?
03:05:02 <shapr> that good eh?
03:05:25 <Igloo__> Life is bouncy, and not in the good way
03:06:42 <shapr> what's the problem?
03:06:49 <shapr> net connect @ oxford?
03:07:24 <Igloo> Suspected firewall problems. Every now and then it decides to stop letting packets through
03:07:31 <shapr> weird
03:07:37 <shapr> socks4 firewall?
03:07:42 <Igloo> Replacement was meant to arrive at 1800 yesterday, 1000 today and now lunchtime today
03:07:46 <shapr> socks5?
03:07:52 <Igloo> Cisco PIX
03:07:55 <shapr> oh
03:08:05 <shapr> aren't those about as secure as screendoors?
03:08:07 <Igloo> Packet filtering
03:08:09 <shapr> why not reconfigure it?
03:08:15 <Igloo> reconfigure it?
03:08:29 <Igloo> Aren't socksn just proxies rather than firewalls?
03:08:51 <shapr> um, kind of
03:09:35 <shapr> if the PIX is crapping out occasionally, it's probably a config problem, and you might fix it if you reconfigure it.
03:09:52 <Igloo> That sort of thing has been tried
03:10:05 <Igloo> And reseating all the cards in it
03:10:45 <shapr> done all the stupid checks? wiggle the cables, see if it's too hot, make sure it's grounded, etc?
03:11:10 * Igloo assumes so - I'm just a user, though  :-)
03:11:55 <shapr> I used to do sysadmin, netadmin, etc
03:12:38 * Igloo does it as a hobby, but not at the university scale  :-)
03:13:33 <shapr> I ran forty websites, including the New York Yankees, and the Seattle Mariners.
03:13:56 <Igloo> Cool - for a company?
03:14:12 <shapr> yup
03:15:36 <shapr> four guys workin at that company, including the guy who owned it.
03:15:51 <Igloo> Nice
03:16:27 <shapr> kind of a sucky job though, I was doing programming as well, and I was being paid the huge sum of USD $36k a year.
03:16:54 <shapr> I hacked on a perl database backend, and java applet frontend for a porn website :-(
03:17:16 <shapr> I've since decided I'll not do any work relating to that kind of stuff again.
03:17:24 <Igloo> 36k doesn't sound that unreasonable depending on how much experience you had and what cost of living is like over there
03:17:28 <Igloo> :-(
03:17:45 <shapr> my rent was a $1k a month
03:17:51 <Igloo> Ouch
03:17:56 <shapr> middle of Seattle
03:18:02 <Igloo> Oh, I forgot to convert that
03:18:07 <Igloo> Still ouch, though
03:18:24 <Igloo> Not a huge amount I guess if you were living alone
03:18:56 <shapr> I was living with a chick who had no job actually :-)
03:18:58 <Igloo> Well, huge amount compared to rents here
03:19:08 <Igloo> Ah
03:19:26 <shapr> I learned a lot about doing sysadmin and network admin
03:19:39 <shapr> Seattle is a beautiful city, with lots of cool people.
03:20:48 <Igloo> Cool
03:21:20 <shapr> the chick I lived with was the craziest person I've ever met though.
03:21:31 <shapr> I sincerely hope I never have any interaction with her again.
03:21:46 <Igloo> lol - IWW?
03:45:00 <shapr> well
03:45:11 <shapr> she's polyamorous.
03:45:21 <shapr> I discovered that I'm not.
03:45:53 <Igloo> Ah, that sort of thing. Not fun if it doesn't work out  :-(
03:45:57 <shapr> truly.
03:46:47 <shapr> it's a pretty horrible story, if we ever get together for beer sometime, I'll tell you.
03:47:13 <Igloo> OK, but mine's a lemonade  :-)
03:47:24 <shapr> heh, fair enough.
03:48:04 <shapr> how far is london to oxford?
03:48:42 <shapr> I have irc friends in various parts of uk, thought I might drop by ox.ac for an evening sometime.
03:48:55 <Ig> I give in
03:49:19 * Ig missed whatever you said after "OK, but mine's a lemonade"
03:49:27 <shapr> heh, fair enough.
03:49:28 <shapr> how far is london to oxford?
03:49:30 <shapr> I have irc friends in various parts of uk, thought I might drop by ox.ac for an evening sometime.
03:49:38 <shapr> emacs roxxors
03:49:45 <Ig> 1 or 1.5 hours by bus I think
03:49:53 <shapr> cool, that's really close.
03:50:00 <Ig> Heff would know, but he just lost his connectivity
03:50:26 <shapr> what happened?
03:50:34 <shapr> I thought he was at a meeting somewheres
03:50:42 <Ig> Same again - firewall broke
03:50:49 <shapr> much suckage
03:50:52 <Ig> Or possibly is being replaced
04:45:39 <shapr> I hope the firewall is fixed soon.
04:45:54 <shapr> otherwise I'll be exploring the world of FP without my usual guides ;)
04:45:56 * Ig goes to part Igloo
04:46:25 <Ig> Well I'm currently outside the firewall - I just tend to IRC from a client inside it
04:46:30 <shapr> oh
04:46:51 <shapr> hi clausen
04:46:52 <Ig> Bah, missed my window of opportunity
04:47:11 <shapr> Ig: fenestration away!
04:47:17 <clausen> hi
04:47:26 <shapr> clausen: written any cool haskell code lately?
04:47:50 <clausen> nope
04:48:05 <shapr> read any cool haskell code lately? :)
04:48:31 <clausen> nope
05:12:59 <Ig> Are you still around, shapr?
05:13:06 <shapr> yah, wassup?
05:13:19 <shapr> Ig, Edo, and SuperEdo
05:13:34 <Ig> http://urchin.earth.li/~ian/Hetris/ may interest you (standard disclaimers apply)
05:13:41 <Ig> Huh?
05:14:05 <shapr> I was trying to figure out what the word "Ig" was trying to suggest in my head.
05:14:36 <Ig> Ah...I don't get the reference, though
05:14:37 <shapr> I think it was Freud who said the psyche is composed of three parts, Id, Ego, and Superego
05:14:45 <Ig> Ah, right
05:15:31 * shapr downloads Hetris-pp.ps
05:16:41 <shapr> wow, cool
05:17:53 * Ig notices the source size - I should probably make a tarball without a Haskell2LaTeX binary
05:19:43 <Ig> 27k - that's more like it  :-)
05:20:16 <shapr> are you interested in getting feedback on this?
05:20:28 <Ig> Definitely  :-)
05:20:32 <shapr> cool
05:21:00 <Ig> I think I ask for it in both Intro and Conclusion, BICBW  :-)
05:21:50 <shapr> imho, your writing style is literary and nice to read.
05:22:28 <Ig> Oh, OK. Thanks!
05:22:40 <shapr> it seems that the concepts do flow naturally, and the overall structure appears coherent so far (page 4)
05:23:09 <shapr> you've stated a thesis and appear to be elaborating on that structure in steps
05:24:15 <Ig> Which bit of page 4?
05:25:03 <shapr> I've gotten to the bottom of page 4
05:25:12 <Ig> Ah, a general comment then?
05:25:15 <shapr> that's as much as I'll let myself read since I'm at work :-)
05:25:20 * Ig realises I ought to spell check it
05:25:25 <Ig> :-)
05:25:33 <shapr> more feedback when I have time to carefully read it tonight.
05:25:40 <Ig> Cool, thanks
05:25:41 <shapr> yes, an overall comment.
05:25:58 <shapr> ps. ledgermain is a nifty word
05:26:24 <shapr> bah, *I* misspelled it.
05:27:23 <Ig> Yeah - I was going to be all fancy and throw some French in italics in, but then, when looking for the spelling, I discovered it had been Englishised
05:27:41 <Ig> I need a better cool word vocabulary  :-)
05:27:47 <shapr> heh
05:28:27 <shapr> I think legerd-main (sp-whatever)
05:28:50 <shapr> is rarely enough used to qualify as very cool.
05:29:07 <Ig> Yeah, but that's about the only word in my collection...
05:29:17 <shapr> I keep looking for opportunities to use "jaunt" in everyday conversation
05:29:24 <shapr> or eponymous, or sycophant
05:30:09 <Ig> I need to decide when I should use things like "board" and when things like "\hstype{Board}" too. I suspect I haven't been hugely consistent, and I keep running into theings like "the \hsconstructor{Tick} \hstype{Event}" which I want to avoid
05:31:06 <Ig> :-)
05:31:17 <shapr> I haven't looked at the markup yet, but I do wish I could use some kind of markup on irc
05:33:30 <Ig> The markup was just to make it clear what I meant, but you'll probably notice the lack of a clear rule of when board is typeset as Haskell and when it is just in roman in the ps file
05:33:52 <Ig> Oh bother, all the inline code is still just typeset as verbatim text - I should fix that
05:34:08 <shapr> I'd like to learn LaTeX, I still haven't
05:34:23 <shapr> that's my main barrier to entry with the YAHT hask tutorial
05:34:44 <Ig> *nod*
05:54:51 <Ig> Hmm, with the firewall bounces I can only get asympototically closer to fixing all the typoes
06:15:35 * Ig puts a minorly fixed version in the same place
06:21:13 <shapr> crap, my country is showing off its cluelessness again :-((( http://slashdot.org/articles/02/07/16/065207.shtml?tid=123
06:22:12 <Igloo_> Hmmm
06:22:27 <Igloo_> Still, you've voted with your feet
06:22:33 <shapr> 'tis true.
06:29:34 * Chilli is back (gone 04:55:22)
06:29:52 <shapr> Chilli: computer laws are nicer in .au?
06:31:06 <Chilli> a bit
06:31:46 <Chilli> but there for au doesn't even have a proper constitution
06:31:49 <Chilli> pretty messy
06:32:26 <shapr> I'm making a BananaEncodable typeclass...
06:32:31 <shapr> I made String an instance
06:32:32 <Chilli> (there is a consititution, but that puts more emphasis on fixing the national antheme than asserting any basic rights)
06:32:45 <shapr> and I'd like to make [BananaEncodable] an instance, but ghc complains about overlapping declarations
06:33:08 <shapr> seems to me that [[Char]] shouldn't overlap with [Char] but ghc disagrees.
06:33:08 <Chilli> make the instance like so
06:33:27 <Chilli> instance BananaEncodable a => BananaEncodable [a] where
06:34:11 <shapr> I've tried that
06:34:32 <shapr> I also have "instance BananaEncodable String where"
06:35:02 <shapr> that overlaps.
06:35:22 <Chilli> check http://haskell.org/onlinereport/decls.html
06:35:31 <Chilli> Section 4.3.2
06:35:42 * shapr looks
06:36:04 <Chilli> note the general form of instance delcs
06:36:11 <Chilli> instance cx' => C (T u1 ... uk) where { d } 
06:36:25 <Chilli> u1 ... uk must be distinct variables
06:36:43 * shapr processes that info
06:37:12 <Chilli> your instance decls violate this rule
06:37:16 <Chilli> this is why GHC complains
06:38:41 * shapr thinks about that
06:38:50 <shapr> oh
06:39:28 <Ig> No it doesn't - [a] is essentially the same as List a
06:39:41 <shapr> ?
06:39:48 <Chilli> But String = [Char] and not [a]
06:39:50 <Ig> Or have I missed the point?
06:40:02 <Ig> Oh, right
06:40:12 * Ig goes to look at the report
06:40:29 <shapr> is there a way I can treat [Char] separately?
06:40:44 <Chilli> separate from [a]?
06:41:00 <shapr> I can't think of one :-)
06:41:34 <Chilli> not really, but have a look at how the Show class is defined
06:41:41 <shapr> instance Char a =\ BananaEncodable [a] where
06:41:48 <Chilli> it specifically defines a showList in addition to show
06:41:49 * shapr makes up his own anti-operator
06:41:56 <Chilli> to kind of get around that problem
06:41:56 <shapr> ah, thanks for the pointer.
06:43:41 <Ig> Ah, yes, so GHC is going beyond H98 in allowing the instance for String in the first place.
06:44:40 <Ig> You could make a class, have Char be an instance of it and then make an instance of BananaEncodable for ThatClass a => [a] possibly
06:44:48 <Chilli> ghc shouldn't allow a instance for string (unless you defined -fglasgow-exts)
06:44:57 <shapr> I have
06:45:08 <shapr> I think HUnit requires glasgow-exts
06:45:10 <Ig> Bad shapr!  :-)
06:45:17 <Ig> :-(
06:45:38 <Ig> Although Hetris needs it too, actually, given it uses the FFI  :-(
06:45:41 <shapr> I really like HUnit though, I dunno if I could write code without unit-test-first anymore.
06:46:12 <Chilli> Ig: I specifically added -ffi as a new option to avoid neededing to use -fglasgow-exts for the FFI
06:46:22 <Chilli> but it is only available from 5.04 onwards
06:46:33 <Ig> I don't think it's in the snapshot I'm using ATM
06:46:48 <Chilli> (it actually is, -fffi, but I added -ffi as an alias)
06:50:41 <Chilli> shapr: what are you writing?
06:52:04 <shapr> object serialization layers, a haskell port of twisted.spread from twistedmatrix.com
06:52:26 <shapr> if I can get it to work, I'll be able to write web services in haskel =)
06:53:40 <Chilli> what does twisted.spread do?
06:53:40 <shapr> I'm currently convinced I can write dynamic websites in less time with Haskell than with anything else I've used.
06:53:58 <shapr> twisted.spread is mostly an RPC layer
06:54:10 <Chilli> like XML-RPC?
06:54:18 <shapr> sort of, but not that verbose
06:54:48 <shapr> also, there are already elisp and java implementations (and an unsupported mozart-oz port too)
06:54:51 <Chilli> do you plan to use any of the Haskell HTML libraries for this?
06:55:02 <shapr> WASH does html generation quite spiffily
06:55:07 <shapr> so yes,
06:55:16 <Chilli> so, you are adding this to WASH?
06:55:28 <shapr> I was planning on using twisted as the actual server, and routing requests to a haskell backend
06:55:46 <Chilli> sounds like a rather cool project
06:55:50 <shapr> I hope so.
06:55:56 <Chilli> does Peter know about it?
06:56:00 <shapr> nah
06:56:13 <shapr> it's just a weenie RPC layer :-)
06:56:36 <shapr> once it works, I'll try to make money with it
06:56:38 <Chilli> I am sure, he would be interested if it works out
06:56:55 <shapr> I have five EU project websites on my ToDo list
06:57:08 <Chilli> Peter is going to give a WASH demo at the Haskell Workshop this year
06:57:15 <shapr> wow, wish I could show up =)
06:57:46 <shapr> since I evangelize about Haskell regularly, I figured I'd put my money where my mouth is.
06:58:04 <Chilli> good policy :-)
06:59:13 <Chilli> how do you interface to the twisted server from Haskell?
06:59:21 <shapr> just a socket
06:59:38 <shapr> one of the cool things about twisted is that it uses sockets for IPC and RPC
07:00:02 <Chilli> ic, so it is quite uniform
07:00:02 <shapr> one central server binds to port 80, and each user can run their own instance, which talks to the main server.
07:00:18 <shapr> yup
07:00:39 <shapr> I'm by no means brave enough to try FFI with Haskell.
07:00:46 <shapr> but I can probably deal with a Socket
07:00:51 <Chilli> the FFI is good ;-)
07:01:17 <Igloo> The FFI is probably easier to successfully use than sockets, given my experience with FFI and what I've scanned on the lists about problems with sockets  :-)
07:01:50 <Igloo> Give or take a problem I need ot look into more carefully
07:08:17 <shapr> the twisted guys are interested in playing with Haskell once it's integrated
07:08:37 <Chilli> that's even better
07:08:44 <Chilli> so maybe you get some converts :-)
07:09:01 <shapr> heh, I hope so.
07:09:10 <Chilli> let me know how it goes - sounds really interesting
07:09:38 <shapr> I work on it weekends and some evenings
07:09:50 <shapr> and I'm here on #haskell with lots of basic questions
07:09:51 <shapr> :)
07:10:31 <Chilli> how far have you got?
07:10:44 <shapr> I'm almost done with the first of three layers.
07:11:10 <Chilli> that sounds not bad
07:11:22 <shapr> Python is my 'native language' and twisted is written in Python, so it's a good way to learn how to do real programs in Haskell.
07:11:34 <Chilli> ok, ic
07:14:56 <Chilli> Time for bed
07:14:59 <Chilli> cu
07:15:01 <Ig> Night
07:15:02 * Chilli is away: Not at the machine...
07:15:39 <shapr> g'night
07:48:09 <jewel> what is python's rte like? Is there native code compilation?
07:48:41 <shapr> nah, source to bytecode
07:50:12 <jewel> are there any experimental native compilers?
07:50:27 <shapr> somewhat
07:50:31 <shapr> there's py2C
07:50:56 <shapr> there's psyco, which is x86 specific
07:51:24 <shapr> there's pyrex, which allows you to mix C and Python in the same source file.
07:51:39 <shapr> there's Vyper, a python 1.5.2 written in OCaml
07:51:55 <shapr> I could probably come up with several more given some time to think about it.
15:12:54 * Igloo bounces
16:35:17 <Chilli> Moin
