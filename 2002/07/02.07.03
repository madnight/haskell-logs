05:35:00 <shapr> wheeeeeee
06:00:45 <shapr> yay netsplits
06:08:18 <shapr> wheeeeeeeeeee
06:08:23 <shapr> almost quittin time
07:11:14 <shapr> anyone want to be part of the icfp2002 programming contest?
07:11:24 <jewel> what are the requirements?
07:11:24 <shapr> I'd like to try to get a team together from #haskell participants.
07:11:34 <shapr> jewel: time free on that weekend.
07:11:41 <Igloo> Which weekend?
07:11:58 <shapr> http://icfp2002.cs.brown.edu/
07:12:09 <shapr> The contest will run from 12:00 Noon Pacific Standard Time on Friday August 30, 2002, until 12:00 Noon Monday September 2, 2002
07:12:40 <Igloo> I can't commit this far in advance
07:12:52 <shapr> neither can I actually, but I'd like to hear statements of interest at least :-)
07:13:10 <shapr> I'd also like to see a cvs repository we can all reach
07:13:17 <Igloo> If it's an interesting contest then I'm interested  :-)
07:13:28 <shapr> have you seen the past contests?
07:13:36 <Igloo> No, but I'll take a look some time
07:13:45 <shapr> imho, this is *the* most interesting programming contest I know of.
07:13:55 <shapr> the problem is given when the contest begins
07:14:06 <shapr> there are usually two categories, lightning entries, and full entries
07:14:17 <shapr> lightning entries allow for only 24 hours work from problem -> entry
07:14:28 <shapr> full entries usually allow 3 * 24 hours
07:16:23 <shapr> http://www.moertel.com/~thor/icfp2001/
07:16:52 <shapr> that describes tom moertel's icfp2001 entry
07:17:00 <shapr> he's tmoertel when he joins this channel.
07:18:53 <shapr> the whole reason I'm bringing this up now is because of the "lessons learned" section of his kuro5hin article:
07:18:53 <shapr> http://www.moertel.com/~thor/icfp2001/k5-icfp.html
07:19:34 <Igloo> That rings a bell - does he talk about needlessly writing an error detecting parser?
07:19:45 <shapr> yup
07:20:30 <shapr> so I figured I'd try to gather a team early on
07:21:15 <shapr> and setup facilities ahead of time, frex: cvs repository, QuickCheck/HUnit experience, etc
07:21:35 <shapr> maybe even a test weekend if we can get everything together ahead of time.
07:22:59 <Heffalump> how many people can be on a team?
07:23:05 <shapr> I don't think there's a limit.
07:23:12 <shapr> except organizationally, of course
07:23:20 <Heffalump> IRC is good for organising
07:23:23 <shapr> I agree.
07:23:27 <Igloo> Is this the contest that a team with one of C, L and R won at some point OOI?
07:23:37 <shapr> huh?
07:23:46 * Igloo goes to look at the website
07:23:59 <shapr> I think C one once
07:24:09 <shapr> at least once
07:24:15 <Igloo> They're people, not languages
07:24:17 <shapr> oh
07:24:21 <shapr> which people?
07:24:34 <Igloo> I think the one I'm thinking of was using an enhanced C, possibly HOT enhancements
07:24:42 * shapr dunno
07:24:45 <Igloo> Rivest, Lesisserson
07:24:48 <Igloo> C has gone
07:24:52 <shapr> who was C?
07:25:00 <shapr> oh, gone from your brain?
07:25:02 <Igloo> Corvet
07:25:11 <shapr> Rivest of RSA fame?
07:25:12 <Heffalump> Cormen, surely?
07:25:16 <Igloo> Oh, yes
07:25:19 <Igloo> And yes
07:25:25 <Igloo> But not in that order
07:25:35 <Heffalump> writers of *the* algorithms textbook
07:25:53 <shapr> Igloo: yes, here it is: http://supertech.lcs.mit.edu/cilk/
07:26:12 <shapr> here's the actual entry page: http://supertech.lcs.mit.edu/~pousse/
07:27:03 <Igloo> Right, yes
07:28:07 <shapr> has anyone tried to get GHC to generate transparently parallel code?
07:28:26 <Igloo> Not I
07:28:26 * shapr thinks about Itanium EPIC support for GHC
07:28:48 <Igloo> I was thinking about playing with parallel Haskell but gave up building GHC on an unsupported OS/arch combination
07:29:15 <shapr> I happen to have several pvm machines, and a lan.
07:29:48 <shapr> the SMP ghc doesn't seem to have much support, so I figure two pvm servers with processor preference set should be good for my SMP box.
07:30:03 <Igloo> I wanted to get it working on a lab at uni with more than 50 decent spec machines
07:30:11 * shapr oohhs and aaahs
07:30:19 <shapr> spec = sparc?
07:30:27 <Igloo> No, specification
07:30:37 <shapr> oh
07:30:38 <Igloo> Intel PIII 500s or so I think
07:30:42 <shapr> linux?
07:30:49 <shapr> probably win32 :-/
07:30:58 <Igloo> Solaris
07:31:02 <shapr> wow
07:31:06 <shapr> that's surprising.
07:31:18 <Igloo> You seem to have misspelt "stupid"  :-)
07:31:28 <shapr> HA
07:31:32 * shapr chortles loudly
07:32:00 <shapr> truthfully, the only reason I would *ever* run Solaris is so I could run Self well.
07:32:15 <Igloo> Self?
07:32:25 <shapr> but Self's picky bits are the SPARC asm bits, not anything else.
07:32:46 <shapr> "Self is like Smalltalk, only moreso" that was the project motto
07:33:01 <Igloo> Ah, OK
07:33:07 <shapr> it was incredibly much faster than Smalltalk when emulating Smalltalk.
07:33:34 <shapr> some of the SelfVM tech has been integrated into the JVM, and is now called HotSpot
07:33:54 <shapr> I think they ported the poly-inline method caching part to make HotSpot
07:35:02 <shapr> Self would probably be my favorite language if there were a decent Linux/Windows implementation.
07:35:10 <shapr> it's beautiful.
07:36:30 <shapr> prototype oriented programming (instance inheritance, no classes), everything is a sent message, delegation to parent instances, amazing speed, the best graphical interface I've ever seen, and much much more.
07:37:22 <Igloo> WDYM by "graphical interface"?
07:38:03 <shapr> you got a 'canvas' and you could click on graphical objects to see the code that made them work. multiple people could see the canvas at the same time
07:38:17 <shapr> they each had a colored box that showed the area that they could see
07:38:26 <shapr> you could write an object and hand it to them
07:38:34 <Igloo> OK, so an IDE?
07:38:51 <shapr> in a later incarnation, it supported voice, video also...
07:39:00 <shapr> so I think it was a bit more than an IDE
07:39:12 * shapr digs for urls and screenshots
07:39:17 <Igloo> Right, OK
07:39:35 <shapr> the self homepage: http://research.sun.com/research/self/
07:42:01 <shapr> the kansas homepage: http://research.sun.com/research/ics/kansas.html
07:42:12 <shapr> spiffy screenshot: http://research.sun.com/research/ics/pics/overview.GIF
07:47:26 <shapr> hi gene9
07:47:32 <shapr> what's up?
07:47:56 <gene9> hi shapr
07:48:06 <shapr> written any cool Haskell code lately?
07:49:57 <gene9> oh no, I'm too tired :-(
07:50:03 <shapr> that sucks :-(
08:28:20 <elmex> hm, i want to learn about haskell and functional programming, i searched through the tutorial at www.haskell.org. but the 'Gentle Introduction to Haskell' tells me, that i should know another functional language before reading it. is there any good online book about functiona programming and haskell?
08:31:09 <Dalroth> I never really found a good tutorial for learning the whole language online, but there are a few good books.  If money is an issue, may I recommend the local library? :)
08:32:04 <shapr> I agree, I was unable to learn Haskell from the online docs. I've found Thompson's "The Craft Of Functional Programming" to be most helpful.
08:33:38 <Heffalump> hmm, has anyone made any effort at writing an online tutorial?
08:34:03 <shapr> yes
08:34:18 <shapr> in fact, it was me bitching flagrantly about it that got it started.
08:34:33 <shapr> it's in the main cvs tree
08:34:43 <Heffalump> oh, cool
08:34:44 <shapr> Hal Daume III is who I would consider the 'leader' of the project
08:34:54 <Heffalump> which tree?
08:34:55 <shapr> nothing has happened on it since christmas though
08:35:21 <shapr> I don't remember :-/
08:35:25 * shapr looks on his drive
08:35:49 * Igloo should mail the list and make some noise once moving house has finished
08:35:50 <shapr> I was complaing bitterly becaus delYsid on #emacs is blind, and there aren't any braille translations, which has kept him from learning Haskell.
08:36:18 <shapr> and he's an a very dedicated programmer, so I know he'd be someone worth having in the Haskell community.
08:36:33 <shapr> I emailed Thompson about an electronic copy, but I got no reply.
08:36:43 <Heffalump> did you email Richard Bird?
08:36:49 <shapr> nope, I didn't think of that.
08:36:54 <Heffalump> (about IFPH, obviously)
08:37:06 <shapr> I didn't know about IFPH at the time.
08:37:15 <shapr> imho, SOE isn't really a first FP book.
08:37:30 <shapr> so I didn't even ask Hudak (though it would be better than nothing)
08:37:33 <Heffalump> hmm, there's going to be someone partially-sighted at Oxford next year, but I imagine he just uses a magnifying glass or something to read stuff
08:38:38 <shapr> I really tried hard to learn from the online docs, and would have abandoned Haskell in favor of something with better online docs, but my fiancee purchased Craft and SOE for my birthday last year :-)
08:39:08 <Heffalump> heh, cool
08:39:44 <shapr> otherwise I'd be learning either OCaml or Mercury right now :-)
09:27:41 <elmex> is ther any good online book about learning haskell and functional programming? i didn't found anything goodo on haskell.org
09:28:16 <shapr> there's the beginning of a decent tutorial in cvs
09:28:19 <shapr> I think it's the yaht module
09:30:16 <elmex> what cvs ? i want to learn haskell, is the tutorial far enough to learn from?
09:30:29 <shapr> I don't think so :-/
09:30:46 <shapr> at the moment, I think you'd need to download several different documents and read them all.
09:31:50 <elmex> arg
09:32:12 <shapr> I'd suggest checking with your local library for Haskell books.
09:33:40 <elmex> heh, where i live is nothing 'local'
09:33:55 <elmex> ah, no, local void ;)
09:34:10 <shapr> where do you live?
09:34:12 <elmex> a supermarket and bank...
09:34:21 <shapr> about the same where I am
09:34:29 <elmex> 40-50 km outside a city
09:34:40 <elmex> and i dont have a drivers license ...
09:34:42 <shapr> I think it's worth buying "The Craft Of Functional Programming" by Simon Thompson
09:36:09 <elmex> 58,22 euro .. (around $58). arg. not in budget..
09:36:58 <shapr> sorry :-/
09:37:47 <elmex> lisp has around 2 free online books, which are quite big.. the only bad thing is, that lisp sucks ;)
09:38:24 <shapr> you can learn Haskell online, but only if you get several different documents and ask lots of questions here on #haskell
09:38:33 <shapr> that's probably a good way to learn :-)
09:38:54 <elmex> but what documents?
09:39:09 <shapr> first, get the gentle introduction
09:39:32 <elmex> its saying, that i should know a functional language already.. like scheme..
09:39:40 <shapr> try it anyway.
09:40:00 <shapr> I'd suggest downloading everything from http://www.haskell.org/bookshelf/
09:40:26 <shapr> at least, under the "General Introductions to Haskell" section
09:40:33 <elmex> hm,ok
11:17:37 * shapr bounces
11:17:40 <shapr> hi ski!
11:17:46 <ski> hi shapr !
11:17:47 <shapr> long time no see!
11:17:50 <shapr> what's up in your life?
11:18:06 <ski> well, iv'e been busy ..
11:19:22 <ski> it's a somewhat long ride to the uni now in summer when we have no classes
11:19:40 <ski> and i haven't a phone at home (yet)
11:20:18 <shapr> there's still activity here on #haskell :-)
11:21:01 <ski> I read about the possible move from OPN to OFTC, you know if it's gonna occur ?
11:21:06 <ski> yes
11:21:09 <shapr> I don't think it will.
11:21:14 <ski> ok
11:21:21 <shapr> the OPN politics seem to have died down some.
11:21:49 <ski> i really don't know much about it..
11:21:50 <shapr> I'm porting the RPC part of the Twisted server framework to Haskell.
11:21:54 <ski> ok
11:22:03 <ski> RPC ?
11:22:10 <shapr> remote procedure calls
11:22:13 <ski> aha
11:22:22 <ski> i just recalled the abbrev.
11:22:27 <shapr> http://www.twistedmatrix.com/products/spread
11:22:57 <shapr> twisted.spread has implementations in python, java, and elisp
11:23:24 <shapr> it seemed like a good first "real" project to try in Haskell.
11:23:30 <ski> so it's a library or something ?
11:23:34 <shapr> yup
11:24:04 <ski> with possible multi-langauge communication i suppose ..
11:24:04 <shapr> the Twisted framework publishes services via Perspective Broker, and you can login and ask them to do stuff, including passing you objects.
11:24:34 --- topic: set to 'http://icfp2002.cs.brown.edu/ - get ready! (shapr)' by Heffalump
11:24:58 <shapr> MoinMoin wiki can run as a Twisted service, so I can talk to it directly from Emacs or Java with the RPC mechanism.
11:25:23 <ski> ok
11:25:27 <shapr> I'll be able to publish Haskell services via Twisted once I've written these three layers,
11:25:37 <shapr> and I'll be able to talk to emacs from haskell, which should be FUN
11:26:00 <shapr> I'm also hoping to integrate Haskell into my Java workplace if possible.
11:26:35 <shapr> ski: have you written any cool code lately?
11:26:46 <shapr> or are you having a relaxing summer?
11:26:50 <ski> no, too tired
11:27:09 <shapr> having a not-relaxing summer? :)
11:27:45 <ski> well, i think it is quite relaxing, most of the time.
11:28:19 * Heffalump changes the IrcMove page to abandon/suspend the idea of the move
11:28:27 <shapr> cool
11:28:35 <ski> well, i'll have to go for the moment. probably be back to check later on ..
11:28:43 <ski> bye
11:28:46 <shapr> bye!
11:34:44 <shapr> elmex: any questions so far?
11:37:45 <elmex> shapr: hm, not yet..
11:38:03 <elmex> played a long game of Go since i asked here
11:38:16 <shapr> ok :-)
23:06:11 * shapr bounces
