02:00:34 * Chilli is away: Not at the machine...
06:52:46 * shapr bounces
06:52:49 <shapr> hiya!
06:53:20 <shapr> hey hornby, how ar ya?
06:57:39 <Igloo> Hey shapr - have yo got any of your stuff using HUnit online anywhere?
06:57:45 <Igloo> (or QuickCheck)
07:11:38 * Heffalump considers using QuickCheck to verify whether things satisfy the arrow laws
07:12:01 <shapr> hi Igloo!
07:12:20 <shapr> Igloo: yah, check out purl.org/net/shapr/haskell/Test_Banana.hs
07:12:23 <Igloo> You mean to check they don't definitely break them...
07:12:41 <Igloo> Ta, shapr
07:12:48 <shapr> my banana tests are HUnit
07:12:50 <Heffalump> yes, that
07:12:52 <Heffalump> :-)
07:13:23 <shapr> the ICFP paper for QuickCheck is the best docs, imho
07:13:32 <shapr> mostly because I learn best from examples
07:14:13 <Igloo> I read the manual (or user guide or whatever they called it) and it didn't look hugely interesting to me. I think I prefer HUnit.
07:15:22 <shapr> I read the manual also, I wasn't impressed.
07:15:27 <shapr> the paper is more impressive though.
07:15:47 <shapr> imho, QuickCheck is a new kind of testing tool that I haven't seen before.
07:16:04 <Heffalump> what's HUnit?
07:16:05 <Igloo> Hmmm, OK. It's the basic strategy I didn't particularly like, though
07:16:24 <shapr> HUnit is an xUnit instance for Haskell, written by Dean Herington
07:16:24 * Heffalump reads the user guide
07:16:30 <shapr> check it out at sf.net/projects/hunit
07:16:53 <Igloo> You define what tests you want to run rather than describing classes of tests that tests should be picked from
07:16:55 <shapr> hey, I could ask Dean Herington if he wants to show up and write code for the ICFP entry
07:17:21 <Heffalump> at a quick glance, HUnit doesn't seem to generate test data cunningly in the same way QuickCheck does
07:17:44 <shapr> I'd like to see a suite of testing software for every language that includes Design by Contract, xUnit, and QuickCheck
07:17:52 <shapr> actually, I think DBC is a subset of QuickCheck
07:17:56 * shapr thinks about that
07:18:04 <Igloo> It doesn't
07:18:22 <shapr> HUnit doesn't generate test data at all
07:18:46 <shapr> but it does allow for a more incremental style of testing than QuickCheck does
07:19:23 <shapr> I usually write a stupid test like "testGetAnything" then "testGetSomethingClose" then "testGetExactResult"
07:19:45 <shapr> that way I can start coding with a stubbed out implementation
07:20:19 <Igloo> Hmmm, Banana lends itself to HUint more than Hetris. I could check the Board was behaving correctly with it, but that's about it
07:20:39 <shapr> I haven't finished reading Hetris yet.
07:21:48 <shapr> my favorite part about the unit test first process is that I have to think about the interface/api before I write the code
07:22:08 <shapr> in the past I've had problems where I would write the code, and then realize it looked great from inside the code, but not from outside
07:22:27 <shapr> this way I have to explicitly deal with the issue of my code being a 'team worker' :~)
07:22:48 * shapr didn't purposefully put nose hair on that smiley
07:23:19 <Igloo> :-)
07:23:24 <Igloo> lol
07:23:36 <shapr> maybe QuickCheck could be integrated into HUnit?
07:23:45 <shapr> that way it could be one of your 'unit tests'?
07:24:11 <shapr> when you think your function is done you slap a random test case generator on it so that everytime you run your tests, you get new tests?
07:24:29 <Igloo> Isn't that what QuickCheck already does?
07:24:41 <Igloo> The point of HUnit is you describe exactly what tests you want done, surely?
07:25:01 <shapr> right, but could I write QuickCheck tests in HUnit?
07:25:10 <shapr> I'm just trying to find some sensible way of combining them
07:25:28 <shapr> I'd like to use them both at the same time.
07:28:22 <shapr> actually, I could easily build a QuickCheck test with (encode . decode) in Banana
07:57:09 <shapr> hi Dalroth, how ar ya?
08:08:43 <Dalroth> I'm doing ok.  My dog is at the groomers, so I'm going to be late for work which is OK with me :)
09:43:12 <shapr> hi redcrosseknight
09:43:22 <redcrosseknight> hello
09:43:25 <shapr> redcrosseknight: are you a Haskell user?
09:43:40 <shapr> or are you looking for info on Haskell?
09:43:59 <redcrosseknight> yeah, i'm just a newb
09:44:10 <shapr> got any specific questions?
09:44:14 <redcrosseknight> just lurking mainly
09:44:17 <redcrosseknight> thanks, though
09:44:20 <shapr> sure
09:44:43 <shapr> ever done any functional programming?
09:45:15 <redcrosseknight> no...but i'm very interested
09:45:34 <shapr> want some tutorial pointers?
09:45:40 <redcrosseknight> sure
09:46:15 <shapr> this: http://www.haskell.org/bookshelf/ lists some online tutorial
09:46:16 <shapr> s
09:46:35 <shapr> though in my experience, the books are far better than the online docs
09:46:35 <redcrosseknight> thanks...yeah, i've been working through "the craft of functional programming"
09:46:41 <shapr> oh cool!
09:46:41 <shapr> me too!
09:46:51 <shapr> that's my favorite "learn haskell" book
09:46:58 <redcrosseknight> sweet
09:47:19 <shapr> I've been skipping around in it, I haven't done all the exercises...
09:47:22 <redcrosseknight> yeah, i've been looking into others as well...ocaml, erlang, etc...
09:47:36 <shapr> I want to learn ocaml and erlang also, but not till I'm fluent in Haskell
09:47:40 <shapr> same with Mercury
09:47:53 <redcrosseknight> but most stuff for functional programming assumes you have experience
09:48:00 <shapr> yah, it does
09:48:14 <shapr> "Craft" was a good intro for me
09:48:16 <Heffalump> most people seem to learn it at uni
09:48:23 <redcrosseknight> true
09:48:24 <shapr> hei pertsa!
09:48:29 <pertsa> hei
09:48:35 <shapr> kuis kulkee
09:48:44 <pertsa> kiitos kysymasta. ihan hyvin.
09:48:55 <pertsa> olin perheen kanssa viikon mokilla.
09:49:07 * shapr is now out of his depth with finnish
09:49:19 <shapr> I got that first sentence ;)
09:49:45 <shapr> redcrosseknight: do you do procedural programming for a living?
09:49:47 <pertsa> maybe it would be easier to understand if i used scandinavic marks
09:50:03 <shapr> pertsa: I think it's just my lack of vocabulary
09:50:15 <shapr> I used to know what those words mean, but I've forgotten them :-/
09:50:30 <pertsa> i was a week in the countryside with my family
09:50:31 <Igloo> I was right with you, all the way up to "hei"  :-)
09:50:32 <redcrosseknight> shapr: mainly
09:51:04 <pertsa> (equals a week without computers)
09:51:23 <shapr> Igloo: hah!
09:51:26 <redcrosseknight> shapr: sometimes i get a bit functional in python
09:51:29 <shapr> pertsa: wow, how did you survive?
09:51:33 <shapr> yah, python is nice that way
09:51:44 <shapr> first class functions, map, reduce, lambda
09:51:49 <pertsa> well, i cheated once. the local library had some free terminals
09:52:13 <redcrosseknight> yeah
09:52:24 <shapr> python's bits of FP, and its significant whitespace were my stepping stones to haskell
09:52:49 * Igloo tried to write some JavaScript yesterday, but stopped when I discovered that if I wrote anything non-trivial then 90% of the web population wouldn't be able to execute it
09:53:02 <shapr> I realized that every bit of my python code was returning a value, and never having any side-effects.
09:53:07 <shapr> I knew I liked that, but didn't know what it was called.
09:53:24 <shapr> Haskell was a major revelation.
09:53:38 <shapr> Igloo: yah, that's why server-side Java is becoming so popular
09:53:43 <redcrosseknight> i hope it's that way for me too
09:53:55 <redcrosseknight> i've liked what i've seen so far
09:54:23 <shapr> Haskell hits many of my "elegant code" buttons.
09:55:14 <redcrosseknight> have you had opportunities to use it much?
09:55:19 <redcrosseknight> or is it more of a joy thing?
09:55:26 <shapr> ?
09:55:28 <shapr> oh
09:55:37 <shapr> I thought you meant like Joy the programming language =)
09:55:43 <redcrosseknight> oh...sorry
09:55:53 <shapr> I have not been able to be profitable with Haskell, but I have a plan to get there.
09:56:10 <shapr> I'm porting the twisted.spread RPC mechanism to Haskell.
09:56:36 <shapr> my plan is to offer Haskell web services to a Twisted server via PB
09:56:55 <redcrosseknight> interesting.
09:57:01 <redcrosseknight> i thought i noticed you on #python
09:57:06 <shapr> yop
09:57:54 <shapr> I'm also on http://c2.com/cgi/wiki?PythonPeople
09:57:58 <shapr> and you seem to be there also.
09:58:17 <redcrosseknight> indeed
09:58:24 <shapr> not much on your wiki page though.
09:58:38 <redcrosseknight> no.  i'm surprised it's still there.
09:58:42 <redcrosseknight> someone awhile ago deleted it
09:58:47 <shapr> surprising
10:13:05 <shapr> hi ChoJin
10:13:08 <ChoJin> re
10:47:48 <xbill> re shapr
10:48:03 <shapr> re xbill, how's it goin?
17:26:39 * shapr yawns
17:28:38 * shapr looks for a tutorial on Hindley-Milner
17:30:36 <Heffalump> what do you want to know about it?
17:31:05 <shapr> just wanted to read an overview, see what it's all about.
