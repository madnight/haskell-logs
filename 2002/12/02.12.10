00:10:50 * seth is away: Don't say anything until I get back.
00:11:20 * ibid says something
00:23:12 * seth is back (gone 00:12:21)
00:42:25 * seth is away: Don't say anything until I get back.
00:47:54 * lament doesn't say anything
03:14:49 <xkb_> anyone here using gentoo?
03:37:55 <Igloo> What's the problem now, whee?
03:39:05 <Igloo> Yay, no-one's told me I screwed up yet  :-)
03:44:16 <xkb_> ?
03:44:44 <xkb_> ghc wont build on gentoo
03:45:06 <Igloo> Why not?
03:47:22 <xkb_> some error..
03:47:25 <xkb_> one moment
03:47:27 <xkb_> ill paste it
03:52:14 <xkb_> make[2]: *** [CTypes.o] Error 255
03:52:42 <xkb_> Prologue junk?: czvw_ret:
03:52:43 <xkb_> 	movl	$0, 16(%esp)
03:52:43 <xkb_> 	movl	$0, 20(%esp)
03:52:43 <xkb_> 	movl	$0, 8(%esp)
03:52:43 <xkb_> 	movl	$0, 12(%esp)
03:53:16 <Igloo> Ah...is thix an x86 machine?
03:53:20 <xkb_> yes
03:53:29 <Igloo> Oh, gcc 3.x?
03:53:34 <xkb_> yep
03:53:39 <Igloo> I'd guess that's the problem
03:53:56 <xkb_> 3.2 wont build ghc?
03:54:41 <Igloo> You might have more luck with the CVS head
03:55:07 <xkb_> ok.. ill try that.. 2 bad there is no ebuild for that :D
04:11:46 <o3> xkb_: there was some stuff in the ghc mailing list archives about gentoo a while ago
04:11:54 <o3> in the meantime, just use gcc 2.95
04:13:14 <jak_> xkb_: I also have problems with ghc on mandrake
04:13:20 <jak_> since that uses gcc 3.2
04:14:44 <ibid> Heffalump: there is now an abstract
05:07:19 * shapr bounces
05:07:42 * mgoetze throws shapr a ball to play with
05:07:52 * shapr catches the ball
05:08:07 * shapr goes back to python code
05:14:52 <shapr> I had a cute script that let me run a haskell function on a bunch of lines
05:15:00 <shapr> but I've lost it :-(
05:15:39 <shapr> I vaguely recall seeing a script that let me run a function on lines from stdin and send them to stdout
05:17:40 <shapr> anyone remember seeing something like that?
05:18:26 <o3> shapr: something like TextFilter? ;)
05:18:50 <shapr> oh, duh
05:18:54 * shapr smacks himself
05:26:58 <Janni> hi.
05:27:45 <Janni> i'm here again because of my ghc + HOpenGL problem
05:28:03 <Janni> i'll try to specify it a bit more
05:28:25 <Janni> i compiled HOpenGL and installed it via `gmake install`
05:28:41 <shapr> are you on Solaris or something?
05:28:46 <Janni> FreeBSD
05:29:49 <shapr> oh, ok
05:30:24 <shapr> any problems with configure or make?
05:32:39 <Janni> `gmake install` copies the required files and does `ghc-pkg --add-package < HOpenGL.conf`. this gives out only a warning "warning: can't find GHCi lib `HOpenGL.o'", but afterwards HOpenGL doesnt work. when i enter ":set -package HOpenGL" in ghci i get HOpenGL.o not found.
05:32:41 <Janni> shapr: not really
05:34:51 <Janni> but when i `export libdir=/usr/local/lib/ghc-5.04.1` and add the package manually by doing `ghc-pkg -ag -i HOpenGL` everything works fine as long as i dont try to load the package
05:35:06 <shapr> can you compile the test scripts?
05:35:23 <Janni> by the way: only when i do it that way i have to wait a minute till everything is linked
05:35:28 <Janni> s/when/if
05:35:36 <shapr> in my experience, some modules won't work interactively, but will work if you just compile
05:35:45 <Janni> if i do it without -g everything is ready afer a second
05:35:53 <Janni> shapr: didnt try yet...
05:36:08 <shapr> try it
05:36:10 <Janni> ok
05:37:19 <Janni> yeah, i got them compiled. i just trying them...
05:39:49 <Janni> ./Info gives me a segmentation fault. ./TestGLUT shows to empty Windows. ./QuakeMovement shows a window with unidentifiable content.
05:41:18 <Janni> well, it seems like GLUT doesnt work with the demos. because all example programs show empty (pseudo-transparent) windows.
05:41:38 <Janni> or they dont work at all (as aalib does)
05:41:48 <Janni> s/aalib/aaindex
05:42:36 <Janni> "GLUT: Fatal error in aaindex: visual with necessary capabilities not found"
05:43:26 <Janni> well, thx. i'll try to compile that thing somehow, so that these demos work.
05:56:03 * shapr got distracted
05:56:09 <shapr> :-(
06:42:01 <Janni> re. its me again with my HOpenGL problem.
06:42:14 <Janni> now i almost know, what the problem is.
06:42:55 <Janni> i tried compiled a _little_ GL C program using GLUT which just opens a window and shows a primitive
06:43:29 <Janni> when i run the program i just get a window with really messy content
06:43:47 <Janni> it seems to project the video memory into the window somehow
06:44:00 <Janni> (i can identify my background-image)
06:44:37 <o3> Janni: so it's not a hopengl-specific problem?
06:44:59 <Janni> o3: exactly. sorry, i'm already away :)
06:45:14 * Janni is stupid
06:45:35 <o3> :)  just don't see how we can help if GLUT/OpenGL is the problem
06:45:35 <o3> i don't know anything about freebsd
06:49:34 <Igloo> Hmmm, GHC seems to be unbuildable
06:49:38 * Igloo looks paranoid
06:50:25 <o3> Igloo: ?
06:50:38 <o3> i wonder how much simon marlow is going to hate me after reading my mails :)
06:50:59 <Igloo> What mails?
06:51:28 <o3> sent some emails to ghc-users about modifying various ghc options ...
06:51:31 <Igloo> Oh, I'm being confused by not being able to get error codes when piping into tee again
06:56:44 * seth is back (gone 06:14:19)
07:10:07 <shapr> y0
07:10:19 <dark> Greetingses
07:10:34 <mgoetze> 'ello
07:11:21 <shapr> wassup?
07:11:27 <dark> Not much :)
07:11:35 <dark> I've been wondering about various uses of SDL events.
07:12:18 <dark> One thing my current model doesn't support is throwing user events from a C module.  It assumes that user events contain packages Haskell values.
07:12:30 <dark> s/packages/packaged/
07:14:57 <Janni> re
07:15:41 <shapr> y0
07:15:49 <shapr> any improvement or change?
07:15:50 <Janni> if someone wants to know... i solved the problem. the window only contain mess until the glut programs are not complied with "-pthread"
07:15:58 <shapr> hm
07:16:18 <Janni> i don't know why, perhaps because of freebsd
07:16:25 <Janni> im just searching the web
07:16:35 <shapr> I think it's because OpenGL isn't thread safe
07:16:41 <shapr> well, not exactly that
07:16:55 <Igloo> Grrr, bash in an xterm doesn't like home and end, but bash in an rxvt or zsh in an xterm do
07:16:55 <Janni> i hope if i get HOpenGL compiled with the -pthread trigger it will work...
07:17:11 <shapr> whichever OS thread initialized OpenGL needs to be the only OS thread that makes OpenGL calls
07:17:13 <Janni> Igloo: you have to edit .inputrc
07:17:21 <shapr> Igloo: why is that?
07:17:27 <Janni> Igloo: i give you mine
07:17:28 <shapr> I can't use emacs keys in xterm
07:17:33 <Igloo> Janni: Why?
07:17:39 <Igloo> shapr: That is a good question  :-)
07:18:09 <Janni> Igloo: .inputrc is used by readline
07:18:15 <Janni> Igloo: and... err....
07:18:23 <Igloo> Janni: But why does it work in an rxvt?
07:18:26 <Janni> Igloo: it worked, when someone told me :)
07:18:34 * Igloo reads the man page to find the list of key bindings
07:18:53 <Janni> Igloo: they use different key codes, or something like that
07:19:01 <shapr> hm
07:19:18 <shapr> actually, zsh in an xterm doesn't work here
07:19:34 <Janni> you have to declare ""\e[1~": beginning-of-line" as well as ""\e[7~": beginning-of-line"
07:19:35 * mgoetze uses zsh in rxvt.
07:20:03 <Janni> and '"\e[4~": end-of-line' and '"\e[8~": end-of-line'
07:20:30 <Igloo> Ah, one has \eOH and one has \e[7~ for b-o-l
07:20:40 <Igloo> I suspect this is due to termcaps and things
07:20:41 <Janni> yes
07:21:13 <Janni> i'd say, because readline on terminal emulators is fucking shit! ;)
07:22:22 <dark> I don't think termcaps will ever converge.  Every fix breaks something else, and for more than a decade people have just been pushing the problems around.  I would much prefer stable brokenness to this moving brokenness.
07:22:31 <Janni> i still didn't manage to let less in aterm scroll up to the top on hitting the home-key
07:22:33 <Igloo> The appropriate files in /etc/terminfo/ would seem to back this up
07:23:39 <Igloo> zsh gets ^[[H for xterm too, which presumably makes it work
07:23:45 <Janni> well, i'll go and try to get that HOpenGL working. cu
07:25:24 <dark> I've been thinking of buying a kuro5hin ad to point at haskell.org, but I can't think of a good text.
07:25:43 <mgoetze> dark: and an lwn ad, please! :)
07:26:05 * shapr creates evil keyboard macros in emacs
07:26:26 <dark> mgoetze: I don't hang out there.
07:26:43 <mgoetze> dark: you should :)
07:26:50 * shapr likes the slogans in the topic
07:27:03 * shapr is biased
07:33:55 <dark> shapr: The mo 'nads one has cultural translation problems :)
07:34:23 <shapr> truly it does
07:46:01 <Igloo> Aha, the testing bash and xterm work together
09:05:13 * shapr grumbles
09:05:39 <shapr> the tabs vs spaces thread continues on the mailing lists
09:06:21 <shapr> is nicolas oury on this channel, or is he building his own SDL binding?
09:07:11 <shapr> ah, it looks like he's building his own binding.
09:07:37 <jak_> shapr, can you post a link?
09:08:03 <shapr> he mentioned it on ghc-users
09:08:10 <shapr> I haven't seen a link
09:09:36 <shapr> google doesn't turn up anything either
09:10:20 <shapr> dark: do you have a more recent tarball online? mind if I send the url of your current tarball to Nicolas Oury?
09:30:08 <shapr> hmm
09:30:20 <shapr> what's "remove" in swedish?
09:30:27 <andersca> ta bort?
09:31:10 <shapr> I'm trying to give XF86Config-4 advice, can I say 'kanske ta bort Section "DRI"' ?
09:31:29 * shapr suspects some verb conjugation needs to happen in there somewhere
09:42:02 <ludde> in what context?
09:42:14 <ludde> ta kanske bort Section "DRI" sounds probably better
09:42:17 <ludde> or
09:42:26 <ludde> du kan kanske ta bort Section "DRI"
09:43:05 <ludde> or
09:43:12 <ludde> ta bort Section "DRI", kanske
09:43:13 <shapr> oh, I see
09:43:49 <shapr> that means that kanske probably fits into the same place in a sentence as också
09:43:50 <shapr> neat
09:44:05 <shapr> thanks!
10:26:12 <whee> oh man
10:26:18 <Janni> me again...
10:26:25 <shapr> hi Janni
10:26:34 <whee> I just converted one of my ocaml programs to haskell and it's under 1/3 of the size
10:26:41 <whee> slower, though
10:27:01 <shapr> whee: might be able to speed it up with some strictness annotations
10:27:16 <whee> yeah, that's what I was thinking this morning
10:27:45 <shapr> number one bit of advice with making Haskell speedier, use the profiler
10:27:48 <whee> I'll have a go at speeding it up when I get home, should be fun :P
10:27:50 <shapr> Janni: progress?
10:28:00 <Janni> now i've compiled everything by replacing gcc in the Makefiles by gcc -pthread. (I know, its evil) and the C-examples all work. But, all the Haskell examlpes dont. because there is no pthread switch for ghc :(
10:28:20 <shapr> playing with the lazy part of Haskell is a blast... I've never had that opportunity in any other language
10:28:36 <whee> also, stupid question
10:28:42 <shapr> Janni: have you read the archives of the HopenGL mailing list?
10:28:45 <shapr> there's some good stuff in there
10:28:57 <shapr> one bit of advice is to specify the GLUT version with configure
10:29:10 <Janni> shapr: i did
10:29:20 <Janni> shopr: but i'll read some more
10:29:28 <whee> I have a list of objects which I convert into a FiniteMap. what's the best way to find out how many objects I started with (there may be duplicates, so the size of the FM isn't going to work)
10:29:29 <shapr> btw, what hardware and drivers are you using?
10:29:42 <shapr> length?
10:29:46 <whee> assume there's so many objects that length is slow and bad
10:29:51 <shapr> oh
10:29:57 <shapr> I dunno
10:29:59 <whee> is there some way I can use a monad?
10:30:07 <shapr> yah, you could use a statemonad
10:30:18 <shapr> then you could increment the count while you're putting stuff into the FM
10:30:43 <whee> mkay
10:31:01 <Janni> shapr: well, i have a voodoo 3, but i havent set up 3d hardware support for it. i didn't need it yet
10:31:13 <Janni> shapr: but that shouldn't be a problem yet
10:31:38 <shapr> I had to use the nvidia GL headers since I'm using the nvidia binary drivers on Linux
10:31:44 <shapr> just wondered if that would make a difference for you
10:34:23 <Igloo> shapr: What package are they in?
10:36:31 <Janni> cu. have to go reading that archive...
10:48:40 <Janni> re. i think i found the solution in the mailing list. everything i have to do is to `LDFLAGS="-pthread" ./configure`. i'm just recompiling. and _hoping_...
10:50:52 <Janni> i wonder if anybody is working on a HOpenGL-port for FreeBSD (i assume you know, what a port in *BSD is)
10:51:07 <SyntaxPolice_> greetings :) I would like to construct a double that is really small, smaller than anything that will happen normally in my program...
10:51:19 <SyntaxPolice_> -inf is something that I see in HUGS when I give it a really small number
10:51:26 <SyntaxPolice_> but it does not seem to be a proper symbol.
10:51:29 <SyntaxPolice_> any suggestions.
10:51:29 <SyntaxPolice_> ?
10:51:45 <aps> Janni: ghc has an -optl flag, which can be used to give extra arguments to the linker.. perhaps useful in this case?
10:52:31 <SyntaxPolice_> Janni: good to hear that you solved your problem.  it would be cool if there were a port for it.  I am planning to build debian packages for various Haskell stuff.
10:53:01 <Janni> aps: ok. but i think LDFLAGS is _the_ solution
10:53:35 <Janni> aps: otherwise i had to change Makefiles and so on...
10:55:03 <Janni> brb
10:55:45 <shapr> SyntaxPolice: I think that's an IEEE thingy
10:56:08 <shapr> double precision floats can only represent a certain range of floating point numbers
10:56:41 <shapr> which are described by ... I think eleven bits of exponent, one bit of sign for the exponent, and fifty-three bits of mantissa
10:58:01 <shapr> there are several consequences of the IEEE representation, for one thing, many floating point numbers can't be represented exactly, only close
10:58:15 <Janni> well, i'll be back, when HOpenGL is compiled and i can report the next problem :)
10:58:16 <SyntaxPolice_> shapr: I think that w/ IEEE I could say 3 < infinity and would get a meaningful answer
10:58:22 <shapr> yah, should be
10:58:23 <SyntaxPolice_> Janni: good luck
10:59:12 <shapr> oh, I see, you want to create -inf
10:59:26 <SyntaxPolice_> shapr: yeah :)
11:00:44 <shapr> hm
11:03:04 <shapr> I thought I saw a way to do that ...
11:04:06 <SyntaxPolice_> hmm, I can say (read "Infinity")
11:04:22 <SyntaxPolice_> (or -Infinity)
11:06:06 <SyntaxPolice_> in ghc, but not in hugs, it seems.
11:07:28 <SyntaxPolice_> 1/0 works too
11:07:33 <SyntaxPolice_> (in ghc)
11:14:31 <Janni> me again :(
11:15:28 <Janni> same problem as before "LDFLAGS=-pthread" passes -pthread to ghc which doesnt know that option. someone here told me, how to let ghc pass an option to the linker...
11:15:44 <Janni> could that person repeat that advice please?
11:16:06 <SyntaxPolice_> <aps> Janni: ghc has an -optl flag, which can be used to give extra arguments to the linker.. perhaps useful in this case?
11:16:13 <Janni> thx
11:16:42 <Janni> i'll go now and have another try...
12:50:10 <ludde> what is the average number of bits one has to read from a random bit stream to determine that it's not a stream that alternates between 0 and 1.
12:50:50 <Igloo> 3, probaly
12:51:03 <ludde> how did you get that?
12:51:08 <kev> depends on the probability distribution, surely?
12:51:18 <Igloo> Random
12:51:22 <ludde> kev: it's completely random
12:51:24 <kev> 3 is the minimum
12:51:38 <Igloo> With a bit of intuition
12:51:44 <Igloo> So I'm probably wrong  :-)
12:51:53 <ludde> Igloo: I think you are right
12:51:54 <Igloo> 00 or 11 is sufficient
12:52:01 <kev> erm..
12:52:03 <kev> oh, yeah
12:52:07 * kev looks stupid
12:52:12 <ludde> ?
12:52:36 <ludde> Igloo: how do you get 3 from that
12:53:07 <kev> probably from probability
12:53:08 <Igloo> Yeah, I think I am. It's the degenerate of the binomial distribution, so you get np = 2 plus the one to start with
12:53:25 <kev> each number is either 1 or 0 with prob 0.5
12:53:25 <Igloo> ludde: The sequences of length 2 were in answer to < kev> 3 is the minimum
12:53:45 <kev> and is totally independant of the previous values
12:54:03 <Igloo> I don't mean np. Grrr.
12:56:16 <Igloo> You have np = 1 where p is the probability of getting the wrong one = 0.5 which means n = 2. My brain isn't working tonight.
12:56:16 <kev> the question basically asks, what's the number of bits you need before the probability of getting a 00 or a 11 is significant
12:56:42 <ludde> P(n) = 1/2^(n-1)
12:56:45 <ludde> sum(P(n)*n, n=2..infinity)
12:56:50 <ludde> = 3
12:56:56 <ludde> is that right?
13:00:29 <Igloo> Think so
13:01:45 <kev> yeah, looks it to me
13:03:00 <ludde> could you explain it?
13:03:46 <kev> P(n) is the probability of getting a 01010101 sequence when you have n entries
13:03:56 <ludde> yep
13:04:04 <kev> and as a converse, is also the probability of getting a 11111 or 00000 sequence
13:04:30 <ludde> yeah
13:04:34 <Igloo> Yes, alternating is a misnomer - it's just right or wrong
13:04:49 <Igloo> Which is why thinking about it as a simple binomial works
13:05:10 <ludde> oh
13:06:31 <kev> I'm sure one day I'll actually remember that stuff in my head
13:06:45 <ludde> i don't understand the *n in the sum
13:06:46 * Marvin-- is reading about cool stuff
13:07:01 <andersca> Marvin--: what what
13:07:16 <Marvin--> Possibilities and Limitations of Call-by-Need Space Improvement
13:07:19 <Igloo> The sum line is just the definition of expectation
13:07:27 <Marvin--> (Jörgen Gustavsson and Dave Sands)
13:08:01 <ludde> Igloo: ok..
13:08:11 <ludde> Igloo: I'd also need to generalize this to N bit streams.
13:08:31 <ludde> Igloo: what is the probability that neither of N bit streams produce alternating 0-1
13:08:41 <ludde> Igloo: err
13:08:50 <kev> isn't that the same question?
13:08:52 <ludde> Igloo: how many steps do I have to observe to know that neither of N bit streams produce alternating 0-1
13:09:06 <ludde> kev: it is?
13:09:37 <ludde> kev: I made a brute force program, with 1 bit stream, it gave me the result 3, with 192 bit streams, it says 9.93.
13:09:59 <ludde> so i think something is different.
13:10:15 <Igloo> Is that from a single run?
13:10:33 <ludde> Igloo: no, average of 10000 runs
13:10:47 <Igloo> Oh, 9.93 from a single run would be silly
13:10:55 <Marvin--> Igloo :)
13:11:50 * Igloo decides this is rather less trivial and my brain can't cope with it right now
13:12:18 * kev presumes it's to do with the principal of E[XY] being E[X]E[Y]
13:12:55 * kev really should go do his own assignment
13:13:17 <Heffalump> only if X and Y are independent
13:13:43 <kev> Heffalump: yeah, and they're not if the bits are distributed over the bitstreams
13:19:51 <SyntaxPolice_> gabriel: a good intro to Haskell is the Gentle Introduction which I recommend reading alongside the manual for Hugs (an interpreter).  See www.haskell.org for various stuff.
13:53:38 <Marvin--> damn it, this paper is getting me interested in space complexity
14:15:36 <seth> Who did that?
14:15:38 <seth> :)
14:16:05 <seth> I got the topics for all my channels dumped onto the #haskell channel.  Strange.
15:23:07 <whee> bah, linking is failing with -prof in ghc
15:23:16 <whee> ld: Undefined symbols:
15:23:16 <whee> _TextziReadziLex_Char_con_info
15:23:19 <whee> _DataziDynamic_Dynamic_con_info
15:23:40 <whee> any ideas?
15:42:15 <jak_home> there's ain irony
15:42:21 <jak_home> s/ain/an
15:42:47 <jak_home> ghc 5.04 on redhat 8.0 appears to compile the SDL bindings without a problem
15:42:53 <jak_home> Mandrake 9.0 wouldn't have it
15:43:03 <whee> heh
15:43:07 <jak_home> apparently this was supposed to be due to gcc 3.2, but rh8 also has 3.2
15:43:22 <whee> wish I could figure out how to get profiling to work :\
15:46:46 <jak_home> going to try it with ghci now
15:47:14 <Chilli> Moin
15:47:21 <hdaume> hi chilli
15:48:17 <Heffalump> 'lo
15:49:37 <jak_home> that's totally cool
15:49:39 <jak_home> it works with ghci also
15:51:53 <jak_home> good work dark
15:53:12 <jak_home> wooo
15:53:23 <jak_home> ghc-5.04.2: fatal error: scavenge_stack: weird activation record found on stack: 38588
15:53:51 <Heffalump> congratulations
15:55:25 <jak_home> good night!
15:55:33 <dark> jak: Thanks :)
15:56:57 <whee> can someone with ghc compile something simple with ghc -v3 -prof and tell me what libraries it links against?
16:03:56 <hdaume> whee: -lHShaskell98_p -lHSbase_p -lHSbase_cbits -lHSrts_p
16:10:34 <whee> :|
16:11:02 <whee> these symbols should be defined in those
16:11:37 <hdaume> :)
16:30:03 <whee> and taht is extremely interesting
16:31:10 <whee> these symbols are indeed not defined in the profiling version of the libraries, although they are in the normal versions
16:31:49 <whee> libHSbase, to be exact :|
16:33:24 <hdaume> what symbols?
16:33:35 <whee> _TextziReadziLex_Char_con_info and _DataziDynamic_Dynamic_con_info
16:33:46 <whee> I can't use -prof, getting a linker error with those being undefined
16:36:26 <hdaume> that's frustrating :)
16:38:14 <whee> indeed
16:46:53 <whee> pretty odd how it manages to compile things with -prof during the ghc build process though
17:06:49 <whee> haha, down to one undefined symbol
20:52:48 <whee> :(
20:53:10 <whee> clean build of haskell and I still get the linker error when trying to compile things with profiling
23:31:28 * seth is away: Don't say anything until I get back.
