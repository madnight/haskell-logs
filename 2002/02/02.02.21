06:13:05 * Grimace is away: down the pub
06:16:45 <Heffalump> hard working student, eh? :-)
10:43:55 * Grimace is away: continued idleness
11:48:47 <nodie> hi
11:48:54 <Heffalump> hi
11:49:37 <nodie> could a haskell program touch it's own code?
11:50:07 <Heffalump> nope
11:50:18 <Heffalump> well, not without a *lot* of work
11:50:54 <nodie> hummm
11:51:17 <nodie> i'm reading about genetic programming
11:51:27 <nodie> and code modification is nedded
11:51:33 <nodie> lisp can
11:51:38 <nodie> and
11:51:46 <Heffalump> well, you could define a sort of embedded language that did get modified
11:51:48 <nodie> haskell cannot?
11:52:23 <nodie> ok
11:52:29 <Heffalump> you can't write a haskell program that runs and changes its own code while doing so
11:52:39 <Heffalump> but you definitely could implement genetic algorithms
11:53:17 <nodie> not genetic algorithms
11:53:23 <nodie> genetic programs
11:53:36 <nodie> it's not the same
11:53:40 <Heffalump> ah, right
11:53:53 <nodie> a genetnic algorithm  works with data
11:54:06 <nodie> a genetnic program  works with programs codes
11:54:50 <nodie> and requires code modification
11:55:09 <nodie> i'm thinking
11:55:15 <Heffalump> but you could use Haskell to define an interpreter for another language
11:55:22 <Heffalump> and then write genetic programs in that language
11:55:33 <nodie> in an haskell interpreter in a haskell program...
11:55:43 <Heffalump> sorry?
11:56:11 <nodie> ok :)
11:56:22 <nodie> it's an interesting area
11:57:33 <nodie> i have read something of this in haskell mail list
11:57:52 <nodie> but they called it : refractory code
11:57:58 <nodie> or something like that
11:59:24 <nodie> a haskell program that make modifications over an another haskell code and then run it
11:59:35 <nodie> in a haskell interpreter
12:03:04 <nodie> bye
13:32:23 * Logan thinks he'll try haskell for some image processing.
13:35:00 <Logan> Except I can't get to that gif writing module.
13:39:44 <Logan> I suppose I could generate something like an xpm easily enough. :P
