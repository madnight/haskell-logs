03:02:07 <shapr> ahem
03:02:11 * shapr awakens
03:02:27 <shapr> whew
03:04:13 <discobob> shapr: have you tried running any of example School of Expression sources?
03:04:26 <shapr> um, no
03:04:33 <shapr> have you found problems?
03:05:02 <discobob> ya
03:05:24 * shapr tries to remember where the SOE homepage is
03:05:29 <discobob> most of them won't run. They're missing the same 'Exception' module
03:05:57 <shapr> I didn't know that
03:05:58 <discobob> the hugs homepage has the sources I'm talking about
03:06:05 <discobob> www.haskell.org/hugs
03:06:20 <shapr> have you checked on the LotyWiki to see if anyone else is having those same problems?
03:06:31 <discobob> I've not ruled out the possiblity that I'm being a totall moron about something.
03:06:43 <discobob> nope, I will now thu...
03:07:04 <discobob> http://haskell.org/wiki/wiki?HaskellIrcChannel <-- right?
03:08:15 <discobob> hmm, a search didn't turn up anything.
03:08:53 <shapr> er, I was talking about the other one, for #loty
03:09:03 <shapr> lemme get the url
03:09:26 <shapr> http://pragmaticprogrammer.com/cgi-local/pragprog?RecentChanges
03:10:25 <discobob> thanks
03:10:43 <shapr> that might help :)
03:11:26 <shapr> oh hey
03:11:37 <shapr> I just found two Exception libs on my drive
03:12:18 <shapr> it seems that I have one that is for ghc, and one that could be for hugs
03:14:00 <discobob> where's it located?
03:14:22 <shapr> I have one that is part of the ghc5 source (I grabbed it from CVS)
03:14:26 <discobob> nope, nothing on the loty wikki that talks about it .
03:14:34 <shapr> and I have another one that Heffalump sent me as part of a program he wrote
03:14:41 <discobob> hmmm
03:14:46 <shapr> that second one might be for hugs, lemme look
03:14:51 <shapr> if it is, I'll mail it to you
03:15:00 <discobob> what's odd, is that they where all made for Hugs.
03:15:56 <discobob> thanks, my email addr. is discobob@rootdown.net
03:18:01 <shapr> hrm, I don't know if either of these will work for hugs, but I'll email 'em
03:18:26 <discobob> ok
03:22:03 <shapr> awright, sent
03:23:38 <discobob> got 'em
03:25:30 <discobob> Reading file "C:\PROGRAM FILES\HUGS98\lib\Exception.lhs":
03:25:30 <discobob> Reading file "PrelGHC":
03:25:30 <discobob> ERROR PrelGHC - Unable to open file "PrelGHC"       
03:25:54 <discobob> and with the .hs
03:25:55 <discobob> Reading file "C:\PROGRAM FILES\HUGS98\lib\Exception.hs":
03:25:56 <discobob> Parsing
03:25:56 <discobob> ERROR C:\PROGRAM FILES\HUGS98\lib\Exception.hs:1 - Syntax error in declaration (
03:25:56 <discobob> unexpected symbol "copies")                
03:27:06 <discobob> hmm
05:18:42 <shapr> hi smkl 
05:18:44 <shapr> what's up?
05:19:03 <smkl> hmm, nothing
05:19:15 <shapr> learned anything nifty lately?
05:20:17 <smkl> nope. done no coding this year
05:21:06 <Heffalump> shapr: I sent you an Exception library?
05:21:09 <Heffalump> oh, the one in mag. right.
07:34:28 <shapr> hi sjanes71 
07:34:31 <shapr> what's up?
07:34:36 <sjanes71> oh busy month
07:34:51 <sjanes71> my dot-com finished it's DBO
07:35:20 <sjanes71> Dot-Bombing Officially.
07:35:29 <sjanes71> I'm on severance for the next two months.
07:36:03 <shapr> that sucks :(
07:36:12 <sjanes71> Yeah.
07:36:38 <sjanes71> The next week or so will tell whether or not we're going to build a new company out of the ashes.
07:39:02 <shapr> what did your company do?
07:39:17 <sjanes71> Netword, Internet Keywords
07:39:20 <sjanes71> netword.com
07:39:43 <sjanes71> It's a ghost site now... well, I'm still maintaining it for a bit.
07:41:12 <shapr> hm, the mysql server is barfing :(
07:41:22 <sjanes71> :(
07:41:29 <sjanes71> which one?
07:41:34 <shapr> I put "haskell" into the networds box
07:41:43 <shapr> trademarks.netword.com
07:41:51 <sjanes71> hmm
07:43:48 <Heffalump> shapr: btw, did you see what I said about the type of that foldl you wanted to use above?
07:44:02 <shapr> er, no
07:44:20 <shapr> Heffalump: was that from yesterday's joy <-> haskell discussion?
07:45:30 <Heffalump> [14:53] <shapr> foldl ((\a b -> (a,b))) 1 [2..4]
07:45:31 <Heffalump> etc
07:46:00 <shapr> yah, that's the guy
07:46:34 <Heffalump> it's not possible
07:46:59 <Heffalump> suppose the list was xs, instead of [2..4]
07:47:08 <Heffalump> what type do you think the overall result of foldl should have?
07:48:05 * shapr cranks out of python-mode
07:55:13 <sjanes71> Pesky mysql servers.
07:55:34 <sjanes71> You'd think after running for 377 days straight they'd stay up a little longer. :)
07:55:47 <yusri> hmmm... joy
07:55:54 <yusri> I've started looking into that, shapr
07:55:57 <yusri> looks interesting
07:56:16 <shapr> yusri: I'm glad you find it interesting :)
07:56:47 <yusri> takes some getting used to, i think- but I think i'll have a go
07:56:51 <shapr> Jewel and Igloo and I occasionally discuss it on #functional
07:57:00 <shapr> want me to send you some code jewel and I wrote?
07:57:08 <yusri> You wouldn't happen to have any programs I could look at to try to figure out, would you?
07:57:15 <yusri> you read my mind!
07:57:19 <shapr> yay!
07:57:33 <yusri> sure, I'd love that
07:57:38 <shapr> what's your email again?
07:57:44 <yusri> codedbliss@home.com
07:57:50 <yusri> lemme check and see it's still working
07:57:55 <yusri> (switch in progress)
07:57:57 <shapr> ok
07:58:42 <yusri> yep, good to go
07:59:50 * shapr whips up an email with useful links
08:00:07 <shapr> are you aware of the concatenative yahoogroup?
08:00:39 <yusri> no, but I'll join it
08:01:02 <yusri> concatenative programming is a new concept to me- as a matter of fact, you're the first person to point it out
08:01:09 <shapr> it's new to me also :)
08:01:14 <yusri> fun!
08:01:30 <shapr> seems like a joy discussion is about to start up on #functional, wanna drop by?
08:01:53 * shapr offers yusri another hit of that irc drug
08:01:56 <shapr> ;)
08:02:10 <sjanes71> my first feeling about concatenative programming is "Lisp without any parens and other things" :)
08:02:28 <shapr> that's kind of true
08:02:41 <yusri> sure
08:02:44 * yusri grins
08:03:36 <sjanes71> Time to make some coffee.
08:54:45 <shapr> Heffalump: any idea if Igloo is awake?
08:54:56 <Heffalump> yes
08:57:10 <hcf> shapr: give me a go-ahead
08:57:37 <yusri> yah, let me know when it's good to join again
08:57:47 <shapr> yusri: ok, we're up :)
08:58:35 <shapr> Igloo: ahem, you're wanted again ;)
08:59:46 <Igloo> Yay!
08:59:58 <Heffalump> Yay?
09:00:07 <Igloo> < shapr> Igloo: ahem, you're wanted again ;)
09:00:14 <Heffalump> ah
09:00:15 <Heffalump> :-)
12:24:46 <Heffalump> gah, shapr went
12:25:18 <yusri> yeah
12:25:23 <yusri> and I wanted to ask him a question, too
12:25:32 <yusri> bah.
12:25:41 <yusri> maybe you know... hmmm
12:26:14 <yusri> Know anyway to serialize Haskell datastructures (lists, etc) and dump to a file, and then be able to reload
12:26:27 <yusri> marshalling
12:27:08 <Igloo> You probably want something based on show and read
12:27:28 <yusri> ture
12:27:31 <Heffalump> do you want to do it in binary or text format?
12:27:32 <yusri> true, even
12:27:38 <Igloo> You can't do exactly what you might be thinking of though as you can't have the "variable" names read in
12:27:38 <yusri> doesn't matter
12:27:43 <yusri> I just want persistence
12:28:43 <yusri> I want to be able to store complex datastructures (lists of lists, etc) to a file and reload- the name of the variable isn't important
12:29:03 <yusri> This is similar to the pickle/cPickle module of python
12:29:22 <yusri> Ruby has an XMarshal module that stores in XML which is quite useful
12:29:53 <yusri> obviosuly you cant store ALL objects, but I'm mainly talking lists/hashes of Int, Float, and String here
12:30:47 <Igloo> something like writeFile "foo" (show whatever)  to write it and x <- readFile foo; let x' = read x :: TheType   or let x = readFile "foo" >>= read :: TheType I think
12:31:55 <yusri> hmmm
12:32:03 <yusri> I'll have to try that, tks
13:11:16 <c7g> hi all
13:11:28 <c7g> anyone knows a good url to begin in haskell programming ?
13:11:34 <c7g> with examples
13:11:42 <c7g> step by step explaining the language...
13:11:43 <c7g> ?
13:11:59 <c7g> less haskell.org
13:12:00 <c7g> =)
13:12:02 <c7g> heh
13:17:50 <Logan> http://haskell.cs.yale.edu/tutorial/
13:18:07 <c7g> Logan ThanX a Bunch!!!
13:45:59 <Logan> I need a good project to work on.
17:04:50 <jemfinch> does anyone find it strange that there are no sml-nj packages for debian?
17:16:20 <xbill> jemfinch: there were
22:08:20 <water> hi :)
22:08:30 <lesner> hi
22:09:23 <water> hm i suppose i am a haskell newbie still, although i barely grok monads :)
22:09:42 <water> do any of you guys get to use fpl's at your jobs?
22:10:21 <lesner> not me yet
22:10:52 <water> hm the closest i get to use is perl and smalltalk for now
22:11:07 <lesner> what do you do ?
22:11:54 <water> server-side software of various kinds
22:12:04 <water> e-commerce mostly
22:12:39 <water> i'm a young'un, though :)
22:12:41 <lesner> if it's serverside than any language will do, no? (as long as it talks the clients interface.)
22:13:10 <water> right, but the bosses don't want us using uncommon languages unless they have a clear advantage
22:13:49 <water> and i have to agree, but then i know i won't get sacked
22:14:56 <lesner> what have you done in haskell?
22:15:17 <lesner> or want to do?
22:15:21 <water> not much, but it's interesting to play with
22:15:47 <water> my main objection to using it is the often unbounded time-complexity of the lazy evaluation
22:16:02 <lesner> what about it is interesting? how did you learn of it?
22:16:32 <water> well i learn about all sorts of languages on my own interest
22:16:37 <lesner> "unbounded" = what do you mean?
22:17:00 <water> i mean i can't just call a function and know how long it's going to take
22:17:38 <water> and it bugs me that i have to write functions for pattern-matching order
22:17:41 <lesner> is that not true for all languages?
22:18:36 <water> somewhat
22:18:50 <water> but i've never seen a big application in haskell, either
22:19:58 <lesner> it's calling the stopping problem : you know what I'm refering to?
22:20:50 <water> similar to the halting problem but for algorithm complexity?
22:21:01 <lesner> haskell compiler, fudgets window toolkit, wwwbrowser, are all fairly big
22:21:14 <lesner> compiler = ghc
22:22:05 <water> yeah i've heard of all those
22:22:26 <lesner> stopping = halting, yeah. so I don't why you said that's your beef about haskell.
22:22:45 <lesner> s/why/get why/ :-)
22:23:13 <water> well it just seems to be less intuitive to reason about than say smalltalk
22:24:08 <lesner> could that depend on who is doing the reasoning? :-)
22:24:27 <water> well it's the seeming that indicates who the reasoner is :)
22:25:06 <water> actually i use a lot of languages that no one's heard of
22:25:19 <lesner> like? why?
22:25:21 <water> because i work on that damnable tunes project
22:25:32 <lesner> tunes?
22:25:33 <water> like joy and maude and common lisp
22:25:44 <water> tunes.org
22:28:51 <lesner> how did you get involved in tunes? what role do you play?
22:29:33 <water> i do research and prototype coding in squeak for now. i want to go back to school and get a phd for it
22:31:27 <lesner> so tell my why is tunes the next thing?
22:32:24 <water> basically because the world needs a high-level environment that can compete with the rest of the industry in ways that they can't comprehend
22:33:25 <lesner> my initial feeling is that this is a pie-in-the-sky type of project... I'm still browsing the site however....
22:33:40 <water> well i did not write the site docs
22:33:59 <water> and i basically disagree with the project leader's attitudes
22:34:14 <water> chances are i would just do my research as a separate project
22:35:12 <lesner> so what exactly is the goal? I'm confused by the site.
22:35:26 <water> ah
22:35:34 <water> i can't blame you
22:35:46 <lesner> so what exactly is the goal? I'm confused by the site. -> what's wrong with current OS's?
22:35:56 <water> oh!
22:36:29 <water> well without focussing on specific things, what we're saying in general is that high-level semantics are not free of low-level systems programming
22:37:38 <lesner> can you put that plainly or give me an example?
22:37:38 <water> and there are specific things we'd like to see in systems software that we can only get with some of the stringent expectations of tunes
22:40:56 <lesner> the project has a vey wholistic feel... I wonder if the person that wrote the docs realizes that the devil is in the details 
22:41:23 <water> yes he does
22:41:54 <water> unfortunately he is not up to tackling the devil, so i have been educating myself to get there
22:42:39 <lesner> research groups + commitees spend like years working out the details of simple protocols (ever read RFC's?) 
22:43:29 <lesner> no. the docs read like they were written by a well intending pointy haired boss :-)
22:44:25 <lesner> so what exactly do you want to do? (given that it's not what the tunes site says?)
22:44:34 <lesner> s/says?/says/g
22:44:52 <water> brb
23:01:58 <lesner> David Madore's page makes _ALOT_ more sense.... it answered most the questions I had for you. He's right. Fari ([10]Frangois-Reni Rideau) can't express him self in writing... 
23:03:14 <lesner> you know the tunes idea sound alot like plain unix just on a higher level.... 
23:07:46 <water> back
23:08:01 <water> somewhat, yes
23:08:15 <water> and i do have the original unix paper :)
23:10:36 <lesner> so why is tunes not an app under unix?
23:10:44 <water> heh
23:11:07 <lesner> i mean like deliver the functionallity first no?
23:11:13 <water> ohh
23:11:23 <water> sure that's how we'd start out
23:11:34 <water> right now i run my code in squeak
23:11:43 <lesner> then worry about the details
23:11:48 <water> mostly using smalltalk as a documentation language
23:11:49 <lesner> what doe syou code do?
23:12:21 <water> right now it implements a lisp augmented with relational algebra and some other strange features
23:12:24 <lesner> or better: what do you want your code to do?
23:12:33 <water> ok
23:13:26 <water> my current path is to take it to the level where it can do what maude can do... specification and execution of algebraic rewrite specifications
23:13:47 <lesner> so like what would this mean to a man on the street. why should he leave windows for tunes or the functionality of tunes as you're implementing it..... maude?
23:14:03 <water> maude is a programming language, fyi
23:14:24 <water> hold on a sec
23:14:56 <water> ok here's what i tell people in person
23:15:56 <water> normally you get an operating system to run your computer. tunes is a *co*-operating system... you can have effectively a conversation with it to adapt it to the way you express things without sacrificing performance or the ability to communicate your ideas to others
23:16:40 <water> how does that come across?
23:16:55 <lesner> sounds like a pitch for emaccs :-)
23:16:59 <water> lol
23:17:10 <water> except i hate implicit dynamic scoping ;)
23:17:19 <water> (among other elisp features)
23:18:41 <water> i also would say that normal programming languages elevate certain types to have literal values, but that there are ways to adapt systems to allow any types one thinks of to be elevated to be literal
23:18:59 <water> which is part of that whole rant about reflection on tunes.org
23:19:30 <water> i actually don't use the word reflection when explaining tunes to people. it just makes their eyes glaze over (for better or for worse :)
23:19:59 <lesner> my eyes are glazed.
23:20:03 <water> damn! :)
23:20:32 <lesner> reflection == emulation ?
23:20:38 <water> i also read some very hard-core philosophy to keep my head out of the programmer's mindset
23:20:44 <water> yeah, i knew it :P
23:21:09 <water> reflection is meta-circular evaluation and bootstrapping, along with manipulating one's implementation
23:21:29 <water> if you want, you should stop by #tunes and ask me questions there
23:21:43 <lesner> THAT was the very first think that came to my mind when I started reading tunes.org.... This bloody think reads like a philosphy paper!
23:21:44 <water> btw the clog logger is hosted on tunes.org :)
23:21:52 <water> yeah
23:21:56 <water> actually...
23:22:14 <water> the way fare writes if you read the html source is like an epic poet =)
23:22:21 <lesner> s/think/thing/
23:22:58 <lesner> so you want me to /j #tunes ?
23:23:12 <water> well not now, i am about to go entertain myself and some friends
23:23:26 <water> but i am there most days
23:24:28 <water> later
