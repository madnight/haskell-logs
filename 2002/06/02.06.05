08:56:10 <J0hn> hi
08:56:17 <J0hn> somebody could help me?
09:05:29 <J0hn> code4 = do dd <- code3
09:05:29 <J0hn>            do dde <- code3
09:05:29 <J0hn>                digit
09:05:29 <J0hn>                ddd <- many (do digit)
09:05:29 <J0hn> 	       q <- code5
09:05:29 <J0hn> 	          return (q : "ss")
09:05:47 <J0hn> ERROR "prog":55 - Last generator in do {...} must be an expression
09:05:58 <J0hn> any ideas?
09:08:57 <dennisb> fix the layout
09:12:22 <J0hn> fixed
09:12:36 <dennisb> good, then it works!
09:12:38 <J0hn> ERROR "prog":23 - Illegal type in type expression
09:12:56 <J0hn> Line 23 is:
09:12:57 <J0hn> code2 :: Parser
09:13:05 <J0hn> :?
09:13:18 <dennisb> and what is the type Parser?
09:14:14 * dennisb thinks he know, but he's not the one who needs to understand :-)
09:16:03 <J0hn> It could be defined in lib?
09:16:04 <J0hn> import ParseLib
09:16:05 <J0hn> :-?
09:17:05 <dennisb> I think Parser is not a type
09:17:26 <dennisb> I think Parser needs some argment to be a type
09:17:42 <dennisb> You have to look at the documentation for the parser lib you use
09:20:22 <J0hn> newtype Parser a   = P (String -> [(a,String)])
09:20:26 <dennisb> aha
09:20:40 <dennisb> Look at that, Parser a. You have to say what a is
09:21:09 <dennisb> The type can be Parser Int, Parser String, Parser [Int] or something
09:21:17 <dennisb> it can not be just Parser
09:55:14 * J0hn parts
09:55:16 <J0hn> bye
09:56:01 <dennisb> ... there are more and more people who needs help with their homework ...
09:56:23 <Heffalump> this is good, it means more and more people are being taught Haskell
10:01:13 <dennisb> Heffalump: that's true, but it's much more fun to help people that really want to know how things work and not just want  to do minimal work to be able to turn something in
10:01:59 <Heffalump> yeah
