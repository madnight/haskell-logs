01:32:54 * Yurik is away: I'm busy
01:33:25 * Yurik is back (gone 00:00:30)
02:48:01 * Heffalump waves
02:49:03 * clausen waves back
10:28:35 <Heffalump> who's around?
10:30:14 <Heffalump> oh well. politics approaching - apologies to all.
10:30:19 --- topic: set to 'please take a look at  http://www.lilofree.net' by Heffalump
10:30:21 <Heffalump> DOH
10:30:30 --- topic: set to 'please take a look at http://haskell.org/wiki/wiki?HaskellIrcChannelMove' by Heffalump
10:33:46 <Igloo> Grrr
10:34:06 <Heffalump> oh, I suppose I should start sitting on #haskell on OFTC.
10:39:30 <Taliesin> it seems like, by sticking a url into the topic which points to anti-lilo-ness, you're that much more likely to call down the 'wrath' of lilo.
10:39:55 <Heffalump> true, but better that than keep advertising it on channel
10:40:26 <Taliesin> yeah. he'd probably only change the topic first.
10:50:35 <Fractal> I can't believe it... I'm already connected to 4 IRC nets... This is bullshit...
10:50:55 <Heffalump> sorry :(
10:51:05 <Fractal> Well, it's not your fault.
10:51:16 <Fractal> I just don't understand why the can't settle this...
10:51:27 <Fractal> Here's how I'd do it:
10:51:32 <Fractal> Lilo: Get a job.
10:51:38 <Fractal> Everyone else: quit whining.
10:51:47 <Heffalump> heh. yeah.
10:51:51 <Fractal> And it's a done deal.
10:52:07 <Heffalump> as I said, my main issue is that he seems to be killing off channels, not that he's asking for the money
10:52:26 <Fractal> Yeah, that's definitley an abuse of power.
10:53:19 <Heffalump> I wasn't at all involved until a couple of days ago, but it was getting hard to ignore so I tried to find out more, and then today I heard about #brits and felt I had to do something
10:53:45 <Fractal> What happened to #brits?
10:54:29 <Heffalump> (from what I hear, from people I trust): lots of people in there were vocally criticising lilo
10:54:41 <Heffalump> he "juped" the channel, claiming that it was full of clonebots
10:54:57 <Fractal> Hm. Yeah, that's bullshit.
10:55:07 <Heffalump> juping appears to basically stop anyone from joining, and lilo appears to be k-lining the machines of people who keep trying to do so
10:55:43 <Igloo> I got the impression juping meant an automatic k-line on join
10:55:52 <Heffalump> not according to what's being said in #brits on OFTC
10:55:57 <Heffalump> that was my initial impression too
10:55:58 <Igloo> OK
10:56:02 <Fractal> Yes, that would make more sense. Just a simple TCL script in, say chanserv.
10:56:13 <Fractal> Oh... Odd...
10:56:20 <Heffalump> someone used the words "pseudo-automatic", since someone joins, and lilo k-lines them shortly after :-)
10:56:52 <Heffalump> it's hard to separate the noise from the facts, but it seems pretty clear that lilo is abusing power bigtime
10:57:15 <Igloo> And that things are only going to get worse if he keeps it up
10:57:33 <Taliesin> lilo is basically a nutjob, and has been for as long as i've known of him. (5+ years)
10:57:43 <Igloo> Hopefully either OPN will recover or OFTC will become as well-known in the appropriate circles as OPN was
10:57:57 <Fractal> What does OFTC stand for?
10:58:04 <Heffalump> open and free technology something I think
10:58:08 <Taliesin> i don't think things would get much worse. this is the same behavior he has always had, he just has a wider scope for his power now
10:58:11 <Fractal> Oh.
10:58:16 <Igloo> Open and Free Technology Community
10:58:19 <Igloo> http://www.oftc.net/
10:58:33 <Fractal> Cool.
10:59:06 <Heffalump> taliesin: the fact that the.earth.li was k-lined worries me a lot, since I could very well use that to IRC from normally
10:59:38 <Heffalump> so from my pov, he's not only abusing power at people who annoy him, but he's (risking) causing a lot of collateral damage too
11:00:46 <Taliesin> i'm guessing it doesn't mean anything to him. so he bans a few hundred people, he still has thousands of others hanging around for him to ask for money
11:01:40 <Heffalump> I saw somewhere he said that donations have dried up a lot in the last couple of days, so he may be finding that (1) he's squeezed the people that can be squeezed and/or (2) the whole row is losing him the money too
11:02:31 <Fractal> That's the problem with IRC... You've got to much central authority...
11:03:15 <Taliesin> i think the problem is more than people somehow expect it is magically a democracy, and then become disillusioned when they find out that it isn't, and never was.
11:03:58 <Heffalump> I think central authority is inevitable to some extent, it's hard to see how you can actually get together without having an agreed place to do so, and that place must be run by someone
11:04:09 <Fractal> Still, a lot of this could be avoided if IRC was designed with less of a server-centric design in mind.
11:04:25 <Heffalump> I don't really see how you can avoid servers
11:04:28 <Fractal> Heffalump : Not necessarily, look at the WWW, for instance.
11:04:42 <Igloo> The problem isn't server-centricity, it's the star formation normally used
11:05:08 <Igloo> Ideally the protocol would support a graph rather than a tree of servers
11:05:13 <Heffalump> in effect the WWW uses a global network of servers, though - it's just that each server is happy to link to any other server because there's no security issue in doing so
11:05:23 <Heffalump> igloo: that'd just help avoid netsplits, really
11:05:38 <Heffalump> I don't think even a graph of servers would help with the problem of non-cooperating admins
11:05:56 <Igloo> It makes it easier to remove any given admin
11:06:05 <Taliesin> everyone else still has to be in agreement
11:06:34 <Heffalump> but then you need an entire system for deciding whether an admin should be removed or not, which brings us back to central control
11:07:50 <Igloo> (I haven't been in #openprojects or anything so I don't know anywhere near the full details here)
11:07:50 <Taliesin> none of this would help, in this case, anyways. lilo isn't a server administrator, he just derives his power from the server administrators
11:07:50 <Fractal> Yes, but what I'm saying is that IRC doesn't have to have those security issues either. Unfortunatley, in IRC, each server trusts what the other servers say, which doesn't have to be the case.
11:07:50 <Taliesin> they could all stand up one day and boot lilo in the head and we'd all be tha tmuch happier
11:07:50 <Heffalump> fractal: how would it work differently, then?
11:07:53 <Taliesin> fractal: if you can design a feasible protocol which _doesn't_ assume trust between servers, i would _love_ to implement it, as i have been considering the problem of a replacement irc scheme for years.
11:08:06 <Taliesin> (and i havn't come up with something good, for me to implement in pircd)
11:08:31 <Fractal> Well, I'm not sure exactly, but I was thinking that each client could have a certificate, and all the servers would be is, essentially, public key servers.
11:08:47 <Fractal> Yes, I don't have a definite plan, but there's no doubt in my mind it could be done.
11:09:02 <Taliesin> its all quite easy to say "we should decentralize it, and do da de and di" but working on the details is significantly harder than you might expect, while still remaining able to scale
11:09:25 <Taliesin> well, if you happen to have any flashes of insight, i would be thrilled beyond belief if you'd take a moment to email them to me: jkominek@miranda.org
11:09:48 <Dalroth> hey, do you guys know if any of the fp languages are good for embedding in other applications?
11:09:57 <Fractal> Ok, well, I've pondered this before, let me give you a URL with some of my thoughts in it.
11:10:01 <Dalroth> Haskell just isn't built for embedding at this point
11:10:09 <Heffalump> dalroth: what kind of applications?
11:10:15 * Dalroth wonders if there is a good alternative
11:10:21 <Dalroth> scripting language for a role playing game
11:10:28 <Heffalump> hugs isn't /too/ hard to embed, I've done that
11:11:10 <Heffalump> it's easy to embed it so that you can evaluate haskell expressions, but I never got round to doing the work to allow the thing embedding it to provide primitives to Haskell
11:11:20 <Dalroth> it's been about a year since I looked into it, I just settled on using Ruby, but I still think that this kind of game would inherently work very well with a fp language
11:11:42 <Fractal> http://nettwerked.net/K1ine_15.txt
11:11:43 <Heffalump> I'd be happy to provide advice on embedding hugs if you want to try that
11:11:45 <Fractal> The last article...
11:11:51 <Dalroth> I'll take a look again, but I remember having a very hard time finding info last year :P
11:12:07 <Fractal> It's not completely relevant, but, well, take a look if you like...
11:12:21 <Heffalump> dalroth: well, it was a couple of years ago that I did it with hugs
11:12:27 <Heffalump> I had to work it out from the source, though
11:12:45 <Dalroth> actually, I remember exactly why I stopped
11:13:00 <Dalroth> I figured I'd try to work it out with the hugs source too, but I read somewhere about how they were working on an embedded interface for ghci
11:13:18 <Dalroth> but hugs seems to still be going on and I haven't heard anything about that for ghci in awhile
11:13:26 <Dalroth> hugs would probably be better anyway, ghc is HUGE
11:13:40 <Heffalump> I've looked at ghci and it doesn't seem infeasible
11:13:46 <Heffalump> but what kind of performance would you need?
11:14:01 <Fractal> Heffalump : http://nettwerked.net/K1ine_15.txt
11:14:14 <Dalroth> not sure, it probably just has to be good enough, some AI, mostly just interaction logic for chatting with people and stuff
11:14:15 <Igloo> It might be really easy with the new FFI
11:14:17 <Heffalump> fractal: yeah, was looking at it
11:14:22 <Dalroth> all the graphics would be C
11:14:23 <Fractal> Oh, cool. Sorry.
11:14:37 * Igloo goes to look at the bit about initting the Haskell side
11:15:09 <Heffalump> actually, I've thought about bridging IRC networks using "pseudo-server links" that only pass traffic for certain channels
11:15:41 * Heffalump awaits Igloo's wisdom on the new FFI, but thinks it sounds like hugs would do the job fine
11:16:10 <Taliesin> heffalump: there are already bots floating around which can do that. (they're generally fairly annoying, imo)
11:16:24 <Igloo> At a quick scan of pages 22 and 24 of the FFI spec it should be easy to link with something compiled with CVG GHC. I don't think this will help if you want to generate teh code on the fly, though
11:16:35 <Heffalump> taliesin: yeah, doing it with a bot would mean that you get <botname> prepended to bridged traffic
11:16:43 <Heffalump> hence doing it with proper server links
11:16:43 <Taliesin> quite
11:16:57 <Fractal> Yes, I've seen them too, but they're just client bridges, it may be possible to have some sort of a public server bridge (if, for instance, there was a bridgeserv or something)?
11:17:23 <Heffalump> the key point would be that you'd want to only bridge for certain channels
11:17:23 <Igloo> Once you allow pseudo-server links you have to worry about people using them to spoof
11:17:42 <Fractal> Heffalump : Right. And only the owners of the channel would be able to agree to it.
11:18:02 <Fractal> Yeah, spoofing would be another problem...
11:18:25 <Fractal> Not to mention nick collisions.
11:18:29 <Heffalump> yeah
11:18:37 <Dalroth> Igloo: thanks for the pointer, I'll look at it... I've had the FFI ps sitting here for while but haven't gotten around to reading it :)
11:18:44 <Dalroth> looks usefull so far
11:19:17 <Heffalump> as Igloo said, running code that is generated by the user on the fly might be hard with ghc FFI
11:22:43 --- topic: set to 'please take a look at http://haskell.org/wiki/wiki?HaskellIrcChannelMove and record your views on the subject there' by Heffalump
11:43:22 <Heffalump> hmm, #brits appears to be un-juped
13:06:43 <Heffalump> 'lo
13:16:50 <Fractal> constantp?
13:16:58 <Heffalump> constantp?
13:17:00 <Fractal> nil
13:17:10 <Heffalump> are you talking Haskell in your sleep or something? :-
13:17:11 <Heffalump> )
13:17:26 <Fractal> Is that a haskell word too? Heh. Sweet. I'm lisping it.
13:17:38 <Heffalump> constantp isn't
13:17:43 <Heffalump> nil is sort of
13:17:52 <Heffalump> though not really
13:18:06 <Heffalump> I'd view Nil as another way of saying [], though it's not officially defined that way
13:18:47 <Fractal> Yeah, nil is () in lisp too... So, listp? T.
13:19:07 <Heffalump> what does listp do?
13:19:27 <Heffalump> the only lisp I know is cdr and car, and I can't even remember which way round they go :-)
13:19:51 <Fractal> It returns whether the following symbol is a list or not. T for yes, nil for no.
13:20:04 <Heffalump> right.
13:20:10 <Fractal> Heh. Me neither. I always use front and rest. :)
13:20:28 <Fractal> I *think* car is front...
13:21:08 <Fractal> ishaskellyourfavoritep?
13:21:59 <Igloo> Shouldn't that be haskellyourfavoritep?
13:24:06 <Fractal> My mistake. (defun ishaskellyourfavoritep (x) (haskellyourfavoritep x))
13:24:21 <Igloo> :-)
13:24:25 <Fractal> :)
13:24:41 <Taliesin> don't you need a lambda in there?
13:25:03 <Fractal> ??
13:25:23 <Fractal> You calling me a llama?
13:25:38 <Fractal> Heh.
13:26:52 <Taliesin> well, like (defun ishaskellyourfavoritep (lambda (x) (haskellyourfavoritep x)))
13:27:49 <Fractal> Why on earth would you need "lambda"?
13:28:03 <Taliesin> to actually make a function?
13:28:42 <Fractal> What dialect is that?
13:28:46 <Fractal> Wait, are you talking about haskell?
13:28:59 <Igloo> This is far from Haskell
13:29:02 <Taliesin> i'm fairly sure i'm talking about lisp
13:29:16 <Igloo> Fractal's looks suspicious to me - the (x) bit in particular
13:29:19 <Igloo> But I know no lisp
13:29:47 <Heffalump> f x = 5 defines a function in Haskell without using a lambda
13:29:52 <Taliesin> igloo: the (x) is where you define the names of the variables used within the code chunk
13:29:56 <Heffalump> presumably the above is the equivalent listp notation
13:30:14 <Heffalump> s/listp/lisp/
13:30:21 <Heffalump> s/presumably/I assumed/
13:30:36 <Taliesin> ah, scheme has a 'define' which combines def and lambda. is lisp defun similar?
13:30:52 <Fractal> Hold on... Lemme check this.
13:31:00 <Igloo> What would a functino that takes 2 values look like?
13:31:12 <Fractal> I'm fairly sure that'll work in common lisp...
13:31:38 <Taliesin> (lambda (x y) (+ x y)) should return a function, taking two values, and return their sum
13:32:10 <Igloo> Ah, brackets are lists in lisp, right? That makes more sense
13:32:26 <Igloo> Or is that '( ... )?
13:32:52 <Taliesin> ' prevents evaluation
13:33:09 <Taliesin> i'm not sure why you don't have to prevent the evaluation of the list of argument names, but all the examples in finkel leave it out
13:33:17 <Fractal> Igloo : Yes, () are lists...
13:33:26 <Taliesin> and it looks like, in elisp at least, fractal was right about is defun
13:33:43 <Igloo> OK, right
13:33:45 <Fractal> I'm no expert, I've only played around with common lisp, though...
14:19:35 <Fractal> Can you do x:y:xs ?
14:19:39 <Heffalump> yes
14:19:43 <Fractal> Neat...
14:19:53 <Heffalump> DYM in a pattern match, or what?
14:20:26 <Fractal> Yes, I think so... When you've got a list and you extract the first from the rest..
14:20:42 <Heffalump> yep
14:20:56 <Fractal> Neat...
14:28:46 <Fractal> "Scottish City Sues Computer Scientist for Misuse of it's Name"
14:29:17 <Heffalump> errm?
14:29:25 <Fractal> Heh. Nothing.
15:47:08 <hornby> Fractal: which city?
15:47:33 <Fractal> Heh. No, it was a stupid joke. Glasgow...
15:47:40 <Heffalump> ah :-)
15:47:45 <Fractal> :)
15:47:54 <Heffalump> I think it might actually be called "Glorious Haskell Compiler" these days
15:47:56 <hornby> oh
15:48:05 <Heffalump> though everyone still thinks of it as the Glasgow Haskell Compiler
15:48:17 <Fractal> Really? Ha!
15:48:23 <hornby> The Glorious Glasgow Haskell Compilation System
15:49:11 * Heffalump points people who haven't looked yet at the topic in order to solicit opinions, btw
15:53:17 <hornby> hmm
