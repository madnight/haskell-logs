04:17:53 * shapr awakens!
04:17:56 <shapr> goood morning!
04:27:00 <shapr> hey, did anyone see the test-first stuff that pit@capitan.de suggested on pragprog list?
04:29:40 <shapr> it's all about writing a tiny spreadsheet in the test first process
04:36:52 * shapr reads up on QuickCheck
04:40:52 <shapr> anyone here used QuickCheck?
04:47:20 <shapr> hi teek 
04:47:29 <teek> hi hapr
04:47:35 <teek> s/hapr/shapr
04:47:35 <shapr> what's up?
04:49:32 <teek> got bloody infection on my leg operation scar, and now i have to eat more pills (antibiotes or what they are called)
04:50:12 <teek> so. Likely to have one week more for mindless hacking and ircing
04:50:48 <shapr> well, good and bad sides
04:50:53 <teek> have you got any new haskell done ? 
04:52:10 <teek> besides that Mandelbrot code 
04:53:18 <shapr> I've investigated type classes
04:53:36 <shapr> here's the code I did yesterday:
04:53:47 <shapr> class CharExts a where
04:53:47 <shapr>     isVowel     :: a -> Bool
04:53:47 <shapr>     isConsonant :: a -> Bool
04:53:47 <shapr> instance CharExts Char where
04:53:47 <shapr>     isVowel a     = elem a "aeiouAEIOU"
04:53:47 <shapr>     isConsonant a = elem a (filter (not . isVowel) ['A'..'Z'] ++ ['a'..'z'])
04:54:10 <shapr> that's my example implementation of a type class
04:55:28 <teek> oh, i followed discussion, where you were talking about this example.
04:56:11 <shapr> today a message about test-first programming hit the pragprog mailing list
04:56:23 <shapr> so I'm trying to figure out how to use QuickCheck to test Haskell code
04:57:15 <shapr> wanna figure it out with me? :)
04:57:49 <teek> i'll leave that journey to you ;)  
04:57:58 <shapr> heh, ok
04:58:22 * teek is away: Odd. I've something to do.
05:26:43 <shapr> teek: have you written any code lately?
05:46:24 <shapr> hi jsw 
06:02:29 <shapr> geez
06:02:37 <shapr> writing a spreadsheet in Haskell is not easy
06:11:01 <shapr> hello again, oh stuffed and vicious one.
06:11:04 <Heffalump> 'lo
06:11:06 <Heffalump> :-)
06:55:33 <jsw> hi shapr, was on a different screen 
07:02:49 <nodie> hi
07:02:52 <shapr> hi nodie 
07:15:00 <nodie> shapr 
07:15:08 <shapr> ?
07:15:11 <nodie> why haskell and not lisp?
07:15:21 <shapr> I want a purely functional language
07:16:09 <shapr> and I like the idea of a pure lazy functional lang
07:16:45 <shapr> hi Vutral 
07:18:24 <Heffalump> cos this is #haskell, is why :-)
07:18:28 <shapr> nodie: what about you?
07:18:53 <nodie> i have learned haskell in a course in my degree
07:19:00 <shapr> oh, that must be nice
07:19:11 <shapr> I want to take some computer courses sometime ;)
07:19:15 <nodie> in march i'll see lisp in a AI course
07:19:27 <shapr> oh, that sounds like fun
07:19:57 <nodie> (i refer a university course, i'm studing a degree)
07:20:07 <shapr> I want one!!
07:20:54 <nodie> i like haskell
07:21:05 <nodie> because i'm more teorical than practical...
07:21:41 <shapr> I'm looking for new mental tools
07:22:02 <shapr> Haskell thinks very differently than Java, Python, etc
07:52:39 * jadrian walks in
07:52:43 <jadrian> hi
07:52:50 <nodie> my profesor says that companies what functional languages because they reduce written code
07:52:51 <jadrian> anyone tried ghc 5.02.2 yet?
07:52:53 <nodie> hi jadrian 
07:52:53 <shapr> hi jadrian 
07:52:59 <jadrian> hey nodie, shapr
07:53:19 <nodie> no jadrian i use 5.02.1
07:53:32 <jadrian> tell me something nodie... how is this supposed to work...
07:53:42 <jadrian> > module Main where
07:53:42 <jadrian> > main :: IO()
07:53:42 <jadrian> > main = do 
07:53:42 <jadrian> >       putStr "n:"
07:53:42 <jadrian> >       n <- readLn :: IO(Int)
07:53:43 <jadrian> >       print n
07:53:46 <shapr> nodie, the longer I program, the more I suspect that the volume of code written to solve a certain problem depends on the person solving the problem
07:53:52 <jadrian> I know really trivial :)
07:54:11 <shapr> how well they know how to program, and how well they know the tools they're using to solve the problem
07:54:40 <jadrian> I just upgraded to ghc 5.02.2 and it only prints the "n:" after reading from the stdin
07:54:41 <shapr> one thing that's really bothering me about the software industry is that programmers are beginning to be forced to use certain tools by their managers (like Java)
07:55:07 <shapr> managers rarely know how to program, ergo programmers should be the ones to choose their own tools.
07:56:20 <jadrian> can you tell if it's a bug in ghc 5.02.2?
07:56:26 <jadrian> cause it seems like a bug to me...
07:56:38 <nodie> jadrian  this not compile in ghc 5.02.1
07:56:50 <jadrian> no?
07:56:59 <jadrian> why not...
07:57:07 <nodie> shapr in university they say us that manager are as
07:57:10 <nodie> engineer
07:58:30 <jadrian> oh well... 
07:58:40 <nodie> one moment jadrian 
07:58:41 <Heffalump> nodie: what error do you get?
07:58:57 <Heffalump> oh, the indentation looks wrong, actually
07:59:31 <jadrian> damn... I'm not that much of a newbie... I'm not asking if the code is wrong.. let me see :)
07:59:41 <jadrian> module Main where
07:59:42 <jadrian> main :: IO()
07:59:42 <jadrian> main = do 
07:59:42 <jadrian>        putStr "n:"
07:59:42 <jadrian>        n <- readLn :: IO(Int)
07:59:42 <jadrian>        print n 
08:00:07 <jadrian> ok... copy pasted from xemacs
08:00:11 <jadrian> it does compiles
08:00:13 <Heffalump> nope, it works fine in hugs
08:00:25 <jadrian> Heffalump: fine means it prints
08:00:28 <jadrian> "n:"
08:00:32 <jadrian> then gets the stdin
08:00:38 <jadrian> then prints the n
08:00:41 <jadrian> right?
08:00:43 <Heffalump> then repeats what you typed if it was a number
08:00:43 <Heffalump> yep.
08:00:50 <jadrian> damn
08:00:51 <Heffalump> I've not installed ghc-5.02.2 yet
08:01:08 <jadrian> I just upgraded to 5.02.2 and it doesn't work that way
08:01:15 <Heffalump> 5.00.2 works fine
08:01:25 <jadrian> yes it worked fine for me too
08:02:05 <jadrian> I upgraded from 5.00.2 to 5.02.2 and my interfaces just stoped working
08:02:22 <shapr> nodie: sadly, most managers have no programming experience
08:02:27 <shapr> at least, that's my experience
08:02:34 <jadrian> not sure if it is SuSE rpms or Ghc 5.02.2 bug :(
08:02:56 <nodie> shapr like i
08:03:02 <shapr> it's also my experience that most teachers in university have not worked in the real industry of software engineering
08:03:06 <nodie> i don't have programming experience
08:03:16 * Heffalump downloads ghc 5.02.2, but it'll take a while to compile
08:03:20 <shapr> nodie: are you planning on being a manager?
08:03:33 <nodie> i don't know what i'll do
08:03:34 <jadrian> Heffalump: which distro?
08:04:03 <Heffalump> redhat 6
08:04:08 <jadrian> k
08:04:08 <shapr> I'm looking forward to getting 5.02 updated in debian
08:04:23 <Heffalump> the debian maintainer doesn't keep up very closely, does he?
08:04:48 <shapr> he's on #functional ;)
08:04:52 * Heffalump --> recompile it on the redhat 7 box too
08:04:54 <shapr> I'll have to invite him over here
08:04:55 <jadrian> ah :)
08:04:59 <Heffalump> ah, ok :-)
08:05:16 * Heffalump wants to sort out the nhc packages and try to get them back into Debian
08:05:28 <shapr> michaelw is probably the person to talk to
08:05:35 <nodie> ERROR "p.hs":8 - Last generator in do {...} must be an expression
08:05:39 <jadrian> hey maybe he knows anything about this 'bug?'
08:05:48 * shapr dunno
08:05:51 <nodie> this is my error with your code ....
08:06:06 <shapr> he's also been idle on irc for 16.5 hours
08:06:09 <jadrian> nodie: that code is correct 
08:06:27 <Heffalump> yeah, he's sent me his most recent version but it wouldn't build for me
08:06:39 <Heffalump> I need to work out why
08:06:45 <shapr> things changed 'tween 5.00 and 5.02
08:07:17 <shapr> I've noticed differences with module names for shadowing
08:07:19 <Heffalump> right, hopefully these will be compiled by tomorrow :-)
08:07:47 * Heffalump goes shopping
08:08:01 <shapr> whatcha buyin?
08:08:06 <shapr> books? hardware? music?
08:08:17 <nodie> food?
08:08:29 <Heffalump> food/other groceries
08:08:30 <nodie> (programmers need to eat too xD)
08:08:31 <shapr> oh, that would be sensible
08:08:57 <shapr> excellent point nodie 
08:10:19 <jadrian> hi Vutra
08:10:27 <jadrian> hi Vutra_
08:10:29 <jadrian> lol
08:10:37 <shapr> hi Vutra!
08:11:10 <nodie> shapr but haskell not have industry support..
08:11:15 <Vutra_> lol
08:11:23 <nodie> like C# or java
08:11:36 <shapr> nodie: if that's industry support, I hope Haskell doesn't get it :)
08:11:45 <nodie> xD
08:11:48 <nodie> in Spain
08:11:52 <nodie> it's horrible
08:11:58 <shapr> because C# and Java really suck
08:11:58 <nodie> you can learn haskell
08:12:10 <nodie> you can develop for the Hurd
08:12:12 <nodie> but
08:12:18 <nodie> in street jobs
08:12:23 <nodie> they only want 
08:12:29 <nodie> Delphi programmers
08:12:35 <nodie> oracle admis
08:12:53 <nodie> and Windows Nt Admin
08:12:58 <nodie> and such
08:13:13 <shapr> one reason perl became popular and even famous is that it allowed sysadmins to simplify their tasks
08:13:43 <shapr> I may be bug-fixing 60,000 lines of Visual Basic code in the next few weeks
08:13:50 <shapr> I'll write a Haskell language analyser ;)
08:13:55 <nodie> xD
08:14:02 <nodie> very good solution
08:14:14 <nodie> i have saw
08:14:19 <shapr> doing it manually in Visual Basic would take me a long, long time
08:14:20 <nodie> a lot people
08:14:51 <nodie> say they see perl codes they can reduce to 10 lines haskell code 
08:15:33 <shapr> I don't know, I haven't used Perl since '98
08:15:36 <shapr> I don't like it much
08:15:50 <shapr> Haskell does seem to be very expert friendly
08:15:51 <nodie> i don't know why some type of software like mail daemons have haskell programas
08:16:03 <shapr> I am also surprised that they don't exist
08:16:09 <shapr> but I'm also willing to fix that problem
08:16:44 <nodie> yes
08:17:10 <nodie> i was with the web sever
08:17:13 <nodie> in haskell
08:17:18 <shapr> you were with it?
08:17:27 <nodie> i mean
08:17:45 <nodie> i was trying to use it
08:18:17 <shapr> did it work for you?
08:18:17 <nodie> but it doesn't works
08:19:07 <nodie> no
08:19:08 <nodie> but
08:19:10 <shapr> where's the webserver?
08:19:18 <nodie> in haskell.org
08:19:25 <nodie> library section
08:19:37 <shapr> ok, I'll look at it later
08:19:38 <nodie> it's part of a haskell article
08:19:49 <shapr> right now I'm learning how to build debian packages so I can become a maintainer
08:20:12 <shapr> then I'll be able to fix the Haskell packages if I can't persuade michaelw  to fix them ;)
08:20:13 <nodie> :)
08:20:27 <nodie> i need to reinstall linux
08:20:35 <nodie> i'm using now mandrake ...
08:20:42 <shapr> that's a good linux to start with.
08:20:45 <nodie> with debian it's more funny
08:20:58 <nodie> sharp i use linux from 1997
08:20:59 <nodie> xD
08:21:12 <shapr> debian is much harder to install at first, but much much easier to upgrade and install new packages on an existing debian system
08:21:16 <shapr> wow
08:21:36 <shapr> I have the latest debian packages as of this morning.
08:21:41 <shapr> I upgrade about every two days.
08:21:56 <jadrian> back (and about to exit)
08:21:57 <nodie> yes it's become a vicius
08:21:57 <nodie> xD
08:22:08 <shapr> bye jadrian! come back soon!
08:22:11 <jadrian> mmmm debian I thought about that...
08:22:16 <shapr> I really like debian.
08:22:25 <jadrian> <- is a SuSE guy right now
08:22:48 <nodie> debian need too much atentions
08:22:49 <shapr> if it works for you, you should use it ;)
08:22:54 <jadrian> I just don't see many advatages in debian if I don't want to make online updates
08:23:06 <jadrian> I mean... net is way to expensive here
08:23:09 <shapr> er, why don't you want to make online updates?
08:23:13 <shapr> oh
08:23:14 <jadrian> so I'd have to download the debs at work
08:23:33 <jadrian> so they would work just as RPMs
08:23:39 <shapr> ouch, painful
08:23:45 <jadrian> yeap :(
08:24:15 <jadrian> and then there is the configuration deal... SuSE is very easy 
08:24:53 <jadrian> ok got to go
08:24:55 <jadrian> see ya
08:25:51 <nodie> i'm going to do something usefull
08:25:55 <nodie> bye
08:35:58 <shapr> hi kepler 
08:36:05 <kepler> hi
08:36:21 <shapr> what's up?
08:36:26 <shapr> any new code?
08:36:31 <kepler> no :/
08:36:43 <kepler> I am rather stuck on that, I haven't written anything in months
08:36:45 <shapr> functional epiphanies?
08:37:18 <shapr> I'd like to get my fractal module to have multiple outputs
08:37:44 <shapr> I'd also like to play with the rudimentary Scheme interpreter in Haskell that I found
08:38:51 <shapr> hey, does anyone here know how to use QuickCheck?
08:39:13 <shapr> there's a nifty test-first challenge going on in the extremeprogramming and pragprog groups
08:39:40 <shapr> someone suggested that it be done in parallel in Haskell also
09:26:25 <shapr> re
09:57:55 <shapr> anyone here have haskell cgi code they've done?
10:24:12 <Heffalump> I have some
10:26:21 <shapr> oh, can I see it?
10:26:24 <shapr> is it on your site?
10:27:07 <Heffalump> umm, no, but it ought to be
10:27:13 <shapr> p-p-please?
10:27:17 <shapr> =)
10:27:17 <Heffalump> :-)
10:27:22 * Heffalump thinks
10:28:17 <Heffalump> it's not a very good short example
10:28:24 <Heffalump> and some of the code is a bit of a mess
10:28:37 <Heffalump> have you looked at the examples linked from haskell.org?
10:29:18 <shapr> I looked at some of the libs
10:30:02 <shapr> but I didn't see any demo code
10:30:20 <Heffalump> the thing about my code is that it uses some rather complicated stuff (monad transformers)
10:30:59 <shapr> hm
10:31:01 <shapr> well
10:31:04 * shapr shrugs
10:31:06 <shapr> I dunno
10:31:10 <Heffalump> did you look at http://www.pms.informatik.uni-muenchen.de/mitarbeiter/panne/haskell_libs/CGI.html ?
10:32:25 * shapr looks
10:33:06 <Heffalump> that's the library I used
10:52:51 <Heffalump> yell if you really do want a copy of my code, but don't say I didn't warn you :-)
10:53:42 * shapr yells
12:57:19 <shapr> Heffalump: cool tech
13:04:38 <shapr> not sure I understand it all yet
13:05:52 <xbill> understand what all?
13:07:21 <shapr> the paper "Generic Program Transformation" from http://web.comlab.ox.ac.uk/oucl/work/ganesh.sittampalam/
13:07:24 <shapr> interesting stuff
13:08:14 <shapr> I'm not really sure where it or does not fit into the categories of macros,automatic refactoring,or just compilers
13:08:24 <xbill> no idea
13:08:30 <shapr> hi xbill, what's up?
13:16:37 <xbill> hackin' the kernel
13:17:33 <Heffalump> shapr: it doesn't really
13:22:59 <shapr> hm
13:33:33 <shapr> hi Vutra_
13:47:44 <xbill> hot buttery poppin' fresh kernels
13:48:08 <shapr> mmm
13:48:15 <shapr> sounds tasty
13:49:46 <xbill> colonel sanders would approve
13:50:12 <shapr> wasn't that Orville Redenbacher?
13:50:22 <shapr> I thought sanders was the fowl old man.
13:51:44 <shapr> or was he?
13:51:46 * shapr googles
14:01:30 <shapr> xbill: yes, Colonel Sanders is the guy who did the chain of semi-fast-food joints, Kentucky Fried Chicken
14:01:38 <shapr> it was in the southeast USA at least
14:02:15 <shapr> what's the best unit testing framework for Haskell?
14:05:04 <shapr> all I've been able to find is QuickCheck
14:05:18 <shapr> xbill: Orville Redenbacher was the popcorn guy
14:05:42 <shapr> xbill: see, this is why you're a kernel developer, and I'm not. My brain is full of useless crap :-D
14:05:48 * shapr laughs
14:15:27 <shapr> anyone here used QuickCheck?
14:15:46 <shapr> I don't understand how to specify a property definition
15:11:31 <nodie> bye
22:50:47 --- topic: 'Functional Programming, that's the opposite of Dysfunctional Programming (like VB) | we be loggin' http://tunes.org/~nef/logs/haskell/ | welcome to the Haskell Dojo | jewel, julien, and shapr are up to white belt!'
22:50:47 --- topic: set by shapr on [Mon Jan 07 10:42:01 2002]
