00:28:41 <Heffalump> eek, it's 8:30
00:37:50 <shapr> have you been awake all night?
00:43:55 <Heffalump> nope
00:50:45 <shapr> Heffalump: got lots of sleep last night?
00:50:47 <Yurik> hi
00:50:50 <shapr> hi Yurik!
00:51:01 <Yurik> shapr hi
00:51:25 <shapr> what's up Yurik?
00:51:48 <Yurik> shapr fine, thanks :-)
00:51:53 <Heffalump> shapr: fair bit. Need to go to work
00:51:54 <Yurik> dennisb are you here? :-)
00:52:17 * shapr dances happily around #haskell
00:53:00 <Heffalump> shapr: did you get GHC to build with --enable-hopengl, btw?
00:53:20 <shapr> nah, I got distracted by paying work. :(
00:55:21 <Heffalump> hmm. what Debian package provides the openGL headers/libraries?
01:36:30 <shapr> er
01:36:32 <shapr> I dunno
01:36:51 * shapr looks
01:37:06 <jewel> hey guys
01:37:19 <shapr> hi jewel! nice to see you!
01:37:44 <jewel> and vice versa
01:38:02 * Heffalump tries xlibmesa-dev
01:38:23 <shapr> Heffalump: in the case of python-opengl, it depends on glutg3 and libgl1
01:39:32 <Heffalump> right, and glutg3-dev then
01:40:04 * Heffalump starts the GHC build again
01:40:06 <shapr> yah, I think so
01:40:08 <shapr> yay!
01:40:22 <Heffalump> (lets see what happens this time...seeing as I don't have greencard yet)
01:40:36 <shapr> if you successfully build ghc with OpenGL on debian, I'll be very happy :)
01:40:57 <shapr> jewel: what's up?
02:27:22 <cuelebre> hi 
02:27:39 <cuelebre> CGI + HaXML working 
02:27:47 <cuelebre> i`m happy :)
02:27:59 <Heffalump> what are you using it for?
02:28:08 <cuelebre> GHC for win XP
02:28:12 <cuelebre> apache
02:28:57 <cuelebre> without hmake :\
02:29:06 * xbill ews at bloze
02:31:46 <Heffalump> hmake isn't really necessary
02:31:53 * Heffalump finds ghc -M is fine
02:38:11 <Yurik> guys, there at #eas we have a discussion what will be better to use - Erlang or Haskell. And I want you to comment some issues. For example, using Haskell in real-time non-stop systems. What can you say, dudes? :-)
02:43:15 * Heffalump doesn't know anything about Erland
02:43:20 <Heffalump> s/d$/g/
02:43:55 <Yurik> but what can you say about Haskell - is it mature enough to use in non-stop and softrealtime systems?
02:44:36 <dennisb> erlang is designed for that kind of system where you can swap in and out code in a runing distributed system
02:44:48 <Heffalump> softrealtime?
02:45:00 <Yurik> er, soft-realtime :-)
02:45:05 <Heffalump> what is that?
02:45:14 <dennisb> the main usage is ericssons telecom-switches, where they do just these things
02:45:33 <Heffalump> I doubt Haskell would be ideal for realtime stuff, given that it's garbage collected
02:45:55 <Heffalump> and AFAIK you can't swap code in and out while a program is running
02:46:30 <dennisb> in erlang you can do things like that (i've not tried it, but it's supposed to work)
02:46:41 <dennisb> of course you need some sort of protocoll
02:46:44 * Yurik have tried Erlang recently
02:47:00 <Heffalump> I'd like to see some kind of reflection in Haskell
03:48:36 * shapr boings
04:03:34 <shapr> Yurik: upgrading running software does sound more like Erlang
04:03:34 <Yurik> erlang lacks of native code compiling and requires supplying erland runtime with software... :-( 
04:03:34 <shapr> yup, that's true
04:03:34 <Yurik> also lacks of lazy evaluation :-(
04:03:34 <shapr> that's also true
04:03:34 <shapr> Heffalump: how would reflection work in Haskell?
04:03:34 <Heffalump> shapr: not quite sure, but it'd need some kind of dynamic type inspection framework
04:03:34 <shapr> Yurik: Erlang has lots more libraries, and corporate support/usage
04:03:34 <shapr> Haskell is far more 'pure' imho
04:03:35 * shapr shirks
04:03:35 <shapr> cuelebre: do you have some simple demo code that shows CGI + HaXML working together?
04:03:35 * xbill peeks
04:03:35 * shapr pokes
04:03:35 * shapr gets out his C64 again
04:03:35 <cuelebre> no 
04:03:35 <shapr> ok
04:03:35 <cuelebre> shapr , there are a lot of errors
04:03:35 <cuelebre> call to undefinied functios 
04:03:35 <cuelebre> ...
04:03:35 <shapr> sounds rough
04:04:16 <cuelebre> ah
04:04:17 <cuelebre> demo code 
04:05:00 <cuelebre> i made a change in CGILib 
04:05:28 <cuelebre> declaring a new constructor in  HTML 
04:05:58 <cuelebre> to put a HaXml parsed plain text 
04:06:35 <cuelebre> sorry (bad english), im spanish 
04:06:38 <cuelebre> look mfor emilio labra
04:06:51 <cuelebre> has a lot of papers
04:07:26 <Yurik> finally, we have decided to use Erlang... pity 
04:09:12 <xbill> Did Labra do LPS?
04:15:21 <shapr> xbill: yah, looks like it
04:15:27 <shapr> http://lsi.uniovi.es/~labra/
04:20:05 <cuelebre> mi teacher 
04:20:06 <cuelebre> thnaks 
04:20:09 <cuelebre> :))
04:20:16 <cuelebre> thanks
04:21:02 <xbill> cool
04:21:13 <xbill> I've played around a little with LPS
04:22:02 <shapr> whaddya think?
04:26:27 <xbill> not entirely straightforward to use
04:26:42 * shapr tries to build LPS with ghc5.02
04:27:06 <xbill> will likely require quite a bit of hacking
04:27:51 <shapr> yah, looks like it 
04:29:30 <xbill> it took some hacking to get it going with ghc4 I think
05:02:05 * Logan yawns.
06:53:14 * shapr hmmmms
06:53:23 <shapr> foldl ((\a b -> (a,b))) 1 [2..4]
06:53:25 <shapr> what's wrong with that?
06:53:55 <shapr> let tupla = (\a b -> (a,b))
06:53:56 <shapr> foldl (tupla) 1 [2..4]
06:53:58 <shapr> that one should work, right?
07:52:32 <Logan> Hahaha, there's a wireless LAN in this classroom.
07:52:44 <Logan> I'm going to have perfect attendance in this class.
08:55:48 --- topic: 'Have a library you'd like to donate, or one you'd like to see? Talk to us at http://sf.net/projects/haskell-libs/ | we be loggin' http://tunes.org/~nef/logs/haskell/ | welcome to the Haskell Dojo | julien is up to white belt! jewel and shapr are up to green belt!'
08:55:48 --- topic: set by shapr on [Wed Jan 30 14:36:17 2002]
08:55:48 --- names: list (clog Yurik xbill dennisb juhp yusri jewel pHa Igloo Heffalump smkl cuelebre jlb Logan)
08:57:19 <Heffalump> shapr: no, it can't be given a type
08:58:08 <Logan> He's not here.
09:00:21 <Heffalump> oh, he left, doh
15:00:50 <Logan> I wonder if I could come up with a thesis idea in the area of functional programming.
15:05:06 <xbill> Logan: "Measurements of the sharpness of the barbed wire with which one functionally programs along with bananas, lenses, and envelopes"
15:05:27 <Logan> xbill: Was that your thesis?
15:06:56 <xbill> Logan: nope
15:23:43 <mephistopheles> hi..
15:24:00 <mephistopheles> question...has anyone in here ever heard of the specification language 'pi'??
15:24:45 <xbill> not I
15:24:54 <mephistopheles> hmmm.thanks for answering though :)
15:31:02 * discobob is away: bathtime
15:44:48 * discobob is back (gone 00:13:45)
17:19:36 * xbill sighs.
17:19:53 <zorb> hmm
17:20:17 * shapr blinks confusedly
17:21:29 * zorb continues playing boggle.
17:21:35 * xbill continues hacking the kernel.
17:22:00 * shapr whips up a major-mode for Joy
17:23:09 <shapr> generic-x.el is cool
17:25:13 <zorb> oh, I just thought of something. I noticed last time i looked something about a smtplib on sf.net/projects/haskell-libs
17:25:29 <zorb> did somebody take that up or was that a proposal?
17:25:41 <shapr> it's a proposal
17:25:43 <shapr> wanna try it?
17:26:10 <zorb> sure. not today but maybe this weekend.
17:26:17 <shapr> sure, no hurry :)
20:16:23 <lesner> I'm struggling trying to understand the PNMparseer from the fudgets toolkit.... anyone here understand monads vs. continuation passing. Specifically what I don't get is how the $> $$ and ap operators work.The self contained file all my questions refer to is at
20:16:28 <lesner> http://lesner.dyndns.org/~lesner/hs/pnm/PNMparser.hs
20:17:13 <lesner> s/passing/passing?/ ! that was meant ot be a question!
23:46:35 --- topic: 'Have a library you'd like to donate, or one you'd like to see? Talk to us at http://sf.net/projects/haskell-libs/ | we be loggin' http://tunes.org/~nef/logs/haskell/ | welcome to the Haskell Dojo | julien is up to white belt! jewel and shapr are up to green belt!'
23:46:35 --- topic: set by shapr on [Wed Jan 30 14:36:17 2002]
23:46:35 --- names: list (clog pHa shapr xbill dennisb yusri jewel Igloo Heffalump smkl cuelebre jlb Logan)
