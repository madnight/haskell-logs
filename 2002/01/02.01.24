04:18:08 <shapr> hi pHa 
06:42:17 <shapr> can someone explain the difference between fold and scan?
06:43:25 <Heffalump> scan gives a list of the intermediate results produced by fold
06:43:50 <Heffalump> the following equivalence holds:
06:43:52 <Heffalump> scanr: map (foldr step e) (tails x) = scanr step e x;
06:46:43 * shapr thinks about that
06:46:48 <shapr> so...
06:46:52 <shapr> what would you do with it?
06:48:53 <shapr> er wait a sec
06:49:00 * shapr thinks of pascal's triangle
07:25:55 <shapr> I have to start remembering that function application binds most tightly
07:31:06 <shapr> hi smkl 
08:00:26 <Heffalump> shapr: sorry, was distracted
08:00:38 <Heffalump> the maximum segment sum problem is a good example of a use of scanr
08:01:01 <shapr> I dunno what that is
08:01:12 <shapr> I tried to use scan to do pascal's triange, but I couldn't figure it out
08:01:46 <Heffalump> given a list of numbers
08:02:07 <Heffalump> work out the sum of each segment (contiguous sublist) of that list
08:02:20 <shapr> oh!
08:02:28 <shapr> I see
08:02:32 <Heffalump> sorry, the maximum of the sum of each segment
08:02:42 <Heffalump> there's an obvious cubic algorithm for it
08:02:56 <shapr> depends on your idea of obvious I think.
08:03:00 <Heffalump> listmax . map sum . map inits . tails
08:03:07 <Heffalump> sorry
08:03:12 <shapr> ;)
08:03:14 <Heffalump> listmax . map sum . concat . map inits . tails
08:03:16 <Heffalump> :-)
08:03:34 <shapr> at the moment my head is full of trying to write a WardNumber program in Joy
08:03:40 <shapr> but I'll come back to that
08:03:58 <shapr> since I want to write a WardNumber program in Haskell also
08:04:06 <Heffalump> WardNumber?
08:04:19 <Heffalump> anyway, just so you know, the above can be optimised to
08:04:33 <Heffalump> listmax . scanr (\ b c -> max 0 (b+c)) 0
08:04:37 <shapr> http://c2.com/cgi-bin/wiki?WardNumberInManyProgrammingLanguages
10:43:58 <jemfinch> anyone here?
10:54:25 <Heffalump> me
10:55:07 <jemfinch> do you know SML?
10:55:08 <jemfinch> :)
10:55:15 <jemfinch> or do you know what quotations/antiquotations are?
10:55:30 <Heffalump> yes, and yes, but I haven't used them
10:55:39 <jemfinch> can you describe them to me a bit?
10:55:42 <jemfinch> I'm having trouble understanding them.
10:55:55 <jemfinch> are they preprocessed or do they get processed at compile time?
10:55:59 <jemfinch> er, at runtime.
10:56:37 <Heffalump> umm, I think at compiletime.
10:56:40 <Heffalump> But I'm not sure.
12:23:25 * Logan yawns.
12:38:56 <shapr> hi Logan 
12:39:17 <shapr> program quotations?
12:39:37 <Logan> Hi shapr.
12:39:47 <shapr> oh oh
12:39:52 <shapr> I remember what I was going to tell you
12:40:04 <shapr> about graphs
12:40:12 <shapr> http://c2.com/cgi-bin/wiki?WardNumberInManyProgrammingLanguages
12:40:43 <shapr> six degrees of kevin bacon, etc etc 
12:40:50 <shapr> they can all be thought of as graphs also
12:42:35 <shapr> so I've been working on a WardNumber implementation in Joy
12:42:48 <shapr> the idea of graphs is fascinating
12:52:00 <Logan> Heh heh.
12:52:09 <Logan> It's hard to go for long in computer science without running into graphs.
12:54:45 <Logan> So it's a single-source shortest path algorithm.
12:55:18 <Logan> Made easier by the fact that you're just counting the number of edges in the path to determine its length.
12:55:28 <Logan> So you can do a simple breadth-first search.
13:15:31 <shapr> Logan: er, ok
13:15:36 <shapr> I'll take your word for that
13:15:55 <Heffalump> no need to bother with Dijsktra :-)
13:16:17 <shapr> I have part of it done in Joy, but I donno if that'll interest anyone here
13:17:04 <Logan> If you have the complete graph representation, you can start at Ward's vertex and do a breadth-first traversal to label every vertex in the graph with its Ward number. :P
13:17:13 <shapr> yah!
13:17:16 <shapr> in fact
13:17:23 <shapr> that's what I've been thinking of doing
13:17:47 <shapr> but I can see that there's a more general solution
13:18:03 <shapr> well, at least one
13:18:14 <shapr> assuming the inputs of a set of pairs
13:18:30 <shapr> each pair representing a connection between those two things in the pair
13:18:40 <shapr> and then the inputs of a starting and ending point...
13:19:20 <shapr> I think one solution is take one step away from each start/end point in order, until you find a common connection
13:19:44 <shapr> so you could make a breadth-first shortcut traversal
13:19:46 <shapr> that way
13:20:05 <shapr> I'm getting curious what other kinds of solutions there are for graphs
13:20:34 <shapr> I'm also wondering what libraries are available for graphs in Java,Python,Haskell and Joy
13:20:57 <shapr> oh, I'd like to find Scheme and elisp libs as well ;)
13:21:12 <shapr> programming is truly the coolest thing in the world
13:21:18 <shapr> (well, except for women)
13:38:47 <Logan> You should try all-pairs shortest paths, in which case you can generate the WhoeverNumber for any pair of people.
13:38:58 <Logan> In O(n^3) time.
13:42:43 <shapr> I was thinking about doing a Kevin Bacon program
13:43:05 <shapr> put in the cast list from a number of movies
13:43:19 <shapr> and be able to solve for any pair
13:43:28 <shapr> I'd like to see how far I can stretch it
13:43:52 <shapr> plus my roomies are big into that kind of thing, and for once I could WIN one of those matches =)
13:53:49 <Logan> It's been done.
13:53:53 <Logan> On some web sites. :P
13:54:06 <shapr> heh
13:54:08 <Logan> You can type in any actor that's in the imdb and get back their bacon number.
13:54:10 <shapr> in Haskell?
13:54:18 <shapr> or Joy?
13:56:39 <Logan> I don't know what language it was implemented in.  Probably nothing special.
13:57:34 <Igloo> Is \"Erdos number not the acnoncial example, or is that just revealing of my biased general knowledge?
13:57:57 <Heffalump> yes, it is
13:58:16 * Heffalump 's is 3, which is nice :-)
13:58:26 <Igloo> :-)
13:58:48 <Igloo> Does the definition says you must be a co-author or is mention sufficient?
13:59:26 <Heffalump> co-author
13:59:45 <Igloo> Damn. Want to write a paper with me?  :-)
13:59:59 * Igloo discovers I had the \" in the wrong place
14:00:07 <Heffalump> did you?
14:00:23 <Igloo> If http://www.oakland.edu/~grossman/erdoshp.html is to be believed
14:00:24 <Heffalump> igloo: sure. Got a subject? :-)
14:00:28 <Heffalump> oh, yes
14:00:32 <Heffalump> it's Erd\"os
14:00:51 <Heffalump> sorry, I thought you were talking about LaTeX syntax
14:01:07 <Igloo> Subject, the first stumbling point of any paper
14:01:26 <Igloo> Do you want to write a foreword for my project writeup?  :-)
14:01:37 <Heffalump> I don't think that counts :-)
14:01:49 <Heffalump> anyway, write one with Oege and yours will be a minimum of 5
14:02:04 <Igloo> Do you mean maximum?
14:02:10 <Heffalump> yes, sorry
14:02:57 <Igloo> Doesn't count in a foreword way or a project way BTW?
14:03:24 <Heffalump> errm, either. A project isn't a publication, I can't be your co-author anyway, and a foreword isn't co-authorship
14:03:30 <Heffalump> (all afaik)
14:03:40 <Heffalump> s/co-author/& for it/
14:03:42 <shapr> why can't you co-author with Igloo?
14:03:53 <Igloo> shapr: It'd be uni rules
14:03:55 <Heffalump> I can, but not for his undergraduate project report
14:03:56 <shapr> oh
14:04:09 <Heffalump> (or indeed his PhD thesis when he writes that...)
14:04:13 <Igloo> I'm trying to think if that's true. I suspect it is as tfm and noodles did a joint project but seperate writeups
14:04:28 <shapr> I'd like to have a degree... any flavor will do.
14:04:39 <Igloo> thesis? I still haven't got funding yet (mutter mutter)  :-(
14:04:39 <Heffalump> you can do part-time ones generally, can't you?
14:04:40 <shapr> I have to find time to do that at some point.
14:04:51 <shapr> you need funding to do a thesis?
14:05:08 <Heffalump> igloo: you'll get something, and quite likely this.
14:05:19 <Heffalump> shapr: well, you need to pay fees and live while doing it
14:05:21 <Igloo> Well being able to buy food is nice
14:05:37 <shapr> that's true
14:05:42 <Igloo> Heffalump: I just wish they'd get back to me about it  :-/
14:05:42 <shapr> I have a similar problem with education
14:06:35 <Igloo> What was the paper you wrote, Heff?
14:06:51 <Heffalump> igloo: stuff on Latin Squares with one of my tutors for my Maths degree
14:06:52 <Igloo> The overview says "if u and v have published at least one mathematics article together"
14:06:59 <Heffalump> does it have to be mathematics?
14:07:25 <Igloo> Looks like it
14:07:50 <Heffalump> hmm.
14:07:59 <Heffalump> oh well, mine's still 3 :-p
14:08:10 <Igloo> :-)
14:08:27 <Igloo> But presumably Oege is no longer guaranteed to be at most 4?
14:08:36 <Heffalump> yeah
14:10:06 <Heffalump> (for the benefit of others, Oege was/is the supervisor of both of us)
16:17:08 <shapr> whee
17:17:53 <Logan> Hmm.
17:19:41 <Igloo> Hmm?
17:19:54 <Logan> What is the range of the Int type?
17:20:24 <Igloo> At least -2^29..2^29 plus or minus 1
17:20:47 <Igloo> (IIRC)
17:20:57 <Logan> Hmm, I seemed to have run out of numbers at around 2^16 earlier today.
17:21:01 <Logan> Though I might have coded it wrong.
17:21:40 <Logan> Well, converting to an Int from a String with read.
19:15:25 <Logan> Heh, can ghci give me a stack trace?
19:40:47 <Logan> I need to learn some debugging tricks.
23:33:57 <Logan> I just used Haskell to do some of my homework for me!
