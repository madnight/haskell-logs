02:14:11 <Janni> g'morning
02:16:53 <opet> hiya Janni 
02:52:09 <Vincenz> hello
02:52:15 <Vincenz> shapr :)
04:40:25 <Riastradh> Well, -I- like eating soup with forks.
04:45:32 <Marvin--> yeah, all you need is sufficiently many!
04:45:46 <Marvin--> I never understood that quit message
05:02:32 <Janni> re
05:25:30 * shapr yawns
05:29:44 <debug> hello
05:42:35 <shapr> @yow
05:42:36 <lambdabot> Why are these athletic shoe salesmen following me??
05:42:51 <shapr> hi debug 
05:42:55 <debug> yo
05:43:07 <debug> been coding lately?
05:43:10 <shapr> yes
05:43:15 <shapr> trying to
05:43:26 <shapr> I'm learning the HXmlToolBox
05:43:29 <shapr> what about you?
05:44:33 <debug> not much
05:44:46 <debug> the thing I tried to do in haskell didn't work... hugs ran out of memory pretty quickly
05:44:55 <shapr> what about GHC?
05:45:04 <debug> I didn't try it
05:51:40 <shapr> it might work better
05:52:13 <shapr> what did you write?
06:01:06 <debug> I was looking for combinations of polynoms to beat the karatsuba multiplication algorithm
06:01:30 <debug> I don't even know if it is possible, but I thought it would be worth a try
06:01:31 <shapr> oh
06:01:44 <shapr> did you find any improvements?
06:02:02 <debug> no, but I didn't get very far before hugs said "no more" :)
06:02:23 <shapr> I think you'll get better results from GHC
06:02:32 <debug> there are better algorithms than the karatsuba algorithm, so it is not a theoretical boundary
06:02:37 <debug> ok
06:02:46 <debug> otherwise I'll write it in C some day
06:03:06 <debug> if it runs in a day instead of a week, then that's probably worth it
06:03:37 <shapr> I'm having fun with my XML parsing.
06:05:19 <shapr> sort of
06:05:20 <shapr> :-)
06:06:48 <shapr> I have a random question
06:06:51 <shapr> for everyone..
06:07:02 <debug> ok
06:07:14 <shapr> in a recent comp.lang.functional posting, someone said "how can anyone learn a new language in a year"
06:07:33 <shapr> how long did it take you to learn your second language?
06:07:51 <shapr> I think going from english to swedish in a year sounds reasonable, possibly even easy.
06:08:06 <shapr> what about learning english when you know swedish?
06:08:31 <debug> the second language in sweden is usually english, but we're so saturated by it from TV and so on that you can't really isolate it as "studies"
06:09:14 <Lilith> did the person mean language as in human language or as in computer language? :-)
06:09:28 <shapr> so maybe I should revise my statement, "it's easy to learn a new spoken language in a year, if you live in the country of origin"
06:09:50 <shapr> Lilith: the person meant spoken language, they were talking about Haskell Curry, and whether he could have learned German in a year.
06:10:07 <Lilith> it depends on a few factors
06:10:10 <Lilith> yes and no
06:10:14 <debug> it depends on many factors :)
06:10:20 <Lilith> indeed :-)
06:10:32 <shapr> well, ok
06:10:56 <shapr> it wouldn't surprised to hear that someone had learned a new spoken language in a year.
06:11:08 <shapr> er "I wouldn't be surprised"
06:12:11 <Lilith> yes
06:12:17 <shapr> what would you say is a normal amount of time to learn a new language?
06:12:21 <Lilith> but how fluently you can speak it is another matter
06:13:23 <shapr> that's true
06:13:39 <shapr> of course, some native speakers aren't very fluent :-)
06:13:49 <shapr> I remember some people I knew in Alabama, USA.
06:13:56 <Lilith> and it's fairly easy to pick up basic language skills and carry on a simple conversation 
06:14:14 <Lilith> but less trivial if you're likely to speak with technical jargon
06:14:20 <debug> if you move to country X and live there for a year, only speak the X language, and your "occupation" is that you're a student, studying the X language full time, then that would probably help
06:14:33 <Lilith> that's true as well
06:14:52 <Lilith> although a friend of mine who was originally from germany
06:15:10 <Lilith> and recently moved  back to germany from australia
06:15:26 <Lilith> still has some problems with technical jargon in german after living in germany for a year
06:16:23 <shapr> I knew a girl from Leipzig who took her first geology class in Birmingham, Alabama; so she always thought about geology in English. She was a math major, but she could only do math in German.
06:16:49 <Lilith> that's not too surprising
06:19:05 <debug> if someone gives me a mathematical expression in spoken english, then I usually have to think a _lot_ more than the equivalent expression in swedish
06:19:29 <debug> s/think/think about it/
06:20:34 <shapr> did you take your Haskell classes in English or in Swedish?
06:20:44 <shapr> Lilith: are you originally from .au?
06:21:34 <Lilith> shapr: no. is it really obvious? :-)
06:21:51 <debug> I never really took any haskell class, it was part of the "basic programming courses", I think. and they were mostly in english
06:22:19 <shapr> Lilith: you don't sound aussie, but I was just guessing.
06:22:43 <shapr> Is it easy to tell where I'm from?
06:23:18 <Lilith> not exactly, without looking at your hostmask :-)
06:23:44 <shapr> I was born about ten thousand kilometers from here ;-)
06:24:33 <Lilith> that doesn't really tell me much i think :-)
06:24:42 <shapr> heh
06:24:52 <shapr> I was born in Alabama, I live in Sweden.
06:25:04 <shapr> Nörbotten(?)
06:25:24 <andersca> norr
06:25:29 <shapr> tack
06:25:30 <andersca> == North
06:25:32 <shapr> norrbotten
06:25:38 <shapr> what's botten?
06:26:18 <andersca> bottom
06:27:22 <shapr> so I live in the north bottom?
06:27:33 <shapr> neat
06:27:51 <shapr> Lilith: what country did you grow up in?
06:28:11 <shapr> (if you don't mind me asking)
06:28:30 <debug> andersca: how would you translate 'rike' into english?
06:28:38 <andersca> reich?
06:28:49 <shapr> kingdom?
06:28:53 <shapr> empire?
06:28:53 <debug> doesn't sound very english
06:28:57 <debug> hm
06:29:02 <Lilith> shapr: singapore.
06:29:04 <debug> kungarike = kingdom, but just rike?
06:29:20 <shapr> Lilith: cool! do you speak mandarin? cantonese?
06:29:32 <Lilith> i speak a few languages
06:29:42 <shapr> which ones?
06:29:46 <Lilith> but i'm a bit of an anomaly
06:29:58 <shapr> Haskell and Java? ;-)
06:30:00 <Marvin--> debug: realm?
06:30:02 <Lilith> english (of course) , mandarin, cantonese, german, malay
06:30:06 <debug> hm
06:30:14 <Lilith> shapr: sometimes, in email ;)
06:30:18 * shapr grins
06:30:24 <Marvin--> debug: sorry, there's no bijection between English and Swedish :)
06:30:34 <Lilith> it's actually nicer to express ideas in pseudo code then in ordinary human language sometimes
06:30:38 <debug> Marvin--: I was thinking about the meaning of 'Sverige' = svea rike, and the fact that we use rike for countries like France and Austria
06:30:38 <Lilith> much more concise :-)
06:30:44 <shapr> yah, code is like that.
06:31:03 <Marvin--> debug: well, in that case it means country
06:31:16 * Lilith starts getting ideas about category theory
06:31:23 * Lilith muses..bijection eh
06:31:25 * shapr has ideas about XML combinators
06:33:01 <Marvin--> arrrgh, this C code has six calls to dup or dup2 in 15 lines of code
06:33:16 <shapr> duplicate file descriptor?
06:33:45 <Marvin--> you don't want to know the trickery and hackery involved in the communication between the debconf frontends and backends
06:33:46 <andersca> gotta love the old unix apis
06:34:41 <Marvin--> actually, the original code only had two dup2 calls, I've been asked to preserve the original stdin and stdout on fsds 4 5 so I had to add two dup calls and two dup2 calls
06:34:50 * Marvin-- is on the brink of insanity right now
06:35:09 * shapr throws a safety harness to Marvin-- 
06:35:29 * Marvin-- looks at the safety harness and wonders why it says "rm -rf"
06:35:34 * shapr laughs
06:35:56 <shapr> Lilith: you have a nifty childhood
06:36:13 <shapr> I guess you don't have much opportunity to speak malay in .au ?
06:36:19 <Lilith> heh. not rm -rf * i hope
06:36:31 <Marvin--> no, it said "rm -rf cdebconf"
06:36:39 <Lilith> shapr: not much. plus i've forgotten a fair bit of it now
06:36:59 <Lilith> i'm trying to polish up my skills in german and malay
06:37:01 <shapr> I'm forgetting the little bit of finnish I used to know.
06:37:52 <Lilith> shapr: not much opportunity to speak mandarin either. most people prefer to speak english
06:38:37 <shapr> I'd like to learn mandarin, though I don't know if I'll get the opportunity to do it the way I'm learning swedish.
06:38:58 <shapr> I tried to learn from a friend of mine once, it was hard to get the tones right.
06:39:34 <shapr> I've heard that cantonese has more tones than mandarin, and that some asian languages have as many as twelve tones.
06:40:04 <Marvin--> I thought Swedish had quite a lot of tones too? (or maybe I'm confusing it with some other concept)
06:41:19 <Lilith> shapr: it's only 4 basic tones. but it does seem that non-native speakers have a lot of trouble with them
06:41:48 <shapr> Marvin--: it's like creating a language from four musical notes
06:42:08 <Lilith> i don't know what swedish is like, so i can't say
06:42:24 <Lilith> but i think it has to do with how our mind parses sound
06:42:24 <shapr> swedish is between german, english, and dutch
06:42:33 <shapr> in my opinion ..
06:43:19 <shapr> from what I remember, nye how ma was "highest lower higher" tone
06:45:03 <shapr> http://www.chinese-outpost.com/language/pronunciation/pron0015.asp
06:45:21 * Lilith blinks
06:45:41 <opet> how hard is english to learn for non-native speakers? I've always wondered
06:46:14 <shapr> Lilith: am I totally wrong?
06:46:47 <Lilith> opet: the words itself would not be hard. but the grammar is fairly difficult to grasp
06:46:57 <Lilith> mainly because english grammar is fairly inconsistent
06:47:38 <Marvin--> the fact that english is sort of both roman and germanic makes it a bit tricky too
06:48:00 <shapr> it's just a mutt
06:48:13 <shapr> I think the swedish word is "blinded" ?
06:48:16 <Lilith> shapr: i wouldn't quite put it that way. but if you can make a mandarin speaker understand you. it suffices
06:48:46 <shapr> blandad?
06:49:12 <shapr> engelska är blandad
06:49:22 <shapr> som katt är blandad
06:51:22 <Lilith> Marvin--: english and german descended from latin.
06:52:26 <debug> Marvin--: swedish only rarely uses different tones, like 'anden' and 'anden'  (that's the only example I can think of)
06:52:58 <opet> Lilith: decended, yes. but english especially got badly mauled on the way
06:53:00 <debug> ('the spirit' vs 'the duck' for those who don't know swedish :-)
06:53:08 <Marvin--> debug: tomten/tomten
06:53:13 <debug> yes
06:53:37 <debug> however, I don't think banan/banan qualifies as different tones
06:53:47 <debug> it's different vowels alltogether
06:54:00 <tmoertel> gooooood moooooooooooorning, #haskell!
06:54:09 <Lilith> morning tmoertel
06:54:13 <shapr> goood morning tmoertel!
06:54:17 <shapr> how ar ya?
06:54:30 <tmoertel> I'm well, thx.  You?
06:54:44 <shapr> writing Haskell for-pay!
06:54:44 <shapr> w00!
06:54:52 <tmoertel> really?  what's the job ?
06:55:06 <shapr> just "turn these ms.doc files into that XML flavor"
06:55:35 <tmoertel> are you parsing rtf, or reading the raw .doc format ?
06:55:40 <shapr> openoffice :: (ms.doc -> xml)
06:55:52 <shapr> and then hxmltoolkit :: xml -> xml
06:56:19 <shapr> I'm having some trouble duplicating various xslt functionality in this set of combinators though
06:56:49 <tmoertel> but arrows are *fun* !
06:56:53 <tmoertel> ;-)
06:57:06 <shapr> yes, arrows are fun
06:57:12 <shapr> are you doing something with arrows?
06:58:18 <Lilith> can anyone recommend a good book on category theory?
06:58:43 <Lilith> preferable a book that talks about how category theory relates to functional languages :-)
06:59:09 <tmoertel> shapr: no, I haven't found a need yet
06:59:09 <shapr> I've seen a "category theory for computer scientists" on Amazano
07:05:29 * shapr gives on the 'random hacking' method and goes for 'unit test first'
07:05:57 <shapr> has anyone here used HXmlToolBox?
07:10:09 <tetryl> yeah. it's heavy large..
07:11:15 <shapr> on the good side, I think I could use it to validate XSLT files even
07:11:32 <shapr> tetryl: do you have any XSLT-style demo code for HXmlToolBox?
07:11:49 <shapr> I haven't gotten past the FilterExample yet
07:14:41 <tetryl> shapr: no. it was too much for me..
07:16:56 <shapr> It can handle the OpenOffice DTD, which impressed me
07:24:51 <tetryl> Lilith: ftp://ftp.dcs.qmw.ac.uk/cpc/jon_hill/qmw681.ps.Z
07:25:49 <tetryl> abstract is here. http://www.dcs.qmul.ac.uk/publications/reports/qmw681/qmw681.html
07:28:31 <Lilith> tetryl: thanks :)
07:40:05 <shapr> hi elmex 
07:40:11 <elmex> shapr: hi shapr 
07:40:16 <shapr> what's up?
07:41:01 <elmex> i better don't tell. but i just thought about how to learn enough to understand neural networks
07:41:15 <shapr> they're cool
07:41:27 <shapr> and easier than you might expect
07:41:32 <elmex> hmm
07:41:47 <elmex> but how do build anythign useful with them?
07:41:53 <shapr> by training them
07:42:02 <elmex> eg. human brain, skynet...
07:42:06 <shapr> heh
07:42:10 <elmex> terminator
07:42:26 <elmex> i'm still watiting for some how-to-build-a-terminator on slashdot
07:42:48 <shapr> it's easy to make a neural network that can turn written letters into ascii characters with a decent success rate.
07:43:09 <shapr> or at least enough to be interesting
07:43:14 <elmex> hmm
07:47:27 <Lilith> hmm
07:47:45 <Lilith> so houw would you learn enough to build a neural network?
07:48:36 <elmex> Lilith, i know your father ;-)
07:52:15 <Vincenz> Luke, I am your father ;-)
07:52:49 * opet shakes his head
07:52:56 <Vincenz> Tenderfoot: if you have any specific neural net questions you're always welcome to ask
07:53:18 <elmex> Vincenz: how to neural net? ;)
07:53:28 * Tenderfoot is nethacking
07:53:28 <shapr> I'd suggest reading Kohonen's landmark works on backpropogation ;-)
07:53:30 <Vincenz> hehe...kind of a broad question
07:53:36 <shapr> actually there's probably something simpler nowadays
07:53:49 * shapr is xmlhacking
07:53:56 <Tenderfoot> :)
07:53:59 <Vincenz> I'd go for a standard feedforward backpropagation network
07:54:11 <Tenderfoot> between doing thesis, writing a erlang bot and nethacking :)
07:54:18 <shapr> erlang irc 'bot ?
07:54:23 <Tenderfoot> yes
07:54:49 <shapr> whee wrote one of those
07:55:10 <Tenderfoot> not the one in the debian distro?
07:55:12 <Tenderfoot> :)
07:55:28 * shapr looks
07:55:40 <Tenderfoot> mostly i'm trying to learn erlang..and writing a bot in the process
07:55:55 <shapr> I don't know
08:02:32 <Tenderfoot> http://www.zhongwen.com/bush/index.html
08:02:38 * Tenderfoot laughs
08:06:43 <shapr> I like lambdabot, though I didn't write it.
08:06:44 <shapr> @yow
08:06:45 <lambdabot> Sometime in 1993 NANCY SINATRA will lead a BLOODLESS COUP on GUAM!!
08:16:05 <elmex> lambdabot: hit me baby one more time
08:16:06 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
08:16:17 <elmex> lambdabot: please @listcommands
08:16:18 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
08:16:22 <elmex> lambdabot: @listcommands
08:16:22 <lambdabot> I react to the following commands: ["all-dicts","board","define","definitions","del-definition","devils","dict","dict-help","dump","easton","echo","elements","eval","flip-board","foldoc","fortune","gazetteer","get-definition","goodbye","hello","hitchcock","jargon","join","karma","karma+","karma-","leave","listchans","listcommands","listmodules","more","msg","part","ply","prelude","quit","reset-chess","resume","set-fuel","state","topic-cons
08:16:34 <elmex> lambdabot: @karma+ shapr
08:16:35 <lambdabot> shapr's karma has been incremented.
08:17:18 <shapr> yay, I'm good for the karma
08:17:37 <elmex> lambdabot: @state
08:17:37 <lambdabot> nothing yet
08:17:46 <shapr> yay, hasktags rocks
08:17:53 <shapr> @state foo
08:17:56 <shapr> @state bar
08:17:56 <lambdabot> foo
08:17:59 <shapr> @state baz
08:18:00 <lambdabot> bar
08:18:02 <shapr> @state quux
08:18:02 <lambdabot> baz
08:18:12 <shapr> elmex: @state is just a demo of per-module state
08:18:39 <elmex> ??
08:18:55 <shapr> @hello is the simplest lambdabot plugin.
08:18:56 <lambdabot> Hello world. is the simplest lambdabot plugin.
08:19:05 <opet> lol
08:19:15 <shapr> @state is the next step up
08:19:15 <lambdabot> quux
08:19:36 <shapr> once you understand those two, you know everything you need to know about writing lambdabot plugins
08:20:16 <andersca> @state sliff
08:20:17 <lambdabot> is the next step up
08:20:18 <andersca> @state sloff
08:20:18 <lambdabot> sliff
08:22:58 <shapr> I keep forgetting the immense usefulness of hasktags
08:23:45 <tmoertel> And M-.
08:23:54 <shapr> yah, exactly
08:23:58 <shapr> M-. and M-*
08:42:07 <Janni> I'd like to have the keyword "with" back, but for programming by contract, which is a technique I like very much. Guards aren't very beautiful for this purpose...
08:43:10 <shapr> what do you mean?
08:43:37 <shapr> tmoertel: are there any other useful tags commands?
08:44:06 * Vincenz notes that CS students (including a friend of him) at the college where he studied last year are being taught Haskell
08:44:12 <shapr> yay!
08:46:21 <Janni> "Programing by contract" is a special approach for programming actively supported for example by the language Eiffel (which is by the way the imperative OO language I like most). In every function you define requirements the parameters must fulfill and ensurements the function must fulfill after evaluation. If it the contracts aren't fulfilled, there was a big mistake in the function.
08:46:51 <Janni> In Haskell for example I'd program the factulty like this:
08:46:54 <shapr> you can
08:46:59 <shapr> use QuickCheck
08:47:02 <Janni> faculty n | n > 0 = ...
08:47:22 <Janni> There, the guard looks really nice, by the way...
08:47:24 <tmoertel> shapr: C-hi m emacs RET m tags RET  ; lots of good stuff here
08:47:31 <Janni> @fact QuickCheck
08:47:32 <lambdabot> Sorry, I don't know the command "fact", try "lambdabot: @listcommands"
08:47:35 <shapr> QuickCheck can do DBC, unit testing, and more
08:47:38 <Janni> Ahh, still...
08:47:43 <shapr> Janni: sorry, @fact is down till I import the old data
08:48:01 <shapr> tmoertel: hey, is your .emacs online?
08:48:04 <Janni> As long as you do lambdabot's job... ;)
08:48:08 <tmoertel> shapr: no, sorry
08:48:12 <shapr> Janni: hah, I do :-)
08:48:28 <shapr> tmoertel: think you will put it online at some point?
08:48:49 * tmoertel is overhauling my web site
08:49:02 <tmoertel> when I get my personal page online, I'll probably add lots of stuff to it
08:49:14 <shapr> spiffy
08:49:17 * Janni will have a look at QuickCheck later
08:49:45 <Tenderfoot> quickcheck looks pretty cool
08:50:10 <tmoertel> that's because it *is* pretty cool ;-)
08:52:02 <shapr> truly
08:52:24 * tmoertel notes that a little rain makes the grass grow quickly
08:53:53 * tmoertel thinks that Language.Haskell.Parser + gmap could be very useful
08:55:00 <shapr> can you explain gmap?
08:55:17 <shapr> is there a one-line summary? :-)
08:55:22 <Janni> tmoertel's conclusion: Quantity of rain and growth of grass are antiproportional
08:56:01 <tmoertel> gmap is an elegant way of writing programs that traverse mutually recursive data structures, e.g., parse trees
08:56:58 <tmoertel> e.g., to append "!" to every Haskell identifier:
08:57:09 <shapr> ohh
08:58:10 <shapr> visitor pattern?
08:58:30 <tmoertel> readFile "Main.hs" >>= \code -> Language.Haskell.Pretty prettyPrint $ everywhere (mkT (\x -> case x of HsIdent s -> HsIdent (s++"!"); y -> y)) parseTree where ParseOk parseTree = parseModule code
08:58:45 <shapr> I'm sure Marvin-- would like that
08:58:48 <shapr> Marvin--: you awake?
08:58:56 <tmoertel> shapr: no, it's like visitor on sterioids, much more flexible
09:00:40 <tmoertel> the (mkT (\x -> case x of HsSymbol s -> HsSymbol (s++"!"); y -> y)) part is where the magic occurs
09:01:15 <Marvin--> how does it work?
09:02:44 <tmoertel> mkT transforms a function of type a->a  (i.e., a function on a specific type a) into forall b . b -> b (i.e., for ANY type b)
09:03:00 <tmoertel> where ANY really means any type in class Term
09:03:15 <Marvin--> iik
09:03:22 <Marvin--> can I see the code?
09:04:05 <tmoertel> See http://www.cs.vu.nl/Strafunski/gmap/
09:05:15 <shapr> Cowgirl: are you Tenderfoot?
09:08:12 <Cowgirl> tenderfoot?
09:08:15 <Cowgirl> nick name?
09:08:18 <shapr> yes
09:08:24 <Cowgirl> no
09:08:26 <shapr> Cowgirl == Lilith ?
09:09:54 <Cowgirl> nope
09:10:02 <shapr> ok
09:10:06 <Cowgirl> HunterPrey
09:10:09 <Cowgirl> had that name before
09:10:11 <shapr> ah, I see.
09:10:18 <Janni> shapr: Cowgirl == crossbreeding between cow and female human *duck*
09:10:26 * shapr grins
09:10:27 <Cowgirl> get bored with the same name :)
09:10:34 <emu> cows are female
09:11:01 <Janni> That's not a barrier for modern genetics...
09:11:02 <emu> mismatched types
09:12:01 <Cowgirl> bull!
09:12:07 * shapr snickers
09:17:22 <Marvin--> tmoertel: okay, this is scary stuff
09:17:44 <shapr> Marvin--: how so?
09:17:55 <tmoertel> shapr: there are *no* vowels in the paper !
09:17:59 <tmoertel> ;-)
09:18:02 <shapr> uh?
09:18:05 * shapr looks
09:18:07 <Marvin--> anything involving rank-2 polymorphism is scary :)
09:18:13 <Marvin--> per definition!
09:18:19 <tmoertel> shapr: I'm joking.
09:18:29 <shapr> I didn't know polymorphism had multiple ranks?
09:18:54 <tmoertel> general polymorphism ...
09:18:55 <Marvin--> implementing generic programming using just rank-2 polymorphism and safe casting feels a bit like a functional programming version of mcgyver
09:19:08 <tmoertel> admiral polymorphism
09:19:23 <shapr> yes, sarge
09:19:42 <shapr> heh, FP mcgyver
09:19:48 <Janni> For those who know Mastermind: I'm implementing it and it's amazing how much cooler it in Haskell than in Java (have to do it with Java for university). Just look at this function. I needed about 30 for it in Java.
09:19:48 <Janni> hint input secret = [ '*' | (x,y) <- zip input secret, x == y ] ++
09:19:48 <Janni>     replicate (length secret2 - length $ secret2 \\ input2) '+'
09:19:48 <Janni>     where (input2,secret2) = unzip [ (x,y) | (x,y) <- zip input secret, x /= y ]
09:19:52 <esap> marvin: Heh, using that 'undefined' trick to extract type information is just evil.
09:20:13 <Marvin--> shapr:  runST :: (forall s. ST s a) -> a  is an example of rank-2 polymorphism
09:20:16 <Marvin--> esap: indeed
09:20:22 <Janni> Two words missing in my sentence above: "is" and "lines"
09:20:39 <shapr> Marvin--: oh, two params without explict type info?
09:20:41 <shapr> I see
09:21:11 <shapr> actually, "zip (+)" is rank-2 polymorphic then
09:21:13 <tmoertel> In the concluding remarks, "We are currently investigating options to support the key combinators cast and gfoldl efficiently by the GHC compiler."
09:21:24 <shapr> since one list could be [Float] and another could be [Int]
09:21:29 <Janni> BTW: The function returns a '*' for every guess at the correct place and a '+' for every correct guess at the wrong position...
09:21:46 <Cowgirl> tmoertel.....
09:21:59 <Cowgirl> u were telling me the other day about coloring coding haskell
09:21:59 <Marvin--> shapr: no, zipWith (+) :: Num a => [a] -> [a] -> [a]
09:22:05 <shapr> oh
09:22:27 <Cowgirl> i did M-x font-lock-mode ......but it only changes words in " "  to green
09:22:31 <Cowgirl> and nothing else
09:22:32 <shapr> Marvin--: but why?
09:22:38 <Marvin--> shapr: rank-2 polymorphism would be if you had a function foo :: (Num a => a -> a -> a) -> ...
09:22:48 <shapr> er
09:22:50 * shapr thinks about that
09:22:56 <shapr> Cowgirl: you're in the wrong mode
09:23:03 <shapr> do you have a .emacs file?
09:23:04 <andersca> didn't know that
09:23:05 <Cowgirl> shapr,  what do i need to do?
09:23:06 <Cowgirl> yes
09:23:08 <Cowgirl> got that file
09:23:15 <shapr> (setq auto-mode-alist (cons '("\\.hs$" . haskell-mode) auto-mode-alist))
09:23:15 <shapr> (setq auto-mode-alist (cons '("\\.lhs$" . literate-haskell-mode) auto-mode-alist))
09:23:26 <shapr> put those two lines at the bottom
09:23:43 <Marvin--> andersca: didn't know what?
09:23:50 <andersca> rank2 poly
09:24:03 * andersca ponders having a guinness
09:24:03 <Marvin--> ah
09:24:18 <Marvin--> it's how the ST monad can ensure "thread" safety
09:24:36 <Cowgirl> shapr,  got those lines in there!
09:24:39 <Marvin--> since everything must be polymorphic in the 's' type parameter
09:24:48 <Cowgirl> i think u told me about the other day, to put those lines in
09:25:01 <Cowgirl> and u said paste it anywhere right?
09:25:15 <shapr> Cowgirl: in that case, you need to set the %HOME% variable to point to the dir that contains your .emacs
09:25:41 <Cowgirl> oh yes...that does come up at the start.....how do i do that??  just new to xemacs :)
09:25:41 <shapr> for example, if you have your .emacs in c:\xemacs\.emacs
09:26:06 <shapr> then you need to put the line: SET HOME="c:\xemacs\"
09:26:10 <Cowgirl> yeah, got it in program files folder
09:26:11 <shapr> into your autoexec.bat
09:26:15 <shapr> at least, I think that's right
09:26:30 <shapr> anyone remember how to set environment vars in DOS?
09:26:48 <Cowgirl> can i use the windows based dos
09:26:50 <shapr> Cowgirl: there's another solution.... install linux ;-)
09:26:58 <Cowgirl> or does it have to be done straight in DOS?
09:26:59 <Cowgirl> lol
09:27:01 <Cowgirl> yes yes
09:27:05 <tmoertel> shapr: from w/in NT/W2k you must go to System control panel
09:27:20 <shapr> Cowgirl: what flavor of windows do you have?
09:27:22 * shapr thinks "bitter"
09:27:22 <Cowgirl> thats my next task :)
09:27:26 * shapr snrks
09:27:27 <Cowgirl> 98
09:27:42 <shapr> ok, then I think what I told you will work
09:27:51 <shapr> you may need to remove the trailing slash though, not sure about that
09:28:07 <Cowgirl> can i use the windows based DOS prog??
09:28:14 <shapr> what?
09:28:19 <shapr> oh
09:28:31 <Cowgirl> u know, sometimes u cant run dos progs in windows
09:28:36 <shapr> you need to open notepad, open c:\autoexec.bat
09:28:39 <shapr> and put the line in there
09:28:43 <Cowgirl> they actually have to run from dos, without windows running
09:28:49 <Cowgirl> ok
09:28:53 <Marvin--> shapr: Do you know the 'build' function used in deforestation?
09:29:00 <shapr> no
09:29:07 <shapr> should I?
09:29:28 <Marvin--> shapr: it's a very very cute example of rank-2 polymorphism
09:29:51 <shapr> I'll check it out then, when I have time ...
09:30:01 <Marvin--> shapr: the idea is that build takes a function as argument and calls it, passing (:) and [] as arguments (the function is supposed to produce a list)
09:30:20 <Marvin--> shapr: *but* the function is *only* allowed to create lits using its parameters (:) and [], not using explicit lists or list functions
09:30:45 <Marvin--> shapr: this is ensured with rank-2 polymorphism: build :: (forall a b. (a -> b -> b) -> b -> b) -> [a]
09:31:08 <Marvin--> shapr: i.e. it says "the function you give me better work for any damn functions I'll give ya"
09:31:22 <Cowgirl> my autoexec.bat file looks like this....
09:31:25 <Cowgirl> rem - By Windows Setup - LOADHIGH C:\WINDOWS\COMMAND\MSCDEX.EXE /D:CD1
09:31:30 <Janni> Is there a better solution than "sequence [ randomRIO (1, 6) | _ <- [1..4] ]"? Maybe something like a replicateM...
09:31:32 <Cowgirl> @ECHO OFF
09:31:33 <lambdabot> Sorry, I don't know the command "ECHO", try "lambdabot: @listcommands"
09:31:33 <Cowgirl> PROMPT $P$G
09:31:51 <Marvin--> Janni: sequence (replicate 4 (randomRIO (1,6))) ?
09:31:51 <Cowgirl> PATH=C:\WINDOWS;C:\WINDOWS\COMMAND;C:\;C:\CDROM
09:31:57 <Cowgirl> thats it
09:32:20 <shapr> Cowgirl: ok, add this line: HOME=C:\XEmacs
09:32:26 <Cowgirl> do i just add in SET HOME="c:programfiles\xemacs\"
09:32:29 <shapr> or whatever directory holds your .emacs
09:32:30 <shapr> sure
09:32:34 <Janni> Marvin--: Oh...
09:32:41 <shapr> Cowgirl: if that's really where it is...
09:32:43 <Cowgirl> ok!
09:32:48 <Cowgirl> thanx for ur help :)
09:32:55 <shapr> Cowgirl: oh wait
09:32:57 <Marvin--> shapr: isn't the type cute? :)
09:32:58 <Cowgirl> yeah
09:33:13 <Cowgirl> do i put SET HOME....not just HOME??
09:33:19 <shapr> Marvin--: I don't really understand it... it's either mindblowingly obvious, or mindblowingly obfuscated
09:33:23 <Janni> I didn't think that worked, but thinking about it, I come to the conclusion, that I have to hit my head with s.th. repeatedly. Hmm, don't have a baseball bat...
09:33:39 <shapr> Cowgirl: just "HOME=C:\PROGRA~1\XEMACS" I think
09:34:11 <shapr> Cowgirl: or maybe: HOME="C:\program files\xemacs"
09:34:31 <shapr> most windows systems have a space in the name of that folder
09:34:39 <shapr> to make life easy for users of course
09:34:49 <shapr> since anytime they try to change something their system explodes
09:34:53 <Cowgirl> ok, and since im in text....do i just hit save, or have to type in autoexec.bat   and then save??  cause dont want to save it as txt file
09:35:02 <shapr> Cowgirl: huh?
09:35:11 <tmoertel> shapr: http://www.haskell.org/hawiki/RankTwoPolymorphism
09:35:18 <shapr> Cowgirl: did you open the autoexec.bat file with notepad or xemacs?
09:35:24 <Marvin--> shapr: oh wait, it's supposed to be  build :: (forall b. (a -> b -> b) -> b -> b) -> [a]  (no forall a) or it'd be hard to put anything in the list! :)
09:35:25 <Cowgirl> notepad
09:35:42 <Marvin--> shapr: build is simply:  build g = g (:) []
09:35:45 <shapr> Cowgirl: then you should be able to just "save"
09:36:08 <shapr> Cowgirl: it won't take effect until you restart windows of course
09:36:28 <Cowgirl> and if its the wrong line will an error come up??
09:36:34 <Marvin--> shapr: so I can write a function foo:  foo cons nil = 1 `cons` (2 `cons` (3 `cons` nil))  and have  build foo :: Num a => [a]
09:36:44 <Cowgirl> should i save autoexec.bat on a disk??  to be safe?
09:37:00 <Marvin--> shapr: but if I try to say  foo cons nil = [1,2,3]  I'll get an error
09:37:17 <shapr> Cowgirl: if you want to, but I don't think that one line will damage anything
09:37:37 <Cowgirl> thanx for ur help shapr,  u'd think they'd make this a little easier!
09:37:39 <Cowgirl> :)
09:37:46 <Cowgirl> appreciate ur help and patience though :)
09:37:52 <shapr> Cowgirl: linux will increase your sanity, windows will not.
09:38:22 <Marvin--> insanity comes from running a program intended for unix on windows
09:38:22 <shapr> to misquote ESR "learning to program on windows is like trying to learn to dance while wearing a body cast"
09:38:28 <Marvin--> (and the other way around too...)
09:38:40 <shapr> actually, I can run many win32 programs just fine
09:38:42 <shapr> not all though
09:38:43 <Cowgirl> im completely aware of that fact.....and plan to install it....so dont worry, i will come to my sense soon :)
09:39:06 <Marvin--> shapr: I'm talking about ported programs, not run through things like wine
09:39:12 <shapr> oh, ok
09:39:14 <shapr> yah, that's true
09:39:36 <Marvin--> shapr: windows and unix have so *totally* different mindsets that "platform independence" is simply a joke
09:39:41 <shapr> the mame developers don't see why mame might want to be multi-threaded
09:39:53 <shapr> which sucks, since I have an SMP box :-/
09:40:09 <Marvin--> either you have to go with the least common denominator (which is too small to be useful) or you have to invent your own paradigm that's different from both windows and unix (lika java, mozilla...)
09:40:13 <Cowgirl> i've heard though that linux may not run well on a laptop, and thats all i have...u heard of that???
09:40:34 <Marvin--> linux isn't good at acpi yet, but I run Debian GNU/Linux on my laptop just fine
09:40:46 <shapr> on the good side, I built ghc 5.05 with --enable-threaded-runtime-system and now ghci runs three OS threads, it feels more responsive
09:40:46 * tmoertel is typing this from a laptop running Linux very well 
09:41:08 <shapr> Cowgirl: if you will be buying a laptop, I'd suggest you find out which ones work best with Linux
09:41:16 * tmoertel agrees
09:41:27 * Marvin-- hands out "GNU/" stickers to tmoertel and shapr ;)
09:41:35 <shapr> personally, I want an OQO strapped to my kinesis keyboard ;-)
09:41:48 <shapr> and some nice 3D goggles
09:41:53 * opet hand BSD stickers to Marvin-- 
09:42:04 <Marvin--> opet: BSD/Linux?
09:42:05 <Cowgirl> already have one....and will have it for a while...so stuck with it..its a gateway 2000.....why are there problems with linux and laptops??
09:42:09 <Marvin--> opet: ...interesting
09:42:21 <shapr> Cowgirl: because laptops don't work like normal 'desktop' computers
09:42:35 <shapr> they're expected to instantly hibernate when the cover closes
09:42:41 <shapr> they have to worry about the battery running low
09:42:48 <opet> Marvin--: well there's {free|net}bsd debian.. :)
09:42:53 <Marvin--> shapr: "normal" computers don't work like "normal" computers either, that's what you get with the cheap crappy PC architecture
09:43:06 <shapr> they need to adjust their CPU/LCD/hard drive usage according to various settings
09:43:15 <Marvin--> opet: I was under the impression that the correct name for that was Debian GNU/{Free,Net}BSD
09:43:17 <Cowgirl> so if i have it plugged in ALL the time,  is there still an issue with linux?
09:43:23 <shapr> Cowgirl: no, not at all.
09:43:29 <shapr> or at least, not that I know of :-)
09:43:31 <Marvin--> Cowgirl: it will probably get hot :)
09:43:43 <Marvin--> Cowgirl: but not dangerously so since the fans are normally hardware-controlled
09:43:46 <opet> Marvin--: I'll take your GNU/word for it. 
09:43:50 <shapr> Cowgirl: search google for linux and the model of your laptop
09:43:54 <Marvin--> opet: GNU/thanks
09:44:18 <Cowgirl> ok,  cause i rarely run it off the battery.    battery so used to being powered up that it loses battery quick.
09:44:24 <Cowgirl> yeah this can get pretty hot!!!
09:44:36 <Cowgirl> my PC modem gets so hot sometimes u cant touch it
09:44:39 <Marvin--> opet: and I'm not sure it's correct to say that there *is* Debian/freebsd yet :)
09:44:43 <Cowgirl> but bought an external one!
09:44:53 <shapr> there is Debian/hurd, though I haven't tried it.
09:44:55 <Cowgirl> u can switch the fans on or off in setup
09:45:04 <opet> Marvin--: well, there's a web page for it. does that count? :)
09:45:15 <Marvin--> shapr/opet: but no official release of either
09:45:29 <Cowgirl> if the fans are on, then of course it doesnt run full speed....but i prefer an uncooked laptop!
09:45:35 * Marvin-- grumbles that 11 architectures on top of Linux is damn well enough to keep us d-i people busy
09:45:47 <shapr> 11 is pretty good :-)
09:46:05 <Marvin--> adding hudr and *bsd too is enough to make me run away screaming
09:46:09 <Marvin--> hurd even
09:46:22 <elmex> do i hear hurd?
09:46:40 <Marvin--> luckily there's only hurd-i386 so far, not for all the archs
09:46:52 <elmex> hurd, that never finished OS started years before linux?
09:47:12 <shapr> yup
09:47:26 * elmex runs
09:47:27 <Marvin--> the good thing with free software, though, is that I can write my damn software and when someone complains that it doesn't work on their toaster because I'm a moron who can't write portable code, I can say, smiling, "patches welcome"
09:47:38 <shapr> yah, I like that too
09:47:55 <shapr> but then sometimes you get "I can't understand a bit of your Java code"
09:48:11 <Marvin--> that's when you reply "me neither, life's a bitch, isn't it?"
09:48:17 * shapr laughs
09:48:18 <elmex> lol
09:48:23 * shapr cackles
09:48:32 <elmex> that did hit ;)
09:48:34 * shapr adds to QuotePage
09:48:45 <Marvin--> QuotePage?
09:48:55 <shapr> on HaWiki
09:49:02 <Marvin--> url?
09:49:13 <elmex> url?
09:49:22 <shapr> HaWiki is sloooow today
09:49:31 <shapr> http://www.haskell.org/hawiki/QuotesPage
09:51:42 <Marvin--> yay, I'm in it already
09:51:49 <Marvin--> wait, is that good or bad?
09:52:59 <elmex> what is OCaml?
09:53:32 <Marvin--> Objective Caml
09:53:40 <elmex> hmm
09:53:44 <elmex> camel?
09:53:44 <Marvin--> object-oriented functional french ML
09:54:02 <shapr> http://www.haskell.org/hawiki/MartinSj_f6gren
09:54:16 <elmex> hmm Oz?
09:54:32 <Marvin--> shapr: uh, your point being?
09:54:48 <shapr> Marvin--: that moin supports lots of charsets
09:54:51 <shapr> unlike most wiki systems
09:55:15 <Marvin--> "lots" as in "latin1"?
09:55:40 <shapr> nah, lots
09:55:53 <Marvin--> what does "_f6" mean then?
09:56:18 <Marvin--> is it unicode character?
09:56:18 <shapr> iirc, the asian charsets require more complicated urls
09:56:22 <shapr> I don't remember
09:57:05 <elmex> shapr: what are 'monadic parser combinators' ?
09:57:51 <shapr> elmex: they're spiffy bits of code that can be plugged together to form more complicated parsers.
09:58:04 <shapr> for example, "char 'a'" matches the letter a
09:58:22 <shapr> many (char 'a') matches zero or more of the letter a
09:58:44 <shapr> oh, lemme show you some source...
09:59:42 <elmex> yea, gimme source =-)
09:59:43 <shapr> elmex: http://www.cs.uu.nl/~daan/papers/parsec.html for docs
09:59:49 <shapr> and http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/haskell-libs/libs/email/RFC2822.hs for a real-world usage
10:00:00 <shapr> oh cool, peti is adding QC tests for RFC2822
10:01:29 <shapr> elmex: the earliest paper about parsing combinators is the meijer at al paper. That paper shows off how well parser combinators and monads fit together.
10:01:47 <elmex> ah, ok
10:02:10 <shapr> elmex: http://www.cs.nott.ac.uk/~gmh//bib.html#monparsing
10:02:42 <elmex> shapr: thanks thanks... thats far more information i could read so fast ;)
10:03:45 <shapr> well, since lambdabot's @fact plugin is offline...
10:04:17 <shapr> yay, 52 clients on the channel
10:04:38 <shapr> we may actually break sixty this month if all the regulars show up at the same time.
10:05:59 <lament> 52 regulars, enough for a full deck of cards!
10:06:02 <shapr> heh
10:06:09 * lament opts to be the Joker
10:09:17 <elmex> wait, do we have some kind of ircd in haskell?
10:09:38 <shapr> no, not yet
10:09:42 <elmex> *spritz*
10:09:43 <shapr> not that I know of
10:09:52 <elmex> cool ;)
10:20:27 <shapr> how can I change the return value of a Haskell program?
10:20:52 <Igloo> System.exitWith IIRC
10:20:58 <shapr> aha, many thanks
10:21:16 <shapr> this will make HUnit much more useful to run from (compile)
10:22:59 <shapr> is there a convention for exit codes?
10:23:28 <shapr> I'm thinking exitWith zero for sucess, something for errors, and something else for failures
10:24:40 <emu> the set of positive integers can be labelled Q+, right?
10:24:49 <emu> by convention
10:30:57 <Marvin--> uh, Z+ you mean?
10:31:15 <Marvin--> Q is usually the rational numbers
10:31:34 <emu> doh
10:31:38 <emu> i knew i was mixing something up
10:31:53 <emu> thanks =)
10:41:04 <shapr> tmoertel: are you on the hunit-users mailing list?
10:43:09 <Cowgirl> shapr....i added this line to my autoexec.bat file,  and restarted win.......SET HOME=C:\PROGRA~1\XEMACS
10:43:20 <shapr> Cowgirl: did it work?
10:43:32 <shapr> oh, you probably don't need the SET 
10:43:35 <Cowgirl> when i open xemacs it doesnt come up with that thing about not being able to find the home directory
10:43:42 <shapr> oh that's good!
10:43:54 <Cowgirl> i just looked on the net and didnt have " " around that line
10:43:56 <shapr> Cowgirl: now, when you open a haskell file, is it immediately in haskell-mode ?
10:44:10 <Cowgirl> i typed in the font lock mode command
10:44:14 <Cowgirl> but still only green
10:44:15 <shapr> good idea to check on the 'net, I've forgotten much about windows.
10:44:22 <Cowgirl> words in " " are green and thats it
10:44:32 <shapr> Cowgirl: does your mode-line say "Haskell" ?
10:45:02 <shapr> if you hit C-h m, does it say "haskell mode" ?
10:45:23 <Cowgirl> let me see......
10:46:07 <Cowgirl> where is it supposed to say haskell mode?
10:46:13 <shapr> in the mode-line
10:46:39 <Cowgirl> Lisp Interaction mode:
10:46:52 <Cowgirl> that thing comes up in the bottom window
10:47:13 <shapr> that means you're in the wrong mode
10:47:39 <shapr> here's what my screen looks like with haskell-mode: http://kungens.kemi.fi/~shae/screenie.png
10:47:45 <shapr> you may not like my colors ;-)
10:47:54 <Cowgirl> lol :)
10:48:04 <Cowgirl> im not fussy at this stage!!
10:48:10 <shapr> but, you see how the top window says (Haskell Avoid Font) in the modeline?
10:48:13 <Cowgirl> its taken me this long, i could look at vomit colors!
10:48:42 <shapr> Cowgirl: ok, try this: create a directory c:\home
10:49:02 <shapr> then put change that one line in the autoexec.bat to HOME=C:\HOME
10:49:17 <shapr> and move your .emacs file into that directory
10:49:26 <Cowgirl> ok...but its an empty folder?
10:49:29 <Cowgirl> ok
10:49:41 <shapr> Cowgirl: can you email your .emacs file to me?
10:49:50 <shapr> I'd like to look at it.
10:50:16 <Cowgirl> sure.....
10:52:58 <Cowgirl> ok sending thru now, be there in a moment
10:56:07 <Cowgirl> the words in the *scratch* are blue.....they were black before,  but just nothing in a hs file, only green
10:56:12 <Cowgirl> still black
10:57:17 <shapr> ok, got it...
10:57:17 <shapr> just a moment
10:57:17 <Cowgirl> ok...THANX :)
11:00:22 <shapr> ok, I'm back
11:00:25 * shapr looks at the file
11:00:50 <shapr> aha, I think this file does assume it's in the xemacs directory
11:00:56 <shapr> that's what I wanted to check.
11:01:40 <Cowgirl> ok
11:01:58 <Cowgirl> so change the HOME directory
11:02:01 <Cowgirl> like u said before??
11:02:02 <shapr> right
11:02:09 <Cowgirl> i created the c:/home
11:02:14 <Cowgirl> put .emacs in it
11:02:17 <Cowgirl> restart windows?
11:02:24 <shapr> no, I've changed my mind ;-)
11:02:38 <Cowgirl> geeez louise!
11:02:43 <shapr> sorry :-/
11:03:02 <shapr> I think this line will work: HOME=C:\PROGRA~1\XEMACS
11:03:09 <shapr> without the word SET
11:03:18 <Cowgirl> lol......no thanx heaps....appreciate ur help!
11:03:25 <elmex> export HOME= ...
11:03:27 <elmex> ;-))
11:03:33 <shapr> that assumes that your .emacs file is in C:\program files\xemacs\.emacs
11:03:40 <shapr> Cowgirl: is that correct?
11:03:53 <Cowgirl> so export HOME=C:\PROGRA~1\XEMACS  .....
11:03:58 <Cowgirl> let me check
11:04:02 <Cowgirl> its in a few sub files
11:04:03 <shapr> noooo, don't export, that's linux!
11:04:07 <Cowgirl> i'll show u.....
11:04:10 <elmex> shapr: it's bash
11:04:10 <Cowgirl> ok :)
11:04:12 <elmex> not linux
11:04:22 <Cowgirl> ok
11:04:43 <shapr> elmex: I suspect that non-linux users don't know the difference, and may also not care until they start using linux.
11:04:55 <elmex> shapr: cygwin?
11:05:06 <elmex> shapr: i have seen bsd systems with bash ;)
11:05:14 <shapr> elmex: yes, but Cowgirl hasn't mentioned that at all
11:05:22 <shapr> elmex: bah :-P
11:05:24 <elmex> Cowgirl: are you female?
11:05:38 <Cowgirl> C:\Program Files\XEmacs\lib\xemacs\haskell-mode-1.44
11:05:48 <Cowgirl> its in that folder...the .emacs file
11:06:08 <Cowgirl> yes elmex....how'd u guess :)
11:06:21 <elmex> Cowgirl: you are a female haskell programmer?
11:06:42 <shapr> Cowgirl: ah I see, ok, copy that file to C:\Program Files\XEmacs\.emacs
11:06:53 <shapr> elmex: there are several, you know ;-)
11:07:06 <elmex> shapr: oh.. cool
11:07:08 <elmex> Cowgirl: marry me
11:07:11 * shapr sighs
11:07:19 <shapr> elmex: ahem. that's a bit off-topic here.
11:07:29 <elmex> shapr: hmm, ok
11:07:35 <Cowgirl> lol
11:07:39 <shapr> not that I haven't tried to teach my fiancee about Haskell :-)
11:07:58 <Cowgirl> shapr,  copy which file.....???
11:08:14 <Cowgirl> u mean change it in the autoexec file to that directory?
11:08:32 <shapr> Cowgirl: the .emacs file that you mailed to me, it should be in C:\Program Files\XEmacs\.emacs
11:08:36 <shapr> yes?
11:08:48 <Cowgirl> yes
11:09:00 <shapr> ok, that's good
11:09:28 <shapr> now the line in your autoexec.bat should be:
11:09:33 <shapr> HOME=C:\PROGRA~1\XEMACS
11:09:56 <Cowgirl> yeah
11:10:00 <Cowgirl> thats it
11:10:13 <shapr> and then, it should work, after you reboot.
11:10:16 <Cowgirl> thats what i changed it to....and the HOME message stopped coming up in haskell
11:10:25 <shapr> you mean in XEmacs
11:10:28 <shapr> I think
11:10:30 <Cowgirl> yeah
11:10:31 <Cowgirl> sorry
11:10:34 <Cowgirl> its 4am here!
11:10:56 <shapr> no worries
11:11:47 <Cowgirl> ok, i'll reboot....back soon
11:11:48 <Cowgirl> :)
11:11:50 <shapr> ok
11:11:57 <Cowgirl> thanx again for ur help!
11:12:07 <shapr> sure
11:14:26 <elmex> she wont marry me, will she?
11:14:32 <shapr> heh
11:14:33 <shapr> I have no idea
11:19:14 <Cowgirl> ok back
11:19:23 <Cowgirl> no error message comes up
11:19:26 <Cowgirl> but still only green
11:19:36 <Cowgirl> finds the home directory...did font lock mode
11:19:39 <Cowgirl> only green
11:19:49 <shapr> huh
11:19:54 <shapr> geez
11:19:57 <Cowgirl> lol
11:20:02 <shapr> ok, is your buffer in Haskell mode?
11:20:21 <Cowgirl> how can i check that again?
11:20:29 <shapr> see if it says Haskell in the mode-line
11:21:03 <Cowgirl> can see anything.....says fundamental font
11:21:31 <shapr> arghh
11:21:31 <Cowgirl> Raw-------Xemacs: ...file name i have open
11:21:33 <Cowgirl> thats it
11:21:40 <elmex> she is back ;)
11:21:41 <shapr> have you opened a .hs file?
11:21:43 <Cowgirl> ok.....what about the home directory
11:21:45 <Cowgirl> yeah
11:21:47 <shapr> hmm
11:21:54 <shapr> oh
11:22:15 <shapr> Cowgirl: try M-x getenv <enter> HOME <enter>
11:22:25 <shapr> what does it say?
11:23:04 <Cowgirl> ok....
11:24:02 <Cowgirl> "C:\PROGRA~!\XEMACS"
11:24:13 <Cowgirl> 1
11:24:14 <Cowgirl> not!'
11:24:28 <Cowgirl> "C:\PROGRA~1\XEMACS"
11:24:56 <Cowgirl> they can put a man on the moon,  but damn this is a joke!!!
11:25:05 <shapr> ok, one more thing to try...
11:25:10 <Cowgirl> ok
11:25:24 <Cowgirl> throwing the comp out the window???
11:25:34 <shapr> HOME="C:\Program Files\XEmacs"
11:25:46 <Cowgirl> with the space??
11:25:46 <shapr> Cowgirl: that probably wouldn't fix it, though it would relieve your frustration ;-)
11:25:55 <shapr> yes, with the space.
11:25:56 <Cowgirl> :)
11:26:38 <shapr> I hope that fixes it...
11:26:51 <Cowgirl> so do i, for both our sake!!
11:26:54 <Cowgirl> ok...rebooting
11:26:58 <Smerdyakov> sake_s_
11:27:08 <Cowgirl> dont get picky :)
11:27:16 <Cowgirl> brb
11:27:37 <shapr> hey, any Haskell, Emacs, and HUnit users; I've added one-button unit-testing code to http://www.haskell.org/hawiki/HaskellMode
11:27:46 <shapr> I'd like to hear any feedback
11:28:07 <shapr> tmoertel: especially if someone has ideas for integrating QuickCheck with UnitTestFirst ;-)
11:28:08 <elmex> (vim)
11:30:53 <Cowgirl> BUGGER!
11:30:56 <Cowgirl> still nothing
11:30:57 <shapr> :-(
11:31:06 <Cowgirl> its finding the directory
11:31:11 <Cowgirl> that error is gone
11:31:13 <Cowgirl> did font lock mode
11:31:21 <shapr> what does M-x getenv <enter> HOME <enter> give you?
11:31:26 <Cowgirl> now says fundamental in the bar
11:31:43 <Cowgirl> what about just the settings ??
11:31:45 <shapr> are you sure the file you're opening has .hs as the file extension?
11:31:51 <Cowgirl> like options
11:32:01 <shapr> what's the name of the file you're opening?
11:32:04 <Cowgirl> yeah, very sure
11:32:28 <Cowgirl> add.hs
11:32:35 <Cowgirl> just adds 2 numbers
11:32:41 <shapr> oy
11:32:51 * shapr thinks
11:33:00 <Cowgirl> its definately an hs file
11:33:01 * shapr checks xemacs.org
11:33:28 <Cowgirl> still only green shows in " "
11:34:18 <shapr> that's very weird.
11:34:31 <shapr> if you do M-x haskell-mode
11:34:39 <shapr> and then M-x font-lock-fontify-buffer
11:34:45 <shapr> do you get the colors you expected?
11:35:15 <Cowgirl> ....trying that now...
11:35:47 <Cowgirl> says no match to haskell mode
11:35:57 <shapr> huh?
11:36:06 <shapr> hmmm
11:36:14 <Cowgirl> yeah, i type in that first line....then says [no match]
11:36:33 <shapr> try M-x load-library <enter> haskell-mode <enter>
11:36:42 <shapr> then try M-x haskell-mode
11:37:05 <Cowgirl> [no match]
11:37:13 <Cowgirl> thats what it keeps saying when i type that in
11:37:26 <shapr> what happened when you did M-x load-library <enter> haskell-mode <enter>
11:37:26 <shapr> ?
11:38:44 <Cowgirl> cannot open load file: haskell mode
11:38:48 <Cowgirl> that what it says
11:38:52 <shapr> oh
11:39:05 <shapr> I see the problem
11:39:14 <shapr> it can't find the directory that holds haskell-mode.el
11:39:26 <Cowgirl> ok...
11:39:51 <Cowgirl> so what do i need to do....cause so far the comp is sitting on the window sill
11:40:31 <shapr> open your .emacs with XEmacs, put this line at the top: (add-to-list 'load-path "C:\Program Files\XEmacs\lib\xemacs\haskell-mode-1.44")
11:40:38 <Marvin--> mmm, ice cream
11:41:08 <shapr> you can run that line immediately by moving to the last parentheses on that line, and then hitting C-x C-e
11:41:30 <shapr> or you can save your .emacs and restart XEmacs, your choice
11:42:13 <shapr> once you've done one of those, then try M-x haskell-mode again
11:42:34 <Cowgirl> still no match
11:42:42 <Cowgirl> i put it at the very top of the file
11:42:56 <shapr> ok, close XEmacs and open it again
11:43:02 <shapr> er, waitasec
11:43:21 <shapr> put (require 'haskell-mode) as the last line of your .emacs
11:43:48 <shapr> Cowgirl: I'm sorry this is so much trouble :-/
11:44:41 <Cowgirl> no, i apologise
11:44:47 <Cowgirl> its still not working
11:44:55 <Cowgirl> no match
11:45:00 <shapr> sheez
11:45:06 <Cowgirl> i'll restart my comp
11:45:08 <Cowgirl> just to make sure
11:45:10 <shapr> ok
11:45:20 <shapr> I don't think it will help though :-(
11:45:23 <Cowgirl> brb
11:45:29 <shapr> ok
11:45:36 <Cowgirl> i know,  but just one of those things about comps u know...
11:45:44 <shapr> well, windows...
11:45:56 <Cowgirl> and if it doesnt work....i'll just leave it....i have taken up enough of ur time...and i appreciate ur help!!
11:47:34 <shapr> I'm sure we can figure it out at some point
11:47:52 <shapr> if it doesn't work this time, I'll think about it, maybe I'll come up with something
11:47:59 <Cowgirl> yeah
11:48:12 <Cowgirl> when u take a break from something, comes to u when u leave it
11:48:19 <shapr> yah, I agree.
12:21:47 <basti_> yo!
12:41:25 <shapr> y0
12:41:26 <shapr> wassup?
12:41:33 <basti_> shapr! :)
12:41:35 <basti_> not much :)
12:41:39 <shapr> hi basti_, how ar ya?
12:41:40 <basti_> i have my vordiplom now
12:41:47 <shapr> cool!
12:41:52 <basti_> (if you know this ;)
12:41:52 <shapr> you're educated!
12:41:57 <basti_> halfway yes ;)
12:42:14 <shapr> I'm doing my first for-pay Haskell work :-)
12:42:26 <basti_> woah :)
12:42:33 <basti_> I coded a n-tuple function for fun a week ago
12:42:43 <shapr> n-tuple?
12:42:52 <basti_> yeah like "give me all triples from list A"
12:43:02 <shapr> oh, interesting
12:43:05 <shapr> how does it work?
12:43:08 <basti_> uhm
12:43:10 <basti_> wait a sec
12:44:07 <basti_> *search*
12:47:34 <basti_> may i paste it here?
12:47:45 <shapr> if it's shorter than five lines, sure
12:47:56 <shapr> if it's longer, you can privmsg it to me
12:47:58 <basti_> >ntupel []     _ = []
12:47:58 <basti_> >ntupel (x:tx) 1 = [x]:(ntupel tx 1)
12:47:58 <basti_> >ntupel (x:tx) n = (map (\e->[x]++e) (ntupel tx (n-1)))++(ntupel tx n)
12:48:03 <basti_> here
12:48:07 <basti_> >ntupel :: [a] -> Integer -> [[a]]
12:48:27 <basti_> to add clearness ;)
12:48:50 <shapr> what would an example input look like?
12:49:02 <basti_> test=ntupel [1,2,3,4,5,6,7,8,9] 3
12:49:56 <shapr> nifty!
12:50:07 <basti_> < prolog oldskool! ;)
12:50:29 <shapr> I'll have to read that several times to figure out how it works ...
12:50:38 <shapr> after I'm done with this XML work
12:50:42 <elmex> indeed
12:50:47 <basti_> Ill write a comment 
12:50:59 <basti_> elmex? ;)
12:51:28 <Marvin--> basti_:  \e -> [x]++e  is the same thing as  (x:)
12:51:29 <elmex> basti_: oh, kuemmer dich nicht um mich ;-) ich hab von mathematik nur wenig ahnung. bin erst inner 12. klasse ;)
12:51:59 <basti_> Marvin-- oh
12:54:08 <Marvin--> basti_: easier to read :)
12:54:16 <Marvin--> basti_: and you don't need all those parentheses
12:54:31 <Marvin--> basti_: ntupel (x:tx) n = map (x:) (ntupel tx (n-1)) ++ ntupel tx n
12:54:36 <basti_> *nod*
12:55:43 <basti_> is there an easier form for the line before that one?
12:59:46 <Marvin--> not by much
12:59:58 <Marvin--> but I would probably try to use 0 as base case instead
13:00:14 <basti_> uh
13:00:21 <basti_> uhm
13:00:26 <basti_> doesnt make sense
13:00:34 <Marvin--> maybe not :)
13:00:36 <basti_> I think
13:00:48 <basti_> because [[]] would be the result then
13:00:57 <Marvin--> I said I'd try, not that it makes sense ;)
13:01:27 <basti_> oh
13:01:28 <basti_> ok ;)
13:06:38 * shapr wonders how to cast back and forth between XmlTree and XmlTrees
13:07:03 <shapr> aha!
13:16:45 <basti_> :)
13:17:13 <shapr> ok, I can filter XML trees now
13:17:46 <Smerdyakov> Do you know who works on programming languages for XML processing?
13:17:59 <shapr> Wadler?
13:18:08 <shapr> I've read a bit about XMLambda
13:18:58 <Smerdyakov> Benjamin Pierce!
13:18:59 <shapr> I like the HaXml approach of turning tags into types, but it seems harder
13:19:01 <shapr> who's that?
13:19:21 <shapr> oh, neat
13:19:26 <shapr> ew, C#
13:20:00 <shapr> Smerdyakov: have you read his book?
13:20:50 <shapr> the XDuce url is broken
13:21:20 <Smerdyakov> No, but I've met with him when I visited Penn.
13:21:40 <shapr> nice guy?
13:22:01 <Smerdyakov> Yup, but he has an earring!! ;-)
13:22:08 <shapr> cool!
13:23:58 <shapr> hey Smerdyakov, do you use emacs? is there an SMLUnit?
13:26:59 <Igloo> Are any generic people around?
13:27:09 * shapr is all in black and white, no logos at all.
13:27:18 <shapr> oh, never mind.. my tshirt has a logo
13:27:45 <shapr> kosmikus is the only one I'm aware of...
13:28:18 * Igloo just needs to find the difference between Strafunski, drift and GH
13:28:30 <shapr> GH?
13:28:36 <shapr> TH?
13:28:36 <Igloo> Generic Haskell
13:28:38 <shapr> oh
13:28:51 * Igloo will do some reading
13:29:12 <shapr> I've thought that much or all of Strafunski can be implemented with TH
13:41:33 <shapr> mmm, having a new working unit test every few minutes is addictive
13:42:30 <Igloo> :-)
13:43:01 <shapr> can vim run compile subprocesses like emacs?
13:43:32 <shapr> I put some nifty one-button testrunning code on the HaWiki HaskellMode page, dunno if you can adapt it to vim
13:43:53 <mgoetze> shapr: :!make
13:43:54 <elmex> shapr: hm
13:44:06 <shapr> mgoetze: can you run that with one button?
13:44:08 <elmex> mgoetze: :make does work too, doesn't it?
13:44:16 <mgoetze> elmex: maybe
13:44:18 <shapr> I've bound my "run all unit tests" function to F12
13:44:21 <mgoetze> shapr: what's a button?
13:44:42 <Igloo> You can :map <F12> :make or similar
13:44:55 <shapr> ah, cool
13:45:11 <Igloo> Might need to imap or cmap, and probably need <CR> on the end
13:45:40 * mgoetze does some thinking about shapr learning emacs to prove vim is better when he didn't even know too much about vim... hm....
13:46:13 <shapr> mgoetze: I used to know a lot more, it's been falling out of my head lately.
13:46:23 <shapr> even so, I should go back and relearn vim
13:46:25 <Igloo> I should learn how to use vim better
13:50:06 * tmoertel is enjoying a delightful cup of coffee
13:50:21 <shapr> grr, I wish GHC would say "we can't find this function, but it is one capital letter away from this other name, maybe you've mistyped?"
13:50:46 <shapr> hi tmoertel, have you seen the code I put on HaWiki?
13:50:49 <andersca> jikes does that
13:51:00 <tmoertel> so does Mathematica
13:51:11 <shapr> probably better to put it into hmake
13:51:22 * tmoertel looks a recent changes on hawiki
13:54:08 <tmoertel> shapr: gmap/Strafunski + Language.Haskell.Parser would be the perfect combination for writing SpellingOffByOneChecker
13:54:24 <shapr> hi neski 
13:54:58 <shapr> tmoertel: cool, I wonder if hmake is module enough to allow that
13:56:26 * tmoertel doesn't use hmake
13:58:59 <Darius> shapr: Helium probably catches that error
13:59:27 <shapr> good idea, I'll try Helium
14:00:08 <tmoertel> Helium also raises the pitch of your voice
14:00:55 * shapr grins
14:29:07 <Darius> Windows + 56k modem == why I use a download manager
14:29:18 * Darius also misses ReiserFS
14:29:33 <elmex> Darius: wget
14:37:35 <mgoetze> download mwhat? oh, you mean one of those things which allows windows users to do what anyone with a decent ftp client can, right...
14:38:12 <Darius> Actually a decent Windows ftp client can too
14:38:12 <elmex> yes
14:38:18 <elmex> but the windows clients are broken
15:04:04 * shapr finds more glimmerings of understanding
15:16:02 <shapr> oy
15:16:46 <Marvin--> owwww
15:17:33 <shapr> wassup?
15:17:34 * Marvin-- zapped by the discovery channel and saw scenes from an operating theatre with a guy who's got a big branch stuck through the gut and chest
15:17:41 <shapr> eww
15:17:42 <Marvin--> a *big* branch
15:17:49 <shapr> I'm glad I missed that
15:17:56 <Marvin--> they *sawed* it off, *inside* the guy's stomach
15:18:12 <shapr> hey, I'm trying to work
15:18:15 * shapr gicks
15:19:08 * Marvin-- zaps over to the sumo wrestling on eurosport instead :P
15:20:46 * shapr wiggles
15:24:34 * Marvin-- decides to have another whisky
15:32:13 <Marvin--> heh, in this case of a video with "X feat. Y" I actually knew who both X and Y are
15:32:31 <shapr> shocking
15:32:42 <Marvin--> but it was a pretty lame combination
15:32:50 <Marvin--> "Bustah Rhymes feat. Mariah Carey"
15:32:55 <Marvin--> he could've done it better without her :-)
15:32:57 <shapr> Coolio featuring Vanilla Ice?
15:33:11 <shapr> MarCoolio or whatever his name is
15:33:40 <Marvin--> it was a nice song, very nice swing
15:33:48 <Marvin--> Markoolio
15:33:55 * shapr is listening to System of a Down
15:33:55 <Marvin--> I think it's with a k anyway
15:34:02 <shapr> I'm dying for a new music :-/
15:34:07 <shapr> s/a/some
15:34:29 <Marvin--> hmm, I gotta find that track with "Ozzy Osbourne feat. Bustah Rhymes"
15:34:34 <Marvin--> pretty old one
15:34:46 <Marvin--> gotta love crossovers in music styles :P
15:35:16 <Darius> System of a Down is good stuff!
15:37:07 <shapr> yah, I like SOAD
15:37:37 <shapr> oh, trance control has some new tracks.. they're from Goteborg btw
15:38:16 * Darius should get to where he can play most of Toxicity (the album) again.
15:38:25 <shapr> I was surprised to find several mp3.com artists from Boden
15:38:31 <shapr> Darius: you can play an instrument?
15:39:04 <Darius> Guitar
15:39:43 <shapr> nifty!
15:48:37 <Marvin--> heh, I just realized the sheer number of movies that "Jay" and "Silent Bob" are in
15:49:16 <shapr> at least... four?
15:49:49 <Marvin--> pretty much any movie that Kevin Smith has directed ;)
15:50:12 <Marvin--> almost :9
15:50:27 <Igloo> Has anyone got a URL for a printf-in-Haskell implementation?
15:50:50 <Marvin--> Clerks, Mallrats, Chasing Amy, Dogma, Scream 3, ....
15:50:52 <elmex> wasn't there some FFI in ghc ?
15:51:09 <Igloo> Oh, I want real Haskell 98
15:51:14 <Marvin--> Igloo: do you want a polytypic implementation or a haskell98 implementation? :)
15:51:20 <Marvin--> oh, haskell 98, the I don't remember
15:51:31 <Igloo> Oh, a polytypic one would be interesting too
15:51:46 <Marvin--> I have a quote from Lennart Augustsson
15:51:58 <Marvin--> "the only reason I created Cayenne was that I wanted to type check printf"
15:52:09 * shapr cranks up DaftPunk
15:52:10 <shapr> mmm
15:52:26 <shapr> isn't Cayenne all about scary types?
15:52:57 <Igloo> Is Cayenne another drift/strafunski/generic haskell thing?
15:53:03 <Marvin--> dependent types
15:53:21 <Marvin--> http://www.cs.chalmers.se/~augustss/cayenne/index.html
15:53:27 <shapr> I thought Cayenne couldn't be typechecked or something?
15:53:33 <shapr> I don't remember the details..
15:53:49 <Marvin--> printf :: (fmt::String) -> PrintfType fmt
15:53:53 <Marvin--> PrintfType :: String -> #
15:55:03 <shapr> hi witten 
15:55:23 <witten> hey
15:55:36 <shapr> what's up?
15:55:48 <witten> just trying to figure out how "hiding" works
15:55:52 <witten> you?
15:56:06 <shapr> still figuring out HXmlToolBox
15:56:15 <Igloo> Anything hidden isn't imported
15:56:23 <shapr> hi tetryl 
15:56:28 <witten> Igloo: yeah, but it's only for the current module, right?
15:56:35 <witten> shapr: what's that?
15:56:35 <tetryl> hi shapr
15:56:42 <Marvin--> witten: yes, it affects the current namespace
15:56:45 <shapr> witten: http://www.fh-wedel.de/~si/HXmlToolbox/index.html
15:57:22 <witten> Marvin--: is there any way to make it affect other namespaces.. say, modules that import the module that has things hidden?
15:57:36 <shapr> each module has an export list
15:57:45 <witten> shapr: cool
15:57:51 <Marvin--> witten: simply not export the symbol
15:57:58 <witten> shapr: what're you using xml for?
15:58:12 <Marvin--> module Foo (...exports...) where 
15:58:14 <witten> Marvin--: this is from the Prelude, however. isn't that auto-imported?
15:58:28 <shapr> witten: feels like everything lately...
15:58:33 <witten> shapr: haha
15:58:35 <witten> true
15:58:37 <shapr> I do a lot of webdevelopment
15:58:43 <Igloo> Marvin: Generic Haskell is polytypic, right?
15:58:43 <witten> shapr: me too
15:58:58 <witten> shapr: this is for work or play?
15:59:10 <Marvin--> Igloo: I think Generic Haskell is based on PolyP which is polytypic...yes
15:59:11 <shapr> I've been using XML in Zope, J2EE, PHP, and ASP systems
15:59:19 <Marvin--> Igloo: but that's without racking my brains a whole lot
15:59:38 <shapr> microsoft makes an asp of themselves regularly
15:59:47 <witten> no pun intended..
15:59:51 * shapr grins
15:59:52 * Marvin-- yawns
15:59:55 <Marvin--> I think I'll hit the sack
15:59:56 <shapr> witten: it's for work
16:00:01 <shapr> g'nite Marvin-- 
16:00:07 <witten> shapr: you get to use haskell for work?
16:00:14 <shapr> yah, first time though ;-)
16:00:19 <witten> are you hiring? :P
16:00:24 <shapr> if I can make this work well, I'll probably get more Haskell work
16:00:27 <shapr> heh, not yet
16:00:32 <witten> nice
16:01:43 <witten> how does HXmlToolbox compare to, say, WashHTML for representing HTML/XML documents? or does it not have a way to specify them in your code?
16:02:33 <tetryl> is there any command line tool that can display docs of haskell libs, similar to perldoc?
16:02:46 <shapr> you can specify them, but HXmlToolbox is more about validating, transforming, swapping from html to xhtml, etc
16:03:07 <shapr> lynx and www.haskell.org ? :-)
16:03:18 <shapr> or there's the @prelude command in lambdabot
16:03:47 <witten> shapr: ah ok
16:04:00 <shapr> witten: I'm more interested in the XML transform stuff
16:04:13 <shapr> I'm trying to turn a bunch of ms.doc files into a custom xml flavor
16:04:17 <shapr> going via openoffice
16:04:36 <witten> shapr: I'm very interesting in the web application prospect.. I'm sick of PHP and I think something with Haskell may be much nicer
16:04:43 <witten> shapr: cool
16:04:46 <shapr> I agree
16:04:58 <shapr> I want a Haskell web app server.
16:05:04 <shapr> I think hws-wp is a good place to start
16:05:10 <witten> I'm working on one
16:05:25 <shapr> what are you going for?
16:05:26 <witten> basically I'm cloning the aspects of wash I like to teach myself haskell
16:05:32 <shapr> ah, nifty
16:05:43 <witten> and in the process make a web app server / framework / whatever
16:06:00 <witten> the cgi callback thing in wash looks really killer
16:06:16 <shapr> how it passes state?
16:06:29 <witten> yeah.. or the fact that it *does* :)
16:06:38 <shapr> yah, that is cool
16:06:46 <shapr> at least it's explicit
16:06:50 <witten> yeah
16:06:57 <shapr> the J2EE way of doing things gets hopelessly complicated very quickly
16:07:06 <witten> yeah
16:07:12 <shapr> zope is a lot better than J2EE, but...
16:07:37 <witten> and in PHP, like a good percentage of your app code is spent passing around variables from one script to the next, or from the same script to itself through multiple web page "loads"
16:07:40 <shapr> I still wish for referential transparency in a web app framework 
16:07:45 <shapr> right
16:07:49 <witten> referential transparency?
16:08:08 <shapr> means that each function call can be replaced by the result of that call
16:08:17 <witten> hmm
16:08:18 <shapr> functions are only described by their explicit inputs
16:08:31 <tetryl> how about mod_haskell?
16:08:46 <witten> shapr: haskell does that by default, doesn't it?
16:09:05 <shapr> witten: yes it does, but neither J2EE nor Zope do
16:09:11 <shapr> Java/Python
16:09:16 <shapr> tetryl: doesn't it use hugs?
16:09:16 <witten> tetryl: that just lets you run haskell code via apache, right? no web app framework
16:09:36 <witten> I just compile my haskell program and put it in cgi-bin :)
16:09:37 <shapr> yah, I'd like to have a real framework written in Haskell
16:09:47 <witten> shapr: me too
16:10:05 <shapr> on the other hand, I haven't tried mod_haskell, it might be wonderful ;-)
16:10:19 <witten> looks like it's only for writing apache modules
16:10:28 <tetryl> aha. mod_haskell is not a framework.
16:10:41 <shapr> Arnia has some ideas for writing a framework based on arrows
16:10:55 <witten> shapr: so what would be in your ideal haskell web app framework?
16:11:04 <witten> other than ref transparency?
16:11:26 <shapr> easy access to lots of internet protocols and related datatypes
16:11:34 <shapr> for example, there's no MIME parser for haskell
16:11:35 <witten> so, libraries
16:11:43 <shapr> though there is now an email parser
16:11:47 <witten> funny, I was just dealing with MIME crap yesterday
16:12:06 <shapr> xml-rpc, soap, other RPC protocols
16:12:15 <witten> that'd kickass
16:12:19 <shapr> yah, it would
16:12:32 <witten> soap in php is so un-fun :(
16:12:32 <shapr> I think I can write an xmlrpc module with HXmlToolbox
16:12:39 <witten> cool
16:12:54 <shapr> I tried with HaXml, but ran into problems with HaXml
16:13:44 <witten> like what?
16:14:01 <shapr> it doesn't handle all of XML yet
16:14:21 <shapr> happily, HXmlToolbox seems very solid and powerful
16:14:31 <shapr> it handles the OpenOffice document DTD with no problems
16:14:52 <witten> cool
16:15:09 <elmex> (handling OpenOffice is a powerful feature!)
16:15:19 <witten> heh
16:23:17 <witten> I think the ideal web app framework would mostly treat the coding process as if you're writing a normal application
16:23:37 <witten> and handle things like sessions and state transparently
16:23:51 <shapr> optional transparency
16:24:22 <witten> yah
17:42:56 <shapr> yay, I can do xslt-style processing now
18:05:30 * Janni is on for a last round...
18:06:43 * shapr bounces
18:06:50 <shapr> it's working!
18:08:21 <Janni> @fact milk
18:08:22 <lambdabot> Sorry, I don't know the command "fact", try "lambdabot: @listcommands"
18:08:31 <Janni> The factoid plugin? No, doesn't seem so...
18:08:37 <shapr> sorry, fact is down for the moment.
18:08:44 <shapr> I'll fix it soon as I can.
18:08:52 <Janni> Yes, yes, no problem :)
18:09:08 <Janni> What's working then?
18:09:23 <shapr> @listmodules
18:09:24 <lambdabot> I have the following modules installed: ["chess","dict","eval","fortune","hello","karma","more","state","system","topic","type","yow"]
18:09:24 <Janni> Was your bouncing plugin broken, and you got it fixed?
18:09:26 <shapr> heh
18:09:41 <shapr> I gave away my gateway box
18:09:45 <shapr> it had the database
18:09:56 <shapr> I have a backup copy, I just need to import the data
18:10:30 <Janni> It's not really important as long as you act for lambdabot...
18:10:40 <shapr> :-)
18:10:52 <shapr> milk is white, it comes from cows...
18:10:58 * shapr laughs
18:12:41 <lambdabot> Janni: shapr knows more than I, anyways.
18:13:01 <shapr> lambdabot: your knowledge of Haskell is greater than mine
18:13:01 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
18:13:07 <shapr> well, maybe
18:13:27 <lambdabot> shapr: No, I'm just faster at looking up documentation.
18:13:33 <shapr> heh
18:13:35 <shapr> I bet you are
18:13:51 <lambdabot> I don't think you'll ever find me writing a line of code in Haskell.
18:14:03 <shapr> Janni: are you putting lambdabot up to this?
18:14:26 <shapr> have you been talking to him when I wasn't listening?
18:14:40 <Janni> lambdabot : Don't be too sure about that. Maybe someone will give you a cool plugin, who will give you the ability...
18:15:31 <Janni> lambdabot : What about a mastermind plugin? Are you interested?
18:15:40 <shapr> oh, good idea!
18:15:47 <shapr> we can play mastermind against lambdabot
18:16:53 <Janni> OK. When I finished the program, I'll have a look at the plugin interface...
18:17:36 <Janni> I don't know, maybe today or tommorow, but surely in two days, I'll finish it.
18:17:44 <shapr> spiffy
18:18:43 <Janni> shapr: _You_ were controlling lambdabot's mind, weren't you? Or has anybody the possibility to apply mind-control on him?
18:18:51 <shapr> it wasn't me
18:19:33 <shapr> not just anyone can mind-control lambdabot
18:19:43 <shapr> you'll see if you look at the source ;-)
18:19:59 <Janni> Yeah, I guess it requires a lot of training and discipline, and talent of course...
18:20:10 <shapr> yes, the jedi powers are difficult
18:20:20 <Janni> Not to forget the karma
18:20:22 <Janni> @karma shapr
18:20:22 <lambdabot> shapr has a karma of 1
18:20:25 <shapr> this is not the monad you are looking for!
18:20:28 <shapr> um
18:20:34 <Janni> @karma Janni
18:20:34 <lambdabot> You have a karma of 0
18:20:49 <Janni> You see, it should be positive...
18:21:10 <shapr> @karma+ janni
18:21:10 <lambdabot> janni's karma has been incremented.
18:21:20 <shapr> @karma Janni
18:21:20 <lambdabot> Janni has a karma of 0
18:21:22 <shapr> oops
18:21:27 <shapr> @karma+ Janni
18:21:28 <lambdabot> Janni's karma has been incremented.
18:21:52 <Smerdyakov> Here is a link to funny: http://www.math.mcgill.ca/~dsavitt/GTM.html
18:23:09 <shapr> w00, I'm Robin Hartshorne's Algebraic Geometry
18:24:07 <shapr> g'day Cowgirl 
18:24:12 <Cowgirl> hey
18:24:19 <Cowgirl> had my 4 hrs sleep :)
18:24:23 <shapr> yay, lots
18:24:41 <shapr> I'm getting close to the start of my 4 hrs
18:24:58 <Cowgirl> oh lord....its not smart, been doing it all week
18:25:01 <Cowgirl> got to work today to
18:25:11 <shapr> what do you get paid to do?
18:25:22 <shapr> I'm being paid to write Haskell right now ;-)
18:25:25 * shapr cheers
18:26:12 <Cowgirl> work in a club, in the bar
18:26:18 <Janni> Yay! Congrats! What are you programming (if it's not a secret)?
18:26:28 <shapr> Janni: xml rewriting stuff
18:26:32 <shapr> using HXmlToolbox
18:26:39 <shapr> Cowgirl: are you old enough for that?
18:26:43 * shapr is joking
18:26:46 <Cowgirl> yeah 22
18:26:47 <Cowgirl> :)
18:26:58 <Janni> What is your module used then? S.th. specific?
18:27:28 <shapr> Janni: it converts ms.doc files into a custom XML flavor for an e-learning platform
18:27:39 <Janni> shapr: If she wasn't she'd probably be the youngest here...
18:27:46 <shapr> that's true.
18:27:56 <Cowgirl> shapr, how old are u?
18:28:00 <shapr> really old
18:28:02 <Janni> So you have to parse .docs?
18:28:05 * shapr looks at his license
18:28:12 <Janni> Cowgirl: Uhh yes, he is...
18:28:22 <Cowgirl> lol
18:28:33 <shapr> Janni: yah, I'm using OpenOffice to import the ms.doc files and and export the zipped XML sources
18:28:38 <Janni> Twice as old as I am...
18:28:50 <shapr> Cowgirl: I'm thirty one, but I look more like early twenties
18:29:02 <shapr> happily, people have stopped asking me for my ID in bars
18:29:04 <shapr> but only recently
18:29:08 <Cowgirl> lol
18:29:12 <Cowgirl> thats not old
18:29:20 <shapr> feels old sometimes ;-)
18:29:35 <Cowgirl> i have friends who are late 20's early 30's
18:29:52 <Janni> Oh, I'm almost 19. I thought shapr was about 35...
18:29:57 <shapr> Janni: :-P
18:30:01 <shapr> do I look thirty five to you?
18:30:18 <Smerdyakov> How does somebody find out what shapr looks like?
18:30:27 <shapr> look here --> http://kungens.kemi.fi/~shae/foto/
18:30:30 <Riastradh> Smerdyakov, by going to Sweden and finding out.
18:30:49 <Janni> Must have been the intellect, that made you seem mature to me...
18:30:55 <Cowgirl> shapr, what time is it there now?
18:30:56 <shapr> the Adam Chlipala picture is pretty spiffy ;-)
18:31:02 <shapr> Cowgirl: just after 3am
18:31:36 <Cowgirl> ur a night owl to!!, u get much sleep though?
18:31:37 <shapr> Smerdyakov: may I paste the url to your picture?
18:31:41 <Janni> Does mature rather have a good or a bad meaning?
18:31:53 <shapr> Janni: I think it depends on how you use the word :-)
18:31:59 <shapr> Cowgirl: sometimes
18:32:05 <shapr> I have a rush job to do this weekend though
18:32:54 <shapr> Smerdyakov: now you'll recognize me at ICFP, yah?
18:33:27 <shapr> Cowgirl: is your computer still on the windowsill?
18:33:31 * shapr snickers
18:33:42 <Janni> Am I right when I say, that most of us #Haskell'ers are Europeans?
18:33:51 <Cowgirl> i brought it in, it was cold last night :)
18:33:57 <Riastradh> Janni, shapr is from Alabama.
18:34:00 <Cowgirl> but it may go back out on the ledge today
18:34:09 * shapr laughs
18:34:26 * Riastradh is often thought to be European, and would like to be European...but neither of those count as -being- European.
18:34:33 <shapr> yah, same here.
18:35:02 <Janni> I rather referred to the preferred location...
18:35:04 <shapr> Cowgirl: are you a computer science student?
18:35:36 <Cowgirl> no
18:36:12 <Janni> What kind of person is then interested in functional programming? (referring to occupation)
18:36:24 <Cowgirl> anyone know much about digital cameras,...sorry off the topic
18:36:37 <Cowgirl> i found one on ebay, seems to good to be true though
18:36:46 <Cowgirl> http://cgi.ebay.com/ws/eBayISAPI.dll?ViewItem&item=2927537546&category=30005&rd=1
18:36:52 <shapr> if something seems too good to be true.... it usually is.
18:37:16 <shapr> Smerdyakov: hey, where are there more pictures of you?
18:37:39 <Janni> Oh, in other words: How did you get in contact with FP, Cowgirl?
18:37:40 <Cowgirl> true!
18:38:31 <Cowgirl> FP???
18:38:39 <Riastradh> Functional Programming.
18:38:40 <Janni> Functional Programming / Haskell
18:38:50 <Smerdyakov> shapr, there are several on my web site
18:39:08 <Smerdyakov> [Sorry, I was away.]
18:39:31 <Janni> shapr: lambdabot should use the factoid plugin on one word questions if he has an appropriate entry (I think I already mentioned that)
18:39:55 <Cowgirl> school
18:40:17 <Smerdyakov> shapr, hm... you look genuinely Swedish =)
18:40:22 <shapr> heh
18:40:24 <shapr> thanks, I think...
18:40:53 <shapr> Smerdyakov: I can only find one
18:41:00 <shapr> Cowgirl: do you program in other languages also?
18:41:21 <Cowgirl> i did a little pascal, assembler, machine, html, javascript
18:41:28 <shapr> nice range :-)
18:41:30 <Cowgirl> but just the bare minimum really
18:41:40 <Cowgirl> mostly in highschool and that was 4 yrs ago
18:41:51 * Riastradh does English and a small subset of French, and nothing else.
18:41:55 <Cowgirl> remember it,  well thats another story!
18:42:02 <Janni> OOP would be a good completion for this range
18:42:05 <Smerdyakov> shapr, you have to poke around in the archives.
18:42:19 <Janni> OOP = Object oriented programming
18:42:45 <Cowgirl> Janni, i used delphi a bit
18:42:49 <Cowgirl> when doing pascal
18:42:58 * Janni urghs
18:43:08 <Cowgirl> made a game once,  tic tac toe
18:43:20 <Cowgirl> thats about it :)
18:43:57 <shapr> Smerdyakov: nifty stuff
18:44:08 <Janni> I didn't have good experiences with Delphi. It's not my kind of "language". I suffered when I did a little job with it...
18:44:26 <shapr> Smerdyakov: I also really enjoyed Focault's Pendulum
18:44:35 <Janni> It's not bad for creating GUIs fast, but I disklike creating GUIs.
18:44:51 * Riastradh has only liked creating GUIs with Cocoa's InterfaceBuilder.
18:45:03 <shapr> I've only built GUIs with Java
18:45:07 <shapr> it wasn't that thrilling.
18:45:10 <Riastradh> shapr, have you a Mac?
18:45:20 <shapr> Riastradh: nope, never owned one
18:45:30 <Riastradh> Oh well.
18:47:30 <shapr> I'd like to...
18:47:33 <shapr> I used to repair Macs
18:49:17 <Darius> Janni: I'm thoroughly American and have no interest in Europe (but maybe Asia)
18:49:33 <shapr> I just like to travel.
18:49:43 <shapr> I'll probably move back to the US at some point.
18:50:21 <Cowgirl> would u move back to alabama??
18:50:30 <Cowgirl> shapr, i used to live in florida
18:50:41 <Cowgirl> went to a community college there for 2 years in 2000
18:50:49 <shapr> How did you like it?
18:51:00 <Cowgirl> well i was actually born in IL
18:51:06 <Janni> I want to move a bit in the north, it's too hot for me in Germany. But I doubt I'll ever do it. I'll see...
18:51:15 <Cowgirl> but moved to australia when i was 4
18:51:15 <shapr> Cowgirl: you're a US citizen?
18:51:29 <shapr> nifty
18:51:40 <Cowgirl> yes,   dual,   australian/american
18:51:45 <shapr> cool
18:51:52 <shapr> I'd like to have dual citizenship.
18:51:59 <Cowgirl> lived in australia most my life,  dad still lives in FL
18:52:11 <Smerdyakov> shapr, you know.... after seeing your picture, I can totally picture you bouncing, saying the things you type here, etc.. =)
18:52:28 <Darius> I may visit Germany sometime.  I took the language all of high-school, but can't speak it worth a damn. (American public education and all that)
18:52:40 <Cowgirl> lol
18:52:56 <shapr> Smerdyakov: well, I really do bounce... 
18:53:08 <shapr> especially lately, now that I have a unicycle :-)
18:53:33 <Janni> Smerdyakov: And headbanging too :)
19:12:45 <Janni> MUHAHAHAHAHAHAHA!
19:12:53 <shapr> ?
19:13:38 * Janni is laughing as crazy as an evil profressor can laugh when he's got the perfect plan for world domination and/or destruction
19:15:08 <Janni> I just got a almost perfectly working version of Mastermind programmed in Haskell with about 1/5 of the effort, 1/10 of the code, 13/3 of the code-beauty and 17/4 of the fun to do the same in Java
19:15:18 * shapr laughs
19:15:22 <shapr> good numbers
19:15:55 <Janni> Only rough estimations, but I'm really being serious
19:16:24 <shapr> I understand, I have similar results when I compare code in Java and Haskell
19:16:55 <Janni> I just began to program and somehow I suddenly was at the point to run the program and get to play the game. I'm really surprised, that Haskell could still amaze me like that
19:17:16 <shapr> it's a nice language
19:17:23 <Janni> I'm talking like some advertising guy, right? :)
19:17:31 <shapr> you sound like me ;-)
19:17:33 <Janni> And it's all for FREE :)
19:17:37 * shapr laughs
19:20:00 <Janni> Hey, that's a conversation I really like. I have to save the last few lines. Me, showing off my and Haskells sk1llZ and other person laughing about my jokes and admiring my work :)
19:20:47 <shapr> writing good code, making funny jokes, takes practice
19:21:29 <Janni> What a pity, this person isn't a female and about my age...
19:21:38 <shapr> yah, too bad
19:24:00 <Smerdyakov> You are awash in a sea of pity.
19:25:17 <Janni> s/pity/hormons (Really have to do s.th. about that)
19:25:32 * shapr grins
19:25:38 <shapr> time for me to fall over
19:25:42 <shapr> g'nite all
19:26:04 <Janni> Sleep well!
19:28:41 <Janni> Can I get "getLine" do line buffering somehow, or is using the stdin handle the way to do it?
19:33:43 <Darius> Wouldn't changing the buffer on stdin, change it for getLine.
19:34:46 <Janni> Just tried it. Doesn't work. I'm using hGetLine now...
19:37:46 <Janni> Hrm... After "hSetBuffering stdin LineBuffering ; hSetBuffering stdout NoBuffering ; input <- hGetLine stdin" the inputted characters aren't to be seen anymore...
19:42:28 <Janni> Aww crap. I don't like when the birds start "singing" when I'm still awake.
19:43:23 <Darius> Yeah, those damn birds are loud.  Makes it hard to get to sleep.
19:44:50 <Janni> I don't have problems to sleep with them, but somehow the night mood, which I like very much, is gone...
19:45:08 <Janni> "sleep with them" just doesn't sound right...
19:46:09 <Darius> I agree.  Oh well, sometimes there are breath-taking dawns.
19:47:22 <Janni> Oh, I didn't think about that. Maybe I'll go outside for a look before sleep, good idea.
19:57:40 <Fractal> I'm trying to write a haskell program. I'm using ghc... I have to use  "ghc -package net myfile.hs" on the command line and "import Network" in the file, right?
19:58:21 <Janni> Only if you want to use the functions in the Network module, yes...
19:58:41 <Darius> If you are using networking stuff yes.  I think -package network is newer (if you have any problems try that instead)
19:58:58 <Fractal> -package network doesn't exist
19:59:14 <Fractal> And -package network and import Network don't work
19:59:28 <Fractal> It says "Could not find interface file for `Network'"
19:59:30 <Darius> Using GHC 5.04.x?
19:59:44 <Fractal> The Glorious Glasgow Haskell Compilation System, version 5.02.2
19:59:54 <Darius> That might be it.
20:00:30 * Darius has only used 5.04 and higher.
20:00:43 <Fractal> But:
20:00:44 <Fractal> doug@saturn:~/haskell/dns$ ghc-pkg -l
20:00:44 <Fractal> gmp, rts, std, lang, concurrent, data, net, posix, text, util,
20:00:44 <Fractal> hssource, greencard, xlib, HGL
20:00:45 * Darius is also thinking about using 5.05 exclusively
20:01:07 <Fractal> I obviously have the -net library
20:01:12 <Janni> Fractal: -package net and import Network doesn't work?
20:01:17 <Fractal> Janni : Ya
20:01:38 <Darius> Try import Network.Socket (I think)
20:02:17 <Fractal> Nope...
20:02:18 <Janni> Hmm. import Network is OK. (At least on my 5.04.3)
20:02:41 <Janni> Could you be more specific (your input, ghc's error message)?
20:03:29 <Fractal> OK
20:03:35 <Fractal> Here's my file, tp.hs:
20:03:36 <Fractal> module Main( main ) where
20:03:36 <Fractal>   import Network
20:03:36 <Fractal>   main = putStr "hi"
20:04:07 <Fractal> Here's what I do:
20:04:08 <Fractal> doug@saturn:~/haskell/dns$ ghc tp.hs -package net
20:04:08 <Fractal> tp.hs:3:
20:04:08 <Fractal>     failed to load interface for `Network':
20:04:08 <Fractal>         Could not find interface file for `Network'
20:04:52 <Darius> Do other packages work?
20:04:55 <Fractal> Any ideas?
20:05:14 <Fractal> Er, what should I try?
20:05:30 <Janni> Your input works fine for me. Some configuration mistake I guess (but I have no idea what kind of)
20:05:51 <Darius> How about import FiniteMap and -package data.
20:06:38 <Fractal> Heh... something different anyways...
20:06:39 <Fractal> doug@saturn:~/haskell/dns$ ghc tp.hs -package data
20:06:39 <Fractal> collect2: ld returned 1 exit status
20:06:45 <Fractal>  /usr/bin/ld: cannot find -lreadline
20:07:06 <Riastradh> Add -L<path to libreadline>
20:07:26 <Fractal> No, that's fine... It seems to find the header file anyways...
20:08:59 <Janni> Hrpf! I'm still stuck with my getLine-Problem. I want a line-buffered input (correct working backspace, etc.) and the input to be seen. I think I already achieved that sometime, but I'm stuck...
20:10:07 <Darius> Doesn't the shell usagely line buffer (whether you want it or not) while stdin is unbuffered (by the program)?
20:10:27 <Darius> "usagely" I don't even know how that works.
20:10:29 <Janni> Cowgirl: yee-haw!
20:10:55 <Cowgirl> oh paaaleeeasse!!
20:11:25 <Darius> S'rry ma'am.
20:11:29 <Cowgirl> :)
20:12:31 <Janni> I was testing with hugs. Maybe ghc(i) does it right. But I have to adjust a few things (damn different libraries!)
20:14:11 <Janni> Ah yes, as I suspected. ghci works fine...
20:14:41 <Cowgirl> janni
20:40:26 <Fractal> Hmm... What do I have to do to be able to use hClose, hPutStr, etc?
20:40:32 <Fractal> In ghc
20:41:21 <Fractal> Neverming... got it
20:41:25 <Fractal> You gotta import IO
20:43:09 <Fractal> And, my ghc only seems to have Socket, not Network, in case you were wondering...
20:48:52 <Janni> G'night, all.
21:59:28 <seth_> How do I convert an Int to a String padded with leading zeroes to some length, such as 2 or 4?
22:14:04 <dennisb> seth_: pad n x = x ++ replicate (n-length x) ' '
22:14:19 <dennisb> well, no. But similar
22:14:32 * dennisb just woke up 2 minutes ago
22:14:39 <dennisb> :-)
22:14:49 <seth_> dennisb: ok, so I'll look up pad.  You are saying replicate the character 0 and use it to pad
22:14:56 <sloptaco> who else is in this room?
22:14:58 <dennisb> I don't think there are nice number formating functions, is ther..
22:15:12 <dennisb> seth_: I guess that is the way to do it
22:15:28 <seth_> thanks
22:16:23 <dennisb> there is no pad function in the prelude, I just wrote down the above function (without reading exactly what you wanted :-)
22:18:42 <dennisb> This is probably what you want: lpad c n x = replicate (n-length x) c ++ x
23:10:32 <cp_amazing> hiho
