02:07:04 <Marvin--> morning dennis
02:08:27 <dennisb> Good Day Marvin--
02:09:00 <dennisb> It's hot today, I should really get out instead of spending all my time in front of the computer...
02:09:06 <Marvin--> amen
02:09:15 * Marvin-- just has waaaay too much to do
02:09:37 <Marvin--> and I'm kinda peeved that my case transformations were so damn ineffective *grmbl*'
02:31:40 <andersca> morning
02:31:55 <andersca> dennisb, Marvin--
02:34:17 <Marvin--> morning andersca
02:34:22 <Marvin--> oh dear, I've forgotten about my laundry
02:34:23 * Marvin-- rushes
02:39:11 <saz> a/w 3
02:39:14 <saz> oops :)
05:00:59 <elmex> ehehe
05:01:12 <elmex> i just happen to write somethnig like: let ... in bla where ...
05:17:46 <shapr> @yow
05:17:47 <lambdabot> Yow!  I'm imagining a surfer van filled with soy sauce!
05:33:09 <o3> re
07:15:33 <shapr> y0
07:15:37 * shapr boings
07:15:42 * shapr sings loudly
07:15:56 * Riastradh implorbs.
07:16:03 * shapr explorbs
07:16:06 <shapr> y0 Riastradh 
07:26:33 * shapr bounces
07:26:39 <shapr> wassup?
07:26:42 <shapr> anything exciting happening?
07:26:51 <shapr> hi thelsdj
07:26:54 <Riastradh> Not really.
07:27:01 <shapr> hello themus 
07:27:11 <shapr> we have more new nicks
07:27:32 <Riastradh> I'm wishing Haskell had an ML-like module system (OCa|S)ML had a Haskell-like typeclass system.
07:27:47 <shapr> I've heard the ML mod system is spiffy, what's spiffy about it?
07:28:15 <Riastradh> It's sort of a meta-language.
07:28:30 <Riastradh> Structures are values in this meta-language, and signatures are types in this meta-language.
07:28:50 <Riastradh> Functors are the functions of this meta-language.
07:28:51 <shapr> sounds like the kind system in Haskell
07:29:00 <Riastradh> The 'kind' system?
07:29:25 <shapr> yah, types have kinds
07:29:41 <Riastradh> Elaborate, please.
07:30:26 <shapr> I think it's meta-types
07:30:27 <shapr> but I'm not sure
07:36:16 * shapr grins
07:36:18 <shapr> http://members.optushome.com.au/blyth22/Metallica.jpg
07:37:13 <Riastradh> Haha.
07:38:04 * Riastradh wishes the record companies would realize that they're completely doomed and just die.
07:38:12 <shapr> yah, really
07:38:17 <shapr> but they'll struggle for a few more decades
07:39:28 <o3> shapr: i think modules in ml can be parameterised, like how haskell has parameterised types
07:39:40 <Riastradh> Yes -- with functors.
07:41:02 <Riastradh> Actually, now that I think about it, I can't think of any situation in which functors would be preferrable to typeclasses...
07:41:28 <Riastradh> To create set modules, you might say:
07:41:37 <Riastradh> functor MakeSetModule (Elt : OrderedType) =
07:41:38 <Riastradh> struct
07:41:42 <Riastradh>   type elt = Elt.t
07:41:48 <Riastradh>   type t = ...set type...
07:41:56 <Riastradh>   ...insert operations on t here...
07:42:01 <Riastradh> end
07:42:06 <Marvin--> that's sort of like multi-parameter type classes in Haskell, isn't it?
07:42:11 <Riastradh> er, 'datatype t', not 'type t'.
07:42:30 <Marvin--> class Ord e => Set s e where add :: e -> s e -> s e ...
07:42:51 <Riastradh> ...while in Haskell, you just say:  union :: Ord elt => Set elt -> Set elt -> Set elt
07:43:04 <Riastradh> Well, yeah, you could do that, too.
07:43:47 <Riastradh> And then you'd have more polymorphism than with functors.
07:44:04 <o3> i didn't know you could have default functions for typeclasses until a few days ago :(
07:44:24 <shapr> let's write Haskell in a Nutshell and get O'Reilly to publish it
07:44:32 <Marvin--> shapr: that'd be cool
07:44:36 <o3> shapr: i've been tempted :)
07:44:43 <Riastradh> But I like the structure and signature stuff, as well as having submodules and stuff.
07:44:51 <Marvin--> http://members.optushome.com.au/blyth22/creationism.jpg.gif  hohoho
07:44:52 <shapr> we could start it on HaWiki
07:45:10 <Riastradh> shapr - Saying crazy stuff like that is where the coolest things come from.
07:45:50 <shapr> One of my talents is saying crazy stuff.
07:45:55 <o3> shapr: http://www.ilbbs.com/oracovers/
07:46:05 <Riastradh> Presumably now, in order to ensure that thing stays true, we have to write it.
07:46:55 <shapr> truly
07:47:07 <o3> hmm, that site's a bit broken right now, the fonts aren't working properly
07:47:38 <Marvin--> o3: cute :)
07:48:16 <shapr> http://www.haskell.org/hawiki/HaskellInaNutshell
07:48:58 <Riastradh> Damn.  I was about to say something witty, but I forgot it.
07:49:11 <Riastradh> I hate when that happens.
07:49:46 <shapr> well, quick, fill in part of the nutshell
07:51:47 <shapr> what else fits into the nutshell?
07:53:30 <Riastradh> What about a 'Learning Haskell' O'Reilly book?
07:53:47 <shapr> I'd rather start with a quick reference or nutshell book
07:53:57 <shapr> actually, examples for *every* prelude function might be better
07:59:58 <Riastradh> What would the Haskell mascot be?
08:00:41 <Marvin--> chicken curry? *ducks*
08:00:50 <shapr> heh
08:02:53 * Marvin-- drools some more over The Frozen Throne
08:03:22 <shapr> warcraft III expansion?
08:03:33 <Marvin--> yeah
08:04:12 <shapr> me too
08:04:54 <shapr> want want
08:05:02 <shapr> I've played all the other heroes into the ground
08:09:33 <Riastradh> What happens if two people edit the same page at the same time on the HaWiki?
08:09:41 <shapr> I dunno
08:09:43 <shapr> try it
08:10:41 <Marvin--> yay, race conditions
08:11:58 <Marvin--> shapr: hey, wanna play a game on battle.net?
08:12:44 <shapr> not at the moment...
08:12:47 <shapr> I don't have windows
08:12:55 <shapr> I play at a friends house
08:12:58 <Marvin--> oh, yeah, that'd be a problem :)
08:13:24 <Marvin--> I have three reasons for keeping windows around, and they are a) War3, b) SC, c) Civ3
08:13:47 <shapr> we've gotten to the point where a team of the two of us can beat two teams of two, and six other singles
08:14:06 <Marvin--> huh?
08:14:18 <shapr> we play against ten computer opponents
08:14:26 <Marvin--> eek
08:14:39 <Marvin--> I haven't really played against the computer, but I guess it's easier when you're two
08:15:05 * Riastradh could never even beat two computer opponents in SC.
08:15:15 <Marvin--> I've played 2v3 SC games, in which case you just have to survive the first rush and then you've won
08:15:17 <Riastradh> ...with two other teams on my side.
08:15:30 <o3> Marvin--: get mac os x, all three games are available for it too ;)
08:15:53 <Marvin--> Riastradh: beating the computer 1v1 is pretty easy, beating four computer opponents in an FFA game is pretty easy too
08:16:10 <o3> for Marvin-- definitions of "pretty easy"
08:16:21 <Riastradh> Marvin - Yeah, but 'pretty easy' for you is very different for me -- I rather suck at the game.
08:16:22 <Marvin--> beating two opponents is kinda hard since they'll both rush you
08:16:29 <o3> (i can do it too, i just wouldn't call it universally easy :)
08:16:40 <shapr> though it's easy to beat rush with humans in SC
08:16:46 <Marvin--> o3: I said "pretty easy" not "incredibly easy" :)
08:16:57 <o3> bleh, humies
08:17:03 <shapr> just put a bunker between your barracks and your command center, and put four marines in it..
08:17:05 <Marvin--> shapr: yes, but getting a double protoss rush on you is still not wonderful
08:17:11 <shapr> whenever the opponents attack, repair the bunker
08:17:27 <shapr> in that case, put a fireguy in the bunker too
08:17:31 <shapr> fireguys wipe out protoss
08:17:38 <o3> starcraft is too unbalanced in favour of humans
08:17:48 <shapr> I thought it favored protoss
08:17:48 <Marvin--> o3: in the early game yes, late game, Zerg are pretty good
08:17:57 <shapr> I can whip butt with protoss
08:18:12 <Marvin--> it's hard to do anything against a swarm of well-managed guardians
08:18:19 <o3> i disagree.  there's not much which can stop battlecruisers + science vessels
08:18:27 <shapr> I can kill battlecruisers
08:18:48 <shapr> :-)
08:18:51 <Marvin--> o3: er, plague comes to mind, mind control comes to mind...
08:19:02 <shapr> ok, everybody bring your copy of starcraft to HW
08:19:05 <shapr> =)
08:19:10 <Marvin--> polymo-eep, wrong game ;)
08:19:22 <shapr> plague is powerful!
08:19:38 <shapr> dark templars can tear a massive hole in your forces way too fast
08:19:40 <Marvin--> shapr: even meaner is terran+zerg vs protoss... plague + emp == serious eekage
08:19:49 <o3> Marvin--: i think all things being equal, BC+science force will kill anything, even a well-managed defiler/hydra/guardian group, or anything protoss have
08:20:12 <shapr> the best combo I've found is circles of photo cannons with four siege-mode tanks inside of them
08:20:51 <d-bugd> StarCraft is a fav :)
08:20:53 <Marvin--> o3: a nice tank push is icky too
08:20:54 <shapr> follow that up with an arbiter teleporting it siege-mode tanks
08:21:09 <shapr> does everyone teleport siege-mode tanks?
08:21:16 <o3> Marvin--: siege tanks can't hit BCs :)
08:21:19 <Marvin--> when playing teams yes
08:21:30 <Marvin--> o3: of course not, but they can tear big wholes in your base
08:21:31 <shapr> I've only played in a small set group of people
08:21:45 <shapr> o3: thing is, you lose when there are zero buildings 
08:21:58 <o3> sure
08:22:07 <shapr> so a small sacrificial air force and three groups of zealots can win almost any game
08:22:19 <Marvin--> and since the tanks are so much cheaper and lower tech than your battle cruisers, I'll have a gazillion tanks by the time you have four BCs
08:22:59 <o3> Marvin--: i found it was a major problem with team play, if the human side can be protected for a while while they build up
08:23:03 <shapr> easy way to win is five protoss gateways and three forges to upgrade attack and protoss shields, and zealot happy feet of course
08:23:05 <Marvin--> can you irradiate hydralisks under dark swarm with a science vessel?
08:23:34 <shapr> I thought dark swarm was only about not being able to fire *out* of it?
08:23:39 <o3> Marvin--: yes, dark swarm only stops ranged attacks; irradiate is just area effect
08:23:41 <shapr> isn't it like the corsair web?
08:23:46 <Marvin--> o3: aha
08:24:10 <Marvin--> shapr: no, you can only attack units under dark swarm with melee (or area effects, apparently) attacks
08:24:12 <o3> that's the problem: against zerg, you just irradiate everything.  against protoss, you emp.  bcs just mop up
08:24:15 <shapr> oh
08:24:28 <shapr> emp isn't enough
08:24:40 <o3> and while you can kill the science vessels, zerg+protoss take too much micromanagement compared to humans, where you just point'n'click
08:25:16 <shapr> o3: you coming to HW?
08:25:24 <shapr> you guys should join the HaskellCraft effort :-)
08:25:29 <shapr> write an RTS with Yampa
08:25:33 <Marvin--> I usually play random race, so I suck with all of them ;)
08:25:33 <o3> Haskell Workshop?  hehe, no
08:25:54 <Riastradh> Where is HW?
08:25:56 <shapr> Marvin--: what's the easiest race to play in w3 ?
08:25:57 <Marvin--> Uppsala
08:25:58 <shapr> Riastradh: uppsala
08:26:02 <Riastradh> Oh.
08:26:03 <Riastradh> When is it?
08:26:16 <shapr> it's part of the PLI get-together
08:26:18 <Marvin--> shapr: I don't know, it's a lot of micromanagement in all of them
08:26:29 <shapr> yah, autocast spells are really useful
08:26:44 <shapr> human healers on autocast is nice
08:26:54 <Marvin--> yes, the humans' autocast heal is nice, but underpowered
08:26:59 <Marvin--> the orcs' healing wards simply rock
08:27:06 <shapr> it's great when combined with brilliance aura
08:27:22 <Marvin--> you just need so many priests in order for them to be everywhere
08:27:22 <shapr> I usually have four or five priests with one autocasting inner fire
08:27:33 <Marvin--> yeah, me too
08:27:37 <shapr> brilliance aura means they build up spellpoints very quickly
08:27:39 <Riastradh> When is this 'PLI get-together?'
08:27:55 <Marvin--> and three sorceresses or so, depends on what the opponent is using (i.e do I need polymorph or not?)
08:27:55 * o3 really must go back to writing thesis
08:27:56 <shapr> it's the same time as ICFP
08:28:02 <Riastradh> Hmm.
08:28:03 <shapr> oh, I never use sorceresses
08:28:08 * Riastradh might be able to go to HW, then.
08:28:09 <shapr> just one for curse
08:28:09 <Marvin--> are you kidding? Slow rocks
08:28:20 <shapr> or slow, or whatever it is
08:28:23 <Riastradh> Will you be there, shapr?
08:28:29 <Marvin--> slow :) it's undead that have curse
08:28:30 <shapr> Riastradh: signs point to yes
08:28:36 <Riastradh> Whee.
08:28:37 <shapr> undead are great fun
08:28:43 <shapr> but hard to play
08:29:04 <Marvin--> dread lord + mass ghouls can tear an unexperienced player to pieces :-)
08:29:10 <shapr> why the dread lord?
08:29:13 <Marvin--> sleep
08:29:15 <Marvin--> sleep
08:29:15 <Marvin--> sleep
08:29:16 <shapr> oh
08:29:25 <Marvin--> and vampiric aura
08:29:29 <shapr> yah, that's nice
08:29:37 <shapr> I prefer the orc minotaur
08:29:41 <shapr> he's the most powerful imho
08:30:05 <shapr> his aura increases attack and move speed, and his ultimate is reincarnation
08:30:19 <Marvin--> I usually pick the farseer for first hero, because of feral spirits, and the tauren as second
08:30:35 <shapr> I can go either way
08:30:42 <shapr> I'm not so impressed with the blademaster
08:30:44 <shapr> what good is wind walk?
08:30:59 <shapr> oh, mana burn is *great*
08:31:01 <Marvin--> me neither
08:31:10 <Marvin--> yeah, the demon hunter is the definitive choice when playing NE
08:31:20 <shapr> you can fry enemy heroes and magic users so fast with mana burn
08:31:30 <Marvin--> and the PotM as second, to get the trueshot aura
08:31:40 <shapr> we've been using the third guy a lot lately
08:31:51 <shapr> treants, entangle, and the ultimate healing
08:31:53 <Marvin--> the KotG is good, but harder to play
08:32:19 <Marvin--> sleep is just better than entangle
08:32:27 <shapr> I'll have to try that more
08:32:46 <Marvin--> yes, you can wake your hero up, but it draws focus from battle control, and level 3 sleep has so seriously short cooldown it's scary
08:32:47 <shapr> I like stomp and thunderclap
08:33:01 <Marvin--> thunderclap is better, isn't it?
08:33:05 <Marvin--> I like the MK
08:33:09 <shapr> mk?
08:33:11 <Marvin--> mountain king
08:33:17 <shapr> ah, I'm not so impressed with him
08:33:17 <Marvin--> sheesh, get with the abbreviations ;)
08:33:25 <shapr> I've only been playing a coupla weeks ;-)
08:33:50 <Marvin--> storm bolt is *so* nice against heroes
08:33:57 <shapr> we're playing on two 450MHz with 256mb of ram it gets soo slooooow with big maps
08:34:02 <shapr> really? I haven't used storm bolt much
08:34:10 <shapr> I'll try him next chance I get
08:34:10 <Marvin--> level 3 storm bolt deals 300 damage and 5s stun (9 to a non-hero)
08:34:14 <shapr> yow
08:34:25 <shapr> I'll play with sleep and storm bolt
08:34:38 <Marvin--> he's my first hero for humans, always, and then I pick paladin or archmage depending on how the game turns out
08:34:49 <Marvin--> i.e. which aura do I need the most
08:34:49 <shapr> paladin is easy to play imho
08:35:01 <shapr> especially as first hero
08:35:01 <Marvin--> I mean for second hero
08:35:23 <shapr> for MK do you start with thunderclap?
08:35:50 <Marvin--> just like the farseer, demon hunter and dread lord, he's good for early creep hunting, but the demon hunter and dread lord only get better and better, while the farseer and the paladin aren't all that impressive in the late game
08:35:55 <Marvin--> yeah, it's very good for creep hunting
08:36:12 <Marvin--> I usually alternate between thunderclap and storm bolt until level six when you get avatar, which is simply scary
08:36:23 <shapr> I'm not so impressed with avatar
08:36:32 <shapr> but I do like the infernal
08:36:36 <Marvin--> oh yes
08:36:45 <shapr> starfall is nice too
08:37:00 <Marvin--> did you know that the death knight's animate dead is getting a LOT better in the expansion?
08:37:11 <shapr> that would be nice
08:37:18 <shapr> it's not very powerful right now
08:37:22 <shapr> reincarnate is *much* better
08:37:26 <Marvin--> the animated units get invulnerability...eep
08:37:31 <shapr> yikes
08:37:48 <shapr> reincarnate with a bunch of upgraded knights is great
08:38:00 <Marvin--> uh, you mean resurrection
08:38:03 <shapr> er, yes
08:38:12 <shapr> can you resurrect the steam tanks?
08:38:13 <Marvin--> the trick for the undead player is to do it first :-)
08:38:19 <shapr> I've never found much use for the tanks
08:38:19 <Marvin--> only organic, I think
08:38:34 <Marvin--> me neither, I like the mortar teams a lot though, best siege unit in the game IMO
08:38:45 <shapr> yah, they're powerful
08:38:50 <shapr> not very fast, but lots of damage
08:39:05 <shapr> one mortar team can take out a ziggurat if they're careful
08:39:46 <shapr> I've been thinking that the blademaster was designed as an assassin, but I can't figure out how to use him
08:39:50 <Marvin--> well, it means you don't have to waste food on dragging along peons to repair your siege weapons, they get healed just as other units
08:39:56 <shapr> maybe wind walk into a group and then bladestorm?
08:40:09 <Marvin--> perhaps, but anybody with see invis will detect him anyway...
08:40:20 <shapr> that's true
08:40:31 <shapr> maybe he's good for maps without town portal scrolls for sale?
08:40:42 <Marvin--> and if nothing else, you sure have something for detect invis at your base
08:40:45 <Marvin--> perhaps, yes
08:40:52 <Marvin--> mirror image is okay, though
08:40:56 <shapr> yah, it's nice
08:41:07 <shapr> especially if he has a item to make him tougher
08:41:21 <Marvin--> and something that's very underestimated IMO is the PotM's Scout
08:41:30 <shapr> how so?
08:41:42 <shapr> how is it useful?
08:41:46 <Marvin--> because scouting is so bloody important, at least when you're playing a non-beginner
08:42:16 <Marvin--> Scout gives you an indestructible, flying scout... I mean, hello!
08:42:17 <shapr> I've only played against computers, I dunno
08:42:33 <Marvin--> the farseer's farsight is only useful at level two and higher, at level one it reveals too little
08:42:45 <shapr> I luv chain lightning
08:42:49 <shapr> it's demoralizing :-)
08:43:06 <Marvin--> heh, yeah
08:43:09 <Marvin--> so is devour :P
08:43:12 <shapr> yes!
08:43:16 <shapr> that's a *cool* ability
08:43:21 <shapr> I love to devour an abomination
08:43:26 <Marvin--> or a knight
08:43:37 <shapr> well, knights don't do so much damage
08:43:42 <shapr> do they?
08:43:47 * shapr doesn't remember
08:43:54 <Marvin--> but they have a *lot* of hp, they're hard to kill
08:43:57 <shapr> that's true
08:44:07 <shapr> and with priests to back them up, they can live a long time
08:44:12 <Marvin--> exactly
08:44:17 <Marvin--> priests are good eatin' too, they melt fast :P
08:44:20 <shapr> otoh, the basic orc grunts are almost as tough
08:44:27 * dennisb doesn't have a clue of what you talk about...
08:44:33 <Marvin--> yeah, the grunts simply rock
08:44:45 <shapr> with the toughness upgrade they're impressive
08:44:51 <shapr> dennisb: warcraft III, game from blizzard
08:45:01 <shapr> hi Akasha 
08:45:06 <shapr> how's the tail-call?
08:45:18 <d-bugd> Marvin--: Tanya from Red Alert2 would kick their ass :)
08:45:25 <Akasha> hi shapr
08:45:26 * shapr googles for booty-call optimization
08:45:42 * Akasha wonders if Chilli is around
08:46:48 <ChilliX> yes, but not too long anymore...
08:53:55 <shapr> does hmake have a cleanup command? something that checks and removes .o and .hi files from older/other versions?
08:56:48 <Marvin--> shapr: optimization what?
08:57:07 <shapr> just a smart-ass comment
08:57:26 <shapr> afaik, Akasha has been interested in tail-call optimization on the JVM
09:03:26 <Marvin--> hmm, is it even possible to goto between methods in the jvm? I thought labels were local
09:03:53 <shapr> I don't know
09:04:15 <Marvin--> that's what I remember from my javalette compiler anyway
09:12:42 <shapr> hi ad^am 
09:12:45 <Akasha> Marvin--: yes, you're right
09:12:53 <Akasha> labels are local
09:12:55 * shapr tries to build HToolkit
09:12:55 <ad^am> hi
09:13:17 <shapr> ad^am: learning Haskell? looking for other users?
09:13:36 <Akasha> shapr: wow. you've changed your greet line :-)
09:13:46 <Akasha> (sorry, couldn't help that. :-))
09:13:49 <ad^am> i'm ripping my brain to shreds by learning haskell and scheme at the same time
09:14:10 <ad^am> no previous experience with functional programming
09:15:03 <ham[oride]> hiho
09:15:42 <shapr> Akasha: :-PPP
09:15:52 <shapr> ad^am: your brain will be in better shape afterwards
09:15:57 <ad^am> definatly
09:17:04 * shapr hacks around HToolkit weirdness
09:17:04 <Akasha> i think mine's bent out of shape already
09:17:17 <shapr> wow, weird.. ghc is spitting assembly at me
09:18:02 <shapr> this must be what wli was talking about.
09:20:01 <o3> woohoo
09:20:05 * o3 is a haskell black belt
09:20:08 <shapr> yay!
09:20:20 <o3> although i find it amusing that "proficiency with IO" is a blue belt ranking
09:20:41 <Akasha> karate ranking?
09:20:47 <o3> can we add "black belt level 5: can read a ralf hinze paper without needing alcohol"?
09:20:48 <Akasha> or some other martial arts? :-)
09:20:48 <shapr> http://www.haskell.org/hawiki/HaskellIrcChannel
09:20:54 <Akasha> it makes a difference :)
09:20:56 <shapr> o3: sure go for it
09:21:22 <shapr> yah, I'm beginning to think that using IO should be a lot lower, since you don't have to understand monads to actually *use* IO
09:21:25 <Marvin--> cool, I think I rank up there
09:22:09 <shapr> o3: we'll make a new rank for "write a runtime loader for GHC" ;-)
09:23:00 <o3> shapr: how about another rank for "I am Simon {Peyton-Jones,Marlow}"
09:23:09 <shapr> heh
09:23:10 <shapr> good idea
09:23:23 <shapr> though that begins to sound like a Haskell Purity test
09:25:57 <o3> true
09:26:15 <Akasha> heh. could do one
09:26:20 * o3 makes a "I looked at GHC internals and I'm still alive" t-shirt
09:29:12 <Marvin--> o3: gimme one :P
09:34:12 <o3> shapr: any suggestions for other black belt levels?
09:34:43 <shapr> 1st dan, proficiency with Template Haskell
09:35:11 <Marvin--> uh... right now it says that 1 dan is the awkward squad
09:35:17 <shapr> oh
09:35:24 <Riastradh> No, that's 0 dan.
09:35:39 <Marvin--> ehh... karate has a zeroth dan grade?
09:35:45 <Marvin--> ju-jiutsu sure doesn't
09:35:48 <Riastradh> No, but Haskell does.
09:35:48 <shapr> I'd say arrows, monad transformers, and TH come after a blackbelt
09:35:56 <shapr> but maybe TH fits into a brown belt?
09:36:02 <shapr> TH isn't that scary imho
09:36:09 <Riastradh> Unless you want to change everything to use 1-based indexing.
09:36:16 <Marvin--> I would've thought TH would be some sort of dan grade seeing as it hasn't even been released yet
09:36:32 <shapr> good point
09:36:57 <Marvin--> I mean, I haven't even tried it yet
09:37:57 <shapr> there's some seriously weird stuff coming out of the latest ghc5 deb
09:38:02 <shapr> it's dumping asm errors at me
09:38:18 <shapr> "still has jump to fast entry point" what the heck does that mean?
09:38:22 <o3> 3nd dan - proficient with all of ghc's type system extensions
09:38:29 <shapr> @fact foo
09:38:30 <lambdabot> bar
09:38:38 <shapr> fact is back, but the contents aren't yet
09:38:56 <shapr> o3: oh, that's good, that includes MPTC et al
09:39:07 <shapr> 4th dan, extend GHC :-)
09:39:32 <o3> is that harder or easier than reading a hinze paper without boggling? :)
09:39:58 <Darius> woo, I've implemented a -very- -tiny- portion of TH.
09:40:12 <shapr> yay!
09:40:13 <Igloo> Can you be an nth dan without being an (n-1)th dan?
09:40:14 <shapr> how did you do that?
09:40:17 <shapr> Igloo: I dunno
09:40:47 <shapr> Igloo: you've committed code to TH, that's pretty far up the scale
09:40:48 <opet> Igloo: I don't think so
09:41:06 <Igloo> Hey, I've committed to Main.hs - that ought to be off the top  :-)
09:41:16 <shapr> wow!
09:41:35 <shapr> your haskell purity test score would be scary
09:41:53 <Igloo> Well, I'm not a 3rd dan
09:42:25 <shapr> maybe it should be a point system, since many of these don't depend on each other
09:42:28 <o3> i think being proficient with ghc extensions should be very high on the list (6th dan, maybe)
09:42:31 <shapr> anyway, it's just for fun :-)
09:42:41 <ChilliX> shapr: the error message is from the Evil Mangler
09:42:46 <shapr> o3: on the other hand, most GHC extensions are really simple
09:42:58 <shapr> ChilliX: thanks, any ideas how I can track down the problem?
09:43:15 <ChilliX> shapr: do you use any particularily new gcc?
09:43:35 <Marvin--> we're using 3.2 in sid
09:43:37 <shapr> maybe?
09:43:43 <shapr> yah, sid
09:43:43 <Marvin--> that's probably it
09:43:51 <Marvin--> it has some optimization bugs
09:43:52 <shapr> what can I do about it?
09:43:54 <ChilliX> (shapr: might not be harmful btw; it's only being issued as a warning, isn't it?)
09:44:02 <shapr> yes, it all seems to work still
09:44:03 <shapr> @fact foo
09:44:04 <lambdabot> bar
09:44:06 <Marvin--> oh, all right
09:44:15 <Marvin--> I've had stray segfaults and ickiness
09:44:17 <shapr> I built both HToolkit and lambdabot with -fvia-C
09:44:33 <ChilliX> shapr: the mangler tries to short curcuit some jumps (to improve efficiency)
09:44:37 <shapr> ah, I see
09:44:42 * Igloo tries to think about whether using extensions should increase or decrease your Haskell purity and melts his brain
09:44:53 <shapr> heh
09:45:07 <ChilliX> shapr: it just means that your assembly had some code in it that the regexps in that abomination of Perl script couldn't match; hence, left alone
09:45:12 <shapr> ah, I see
09:45:20 <shapr> the evil mangler uses *perl* ??
09:45:25 <Akasha> yes
09:45:27 <ChilliX> yes...
09:45:27 <shapr> wow
09:45:29 <Akasha> :)
09:45:32 <shapr> no wonder it's evil
09:45:36 <ChilliX> it is Evil after all
09:45:39 <shapr> heh
09:45:45 <shapr> I should quote that :-)
09:45:52 <ChilliX> :-)
09:46:07 <ChilliX> for some things, if it can't match it, your dead
09:46:20 <ChilliX> but for the fast entry points, it usually just costs (very few) cycles
09:46:30 <shapr> that's good to hear
09:46:36 <shapr> is the mangler on the list of things to clean up?
09:47:00 <ChilliX> well, I think, everybody agrees that it should die
09:47:13 <ChilliX> but nobody wants to really go there
09:47:20 <ChilliX> I have hacked the thing once
09:47:25 <ChilliX> not very pleasant...
09:47:31 <o3> 6th dan - understand GHC's evil mangler
09:47:41 <shapr> couldn't it be replaced with something a bunch of term-rewriting code from stratego-language?
09:48:06 <ChilliX> that means, you would have to understand it first...
09:48:09 <shapr> oh
09:48:16 <ChilliX> it's typical Perl code
09:48:18 <shapr> yow
09:48:20 <ChilliX> it's grown
09:48:37 <shapr> I don't like perl much
09:48:42 <ChilliX> and by it's nature fill of heuristics
09:48:49 <Akasha> o3: you just have to understand perl?
09:48:50 <shapr> actually, Perl isn't that bad, just the community coding standards
09:49:14 <shapr> are any of those heuristics formalized elsewhere?
09:49:23 <ChilliX> I don't think that there are any coding standards in the Evil Mangler
09:49:25 <shapr> or is the mangler the holder of many secrets?
09:49:29 <shapr> yikes
09:49:29 <ChilliX> it is
09:49:34 <Marvin--> well, I'm off to see that new fancy matrix movie
09:49:36 <ChilliX> the good news is
09:49:37 <Marvin--> catch you guys later
09:49:39 <shapr> Marvin--: oh I'm envious
09:49:42 <shapr> cya Marvin-- 
09:49:49 <shapr> good news is?
09:50:09 <o3> bye marvin
09:50:11 <ChilliX> some of the stuff the mangler does is getting superflous as gcc gets more clever about some things
09:50:11 <Marvin--> best thing is I didn't even have to lift a finger, friends told me "we're going, on Sunday, here's your ticket"
09:50:19 <Marvin--> to which I said "coo'"
09:50:35 <ChilliX> Marvin--: movie is super cool
09:51:36 <o3> suggestion for 2nd dan!
09:51:36 <shapr> where in the fptools tree is the mangler?
09:51:49 * shapr tries find . -iname "*.pl"
09:52:44 <shapr> aha
09:53:05 <ChilliX> fptools/ghc/driver/mangler/
09:53:46 <o3> HaskellIrcChannel page updated
09:53:52 <o3> now, to do some actual work
09:53:56 <shapr> hm, 1461 lines
09:54:03 <shapr> I am very afraid.
09:54:27 <shapr> what is this, literate perl?
09:54:40 <ChilliX> don't even get me started on that...
09:54:57 * shapr loads perl-mode for the first time in years
09:55:15 <shapr> is there an emacs mode for this?
09:55:15 <shapr> yow
09:55:21 * Akasha runs away from ChilliX's diatribe on literate programming
09:55:31 <o3> ?!
09:55:31 <ChilliX> Akasha: don't worry
09:55:40 <shapr> I think literate programming has lots of strong points
09:55:45 <o3> literate perl?  aaaaaaaaaaaaa
09:55:51 <shapr> but I think it should be more strongly mixed with unit testing
09:55:53 <ChilliX> Akasha: but see, he is provoking me!!!
09:56:04 <shapr> ChilliX: hey, have you seen fit.c2.com ?
09:56:14 <shapr> yes, I want to hear a summary of your thoughts on literate programming
09:56:19 <Akasha> noooo
09:56:32 <Akasha> :)
09:56:43 <shapr> is this a Chilli FAQ?
09:57:35 * Igloo would like to know Chilli's views too
09:57:36 <ChilliX> hmm, maybe kind of faq
09:58:13 <ChilliX> I think Akasha is only referring to that we just had this discussion last week in the reesearch group
09:58:18 <ChilliX> ok, short summary
09:58:22 <o3> we did?
09:58:37 <ChilliX> Literate programming is a great idea that works perfectly for Knuth.
09:58:52 <ChilliX> Knuth writes a program, declares it finished, and prints it in a book.
09:59:09 <ChilliX> o3: maybe you weren;t there
09:59:20 <ChilliX> Problem is Knuth is kind of unique
09:59:35 <ChilliX> Most people look most of the time at code in their editor
10:00:05 <ChilliX> All markup etc is just going to make this harder
10:00:19 <ChilliX> May favourite example is, of course, GHC
10:00:23 <ChilliX> May = my
10:00:39 <ChilliX> all in .lhs files, but even the Linux kernel has more comments
10:00:49 <ChilliX> comments = documentation
10:01:24 <ChilliX> it's cool, most modules start with a couple of lines restating the module name and lots of special characters
10:01:29 <ChilliX> then, \begin{code}
10:01:49 <ChilliX> then page after page of undocumented code (sometimes even without type sigs)
10:01:52 <ChilliX> then \end{code}
10:02:09 <Igloo> I think the main problem is that we aren't all writing in FORTRAN, so prettyprinting is hard
10:02:35 <ChilliX> and I guess everybody remembers what happend as somebody was asking about how to convert this to PostScript on the Haskell list
10:02:36 <shapr> imo, inline unit tests would be the best documentation
10:02:55 <shapr> HUnit or QuickCheck
10:03:08 * o3 prefers good ol' comments
10:03:22 <ChilliX> I am all for unit testing, no problem with that
10:03:27 <shapr> truly, I wish that literate Haskell could export the docs as html/ps/text/anything
10:03:49 <ChilliX> and then?  would you print GHC?
10:03:59 <ChilliX> kill a forest and get not docs anyway?
10:04:02 <shapr> hm
10:04:07 <shapr> good point
10:04:26 <ChilliX> literate programming has its niche
10:04:27 <Akasha> is there any tool to extract out comments?
10:04:51 <ChilliX> its good for "expositional" programming
10:04:52 <shapr> I wouldn't print GHC anyway, it changes too quickly
10:04:56 <ChilliX> Knuth does it
10:05:02 <ChilliX> Ralf Hinze does it
10:05:13 <ChilliX> Igloo has demonstrated how to do it
10:05:24 <ChilliX> shapr: aha!!
10:05:48 <ChilliX> shapr: that the point! programs evolve, they are not printed on paper
10:06:58 <Igloo> But it would be nice to be able to say "I want to make this change to the type checker. make Typchecker.ps; gv Typechecker.ps to find out how it works"
10:07:09 <ChilliX> Akasha: haddock is extracting comments for ifaces
10:08:04 <ChilliX> Igloo: not convinced, because I usually use Emacs search and grep a lot while trying to understand source
10:08:06 <shapr> ChilliX: what about using lxr then? --> http://lxr.linux.no/source/kernel/dma.c
10:08:16 <ChilliX> shapr: that's cool
10:08:39 <ChilliX> Igloo: and it all pre-supposes that somebody actually puts docs in
10:09:26 <ChilliX> the only modules in GHC with plenty of literate comments are some of SPJs
10:09:36 <shapr> I write unit tests to understand source, that seems to be the fastest method for me
10:09:47 <Igloo> Chilli: If you do it in small enough chunks then you might read the description of the whole chunk before starting work and grepping as necessary
10:09:57 <ChilliX> and even there it is not so much prose that you would want to read, but more exmaples and countre-examples and remarks etc
10:10:02 <Igloo> But yes, it does require someone to actually put the docs in in the first place
10:10:14 <Igloo> And whether it being intermixed with the code is worthwhile is up for debate
10:10:19 <shapr> yah, unit-tests are counter/examples
10:10:19 <Akasha> examples are good where docs fail :)
10:10:27 <o3> ChilliX: how do you view haddock with respect to literate programming?
10:10:32 <shapr> I would always prefer to see examples rather than read docs
10:10:44 <ChilliX> Akasha: indeed
10:10:51 <o3> i.e. what makes haddock markup different
10:11:03 <ChilliX> o3: haddoc is cool, otherwise I wouldn't have written idoc
10:11:07 <Akasha> i couldn't understand GTK docs, so i read examples :)
10:11:23 <o3> actually, no, i know the answer to that
10:11:32 <ChilliX> haddock markup is derived from idoc markup and that's mean design to be unobstrusive in a text editor
10:11:33 <o3> i think the problem with literate programming is that the code becomes secondary
10:11:58 <ChilliX> o3: that's part of the problem
10:11:59 <o3> you place emphasis on describing the code using natural language, rather than letting the code be the primary thing and annotating it with comments
10:12:22 <shapr> what I'd like even more than examples/unit tests would be some way I could click a button or type a single command, and have a ghci session that's been set up to allow me to interactively use/play with the code in front of me.
10:12:36 <Darius> Comments need to be active.
10:12:44 <ChilliX> shapr: yeah that would be supercool
10:12:56 <Akasha> that sounds like that OpenGL tool in OS X
10:13:39 <o3> now now akasha, no need to tout the superiority of Mac OS X in a discussion about unit testing ;)
10:14:02 <Akasha> o3: 'sif i would. they don't employ me in marketing
10:14:29 <Akasha> o3: actually, they should :)
10:15:09 <steveh> OS X is great
10:15:25 <o3> Akasha: i'd love a job at apple working on bringing haskell to mac os x.  that would rox0r so much
10:15:31 <Akasha> but that tool isn't exactly about unit testing
10:15:35 <o3> anyway, back to the real world ...
10:15:39 <Akasha> it's about a teaching/learning method
10:16:26 <Akasha> o3: maybe it can be someone's thesis ;)
10:16:39 <o3> Akasha: what, someone being me? :)
10:17:28 <Akasha> o3: maybe. interesting idea, no? plus i'm sure Chilli would be happy 
10:17:40 <Riastradh> Ack, moduleInit is still used in lambdabot?
10:17:46 <o3> Akasha: well, it's basically what i'm doing
10:18:08 <o3> Akasha: come to my demo in week 14, and hopefully you'll be blown away
10:18:09 <Akasha> o3: no no. what shapr said
10:18:19 <o3> oh
10:18:20 <Akasha> o3: of course. ;)
10:18:23 <o3> that's what you meant
10:18:58 <Akasha> yeah
10:19:05 <Akasha> then we can teach haskell to kids :)
10:21:34 <shapr> I think kids would have no trouble with Haskell
10:21:48 <Akasha> uhm
10:21:54 <Akasha> i don't agree
10:21:55 <shapr> but it would help much to be able to interactively define things
10:22:30 <shapr> imo, pure FP requires less mental 'stack depth' to understand
10:22:34 <Akasha> having attempted to teach a 10 year old kid programming
10:24:40 <ChilliX> Tim Lambert claims his son (who I think is below 10) can write FP programs
10:24:58 <Akasha> then maybe i should learn from Tim Lambert
10:25:01 <Akasha> :)
10:25:19 <ChilliX> apparently, he's got a book which explains SKI compinators using birds in a forest calling to each other
10:25:34 <ChilliX> maybe you just need the same book :-)
10:25:40 <shapr> sounds A Young Lady's Primer from The Diamond Age
10:25:42 <Darius> heard of that
10:25:55 <ChilliX> shapr: ;-)
10:26:20 <Akasha> shapr: what's that?
10:26:39 <shapr> Neal Stephenson wrote a book named The Diamond Age
10:26:42 <shapr> it's worth reading
10:27:36 <ChilliX> although, I think Crytonomicon and Snowcrash are much better
10:27:39 <ad^am> definatly woth reading
10:28:02 <ad^am> i like diamond age more than cryptonomicon, snowcrash is the best :)
10:28:07 <shapr> truly
10:28:11 <shapr> snow crash is best
10:28:27 <ad^am> his two more mainstream fiction books are good also
10:28:27 <Akasha> none of the Functional languages do fairly easy GUI stuff?
10:28:33 <ChilliX> yeah, snow crash is probably best
10:28:46 <o3> Akasha: just wait a month ... :)
10:28:47 <ad^am> Interface, and The Cobweb
10:28:58 <ChilliX> Akasha: what do you mean by easy?
10:29:05 <Akasha> o3: i can't afford to buy a Mac :)
10:29:21 <ChilliX> Gtk+ is still nicer in Haskell than in C
10:29:32 <Akasha> ChilliX: easy for a kid, i.e without having to learna great deal to create a GUI 
10:29:59 <Akasha> GTK is just nasty
10:30:04 <ChilliX> well, there is nothing like visual basic or so
10:30:10 <Akasha> i wouldn't make my kid brother learn it
10:30:11 <ChilliX> but that's just the environment
10:30:50 <shapr> I think I would teach my kid brother about FP, but I'd start with lambda cal
10:31:15 <dennisb> gtk2 is quite nice (for being a c toolkit, that is)
10:31:36 <Akasha> i have to teach my brother programming with the goal of writing games in mind
10:31:59 <Akasha> he's not much interested in anything else unfortunately
10:35:37 <steveh> python
10:35:45 <Riastradh> Blasphemer!
10:36:04 <ChilliX> 'night
10:36:56 * Akasha laughs
10:41:53 <shapr> g'night Chilli
10:48:16 <Segora> re
10:48:33 <shapr> y0
11:01:10 <shapr> hi pesco 
11:01:23 <pesco> hi shapr!
11:01:56 <shapr> what's up?
11:02:16 <pesco> I'm having doubts.
11:02:21 <pesco> doubt doubt doubt
11:02:35 <pesco> It's a horrible state of mind I experience much too often.
11:02:45 <pesco> How does one deal with it, do you know?
11:02:49 <shapr> what are you doubting?
11:03:17 <shapr> I try to make the most informed decision I can, and stick with that unless information points me elsewhere.
11:03:41 <pesco> Whether building the Byteorder module I sent you was right, or even necessary at all.
11:04:02 <shapr> er, I don't know :-)
11:04:02 <pesco> shapr: That sounds easy, but I always seem to stumble into points I've missed.
11:04:20 <shapr> that happens to everyone
11:04:30 <shapr> life is about fluid evolution, not about being right the first time :-)
11:04:51 <shapr> humans learn more from mistakes before finding the right thing than from getting it right the first time.
11:05:02 <pesco> Yes, I'm not quite sure where I picked up my (so it seems at times) phsychotic perfectionism.
11:05:16 <pesco> Learning is a point.
11:05:30 <Darius> you misspelled psychotic :P
11:05:49 <shapr> I can be a perfectionist also, I just try to understand the ultimate goal is not to be perfect, but usually something else entirely
11:06:22 <pesco> Darius: MWAAAH
11:06:35 * pesco cries out in horrible pain
11:06:47 <shapr> I've also learned that the process is often as much (or more) fun than the actual goal itself.
11:06:52 <pesco> shapr: What do you mean by "something else entirely"?
11:07:13 <o3> it's really no fun trying to explain haskell terminology to OO people
11:07:23 <o3> class, overloading, polymorphism, templates ...
11:07:26 <shapr> when I write code, even if it sucks badly (lots of my lambdabot code does), the point is twofold, a) have fun and b) learn something
11:07:45 <shapr> like my mailing list search code, it's *horrible*
11:07:47 <shapr> but it does work
11:07:50 <shapr> and it was fun to write
11:08:04 <pesco> shapr: When I look back at stuff, I increasingly find that the process doesn't seem to have been fun. That troubles me much also.
11:08:14 <pesco> It makes me wonder actually _why_ I code at all.
11:08:20 <shapr> try something else then
11:08:32 <shapr> I do think it's important to have balance, otherwise nothing is fun
11:08:34 <pesco> Something inside me says "no" immediately.
11:09:12 <pesco> And I've been doing something else since yesterday morning, almost.
11:09:17 <shapr> I have four steel ball bearings that are about half a kilo each, I do contact juggling, or just try to find creative tricks with these bearings.
11:09:32 <pesco> What is contact juggling?
11:09:45 <shapr> it's what David Bowie does in the movie labyrinth
11:10:01 <shapr> where the ball rolls up the back of his hand and down into his palm
11:10:22 <pesco> Oh, so you roll ball bearings up the back of your hand and down into your palm?
11:10:30 <pesco> I've not seen that movie, let alone heard of it.
11:11:01 <shapr> it's hard to learn that trick, but very .... relaxing? centering? ... something ..
11:11:23 <shapr> it seems to balance out lots of sitting on my butt doing brainwork at a keyboard
11:11:37 <pesco> It sounds like a good distraction.
11:11:49 <shapr> I think martial arts, juggling, etc are good for that.
11:11:59 <shapr> playing guitar
11:12:22 <Darius> Pssh.  Play high-speed punk rock until you're dripping with sweat.  -That's- relaxing. And fun!
11:12:27 <shapr> :-)
11:12:31 <shapr> have you purchased a bass yet?
11:12:58 <shapr> yah, unicycling is a huge amount of exercise
11:13:09 <Darius> That isn't going to happen for a while.  I just want to play the bassline to Cage by Dir en grey, but it doesn't sound right on guitar.
11:13:11 <shapr> especially when you weigh 100 kilos like me :-)
11:13:58 <shapr> Darius: hey, can you play Praise Chorus?
11:13:59 <pesco> I'd like to play some drums, but I have no room for a drumset.
11:14:28 <shapr> what about an electronic set till you have room?
11:15:01 <pesco> I don't think I'll get a hold on any room soon...
11:15:24 <Darius> I've half-played it a few times.  I certainly don't know it off the top of my head.  I can play Bleed American though, and want to "perfect" The Middel.
11:15:39 <Darius> Middle
11:15:50 <pesco> But wait, I think my next-door neighbour even has some electronic drums, maybe I could just borrow them...
11:15:55 <shapr> yah, good idea
11:16:09 <pesco> But how do I learn it? Do you think one can learn that from a book?!
11:16:41 <shapr> I think you can, yes.
11:16:55 <shapr> I'm biased, I prefer to autodidact everything.
11:16:58 <pesco> I don't think I'd like to take regular lessons, because I don't have regular time, usually.
11:17:18 <pesco> I am also strongly biased towards autodidacting.
11:17:20 <shapr> I used to play drums for fun with a professional drummer friend of mine, with zero lessons
11:17:29 <pesco> Heh
11:17:40 <shapr> he said I always wanted to play weird african beats
11:17:57 * Darius learn(s/ed) guitar, programming, origami, drawing, and good chunks of... stuff, by self-teaching.
11:18:23 <shapr> yah, contact juggling took me a year or so, but I taught it to myself.
11:18:29 <shapr> I'm still learning unicycling
11:18:32 <pesco> This is good, now you've gotten me towards a good new idea. Thanks again shapr.
11:18:37 <shapr> yay!
11:19:00 * shapr bounces happily
11:27:54 <d-bugd> is there a Haskell->Java .class compiler worth using?
11:28:31 <shapr> not yet
11:47:57 <shapr> hi Smerdyakov 
11:48:42 <Smerdyakov> Hi
11:49:36 <shapr> what's up?
11:50:37 <Smerdyakov> Nothing
11:50:46 <shapr> oh
11:50:59 <shapr> will you be moving to a different city?
11:57:37 <Smerdyakov> Yes
11:57:45 <shapr> when will that happen?
11:57:46 <Smerdyakov> Different coast, even
11:57:53 <Smerdyakov> Soon. I don't know exactly when.
11:59:58 <Riastradh> To the west or east coast?
12:00:07 <Riastradh> Er...or is this not in the US?
12:01:07 <Smerdyakov> East -> west
12:01:17 <Riastradh> In #haskell, it's generally safer to assume that people are from Sweden than anywhere else, it seems.
12:01:22 <Smerdyakov> And now I must go eat.... be back in 2 hoursish =D
12:01:35 <shapr> Riastradh: hah
12:06:19 <pesco> Hooray for M-w and C-y.
12:06:25 <shapr> yay!
12:08:40 <pesco> Yeah, I love when hugs loads two pages of terminal lines full of libraries for a module I wrote.
12:08:53 <pesco> Makes it look important.
12:08:53 <shapr> yow
12:08:55 <shapr> heh
12:09:23 * andersca matrixs
12:09:40 <pesco> Oh, I watched Matrix: Reloaded last night.
12:09:58 <shapr> I still haven't seen it
12:10:00 <shapr> sooon
12:10:05 <Riastradh> I've seen it twice so far.
12:10:09 <andersca> it was really good
12:10:10 <pesco> Lovely movie. Lots of evil dirty, dark machinery.
12:10:12 <shapr> bah, I'm jealous
12:10:13 <Riastradh> It isn't nearly as good as the original.
12:10:55 <pesco> Yah, but I don't find that quite so bad, because someone told me, they had the story laid out as a trilogy from the start.
12:14:01 <Darius> Wow, I could go for more junk mail with the subject, "you are great."
12:15:21 <pesco> heh
12:15:47 <pesco> Certainly feels better than "Increase his size today!"
12:17:27 <shapr> trex would be really handy for lambdabot state
12:18:10 <shapr> hi Vincenz 
12:18:31 <Vincenz> hiya
12:18:42 <Riastradh> Hi.
12:21:31 <shapr> @listcommands quote
12:21:31 <lambdabot> Module quote provides the following commands: ["fortune","yow"]
12:21:53 * shapr continues refactoring
15:20:59 * shapr boings
15:21:26 <Verbed> shapr, #trivia?
15:21:52 <shapr> no thanks, it's time to call the family
15:22:03 <shapr> but if you give me your phone number I'll call you and say hi.
15:22:23 <Verbed> That would... violate the seperation.
15:22:29 <shapr> heh
15:22:31 <shapr> ok :-)
15:22:38 <Verbed> :P
15:23:19 <mgoetze> shapr: +49 40 702 2950
15:23:36 <shapr> hrm, how do I dial germany from .se ?
15:23:44 <Verbed> One moment..
15:23:49 <Verbed> I found a fantastic site for this sort of thing.
15:23:57 <Verbed> ( I had to call Britain from Canada )
15:24:17 <mgoetze> shapr: well, how do you usually make international calls?
15:24:22 <shapr> I don't
15:24:25 <mgoetze> oh
15:24:30 <shapr> I know how to dial the states
15:24:37 <mgoetze> how's that?
15:24:37 <shapr> 001 then the rest
15:24:44 <mgoetze> ok, then  it's 0049...
15:24:47 <shapr> oh, ok
15:24:58 <mgoetze> 1 being usa, 49 being germany
15:25:14 <Smerdyakov> USA is number 1!
15:25:31 <Verbed> It should also point to Canada as well.
15:25:46 <Verbed> 1 (xxx) xxx-xxxx
15:29:01 * Verbed grumbles
15:29:04 <Verbed> I've lost the URL.
15:31:13 <mgoetze> lol
15:31:16 <shapr> :-)
15:31:20 <mgoetze> shapr sure is 'spiffy' :)
15:31:23 <shapr> hah
15:31:32 <shapr> do I sound as bouncy on the phone?
15:31:58 <shapr> mgoetze: much fun talking to you
15:32:12 <mgoetze> hehe, yup, all hyper and ready to go :)
15:33:01 * shapr calls family in the USA
15:35:34 * Igloo misses the shapr phoning window
15:35:45 <Igloo> Oh well, save it up for the big meetup  :-)
15:36:41 <Smerdyakov> shapr is not in #hprog anymore. :-(
15:38:15 <Igloo> hprog?
15:38:50 <Smerdyakov> A new channel for hobbyist programmers
15:38:58 <Igloo> Ah
15:39:22 <Verbed> That was subtle Smerdyakov.
15:39:48 <Marvin--> #prolog          4       The Prolog channel, a super active place to discuss Prolog and related stuff. If you ask a question, stick around for a while. It may take some time to get an answer.
15:39:50 <Marvin--> haha
15:39:51 <Smerdyakov> I am cool that way, Mr. Verbed.
15:41:22 <Marvin--> hello Mr. Anderson
15:41:46 <Verbed> "#hprog - Oh I do apologize, a mis-paste that was.  It's such an amazing channel that I keep it in my clipboard buffer at all times."
15:43:33 <|Fo|Ns> hi
15:43:43 <Verbed> Hello
15:44:07 <|Fo|Ns> got a problem with type classes
15:44:20 <Verbed> Me? No.
15:44:27 <|Fo|Ns> >data ArExps = Var               |  -- Solo una variable
15:44:27 <|Fo|Ns> >              Num Double        | 
15:44:38 <|Fo|Ns> me 
15:44:43 <Verbed> Who?
15:47:09 <|Fo|Ns>  Instance of Integral Double required for definition of ....
15:48:07 <Igloo> If you want help you'll need to show what you were trying to define
15:51:04 <|Fo|Ns> ok ...
15:53:27 <|Fo|Ns> Im trying to define algebraic expressions
15:53:46 <|Fo|Ns> wich can only contain one varible
15:54:17 <|Fo|Ns> >data ArExps = Var               |
15:54:20 <|Fo|Ns> .....
15:54:27 <Igloo> I mean the ... in the error
15:54:27 <|Fo|Ns> >	       ArExps :^: ArExps |
15:54:27 <|Fo|Ns> >	       Ln  ArExps
15:54:40 <|Fo|Ns> the problem is ...
15:54:45 <|Fo|Ns> >arFun :: ArExps -> (Double -> Double)
15:54:52 <|Fo|Ns> >arFun (expa :^: expb) valorvar = (arFun expa valorvar) ^ (arFun expb valorvar)
15:54:56 <|Fo|Ns> last line
15:55:05 <|Fo|Ns> Instance of Integral Double required for definition of arFun
15:55:53 <Igloo> The problem is
15:55:56 <Igloo> @type (^)
15:55:56 <lambdabot> (^) :: (Num a, Integral b) => a -> b -> a
15:56:04 <Igloo> You want (**)
15:56:06 <Igloo> @type (**)
15:56:08 <lambdabot> (**) :: Floating a => a -> a -> a
15:56:34 <|Fo|Ns> ok, I thougth (^) and (**) were the same
15:56:38 <|Fo|Ns> thanks
15:56:54 <Riastradh> @prelude (^)
15:56:58 <lambdabot> *** "(^)" prelude "Haskell Standard Prelude Dictionary": text follows
15:56:58 <lambdabot> (^)
15:56:58 <lambdabot>   infixr 8 ^
15:56:58 <lambdabot>   (^) ::  (Num a, Integral b) => a -> b -> a
15:56:58 <lambdabot>   x ^ 0           = 1
15:57:00 <lambdabot>   x ^ n  | n > 0  = f x (n-1) x
15:57:02 <lambdabot>   		  where f _ 0 y = y
15:57:04 <lambdabot>   			f x n y = g x n where
15:57:06 <lambdabot> [there's @more]
15:57:50 <Riastradh> Er, whoops.  I thought there was a comment around it, not its implementation.
15:58:44 <|Fo|Ns> how can I see the commands landabot has aviable?
15:58:48 <|Fo|Ns> ;)
15:58:52 <Riastradh> @listmodules
15:58:53 <lambdabot> I have the following modules installed: ["chess","dict","eval","fact","hello","karma","more","quote","searchml","state","system","topic","type"]
15:58:56 <Riastradh> @listcommands dict
15:58:56 <lambdabot> Module dict provides the following commands: ["dict","dict-help","all-dicts","devils","easton","elements","foldoc","gazetteer","hitchcock","jargon","prelude","vera","web1913","wn","world02"]
15:59:27 <Riastradh> @yow
15:59:28 <lambdabot> Life is a POPULARITY CONTEST!  I'm REFRESHINGLY CANDID!!
16:02:38 <Marvin--> ah, vera is a good command
16:02:44 <Marvin--> @vera stfu
16:02:46 <lambdabot> No match for "stfu".
16:02:49 <Marvin--> bah
16:02:57 <Marvin--> that's odd
16:02:59 <Marvin--> @vera STFU
16:03:00 <lambdabot> No match for "STFU".
16:03:02 <Marvin--> very odd
16:03:07 <Marvin--> my version of vera has it
16:03:09 <Riastradh> @jargon kibo
16:03:11 <lambdabot> *** "KIBO" jargon "Jargon File (4.3.0, 30 APR 2001)"
16:03:11 <lambdabot> KIBO /ki:'boh/ 1. [acronym] Knowledge In, Bullshit Out. A summary of
16:03:11 <lambdabot>    what happens whenever valid data is passed through an organization (or
16:03:11 <lambdabot>    person) that deliberately or accidentally disregards or ignores its
16:03:12 <lambdabot>    significance. Consider, for example, what an advertising campaign can do
16:03:14 <lambdabot>    with a product's actual specifications. Compare {GIGO}; see also {SNAFU
16:03:16 <lambdabot>    principle}. 2. James Parry <kibo@world.std.com>, a Usenetter infamous
16:03:16 <Igloo> Mine doesn't
16:03:18 <lambdabot>    for various surrealist net.pranks and an uncanny, machine-assisted knack
16:03:20 <lambdabot> [there's @more]
16:03:41 <Marvin--> ii  vera                 1.10-1
16:04:38 <Igloo> ii  dict-vera      1.9-2
16:04:39 <Marvin--> (and yes, I did see the nmap/ssh scene :P)
17:08:46 <shapr> Igloo: what's your phone number?
17:13:55 * Igloo smiles and his mood instantly goes up a few notches  :-)
17:14:08 <Igloo> But I ought to go to bed - early start tomorrow  :-(
17:14:52 <Igloo> Anyway, if you tried you could find a number for me and call it a possibly amusing time  :-)
17:15:05 <Riastradh> Is there any sort of character set library in Haskell?
17:15:18 <Pseudonym> Hey, let's all swap phone numbers!
17:15:33 <Pseudonym> Riastradh: You mean something which does proper Unicode?
17:15:34 <Igloo> s/it/at/
17:15:46 <shapr> Igloo: I can find your office phone...
17:16:04 <Riastradh> Pseudonym, no, I mean something a character set library.
17:16:10 <Igloo> Exactly
17:16:19 <shapr> heh, ok
17:16:25 <Pseudonym> You've lost me.  What do you want it to do (above what Data.Char does)?
17:16:49 <Riastradh> So that I might be able to do:  takeWhile (isInCharSet (listToCharSet ['a', 'b', 'c'])) "abcabcbabcfoo"  -- and get "abcabcbabc"
17:16:50 * Igloo crawls off to bed
17:17:02 <shapr> Pseudonym: sure, give me your phone number and I'll call you up.
17:17:11 * Pseudonym laughs
17:17:50 <Pseudonym> Riastradh: I think what you want is a very thin layer on top of Data.Bits.
17:18:07 <Pseudonym> Oh, except you want bit vectors.
17:18:11 * Pseudonym hmms
17:18:20 <Pseudonym> OK, you want a thin layer on top of UArray.
17:18:54 <Riastradh> UArray?
17:19:08 <Pseudonym> Data.Array.Unboxed
17:19:28 <Riastradh> Why would I want arrays?
17:19:44 <Pseudonym> What you want is an array of n-bit words.
17:19:53 <Pseudonym> Unless you want these things compressed.
17:20:21 <Riastradh> Er, why shouldn't I just use Data.Set?
17:20:28 <Pseudonym> That depends.
17:20:41 <Pseudonym> How small/fast do you want the representation to be?
17:20:46 <Riastradh> I don't care.
17:20:52 <Pseudonym> OK, then.  Data.Set it is.
17:20:53 <Riastradh> I want clarity, not efficiency.
17:20:56 * Pseudonym nods
17:21:15 <Pseudonym> You can get clarity by abstracting this stuff out.
17:21:34 <Riastradh> No, I don't think I'll need any abstraction.
17:21:38 <Pseudonym> OK, then.
17:21:47 * Riastradh was probably thinking about having a special character set library due to SRFI 14.
17:22:21 * Pseudonym nods
17:23:47 <Riastradh> Argh, why did they choose such horrible and inconsistent names in Data.Set? -- 'mkSet' (why not 'listToSet'?), 'intersect' (uh, most of the other ones end with 'Set' -- but why not just use qualified names with no 'Set'?), et cetera.
17:24:36 <Pseudonym> Don't look at me. :-)
17:24:50 <Pseudonym> The names in the new Edison are perfecly consistent.
17:24:54 <Pseudonym> (As opposed to the old one.)
17:25:02 <Riastradh> Edison?
17:25:29 <Pseudonym> http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/hfl/hfl/edison/
17:26:18 <Riastradh> Is there a set module in there?
17:26:29 <Pseudonym> Yes and no.
17:27:00 <Riastradh> I'd prefer a deterministic answer.
17:27:08 <Riastradh> I'm not really that into logic programming.
17:27:27 <Pseudonym> All Collection data structures can perform the role of a set.
17:27:46 <Pseudonym> Sort of.
17:27:51 <Pseudonym> Sets or bags.
17:28:03 <Pseudonym> There's Coll.UnbalancedSet, for example.
17:28:09 <Riastradh> How about balanced sets?
17:28:21 <Pseudonym> I'm getting around to that. :_)
17:28:47 <Pseudonym> Chris Okasaki didn't actually write one.
17:28:58 <Pseudonym> Another possibility you might want to consider is to use FiniteMap.
17:29:03 <Pseudonym> FiniteMap Char ()
17:30:00 <Riastradh> I don't like the names in FiniteMap, either, and it's worse suited for the purpose.
17:31:54 <Riastradh> So hurry up with your balanced set module!
17:35:50 <Pseudonym> Would you like to give me a hand? :-)
17:36:05 * Riastradh hasn't the faintest idea how to write balanced set algorithms.
17:36:31 <Pseudonym> http://www.swiss.ai.mit.edu/~adams/BB/
17:37:01 <Pseudonym> If nothing else, it's a really good read.
17:38:02 <Riastradh> I'm also busy with two other active projects and two other passive projects.
17:38:36 <Pseudonym> A guy can hope.
17:38:47 <Pseudonym> :-)
20:43:35 * tmoertel prepares a jade oolong
20:43:59 <lament> how's it different from regular oolong?
20:44:44 <tmoertel> lament: its lightly oxidized, so it's closer to green than black
20:45:45 <lament> even closer?
20:46:00 <tmoertel> yes, it looks green to the eye
20:46:22 <tmoertel> greyish-green (the leaves, that is, not the infusion)
20:46:53 <lament> Sounds scary.
20:47:10 <tmoertel> But it tastes delicious.  :)
21:02:40 <lament> Oh well.
21:02:50 <lament> I guess I'll have some darjeeling ;)
21:26:54 * ChilliX -> uni
22:00:52 <ozone> re
22:02:19 <Pseudonym> Greetings.
22:02:42 <Verbed> Anyone care for some #trivia?
22:14:53 <crass> has anyone gotten ghc to compile from souorce using happy?
22:17:41 <seth> crass: I'm not sure what you mean.  I've compile ghc from source.  Doesn't it always use happy?
22:18:06 <crass> perhaps
22:18:16 <crass> I've not gotten it to compile from source
22:18:33 <seth> crass: what o/s?  what happens?
22:18:38 <crass> ../../ghc/utils/ghc-pkg/ghc-pkg-inplace --update-package <base.conf.inplace
22:18:38 <crass> /bin/sh: line 1: ../../ghc/utils/ghc-pkg/ghc-pkg-inplace: No such file or directory
22:18:47 <crass> linux tht's gcc 2.95.3
22:19:05 <crass> looks like I need a binary haskell compiler there?
22:19:25 <seth> crass: yes, you have to install the binary first.  which is quite easy for linux.
22:19:36 <seth> don't use the packages, use the tarball with linux binaries.
22:19:48 <crass> I thought there was a way with only using happy binary
22:20:11 <seth> I don't believe so.
22:20:32 <seth> You can do it against an earlier ghc, but not without any binary ghc at all.
22:20:49 <crass> ok, then I was misinformed, I'll try with the binary thanks
22:21:22 <seth> np
22:28:44 <crass> seth do you know if it can be compiled with gcc 3.2.x?
22:29:57 <seth> crass: yes, I built it two days ago with 3.2.2
22:30:13 <crass> hmm, how do I resolve that error?
22:30:19 <crass> ln to the ghc bin?
22:30:26 <crass> is that what is wants there?
22:30:43 <seth> crass: if you do "make install" on the binary, you shouldn't have to do anything else.
22:31:01 <crass> can you tell me the configure opts you give?
22:34:09 <seth> crass: I just used the defaults.  I did configure and make install on the binary, then configure (no args) on the source.
22:34:20 <seth> configure with no args on the binary also.
22:34:28 <crass> so don't need happy then?
22:35:02 <seth> I didn't do a separate happy install, and the install I did on Friday was on a machine that I had just erased and reinstalled linux.
22:35:10 <platypus_work> can i install ghc using happy ?
22:35:14 <platypus_work> i mean bootstap it ?
22:35:38 <seth> platypus_work: you mean without having a binary ghc installed?
22:35:47 <platypus_work> seth: yes
22:36:17 <seth> I said no earlier but I may be wrong about that.  However, it isn't necessary in most cases.  What o/s are you intalling in?
22:36:28 <platypus_work> linux
22:37:10 <seth> platypus_work: then you definitely don't need to.  The easy way is to install the ghc binary, and then build ghc from source.  If you want to investigate how to do it (rather than just getting it done), then check the porting docs.
22:39:13 <platypus_work> no support for gcc-3.2.x right ?
22:39:24 <crass> no it does
22:39:30 <seth> I've built it with 3.2.2, no problems
