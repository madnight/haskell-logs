03:32:26 <earthy> hm. nice. I've just heard rumours that Helium is gaining overloading
03:37:15 <Marvin--> eh
03:37:27 <Marvin--> I thought one of the *points* with Helium was to *not* have overloading
03:45:21 <earthy> nope. the point of helium is to have a system geared towards teaching.
03:45:33 <earthy> and therefore having good error reporting.
03:45:57 <earthy> and as much of the language as possible without compromising the error reporting
04:29:42 <Marvin--> earthy: last I looked, "no overloading" was listed as a feature...
04:29:53 <Marvin--> oh well
04:51:11 <earthy> yes, it was. ;) due to the fact that overloading introduces a class of bugs that is hard to diagnose correctly.
04:51:19 <earthy> apparently they've found a way around it.
04:53:09 <Marvin--> damn ;) then I have to change my target language
04:59:26 * earthy grins
04:59:46 <Marvin--> ah well, I guess I'll just need to be more specific about what I do support
06:19:29 <Lunar^> Is there any good logging module ?
07:52:17 <xkb> Heffalump : I passed the cpo n stuff exam, again thanks for the help :)
07:52:43 <Smerdyakov> "cpo"?
08:08:09 <o3_> nice signoff
08:21:11 <Heffalump> xkb: cool
08:26:01 <xkb> Smerdyakov : Complete partial orders
09:04:01 * Igloo looks around for people with GHC on MacOS X
09:04:55 <o3_> Igloo: what's up?
09:05:46 <Igloo> o3: Can you send me (igloo@earth.li) the files     echo 'main = putStrLn "Foo"' > Foo.hs; ghc Foo.hs -o foo -tmpdir . -keep-tmp-files -O     generates please? (there should be at least a .raw_s and .s file)
09:06:31 <o3_> ghc 6.0.1?
09:06:46 <Igloo> That's ideal
09:07:40 <o3_> do you want all the files?  there's:
09:07:41 <o3_> Foo.hs  Foo.o  Main.hi  foo*  ghc2273.hc  ghc2273.raw_s  ghc2273.s
09:08:23 <Igloo> Ermmm, Just ths .hc, .raw_s and .s should do
09:08:26 <Igloo> Thanks
09:08:36 <o3_> sure
12:36:13 <steveh> quiet channel
12:36:55 <Heffalump> everyone's dead, Dave
12:37:26 <steveh> icfp's not for a couple weeks is it?
12:37:33 <steveh> i'd expect people to be quiet then
12:37:43 <steveh> ...or maybe not...
12:39:54 <Heffalump> :-)
12:40:15 * Heffalump remembers giving live reports from the Haskell workshop last year
12:59:06 * hdaume is having some weird linking problems...anyone around to try to help out?
13:00:21 <Heffalump> I shouldn't have thought I'd be much good, but I can try
13:00:54 <hdaume> hehe okay.  i have a library libwn.a which i need to link against.  i can do this fine in C:
13:01:03 <hdaume> T-HALD:wn/ make
13:01:03 <hdaume> gcc-2 -I/usr/local/WordNet-2.0/include -O -DUNIX   -c -o wn.o wn.c
13:01:03 <hdaume> gcc-2 -o wn -L/usr/local/WordNet-2.0/lib -static wn.o -lwn
13:01:10 <hdaume> that correctly produces an executable
13:01:41 <hdaume> i should also mention using just gcc instead of gcc-2 works
13:01:48 <hdaume> however, i can't seem to link against the same library in haskell
13:02:22 <hdaume> ghc WordNet.hs -L/usr/local/WordNet-2.0/lib -lwn -I/usr/local/WordNet-2.0/include -fvia-c -o wn
13:02:23 <hdaume> gives:
13:02:53 <hdaume> \/ usr/local/WordNet-2.0/lib/libwn.a(morph.o)(.text+0xbe7):morph.c: undefined reference to `_imp___ctype_'
13:02:56 <Igloo> You could try -optl-L/usr/local/WordNet-2.0/lib -optl-lwn
13:03:00 <hdaume> and a few errors like that
13:03:09 <hdaume> in addition or instead?
13:03:14 <Igloo> Instead
13:03:18 <Heffalump> instead, but it _ought_ not to be necessary
13:03:38 <Heffalump> is gcc including a different default set of libraries to ghc?
13:03:56 <hdaume> Heffalump: that's my only thought, but i can't really tell
13:04:11 <Heffalump> is this cygwin?
13:04:14 <hdaume> doing the optl business doesn't do anything different
13:04:17 <hdaume> Heffalump: sadly, yes ;)
13:04:43 <Igloo> What does nm say about _imp___ctype_ on the various files involved?
13:04:43 <Heffalump> googling for that symbol name brings up stuff that may be relevant but doesn't seem immediately useful
13:05:01 <Heffalump> try -lgcc 
13:05:09 <hdaume> the other thing it can't find is __assert
13:05:23 <hdaume> -lgcc doesn't change anything
13:05:48 <Heffalump> http://www-124.ibm.com/pipermail/jikes-dev/2000-November/001686.html
13:06:17 <hdaume> http://www.isi.edu/~hdaume/verb is the call to ld
13:06:48 <Heffalump> or indeed many of the other google results for that symbol
13:06:57 <Heffalump> I can't quite see what the fix is, but it appears there is one
13:07:00 <hdaume> that looks promising
13:20:56 <hdaume> grr...this (http://www.alles.or.jp/~torutk/oojava/meadow/cygwin1_1.html) looked so promising but didn't help :(
13:26:47 <Heffalump> :(
13:27:26 <Darius> I've had that problem before, however I don't remember what my last solution to it was.
13:27:27 <hdaume> so it definitely appears to be a cygwin specific problem
13:27:49 <hdaume> basically seems that GHC is compiled with mingw, the library is compiled with cygwin, and they don't play nicely
13:27:59 <Darius> Nevertheless, one time I had that problem I believe I just stripped the symbols and things seemed to work.
13:28:11 <hdaume> what did you strip the symbols on?
13:28:53 <Darius> Perhaps the outputted .o when using -c
13:29:15 <hdaume> i'll gie that a shot :)
13:31:25 <Darius> Is it necessary to compile the library with cygwin?  I would (and do) use MinGW throughout, though I still have problems at times.
13:33:43 * hdaume gives up
13:33:57 <hdaume> i tried just using mingw, but it didn't work
13:36:47 <Darius> for the library or for the whole thing?
13:36:58 <hdaume> for the library
13:39:40 <Darius> Isn't the gcc in ghc-6.0 a MinGW?
13:39:50 <hdaume> i think so
13:40:31 <Darius> you could try replacing the gcc and gcc-lib with Cygwin's gcc and gcc-lib (you'd likely want to do this on a copy)
13:41:24 <hdaume> i'll try that if i get bored...the is really for something i won't need until i'm back in a unix env anyway, so it's nbd
13:45:20 <hdaume> yeah, it works fine under linux and solaris, so i'm happy
23:21:09 <Darius> hm, Mozilla Firebird decided to work this time.
23:23:29 <Heffalump> morning
