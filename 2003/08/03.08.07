02:10:39 <Heffalump> wi minute
02:10:49 <Heffalump> s/wi/hi/
02:10:57 <Minute> hi
02:11:25 <clausen> hi
02:11:41 <Heffalump> morning
02:11:42 <Minute> hello
02:12:34 <darius-> salutations
02:18:59 * Marvin-- sighs, 1.4g RES
02:21:51 <Marvin--> 89476451 function calls (89476073 primitive calls) in -1811.377 CPU seconds
02:21:52 <Marvin--> damn :)
02:21:57 <Marvin--> stupid profiler
02:22:18 <Minute> I blame the profilers for my slow program code.
02:22:31 <Minute> (and the whitespace eating nanoviruses)
02:23:01 <Marvin--> 19645  835.540    0.043 -2712.307   -0.138 /u/martin/src/caps/Ifc/TextSearchEngine.py:127(buildDict)
02:23:03 <Marvin--> :-/
02:26:44 <Heffalump> you've made time go backwards? cool.
02:27:33 <Minute> I would suspect the PSU, if they existed.
02:28:19 <Marvin--> Minute: hush
02:29:50 <Heffalump> the ? secret underground?
02:30:13 <Marvin--> python?
02:30:18 <Marvin--> maybe you missed the ".py"
02:31:00 <Heffalump> ah, ok
02:31:11 <Heffalump> I didn't, but I didn't connect the two for some reason :-)
02:31:56 <Marvin--> heh :)
02:34:41 <Minute> Whats the resident Haskell Secret Organisation?
02:37:10 <Marvin--> there is none
02:37:11 <Marvin--> duh
02:37:27 <Minute> Now *that* is what I call secret
02:37:37 <Minute> People don't even know about it yet
02:38:42 * Heffalump knows, but isn't telling.
02:40:49 <Marvin--> hmm, I wonder if the gnome HIG says anything about window scrollbars and Fitt's law
02:40:52 * Marvin-- prods andersca
02:41:08 <andersca> his name is Fitts
02:41:10 <andersca> so it's fitts' law
02:41:26 <Marvin--> sorry
02:41:30 <andersca> dunno about window scrollbars though
02:41:30 <andersca> :)
02:41:39 <adept> whats a "fitts' law" ?
02:42:04 <Heffalump> I can however reveal that http://research.microsoft.com/Users/simonpj/papers/excel/index.htm is part of the current strategy.
02:42:05 <Marvin--> I mean, it strikes me as useful that a maximized window would have its right scrollbar adjacent to the screen border, so you can apply Fitts' law
02:42:54 <Marvin--> adept: basically, I understand it as "using the mouse is hard, there are only five coordinates on the screen that are easy to find, the four corners and the *current* pointer location"
02:43:41 <Marvin--> andersca: anyway, I *think* mozilla gets this right
02:43:52 <Marvin--> galeon, however, I think not :-/
03:18:56 <phubuh> fitt's law states that the accessibility of an item (when navigated to by mouse) is a function of its size, distance from the current position, and whether it is at a corner, or something like that
03:19:25 <phubuh> dual monitors screw it up so bad though :(
03:55:57 <Marvin--> yes and no, you have just moved the corners further apart :)
04:08:20 <Minute> In my current environment
04:08:34 <Minute> None of the four corners are effected by cloclomg
04:08:55 <Minute> and the mouse cursor is not hovering over anything useful
04:08:58 <Minute> Yay for KDE!
04:09:50 <Minute> cloclomg --> clicking
04:16:38 * shapr yawns
04:18:09 * shapr bounces
04:18:41 <Marvin--> hmm, I really wonder why there's a 0x044f unicode character in this test data ("CYRILLIC SMALL LETTER YA")
04:18:49 <andersca> ya
04:18:55 <andersca> я▐
04:19:10 <shapr> Lunar^: how's pagination and malloc going?
04:19:21 <shapr> I want the cyrillic letter Y0
04:19:57 <Marvin--> andersca: hmm, how do I input unicode characters in a gtk2 text field again?
04:20:53 <andersca> ctrl-shift-the number as hex
04:21:25 <shapr> I want a keyboard with a hex numpad
04:21:32 <shapr> that would be spiffy
04:30:14 <adept> shapr: i can send you cyrillic yo in any form you like it ;)
04:32:39 <Marvin--> ?
04:32:41 <Marvin--> yay
04:32:59 <Marvin--> er, sorry, ya :-)
04:33:35 * adept wonders why do you need cyrillic letters ..
04:33:56 <Marvin--> I don't
04:34:07 <Marvin--> it was in our database and I was curious what it was
04:34:19 <Marvin--> since I only saw it as "unhandled unicode character 0x044f"
04:34:27 <adept> well, all by itself it means "i am" :)
04:34:47 <adept> just "I", without "am", even
04:34:51 <Marvin--> great, then I only need to know how to write "I think, therefore" ;)
04:35:25 <adept> я мыслю, значит ...
04:35:37 <adept> ;)
04:36:14 <Marvin--> :ч
07:56:39 <Lunar^> shapr: dunno.. my sweet little hacker has to advance his thesis
08:11:54 <hdaume> morning folks
08:12:43 <Heffalump> what are you doing in work at this time? :-)
08:13:18 <hdaume> i'm always here between 7:30 and 8 :)
08:15:21 <Heffalump> strange person
08:16:00 <hdaume> well, i have things to do in the evening
08:16:19 <Heffalump> fair point I guess
08:16:40 <Heffalump> I tend to balance long days when I don't with short days when I do
08:18:46 <hdaume> seems reasonable :)
08:33:50 <hdaume> woo hoo :)
08:34:07 * hdaume will be writing a book review for a journal
08:36:17 <Heffalump> what book, what journal?
08:39:14 <hdaume> Machine Translation (which is, obviously, the big MT journal); the book is, ironically, Automatic Summarization by Inderjeet Mani
08:39:26 <hdaume> i'm not quite sure why they're publishing a review of a summarization book in MT, but meh
08:53:53 <earthy> summarization is a form of natural language translation
08:54:05 <earthy> it's just from language A into language A, right?
08:54:11 <earthy> anyway, time for TV.
08:56:37 <hdaume> earthy: some people look at it like that (me, in particular)
08:56:48 <hdaume> but it is significantly different from MT
08:56:49 <shapr> Lunar^: what is your little hacker's thesis?
08:56:59 <hdaume> and MT people tend to snub their noses at summarization :)
08:57:39 <shapr> Lunar^: how soon will there be something bootable that I can download?
08:57:52 <shapr> I'm very much looking forward to GHC running on raw x86
09:18:04 <Lunar^> shapr: dunno... Actually he was upset that I did annonce this project here
09:18:37 <shapr> oh
09:18:54 <shapr> I think it's an exciting project.
09:18:54 <Lunar^> shapr: http://www.macs.hw.ac.uk/~sebc/proposal.ps
09:19:43 <hdaume> i can't get there
09:19:44 <Heffalump> Joe Wells is cool.
09:19:55 <hdaume> nm yes i can
09:19:59 <hdaume> IE is just being incompetant
09:20:24 <shapr> everyone loves IE
09:20:50 <shapr> Lunar^: I'd like to work on hOp when it reaches a stage where I can contribute.
09:21:34 <hdaume> looks cool :)
09:22:24 <shapr> yes, I'd like to work on that also :-)
09:22:33 <Lunar^> shapr: I will tell him. :)
09:22:47 <shapr> it would be easy to dump haskell-mode doc info from haddock
09:23:27 <shapr> I think integration of the MetaEnvironment and emacs' semantic would do what he wants.
09:25:21 <shapr> maybe
09:29:48 <shapr> maybe not
09:31:18 <shapr> anyway, semantic does analysis caching already
09:31:55 <shapr> though I don't know if it could be extended to handle principal type caching
09:33:49 <kosmikus|away> 3 days and I'm in Sweden :)
09:33:53 <shapr> yay!
09:34:02 <shapr> coming to visit me?
09:34:10 <shapr> SyntaxPolice will be here in a week.
09:34:16 <shapr> you could come to the north and hack with us.
09:34:21 <kosmikus|away> well, unlikely, but we can talk about it
09:36:46 * shapr boings
09:43:55 <hdaume> @prelude words
09:44:00 <lambdabot> *** "words" prelude "Haskell Standard Prelude Dictionary": text follows
09:44:00 <lambdabot> words
09:44:00 <lambdabot>   words ::  String -> [String]
09:44:00 <lambdabot>   words s    = case dropWhile isSpace s of
09:44:01 <lambdabot>   		  "" -> []
09:44:04 <lambdabot>   		  s' -> w : words s''
09:44:05 <lambdabot>   			where (w,s'') = break isSpace s'
09:49:49 <shapr> @fortune
09:49:51 <lambdabot> There are ten or twenty basic truths, and life is the process of
09:49:51 <lambdabot> discovering them over and over and over.
09:49:51 <lambdabot> 		-- David Nichols
09:49:57 <shapr> @yow
09:49:59 <lambdabot> Yow!  I like my new DENTIST...
09:50:56 <kaol> @eval 1+1
09:50:57 <lambdabot> 2
09:52:04 <shapr> @eval X 1
09:52:05 <lambdabot> type error
09:52:09 <shapr> @eval X X 1
09:52:10 * Heffalump updates the greencard packages with ghc5 versions
09:52:11 <lambdabot> <<EM Dynamic -> EM Dynamic>>
09:52:16 <shapr> @eval X X X
09:52:17 <lambdabot> <<EM Dynamic -> EM Dynamic>>
09:52:24 <shapr> @eval X X 1 1
09:52:24 <lambdabot> <<EM Dynamic -> EM Dynamic>>
09:52:26 <shapr> hmm
09:52:28 <Heffalump> @eval X (X X)
09:52:29 <lambdabot> <<EM Dynamic -> EM Dynamic>>
09:52:32 <Heffalump> @eval X (X X) 1
09:52:34 <lambdabot> <<EM Dynamic -> EM Dynamic>>
09:52:35 <Heffalump> @eval X (X X) 1 1
09:52:36 <lambdabot> <<EM Dynamic -> EM Dynamic>>
09:52:38 <Heffalump> @eval X (X X) 1 1 1
09:52:39 <lambdabot> type error
09:52:39 <Igloo> What's X?
09:52:48 <shapr> @get-definition X
09:52:49 <lambdabot> X = \x.x K S K
09:52:53 <Heffalump> the complicated thing that has X (X X) = K and X X X = S, IIRC
09:53:05 <Heffalump> @eval K 1 1
09:53:07 <lambdabot> 1
09:53:07 <shapr> @get-definition K
09:53:08 <lambdabot> K = \x y.x
09:53:12 <shapr> @get-definition S
09:53:13 <lambdabot> S = \f g x.f x (g x)
09:53:23 <shapr> @get-definition I
09:53:24 <lambdabot> I = \x.x
09:53:31 <Heffalump> @eval X X X 1 1
09:53:33 <lambdabot> 1
09:53:34 <Heffalump> @eval X X X 1 2
09:53:35 <lambdabot> 1
09:53:40 <Heffalump> ah, other way round then
09:54:03 <Heffalump> anyway, any closed lambda expression can be expressed solely in terms of X.
09:54:19 <shapr> so can many treasure maps.
09:57:20 <Darius> indeed, you can encode booleans and lists then make a list of bits corresponding to the PNG encoded image of the treasure map.
09:58:45 <Heffalump> absolutely
10:21:19 <shapr> the humor on this channel entertains me.
10:21:30 <shapr> lots of plot twists.
10:21:55 * Riastradh stabs shapr in the back.
10:22:14 * shapr dies horribly
10:22:24 <shapr> is this a lagger I see before me?
10:22:53 <shapr> oh my higher order ratio, I knew it well (ho - ratio)
10:23:08 * shapr macs on beth
10:28:02 <Riastradh> BOO!
10:28:16 * shapr is scared
10:28:26 <Riastradh> OOB!
10:28:29 <Riastradh> Er:
10:28:30 <Riastradh> !OOB
10:28:43 <shapr> Object Oriented Bitching?
10:28:59 <Riastradh> No, backwards BOO!.
11:10:13 <shapr> http://mirrors.meepzorp.com/xpsucks/
11:10:17 * shapr cackles happily
11:11:43 <Marvin--> tell me something I *don't* know :)
11:12:04 <Marvin--> it's pretty badly done though
11:12:15 <Marvin--> icky blue square around "Su"
11:12:41 <Marvin--> oh wait, it's an IRL copy&paste, cute :)
11:14:14 <Marvin--> http://mirrors.meepzorp.com/gay-pron/  LOL
11:19:57 <hdaume> dude, that sucks
11:24:49 <reffie> so it just rained
11:24:54 <reffie> pretty amazing
11:29:43 * Marvin-- ponders how to reduce this deck from 73 cards to something between 60 and 65...
11:30:04 <hdaume> Marvin--: paper shredded
11:30:07 <hdaume> shredder
11:30:17 <Marvin--> horrible horrible person
11:30:31 <hdaume> (take 60) ?
11:30:45 <Darius> or drop 10 ;)
11:31:00 <Marvin--> the idea was to make it *better* by speeding it up, not to throw random cards in the paperbasket :-/
11:31:19 <hdaume> take 60 . sortBy value
11:32:09 <Marvin--> too bad the value is context sensitive :)
11:32:16 <hdaume> sigh
11:32:45 <hdaume> so just apply powerSet first :)
11:33:06 <Marvin--> hell, if it was that easy, I'd already've done it
11:33:34 * hdaume is bored waiting for stuff to run, if you couldn't tell
11:37:13 <Marvin--> hdaume: heh, tell me about it, I ran three-hour profiling passes of my text search indexer today at work
11:38:43 <hdaume> yikes
11:40:01 <Marvin--> oh, and then python segfaulted :-/
11:46:25 <Riastradh> Marvin--, er, last I checked all decks by default had 52 cards...
11:46:36 <Riastradh> s/by default/always/1
11:47:26 <Marvin--> Riastradh: not in CCGs
11:47:34 * Riastradh was being silly.
11:47:38 <Riastradh> What CCG is this?
11:48:35 <Marvin--> Game of Thrones
11:51:03 <andersca> --> Marvin (Marvin@dialin-145-254-248-154.arcor-ip.net) gick in i #swedesex
11:51:03 <andersca> <Marvin> anybody speaking german here? 
11:51:06 <andersca> that's not you is it Marvin-- :)
11:51:26 <Marvin--> no :) I usually use a capital V on gimpnet
11:52:37 <Marvin--> (long story)
12:12:25 <andersca> http://www.tendra.org/~nonce/tendracon2003/posters/buffer.jpg
12:13:55 <Marvin--> :)
12:14:03 <andersca> I want one of those
12:15:36 <Marvin--> I was just going to say prevent it by using decent languages like Haskell and Python
12:15:53 <Marvin--> but then I realized that I spent several hours yesterday at work, rewriting Python code in C to get better performance
12:20:51 <andersca> :)
12:21:59 * Riastradh would just use a language for which there is a compiler that generates really fast code -- e.g., Scheme, OCaml, SML...
12:22:24 <Darius> C
12:22:40 <Marvin--> Riastradh: ever heard of company policies?
12:22:41 <opet> Darius: I knew that was coming.. :)
12:23:20 <Riastradh> Marvin--, bah, I would just use a better company, too...
12:23:34 <Marvin--> I often sigh and say "I could do this way faster and way better in Haskell" and then they say "yeah, and we wouldn't understand a thing of it"
12:23:46 <Darius> pssh, I'd just use a better world
12:23:53 <Riastradh> That'd be nice, too.
12:49:44 <reffie> haskell is fast?
12:52:51 <Marvin--> I meant I could implement it faster
12:56:29 <Marvin--> implementation speed is important when prototyping :)
13:12:52 <hdaume> http://store.yahoo.com/usbdiscount/panafdd.html
13:18:34 <Marvin--> umm
13:21:21 * shapr boings
13:21:28 * andersca bounces
13:21:47 <shapr> hi scharob 
13:21:52 <scharob> huch
13:21:53 <shapr> wassup?
13:21:54 <scharob> hey shapr
13:22:14 <scharob> Well...I failed with my haskell part :-/
13:22:44 <shapr> huh?
13:23:22 <scharob> in a test
13:23:25 <scharob> 2 exercises
13:23:46 <scharob> But I can do it again in 6 weeks...
13:23:55 <scharob> Better doin then I hope :-)
13:24:45 <shapr> oh
13:25:37 <scharob> Yes
13:25:52 <shapr> you could practice writing Haskell
13:26:11 <scharob> Yes
13:26:16 <scharob> That is my aim
13:26:18 <Darius> hmm, :%s/\s\+//g ... don't want to forget that $ ;) ...actually that's kinda cool
13:26:34 <shapr> you could write a lambdabot plugin!
13:26:52 <scharob> But I did not have time enough to do all the stuff about architecture and haskell and there was also an assembler part :-/
13:27:09 <scharob> computer architecture I mean
13:27:42 <scharob> shapr Isn't this a little bit too hard for a beginner, is it?
13:27:51 <shapr> I dunno
13:27:58 <shapr> it's fun
13:28:04 <scharob> I do not either
13:28:10 <shapr> you could try it and tell me.
13:28:34 <scharob> I do not know how a bot works...
13:28:43 <scharob> Need to check that out first
13:28:45 <shapr> lambdabot has a plugin API
13:28:53 <scharob> Oh
13:29:09 <scharob> so there are "classes" that I could use?
13:29:15 <shapr> er, sort of
13:29:18 <scharob> Or modules they are called?
13:29:18 <shapr> actually, yes
13:29:25 <shapr> a plugin is a typeclass now
13:29:34 <scharob> hm
13:29:48 <scharob> Such as Eq, Num, Ord?
13:30:03 <shapr> yah
13:30:07 <shapr> but with more methods
13:30:07 <scharob> Ah
13:30:11 <hdaume> shapr: why is it a typeclass and not a module?
13:30:33 <scharob> Methods are the things derived if they are not specified in the functions?
13:30:43 <shapr> look at http://www.scannedinavian.org/cgi-bin/darcs?hlibs*
13:30:51 <hdaume> methods are just what you call class functions
13:31:34 <shapr> hdaume: because a typeclass lets you override how your module responds to each IRC signal
13:32:26 <hdaume> ...as opposed to?
13:32:59 <shapr> the original plugin API was a single 'process' function that received the command input
13:33:14 * Darius finally cvs up's.
13:33:31 <shapr> so "@fact foo" would pass everything after "@fact " to the process function
13:34:32 <shapr> you can still use that in lambdabot plugins, but it meant you could only handle actual messages sent to the 'bot
13:34:57 <hdaume> my point is that everything in class Module m ... is something :: m -> ...; where ... doesn't contain m.  there doesn't seem to be any reason to use a class here; simply require that all modules which are lambdabot plugins export the functions, but without the m -> part
13:36:48 <kosmikus> hdaume: in principle, I agree -- but as I see it, you get automatic type checking of the interface for free if you use a type class
13:37:07 <hdaume> blech, i don't buy it :)
13:37:34 <hdaume> you could also just copy and paste the type signatures :)
13:38:54 * Marvin-- sucks at copy&paste
13:39:01 <shapr> I think plugins are typeclasses because Pseudonym wrote them that way.
13:39:18 <shapr> hdaume: like I said, I'd be happy to give you write access to the repo =)
13:39:26 <hdaume> hehe
13:39:31 <hdaume> it's too late to change at this point, i'm sure
13:39:49 <shapr> no, not at all
13:39:51 <hdaume> that's what i refer to as "OO-style Haskell" :)
13:39:51 <Marvin--> nah, simply employ a global find&replace :)
13:39:53 <shapr> feel free to change it.
13:40:01 * hdaume doesn't care that much :)
13:40:02 <shapr> yah, I totally agree it's OO-style
13:40:08 <Marvin--> hdaume: what? copy&pasting? :)
13:40:14 <shapr> the plugin api was dramatically changed recently by polli 
13:40:15 <hdaume> Marvin--: hehe
13:40:34 <hdaume> i was really more curious if there *was* a good reason
13:40:35 <shapr> and just after that Heffalump overhauled a lot of code adding the dynamic runtime loading of plugins
13:40:39 <hdaume> but it seems not, so i'll let it be :)
13:40:55 <shapr> Pseudonym might have a good reason, I don't.
13:40:59 <hdaume> ok
13:41:20 <shapr> actually, plugins didn't work when I got lambdabot 
13:41:42 <shapr> I wrote the code to get them called
13:42:12 <shapr> I think Pseudonym may have written up the HelloModule just as a good idea of what plugins would look like
13:42:23 * shapr shrugs
13:42:27 <shapr> open source is very organic :-)
13:44:27 <Darius> gah! who writes...
13:44:28 <Darius> foo
13:44:28 <Darius>   = do stmt
13:44:28 <Darius>        stmt
13:44:34 <Darius> ?
13:44:39 <hdaume> GHC folk :)
13:45:10 * Marvin-- did too, when hacking on hws :/
13:45:15 <Darius> I thought GHC more or less used explicit layout (or at least the parts I've looked at did)
13:46:33 <Marvin--> the worst horrible mess was the   do ... case .. of ... e -> do { ... case ... { ... }}
14:02:02 <Marvin--> andersca?
14:02:06 <andersca> yes
14:02:49 <Marvin--> do you know if there's any cvs or svn support for nautilus?
14:02:57 <Marvin--> (and how do these kind of things work?)
14:03:19 <kosmikus> Darius: I don't see the problem with the example you've given ...
14:03:48 <andersca> Marvin--: there is a cvs view somewhere but I don't think it's that good
14:04:05 <Heffalump> what's wrong with do stmt\n   stmt?
14:04:45 <Darius> I prefer
14:04:46 <Darius> foo = do
14:04:46 <Darius>     stmt
14:04:46 <Darius>     stmt
14:05:53 <Heffalump> oh
14:05:54 <Heffalump> why?
14:05:59 * Heffalump does the former
14:06:09 <hdaume> Heffalump: much less to worry about tabs
14:06:18 <Heffalump> I never use tabs
14:06:19 <hdaume> and you don't get huge indents
14:06:25 * hdaume doesn't either
14:06:45 <Heffalump> reducing indents might sometimes be helpful
14:06:50 <Darius> I can change the name, add/remove parameters, add stuff before the do (e.g. trace "foo" $ do) all without breaking layout.
14:07:02 * Darius never uses tabs.
14:07:21 <Marvin--> andersca: I've seen programs like e.g. cervisia but it sucks to do it with separate programs when there are file managers like nautilus and konqueror
14:07:22 * shapr shoots people who use tabs
14:07:37 * hdaume will write a lambdabot plugin that exclusively uses tabs :)
14:07:53 <Marvin--> andersca: are there docs about writing nautilus plugins or something?
14:08:10 <andersca> Marvin--: I think there's a program called "apotheke"
14:08:13 <Marvin--> shapr: heh, have you read PEP 666?
14:08:21 <shapr> yikes, no
14:08:29 * shapr shoots hdaume 
14:08:31 <shapr> :-)
14:08:33 <Marvin--> shapr: Laura wrote it, it's called "Reject Foolish Indentation"
14:08:37 * Heffalump pokes shapr to test greencard :-)
14:08:42 <shapr> Heffalump: oh, right!
14:08:43 <Heffalump> PEP?
14:08:51 <shapr> Python Enhancement Proposal
14:09:20 <Heffalump> right
14:12:51 <Marvin--> http://www.python.org/peps/pep-0666.html  <- it's a fun read
14:13:56 <shapr> I have the urge to write a lambdabot plugin....
14:14:45 <Marvin--> andersca: aha, the package is called nautilus-apotheke
14:14:50 <andersca> Marvin--: oh ok
14:17:35 <Marvin--> andersca: well, in Debian anyway
14:17:38 <Marvin--> hmm, wonder how to use it
14:19:18 <Heffalump> shapr: something that reads the prelude locally instead of doing a network lookup would be nice
14:19:49 <shapr> HaddockModule!
14:19:56 <Darius> Something that reads the GHC docs would be nicer.
14:20:03 <shapr> HaddockModule!
14:20:12 <Darius> or rather the heirarchical libs
14:20:16 <shapr> HaddockModule!
14:20:24 * shapr dances
14:20:26 <Verbed> Anyone care to join me in #trivia ?
14:20:29 <shapr> uh oh
14:20:31 * shapr runs away
14:20:33 <Heffalump> what's there?
14:20:39 <shapr> Verbed, kicking your butt ;-)
14:20:44 <Heffalump> at trivia?
14:20:46 <shapr> yes
14:20:57 <Marvin--> jebus, yes, this really sucks
14:20:57 <shapr> I'm quite good at trivia games, but I got my butt kicked.
14:21:01 <Heffalump> USAnian trivia?
14:21:05 <shapr> all sorts
14:21:29 <Marvin--> "I know, cvs up is the most common operation, so let's make it take a long time to do"
14:21:35 <Verbed> It's far less Americacentric than most.
14:21:51 <shapr> America /= USA
14:22:03 <Verbed> It seems that way in popular terminology.
14:22:10 <shapr> I've decided I'm either a USAn or a USAian
14:22:20 <shapr> USAnian?
14:22:26 * Verbed is a Canadian and needn't worry.
14:22:29 <hdaume> wait, you mean there's world outside of the USA
14:22:31 * hdaume shudders
14:22:35 <shapr> hdaume: yes, but they have funny money.
14:22:36 <Riastradh> Usan sounds Islamic.  That's unpatriotic, shapr!
14:22:42 <andersca> where did you work again hdaume?
14:22:43 * andersca runs
14:22:47 * shapr laughs
14:23:02 <shapr> Riastradh: I have *FRENCH* fries at my house!
14:23:08 <shapr> none of those freedom fries here.
14:23:08 <Riastradh> Blasphemy!
14:23:14 <Marvin--> shapr: it kinda sucks that the Netherlands has the euro now, they had this really nifty monopoly money :)
14:23:18 <hdaume> freedom fries taste better
14:23:25 * Marvin-- has pommes frites
14:23:31 <shapr> Marvin--: finnish money was pretty bizarre too, I still have some bills.
14:23:33 * andersca has coca cola light lemon
14:23:40 <Verbed> Shapr. going to join us?
14:23:46 <Marvin--> andersca: sucks to be you, I have beer :-)
14:23:48 <shapr> even weirder, I have some portuguese money, but I don't where I got it from.
14:23:55 <shapr> Verbed: not today, thanks.
14:23:55 <andersca> Marvin--: I have cognac too
14:23:58 <shapr> hi mandrill 
14:24:09 * Darius really doesn't think lambdabot will build...
14:24:09 <mandrill> hi
14:24:22 <shapr> mandrill: written any cool Haskell code lately?
14:24:40 <mandrill> no... i'm still learning
14:24:43 <Marvin--> andersca: I have three kinds of whisky and a bourbon
14:25:01 <andersca> I forgot my bourbon at our summer house
14:25:23 <andersca> jonathan blandford from red hat brought me bourbon at guadec
14:25:32 <shapr> mandrill: for school? or for fun?
14:25:44 <mandrill> in fact, i'm in lack of ideas; i think i'm ready for the learning-by-doing-phase, but i don't know +what+ to do :)
14:25:49 <mandrill> for fun
14:25:52 <shapr> write a lambdabot plugin!
14:26:02 * Marvin-- just *knew* shapr would say that
14:26:05 <mandrill> lambdabot o_O
14:26:08 * shapr laughs
14:26:10 <shapr> @fact source
14:26:12 <lambdabot> http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/haskell-libs/libs/lambdabot/
14:26:23 <Marvin--> it's no fun being psychic when everybody else could've guessed it too :-/
14:27:25 * kosmikus can offer six different single malts ;)
14:27:37 <Marvin--> aww shucks
14:27:49 <Marvin--> kosmikus wins :/
14:29:07 <shapr> I have a plan and the knowledge for HaddockModule, I just haven't had the time and focus to do it.
14:29:33 <earthy> hm. yes, kosmikus wins.
14:29:36 <earthy> I only come up to 5.
14:29:36 <shapr> it's especially easy since the interfaces are included in binary dump format.
14:30:24 <shapr> base.haddock.gz is a dump of :: [Interface] via Binary.hs 
14:30:30 <earthy> (or do I? I forget... must be the whiskey :))
14:30:31 <shapr> or something very close to that type.
14:30:48 <Marvin--> earthy: you have whiskey? bah, I have whisky :-)
14:31:14 <kosmikus> hi earthy
14:31:21 <earthy> yah, that's the irish shtuff, right? ;)
14:31:31 <Marvin--> irish is whiskey iirc
14:31:32 <earthy> but I don't have it anywhere near here, unfortunately
14:32:31 <earthy> (yes, there are disadvantages to going to a summer school. they are outweighed though :))
14:32:46 <Marvin--> heh
14:32:54 <earthy> time for another beer and finishing my presentation :)
14:33:06 <Marvin--> andersca: god this sucks, I can't figure out how to do a directory-wide cvs up
14:40:41 <shapr> y0 Arnia
14:41:55 * isomer waves hello
14:42:02 <shapr> hi anth!
14:42:06 <shapr> tried Haskell yet? :-)
14:42:07 <isomer> how's it going, shapr?
14:42:08 <Arnia> Hey shapr
14:42:21 <shapr> life is good, I'm delaying starting work :-)
14:42:23 <isomer> no time...my big exam is on the 16th. after that
14:42:31 <shapr> after that you'll be a medial student!
14:43:30 <isomer> nah, after that i've got a YEAR before i can start. assuming i'm accepted, of course. and since i don't have job (and am having lots of trouble finding one), i'll have plenty of time and not much money for a while
14:43:45 <shapr> plenty of time sounds good
14:43:49 <shapr> not much money doesn't sound good.
14:43:54 <isomer> tell me about it
14:44:31 <shapr> I'm very much in favor of free time though.
14:44:44 <isomer> me too
14:45:07 <isomer> but being broke kinda sucks. not being rich is one thing, but broke is another...
14:45:09 <shapr> what sort of job are you looking for? smalltalker?
14:45:26 <isomer> smalltalk, c++, python, c# - not particular
14:46:06 <shapr> I'm fanatically against D Flat.e
14:46:15 <shapr> D Flat Language.
14:46:17 <isomer> really? how come?
14:46:27 * isomer doesn't mind it 
14:46:35 <isomer> m$? is that why?
14:46:53 <shapr> more about .NET, I think it's a way of monopolizing the market.
14:47:25 <Marvin--> *another* way ;)
14:47:28 <isomer> well, there is that.
14:47:42 <isomer> i find it a vast improvement over programming in java, though.
14:47:57 <isomer> or at least, i find it significantly less annoying
14:48:28 <shapr> hey, I'm going to be 100,000 years old in just a little while! (in binary)
14:48:52 <Marvin--> I think the CLR seems to be better than the java vm anyway, at least it seems like they've made an effort to make it at least somewhat interesting to run other languages on it
14:48:55 <isomer> wow - that's even more than dog years OR web years
14:49:11 <andersca> Marvin--: yeah
14:49:14 <Marvin--> whereas with java, yeah you *can* run other languages on it, but...ick
14:49:25 <shapr> I think C-- is a better solution.
14:49:25 <andersca> the clr is pretty cool
14:49:32 * Marvin-- has toyed a bit with a mini-version of the CLR language in the semantics course
14:49:48 * isomer rather likes python in the end
14:49:52 <Marvin--> objected oriented assembler with goto and typed labels :)
14:50:04 <andersca> mono has an il assembler
14:50:15 <Marvin--> il?
14:50:19 <andersca> immediate language
14:50:23 <andersca> the assembler
14:50:24 <shapr> intermediate ;-)
14:50:27 <andersca> oh sory
14:50:28 <andersca> sorry
14:50:32 <shapr> immediate is funny :-)
14:50:33 <arguile> parrot is pretty fun too
14:50:35 <shapr> DO THIS NOW.
14:50:37 * shapr laughs
14:50:52 <andersca> parrot is, um
14:50:52 <andersca> weirdc
14:51:15 <shapr> I can see the point of DSELs, and of C--, but where does JVM or CLR fit in?
14:51:17 <Marvin--> the good thing about parrot is that it's register based, not stack based, so it'll probably be a lot faster
14:51:35 <kosmikus> yes, I'd like to have an immediate language, too -- where can I buy it?
14:51:35 <andersca> Marvin--: http://primates.ximian.com/~miguel/activity-log.html
14:51:44 <andersca> Marvin--: read the jul 22 entry
14:54:17 <Marvin--> uh, I was under the impression that there existed theoretical studies of register machines and stack machines
14:54:27 <Marvin--> (and practical too)
14:54:31 <shapr> I wonder if strict languages are immediate languages? or maybe partial evaluation fits in there?
14:55:48 <kosmikus> I'd prefer immediate in the sense of "solves all problems immediately"
14:56:14 <earthy> that silly kosmikus. asking for impossibilities. :)
14:56:30 <earthy> ah well, time for a beer.
14:56:39 * shapr prepares for work
14:56:49 * earthy for bed. :)
14:56:49 <Marvin--> time for sleep
14:56:51 <shapr> time to beat some sense into Zope
14:56:57 <kosmikus> earthy: I though you had (at least one) in the meantime
14:56:58 <earthy> bubbye
14:56:58 <shapr> g'nite Marvin-- 
14:56:59 <Marvin--> shapr: HAH, good luck
14:57:08 <shapr> Marvin--: I've been doing this for FIVE DAYS.
14:57:12 <shapr> very little success so far.
14:57:15 <earthy> kosmikus: nope, got working on my `slides' for the particapant talk tomorrow
14:57:24 <shapr> I thought it would take three hours.
14:57:25 <shapr> sheez
14:57:29 <kosmikus> earthy: I don't even know where you are ;)
14:57:49 * shapr dynamically unloads his insane-optimism plugin.
14:57:51 <earthy> kosmikus: marktoberdorf summer school on proof technology and computation
14:58:02 <kosmikus> ah right, I remember you booking train tickets
14:58:06 <earthy> and I'll be back on monday.
14:58:14 <kosmikus> I'll be away, then ;)
14:58:16 <kosmikus> until Sep 1
14:58:26 <earthy> owh, yeah, speaking of which, I have 2 20 DM DB vouchers you can have. ;)
14:58:38 <earthy> DM... silly me. 10 Euro. :)
14:58:43 <shapr> heh
14:58:46 <kosmikus> great
14:58:52 <shapr> I wish Sweden would switch to the Euro.
14:58:59 <Marvin--> lobby
14:59:04 <kosmikus> seems as if the DB was very reliable again ;)
14:59:06 <shapr> I don't even have a hotel!
14:59:07 <Marvin--> or something
14:59:12 * Marvin-- will probably vote yes
14:59:12 <earthy> well, no, the delay was incurred in .nl :)
14:59:18 <shapr> I don't get to vote
14:59:25 <kosmikus> yes, but ICE is ICE
14:59:30 <earthy> true.
14:59:31 <isomer> yay! finally found that pcl-cvs bug!
14:59:33 <shapr> but the local communists youth has put up large numbers of anti-emu posters.
14:59:33 <Marvin--> shapr: that's 'cause you're a feregner :)
14:59:54 <kosmikus> last weekend was a positive record: I only had 50 minutes total delay in two trips
14:59:54 <shapr> Marvin--: I think they call them invanders around here.
15:00:15 <earthy> wow. that's good! :)
15:00:37 <Marvin--> shapr: wasn't it invaders last we talked about this? :)
15:00:41 <kosmikus> yes, all other long-distance trips in the last three months I had more than one hour each
15:00:41 <shapr> Marvin--: oh, I'll get to try out my crappy svenska on you soon :-)
15:00:53 <shapr> Marvin--: yes, but invanders is very swenglish I think.
15:00:59 <earthy> !sigh
15:01:09 <lambdabot> sigh
15:01:11 <earthy> ah well, I hope you won't have as much trouble in sweden.
15:01:17 <kosmikus> you still have to get back, though ;)
15:01:22 <earthy> and I wish you very good luck there. ;)
15:01:27 <kosmikus> thanks
15:01:27 <earthy> kosmikus: true enough, true enough.
15:01:41 <Marvin--> night people
15:01:48 <shapr> sov gut Marvin-- 
15:01:49 <kosmikus> succes met je praatje
15:01:59 <earthy> but I'm leaving 08:50 and am supposed to be in Nijmegen by 16:08... this gives me some time to deal with delays. ;)
15:02:03 <earthy> tnx, kosmikus
15:02:09 <earthy> g'night all
15:02:11 <Marvin--> shapr: "sov gott"
15:02:20 <shapr> tack :-)
15:09:12 <Darius> hmm, so how important are these signals in IRC.hs?
15:09:31 <shapr> look at BaseModule.hs
15:10:11 <shapr> unless you mean the ircSignalsToCatch ?
15:10:43 <shapr> all the doPING doQUIT functions were moved into the module typeclass
15:10:59 <Darius> I think I mean the latter.  The Posix.Signals.
15:11:51 <shapr> look at line 85 or so
15:12:37 <shapr> it's part of the error handler that Heffalump wrote.
15:14:16 <Heffalump> which signals?
15:14:23 <Heffalump> oh, it catches signals
15:14:46 <shapr> which is confusing because the IRC events are called ircSignals
15:14:59 * Heffalump reappears from kicking Verbed's butt at trivia :-)
15:15:05 <shapr> you beat him?
15:15:26 <Heffalump> 30-18 :-
15:15:27 <shapr> wow, I'm sorry I missed it, and won't play trivia games against you ever :-)
15:15:27 <Heffalump> )
15:15:30 <Verbed> It wasn't my finest game.
15:15:33 <Igloo> I thought about suggesting you should have a go on the machien in the pub
15:16:09 <Heffalump> darius: what's the problem, anyway?
15:16:18 <Verbed> What was it, 30 to 18?
15:16:23 <Heffalump> yeah
15:16:36 <Heffalump> I don't think many of them were me being quicker on the draw
15:16:38 <Heffalump> but a few were
15:16:51 <Darius> I use Win2k
15:16:57 <Heffalump> darius: ah
15:17:01 <Verbed> You got a free one with the 'Winnie The Pooh' question :P
15:17:16 <Heffalump> :-p
15:17:24 <Heffalump> darius: you can basically kill it all
15:17:31 <Heffalump> it just won't catch OS signals any more
15:17:48 <Heffalump> if you do it with ifdefs then you could check back in, too
15:18:19 <shapr> wait, was Heffalump one of the *answers*?
15:18:23 <Heffalump> basically, get rid of all the signal stuff near the top, remove the SignalCaught type from IRCError
15:18:29 <Heffalump> no, A.A. Milne was
15:18:35 <shapr> ok :-)
15:18:37 <Heffalump> the question was "who wrote Winnie the Pooh"
15:18:46 <Heffalump> but I'd actually forgotten Heffalumps came from that ;-)
15:18:51 <shapr> no way :-)
15:19:00 <shapr> when did you choose Heffalump?
15:19:11 <Heffalump> few years back
15:19:22 <Heffalump> I hadn't completely forgotten
15:19:32 <Heffalump> it just wasn't an immediate association until you just reminded me
15:19:50 <Heffalump> it's mainly the elephant association that I have it for
15:20:04 <shapr> makes sense.
15:20:09 <shapr> since you have such a spiffy first name :-)
15:20:10 <Heffalump> and for years when I was a little kid I had this elephant figure I called Heffalump
15:20:27 <Heffalump> so I kind of lost track of the original reference in my head and just associated it with the elephant
15:21:36 <shapr> I saw a picture of Heffalumps once, it was very cool.
15:21:50 <shapr> a cross between an elephant and a bee...
15:25:17 <Riastradh> It's a Heffable Horralump!
15:25:30 <Riastradh> No, it's a Horrifle Heffibump!
15:32:06 <Riastradh> I'm bored.
15:32:20 <shapr> write the swedish chef lambdabot plugin.
15:32:32 <shapr> :-)
15:32:41 <Riastradh> No!  I have twisted-scheme and an Erlang project and another big project to work on.
15:32:43 <Darius> holy crap, it compiled
15:32:44 * Riastradh is no longer bored.
15:32:54 <shapr> Darius: run it! or run away from it!
15:34:12 <Darius> that's just the one module though it's linking now.  I still don't have high hopes of it working, right off the bat, but we'll see.
15:46:25 <Verbed> Under gray sky,
15:46:26 <Verbed> the gentle indifference
15:46:26 <Verbed> of chain lightning.
15:49:53 <kosmikus> good night everyone
15:50:45 <shapr> good night kosmikus|away
16:11:53 <Igloo> @seen hdaume
16:11:54 <lambdabot> hdaume is in #haskell.
16:12:18 <Igloo> Ah, that wasn't as useful as I'd hoped  :-)
16:12:25 <shapr> what were you hoping for?
16:12:50 <Heffalump> a time, I imagine
16:12:53 <Igloo> Yeah
16:12:57 <shapr> ah
16:13:16 <Igloo> Or how long ago
16:15:01 <shapr>  /wi hdaume will tell you how long he's been idle.
16:15:18 <Igloo> Good point, ta
17:38:47 * shapr bounces happily
17:38:51 <shapr> goodies!
17:39:09 <clausen> happy?
17:39:19 <shapr> I found a Haskell blog
17:39:24 <shapr> I think it's a wiki too, but I'm not sure.
17:46:13 <Pseudonym> Where?
17:49:28 <shapr> next to the Haskell Operating System pages.
17:49:35 <shapr> ;-)
17:49:51 <shapr> just a moment, I'm writing directions for this blog/wiki
17:49:58 <shapr> since none exist, and neither do sample config files.
17:52:29 <Pseudonym> I see.  Is this by the same person who did the Haskell avionic control software and the Haskell pacemaker?
17:52:31 <shapr> Pseudonym: http://www.scannedinavian.org/cgi-bin/wiwiwi/blog.cgi
17:52:51 <shapr> I'm in the midst of writing the directions by reading the sources
17:53:03 <shapr> I'll go ahead and paste my config.xml file there so you can get it running.
17:53:36 <Pseudonym> As a matter of interest, how does it handle multiple versions?
17:54:03 <shapr> I found this source some fifteen minutes ago :-)
17:54:17 <Pseudonym> Ah. :-)
17:54:20 <shapr> it wasn't online three hours ago
17:54:41 <Heffalump> may I edit it?
17:54:55 <shapr> sure, try it.
17:55:46 <shapr> it doesn't want to show my config.xml
17:56:20 <Heffalump> and it breaks even more when you try to edit that page
17:56:32 <shapr> ?
17:56:50 * Darius is going to have to hack the runtime loader to work with Windows.
17:56:53 <Heffalump> the edit box displays less information than is visible on the page itself
17:56:56 <shapr> I'll make a link to my config.xml file, just a moment.
17:57:04 <Heffalump> darius: ah, fun. You could just make everything static
17:57:43 <Pseudonym> Is there a cvs Why do I get the impression that this was quick 'n dirty?
17:57:51 <Pseudonym> Not that there's anything wrong with that.
17:58:14 <Heffalump> darius: what's the problem, btw - given that ghci works in 'doze, I'd have expected the RuntimeLoader to
17:58:29 <shapr> ok, now the config file is linked on the front page.
17:58:44 <Pseudonym> IMO, the interesting part is just how little code you need to write a fully functioning wiki.
17:59:05 <shapr> that doesn't surprise me, but it does make me happy he's done this.
17:59:12 <Pseudonym> Yes.
17:59:18 <shapr> anyways, I'll keep working on the directions.
17:59:42 <Pseudonym> It's good that someone has bitten the bullet.
17:59:50 <Pseudonym> Now everyone else has something to hack on.
17:59:55 <shapr> truly
18:00:19 <Darius> The runtime loader doesn't check for DLLs.
18:00:23 <Pseudonym> Someone should ask this guy if we can slurp it into haskell-libs.
18:00:25 <shapr> as soon as I have directions documenting what I find in the sources, I'll send an email to the author.
18:00:34 <shapr> yah, would be much fun to hack on
18:00:35 <Darius> e.g. msvcrt is in the extra_libraries
18:00:45 <shapr> Pseudonym, tried darcs?
18:00:49 <Pseudonym> Nope.
18:00:54 <shapr> want to?
18:01:09 <shapr> http://www.scannedinavian.org/cgi-bin/darcs?hlibs*
18:01:21 <Pseudonym> OOh, nice.
18:01:26 <shapr> send me your public GPG key and you'll have quickly have commit access to the hlibs darcs repo
18:02:15 <shapr> wiwiwi is GPL'd, so we can go ahead and slurp it if we want.
18:02:16 <Pseudonym> http://andrew.bromage.org/pgp.txt
18:02:28 <Pseudonym> Yeah, but it's manners to ask first.
18:02:31 <Heffalump> it would be polite to ask.
18:02:35 <Heffalump> and it would suck for it to fork
18:02:39 <Pseudonym> Right.
18:02:42 <Heffalump> and the haskell-libs CVS server sucks too
18:02:50 <Pseudonym> Indeed.
18:02:55 <Heffalump> I don't think haskell-libs should commit to darcs just yet, though
18:02:57 <Pseudonym> I haven't been able to update for a long time now.
18:03:15 <Heffalump> can we get an entire copy of the repository and put it somewhere else?
18:03:33 <Pseudonym> Where?
18:03:33 <shapr> Pseudonym: ok, you have write access.
18:03:37 <Pseudonym> Thanks.
18:03:42 <Pseudonym> You can use my cvs server if you like.
18:03:48 <Heffalump> I'll volunteer somewhere if noone else can.
18:03:48 <Pseudonym> It's not set up for anonymous use, though.
18:04:15 <Pseudonym> Is savannah any more reliable than sf?
18:04:26 <Verbed> Would anyone join me in #trivia ?
18:04:36 <Pseudonym> Is that a trivia question?
18:05:20 <Pseudonym> Another possibility is we might want to switch to something like subversion.
18:05:23 <Pseudonym> Dunno about that, though.
18:05:28 <Heffalump> but again I'll have to configure anonymous use and stuff
18:05:39 <shapr> I'd like to try darcs in a 'production' setting, that's my main motivation for switching haskell-libs to darcs from cvs
18:05:47 <Pseudonym> OK.
18:05:50 <Pseudonym> darcs it is
18:05:50 <Heffalump> I don't think we should trust darcs just yet.
18:06:02 <Heffalump> but I don't mind being overridden :-)
18:06:05 <Pseudonym> :-)
18:06:19 <Pseudonym> Well, I don't mind using darcs for a while so long as we keep it in sync with sourceforge.
18:06:36 <Heffalump> can we make sure there are no commits to sourceforge?
18:06:45 <Heffalump> pushing from darcs to CVS should be easy enough
18:06:50 * shapr checks
18:06:54 <Heffalump> vice-versa would require reconstructing commits, which would be a pain
18:07:10 <Pseudonym> There's a simple way to make sure there are no commits to sourceforge.
18:07:11 <Heffalump> by "make sure" I might just mean "make sure everyone knows not to and is reasonably happy to accept that"
18:07:17 <Pseudonym> Remove everyone's write privileges.
18:07:21 <shapr> I added haskell-libs from raven (www.ScannedInAvian.org) so I'll cvs up there to check.
18:07:26 <shapr> heh ~-)
18:07:27 <Heffalump> who is actively committing to it these days?
18:07:47 <shapr> ?
18:07:53 <Heffalump> haskell-libs
18:08:05 <shapr> has anyone actively committed to it recently?
18:08:15 <Heffalump> depends how you define recently..
18:08:16 <Pseudonym> I haven't even been able to _update_.
18:08:22 <Heffalump> I committed to lambdabot not that long ago
18:08:23 <shapr> I did *not* import the Unstable module, since Peti and Ketil are using it.
18:08:27 <Pseudonym> There is some sytuff I've wanted to put in.
18:09:18 <Darius> I haven't committed anything recently, but that may change.
18:09:44 <Darius> Of course, I don't believe I can use darcs, so...
18:10:15 <Darius> @fact darcs
18:10:16 <lambdabot> http://www.abridgegame.org/darcs/
18:11:10 <Heffalump> darius: you don't think it works in windows?
18:11:24 <Heffalump> does darcs allow one to just check out a subdirectory?
18:11:40 <Darius> I don't know.  I could try to hack at it, I severely doubt it'd run out of the box.
18:11:43 <Heffalump> that's a big win of CVS, IMO (but allowing cross-directory moves properly makes it hard, of course)
18:11:53 <shapr> there are currently no commits that are in cvs but not in darcs
18:12:19 <Heffalump> shapr: the "Unstable" module?
18:12:21 <Heffalump> what's that?
18:12:33 <Igloo> ISTR darcs has been implemented in several languages including C - are they all at roughly the same level of completeness?
18:12:35 <shapr> Peti talked about it on the libraries mailing list.
18:12:51 <Heffalump> is Igloo confusing darcs and arch?
18:12:53 <Igloo> If so I'd hope the C one would be OK. Shell under cygwin also ought to be.
18:12:59 <Igloo> Oh, of course I am
18:13:06 <Igloo> darcs being written in Haskell and all  :-)
18:13:28 <Heffalump> shapr: when, ish?
18:13:38 <shapr> some months ago
18:13:50 <shapr> the Unstable tree summary:
18:14:16 <Igloo> I suspect darcs will fail to send mail on Windows
18:14:17 <shapr> allow users to install partial sources from haskell-libs cvs tree
18:14:34 <Heffalump> what does that mean?
18:14:36 <shapr> make an Unstable tree for users WIP code
18:14:50 <shapr> that's the nutshell
18:14:58 <Heffalump> what is Peti's real name?
18:15:05 <shapr> Peter Simons
18:15:18 <Heffalump> ahh
18:15:24 * Heffalump connects nick to name
18:16:20 <shapr> Igloo: psst, wiki written in Haskell =)
18:16:40 <Darius> Hmm, why doesn't/didn't the RuntimeLoader just rip the code from GHCi?
18:16:49 <Igloo> :-)
18:16:53 <shapr> afaiu, the code is ripped from GHCi
18:17:09 <shapr> o3 wrote the runtime loader, so you can ask him when he's not AFK.
18:18:09 <shapr> anyone else I should add to the darcs committers keyring?
18:18:33 <shapr> er "hlibs" not darcs
18:18:52 <Heffalump> umm, I've just checked through libraries archives and can't spot such a message
18:19:08 <Heffalump> don't suppose you remember the subject line?
18:19:21 <Heffalump> oh, hangon
18:19:28 <shapr> no, but I can fgrep my local archive
18:19:33 * Heffalump is just downloading the mbox
18:19:36 <Heffalump> so I can do that
18:20:13 <shapr> it would be useful for me to fix my searchml plugin.
18:21:42 <Heffalump> right, found it.
18:22:19 <Heffalump> I'm still a bit lost. Does this "Unstable" module actually exist, and if so where is it?
18:22:35 <shapr> it's in the root of haskell-libs cvs
18:22:42 <shapr> next to the libs/ dir that we're used to using.
18:22:46 <shapr> it's a separate module.
18:22:57 <Heffalump> ahhh.
18:23:07 <Heffalump> I was getting confused about repository structure.
18:24:07 <Heffalump> how do I get a list of modules in a repository?
18:24:24 <shapr> cvsweb?
18:24:26 <shapr> I don't know.
18:25:17 <Igloo> I need a tool that uses info collected from the output and timings of 1 build and fuzzy matching on the current build to estimate how long this one will take
18:26:22 <Heffalump> right.
18:26:26 <Heffalump> now I understand what's going on.
18:26:45 <Heffalump> so the current proposal is to replace haskell-libs/libs on sourceforge with shapr's darcs repository.
18:27:03 <shapr> yah, I guess so.
18:27:11 <Heffalump> the main disadvantage of this would be for people who can't/won't use darcs.
18:27:17 <shapr> that's true.
18:27:26 <Heffalump> They could update from the repository, if shapr or someone pushed patches regularly. But they couldn't checkin.
18:28:00 <shapr> so, what OSes can't run darcs?
18:28:31 <Igloo> Can't check out should be pretty much no-one, can't push would probably be non-unixy people which could be solved by writing SMTP sending code
18:28:36 <shapr> as far as I know, haskell-libs committers have Linux,Windows,MOX,?
18:28:41 <Igloo> (it might be more complex, someone would have to try)
18:28:53 <Heffalump> does Igloo have any evidence that darcs builds at all on non-UNIX?
18:29:10 <shapr> pushing would also require gpg/pgp on that platform
18:29:20 <Igloo> No, like I said, you'd have to try. But I can't think why it would have problems OTTOMH
18:29:25 <shapr> writing SMTP sending code is not hard.
18:29:27 <Igloo> Oh, unless it uses some libraries with the FFI
18:30:09 * Heffalump uses cvs annotate to make a guess at a list of recent committers.
18:30:17 <Heffalump> arnia 04-Apr 03
18:30:21 <Heffalump> astapov 25-Jul-03
18:30:36 <Heffalump> ddarius 28-May-03
18:30:45 <Heffalump> eleganes 31-Jul-03
18:30:59 <Heffalump> eris 29-Jul-03
18:31:06 <Heffalump> ijones 05-Feb-03
18:31:14 <Heffalump> mlang 03-May-03
18:31:20 <Heffalump> msjogren 26-May-03
18:31:26 <Heffalump> pesco 13-Jun-03
18:31:36 <Heffalump> pseudony 19-Jun-03
18:31:42 <Heffalump> riastrad 03-Apr-03
18:31:47 <Heffalump> tmoertel 04-May-03
18:31:57 <Heffalump> polli committed something recently, but via me cos of CVS issues
18:32:18 <Heffalump> and that list will also mask commits where every line subsequently got replaced (e.g. by an indentation patch)
18:32:42 <shapr> aha, Peter Strand has gotten darcs to at least pull on win32
18:36:11 <Darius> If the things sync'd with the SF CVS, I'm not worried about pulling.
18:36:20 <Heffalump> pushing is the issue
18:36:33 * shapr thinks of the Space Robots song
18:37:31 <Heffalump> darius: do you use cygwin?
18:37:47 <shapr> I'll send an email to darcs-users and ask about pushing from win32
18:37:48 <Darius> For the things I have to, yes.
18:39:06 <o3> Darius: the runtime loader is basically the code from ghci (which uses rts/Linker.c)
18:39:53 * Heffalump wonders if o3 has any short-term plans to distribute RuntimeLoader independently of TextFilter
18:40:10 <o3> Heffalump: have been for a long time -- i've just been busy :)
18:40:13 <o3> anyway, be back later
18:40:18 <Heffalump> which reminds me, I owe you a patch or two
18:40:22 <Darius> I was wondering why you didn't use ObjLink.lhs
18:47:41 <shapr> mail sent, let's see what David has to say....
18:47:54 <shapr> anyone else has wiwiwi running?
18:51:10 <shapr> oh, wiwiwi does have some change collision support.
19:11:02 <Igloo> Wooo!
19:11:21 <Heffalump> sparc working?
19:11:31 <Igloo> I fought the Evil Mangler, and it lost!
19:11:40 <shapr> yay!
19:11:43 * shapr cheers for Igloo 
19:11:45 * Pseudonym woohoos
19:11:59 <Heffalump> today sparc, tomorrow the world!
19:12:11 <shapr> anyone looking at the wiwiwi sources? I can't figure out what the double backslash is good for.
19:12:19 * Igloo wonders if I can get away with selectively rebuilding bits or if I should just rebuild this whole compiler
19:12:33 <Heffalump> what do you want it for?
19:12:52 <shapr> I'm just trying to write docs for wiwiwi
19:13:01 <Heffalump> IM to Igloo
19:13:04 <shapr> oh
19:13:21 <Igloo> This is the one that the deb would be built with
19:13:44 <Pseudonym> Personally, I'd ask the author.
19:14:08 <Pseudonym> I had a look at the sources.  While it's fairly well-organised, the details are a bit impenetrable.
19:14:30 * Pseudonym intends to use the phrase "a bit impenetrable" more often
19:14:34 <shapr> heh
19:15:06 <clausen> my favourite word at the moment is "farm"
19:15:09 <Pseudonym> I don't blame the author.  Fact is, it works.
19:15:24 <Pseudonym> clausen: Don't say the word "farm" around this office.
19:16:05 <Riastradh> I like exsufflicate.
19:16:17 <Pseudonym> Oh, does anyone know if there's a terabyte of freely-available text sitting around anywhere?
19:16:48 <clausen> "phd farm", "link farm", "cube farm"...
19:16:49 <Riastradh> Start typing!
19:17:06 <Pseudonym> "Cubicle farm" is a good one.
19:17:09 <shapr> Pseudonym: archive.org
19:17:20 <Heffalump> Pseudonym: /dev/zero
19:17:35 <Pseudonym> shapr: If I mailed them some recordable DVDs, would they send me a copy, do you think?
19:17:40 <shapr> maybe
19:17:43 <shapr> you could ask them.
19:17:46 <Pseudonym> Heffalump: Not text, unfortunately.  Perhaps /dev/random
19:17:49 * Riastradh pokes any Erlang programmers present, even though this is #haskell.
19:17:53 <shapr> they have 50 terabytes hanging around.
19:18:13 <Heffalump> Pseudonym: get some monkeys?
19:18:24 <Pseudonym> No, unfortuately.
19:18:48 <Pseudonym> Oh, speaking of which...
19:18:57 <Pseudonym> http://www.vb-bootcamp.com/PPI/pressroom.asp#higher
19:21:15 <shapr> ahem
19:22:13 <Darius> Riastradh: I have Erlang installed... that's about it.  I've hardly written anything with it.
19:22:30 <Pseudonym> I played with it a little bit.
19:22:38 * Riastradh mumbles.
19:22:40 <Pseudonym> I hink you're going to have to ask.
19:23:13 * Riastradh is having a problem with it: {"\r\n", fun ([]) -> [{crlf, 1}]} gives an unterminated string literal error -- it seems to think a string literal is started by the second double-quote.
19:24:36 <o3> Darius: what's objlink.lhs?
19:25:35 <Darius> A file in fptools/ghc/ghci that handles the FFI part of the GHCi loader
19:26:22 <o3> Darius: sounds helpful
19:26:40 <o3> i think i might have actually re-used a lot of code from that, but my memory is hazy
19:26:42 <Pseudonym> Riastradh: What's the whole function?
19:27:52 <Riastradh> http://www.bloodandcoffee.net/campbell/code/scan.erl
19:27:58 <Riastradh> scan/2, the 'scan(String, last)' clause.
19:31:20 <flippo> @yow
19:31:21 <lambdabot> Now my EMOTIONAL RESOURCES are heavily committed to 23% of the
19:31:21 <lambdabot>  SMELTING and REFINING industry of the state of NEVADA!!
19:31:25 <shapr> hi flippo 
19:31:32 <flippo> shapr: howdy
19:31:33 <shapr> written any Haskell code lately?
19:31:41 <flippo> :(
19:31:58 <flippo> But I think about it occasionally.
19:32:00 <shapr> :-)
19:32:20 <flippo> I'm getting curious to know what ML looks like.
19:32:27 <flippo> Might have to go find a book
19:32:54 <flippo> sounds inferior, but could be interesting to know why
19:33:03 <Riastradh> fun insert (elt, Btree(left, elt1, right)) =
19:33:15 <Igloo> It looks like Haskell only uglier, IMO
19:33:21 * shapr grins
19:33:23 <Riastradh>     if elt < elt1
19:33:41 <Riastradh>         Btree(insert(elt, left), elt1, right)
19:33:44 <Riastradh> ...
19:33:55 <Riastradh> There's as tiny example of SML!
19:34:38 <flippo> the functions are strict, right?  (No lazy evaluation of arguments)
19:34:50 <Riastradh> SML/NJ has a laziness extension.
19:35:07 <flippo> that's quite an extension
19:35:17 <Riastradh> Not really.
19:35:41 <Riastradh> There's just one special datatype, 'susp', whose constructor is lazy.
19:35:51 <Riastradh> Then there's a special syntax for conveniently writing lazy functions.
19:35:54 <Riastradh> Nothing else.
19:35:59 <flippo> nifty
19:36:35 <flippo> It might be fun to read the tiger compiler book in ML
19:36:58 <flippo> more attractive than the C or Java versions anyway
19:37:00 <Pseudonym> Riastradh: That looks like a bug to me.  You might want to report it.
19:37:12 <Pseudonym> IMO, SML is uglier than other MLs.
19:37:17 <Riastradh> Argh.
19:37:27 <Riastradh> ML is ugly in general.
19:37:28 <Riastradh> Go Scheme!~
19:37:30 <Riastradh> s/~//1
19:37:37 <Riastradh> ...or s-expressions in general, rather.
19:37:45 <shapr> cool, John Meacham says that sending mail is likely the only obstacle to darcs push on win32
19:37:52 <Pseudonym> Cool.
19:38:07 <Darius> I'd imagine.
19:38:26 <shapr> In that case, I may have to use my woman's copy of windows to do some hacking.
19:38:32 <shapr> that should surprise her. :-)
19:38:33 <Pseudonym> Riastradh: I guess there's [$\r,$\n] for now. :-)
19:39:04 <Pseudonym> Now there's real love.  Sharing your OS.
19:39:57 * Pseudonym needs food
19:40:00 <Pseudonym> BBL
19:40:01 <Heffalump> bah, darcs uses Posix
19:40:22 <shapr> I think that's mentioned in the windows thread.
19:40:23 * Darius really needs food.
19:40:25 <shapr> on darcs-users
19:40:29 * shapr needs food too
19:41:24 <Heffalump> I should go to bed
19:42:06 <shapr> oh, wiwiwi was written August 6th
19:42:10 <Riastradh> Pseudonym, um...it still finds unterminated string literals in peculiar places.
19:42:16 <shapr> no wonder I haven't seen it before.
19:42:30 <shapr> it's less than 24hours old.
20:12:39 <shapr> anyone else playing with wiwiwi?
20:12:46 <shapr> I still don't understand some bits.
20:19:17 * Pseudonym got back to work
20:20:01 <Pseudonym> Recursive fun.  My unit tests for the self-testing subsystem of this program are failing.
20:22:52 * Pseudonym gets the impression he's doing too much testing
20:23:36 <shapr> Pseudonym: design by contract monad/arrow?
20:23:40 <shapr> possible?
20:24:12 <Heffalump> I still don't see what monads have to do with DBC.
20:24:39 <shapr> is there a better way to but runtime DbC checking onto a function?
20:24:45 <shapr> s/but/put/
20:24:56 <Heffalump> well, I guess an arrow would sort of make sense
20:25:07 <shapr> how would you do it with an arrow?
20:25:22 <Heffalump> well, it somewhat depends on what you want to do about contract violations
20:25:42 <Heffalump> if you just want to abort the program with an error, you don't need an arrow
20:25:43 <shapr> announce them?
20:26:22 <Pseudonym> Err... I don't see how.
20:26:30 <Pseudonym> How about this?
20:26:36 <Pseudonym> precondition :: Bool -> a -> a
20:27:15 <shapr> ?
20:27:20 <Pseudonym> precondition cond = if cond then throw "some exception" else id
20:27:32 <Pseudonym> s/throw/error/
20:27:34 <Pseudonym> Or something
20:28:02 <Heffalump> ghc has something called assert which does just that
20:28:09 <Pseudonym> There you go.
20:28:22 <Pseudonym> You might want a bit of framework to handle the errors properly.
20:28:28 <Heffalump> what you'd want is something called contract :: (a -> Bool) -> (b -> Bool) -> (a -> b)
20:28:37 <Pseudonym> Hmmm.
20:28:38 <Heffalump> sorry, -> (a -> b) at the end
20:28:46 <Pseudonym> I don't like that.
20:29:06 <Pseudonym> Doesn't look nice in combination with currying.
20:29:06 <Heffalump> contract pre post f a = assert (post (f (assert (pre a)))
20:29:25 <Pseudonym> And, of course, postconditions can depend on function arguments too.
20:29:40 <Heffalump> ok, make the obvious changes :-0
20:29:46 <Heffalump> but that'd introduce a space leak
20:29:47 <shapr> an arrow can make pre and post conditions explicit, right?
20:29:53 <Pseudonym> I think "assert" is sufficient.
20:29:58 <Heffalump> err, what do you mean?
20:30:03 <Heffalump> Pseudonym: not if you want contracts
20:30:11 <Heffalump> well, it is in that you can implement what I said above with it
20:30:16 <Pseudonym> Right.
20:30:18 <Heffalump> but what I said above is what you want for contracts on functions
20:30:26 <Smerdyakov> Maaaan. What's the big deal about contracts?
20:30:30 * Pseudonym puts out a contract on a function
20:30:34 <Heffalump> an arrow would create a nice framework for handling failures
20:30:37 <shapr> Smerdyakov: some people like them.
20:30:58 <Smerdyakov> shapr, so?
20:31:10 <Pseudonym> One person's contracts are another person's asserts and yet another person's dependent types.
20:31:11 <Heffalump> I get the feeling shapr likes them :-)
20:31:35 <shapr> I was thinking, since (->) is an Arrow(I think?) then you could transparently replace all the function calls in a given piece with Contract arrows instead, if you wanted to.
20:31:41 <shapr> and so 'instrument' existing code.
20:31:42 <Pseudonym> And yet another person's documentation. :_)
20:31:58 <shapr> actually, I don't know if I like DbC, I haven't had a good chance to use it.
20:32:05 <Smerdyakov> shapr, something not worth doing is not worth doing in a clever way.
20:32:16 <shapr> Smerdyakov: you can't convince me that it's not worth doing.
20:32:22 <Pseudonym> DbC has its place.
20:32:30 <Pseudonym> It's another tool in the programmer's toolbox.
20:32:34 <shapr> only if I use DbC for awhile, and then it convinces me that it's not worth doing.
20:32:34 <Smerdyakov> shapr, right, and I'm waiting for you to convince me that it _is_.
20:32:47 <shapr> but I'm not convinced myself, why should I convince you?
20:32:53 <Pseudonym> You know what I want?  Coverage testing tools.
20:33:06 <Heffalump> shapr: errm, only if you go and change all your code into arrow notation.
20:33:16 <shapr> I just want to be able to do it so that I can un/convince myself.
20:33:17 <Smerdyakov> Pseudonym, I might be working on one for C programs soon. Who knows.
20:33:20 <Heffalump> Which is possible, and probably could even by automated, but isn't trivial
20:33:29 <shapr> Heffalump: it'd still be worth it to me.
20:33:34 <Pseudonym> Smerdyakov: Woohoo.  Though we already have gcov.
20:33:47 <Heffalump> if you don't mind your program just bombing out if something is violated, then do what I said above
20:34:05 <shapr> especially since some high muckety-mucks in the software pundit world have been claiming that someday, there will be a langage that allows DbC, and allows you to turn it off for runtime performance.
20:34:07 <Smerdyakov> Pseudonym, I'm sure it's silly compared to what I'd be working on: using a full-fledged predicate abstraction model checker to rule out unreachable program poitns.
20:34:07 <Pseudonym> IMO, coverage analysis is a necessary precondition to trusting your testing.
20:34:10 <shapr> I think Haskell can already do that.
20:34:19 <Heffalump> contract :: (a -> Bool) -> (a -> b -> Bool) -> (a -> b) -> (a -> b)
20:34:57 <shapr> I'd like to combine QuickCheck with coverage testing.
20:34:58 <Pseudonym> Smerdyakov: You solving the halting problem next? :-)
20:35:00 <shapr> that would be fun.
20:35:05 <Heffalump> coontract pre post f a = let b = f (assert (pre a) a) in assert (post a b) b
20:35:22 <Smerdyakov> Pseudonym, do you know what predicate abstraction is?
20:35:31 <Pseudonym> Vaguely.
20:35:35 * shapr saves Heffalump's code for later ponderment
20:35:40 <Heffalump> then just put contract pre post around any function bodies you want to apply a contract to
20:35:44 <Pseudonym> It's an abstract interpretation kind of thing.
20:36:36 <Smerdyakov> Pseudonym, right, and with certain refinement techniques, it's possible to find whether or not locations in arbitrary programs are reachable, in practice.
20:36:53 <Smerdyakov> Pseudonym, since C programs tend to be pretty simple quite often. :-)
20:37:04 <Pseudonym> Er... right. :-)
20:37:18 <shapr> Pseudonym: hey, check this out when you get a chance: http://www.macs.hw.ac.uk/~sebc/proposal.ps
20:37:26 <shapr> I didn't know about type slicing
20:37:38 <Smerdyakov> Pseudonym, a good example of this is device drivers.
20:37:41 <Pseudonym> C programs do tend to be simple, but they're notoriously hard to analyse.
20:38:07 <Smerdyakov> Yeah, well, the point of having universities is to get the government to pay you to find ways to do notoriously hard things. :-)
20:38:12 <Pseudonym> Aliasing is the usual fly in the proverbial ointment.
20:38:27 <Smerdyakov> http://www-cad.eecs.berkeley.edu/~rupak/blast/
20:38:28 <Pseudonym> I suspect you'd have more luck with Haskell.
20:39:00 <Pseudonym> Very neat.
20:39:14 <Smerdyakov> It works quite well.
20:39:29 <Smerdyakov> Will even handle pointers and recursive functions in the next release ;)
20:40:55 <Pseudonym> Pointers are kind of a show stopper for C code.
20:41:08 <Pseudonym> Recursive functions not so much.  Most C programs don't use recursion.
20:41:10 <shapr> stops me from using C at least.
20:42:18 <Smerdyakov> This will be dealing pretty well with pointers, from what I understand.
20:42:52 <Pseudonym> It'll be interesting to see how they do it.  You need some careful alias analysis to get anything useful.
20:43:15 <Smerdyakov> There is careful alias analysis.
20:43:19 * Pseudonym nods
20:43:37 <Smerdyakov> Beyond that, your programs might take A Very Long Time to be analyzed, but you should eventually get correct results.
20:43:59 <flippo> One could cheat and add compiler directives
20:44:06 <Smerdyakov> If a false error trace is found that is wrong because of incorrectly assumed aliases, it should automatically track the appropriate aliasing relations in the next iteration.
20:44:07 <Pseudonym> Interesting story, actually.  I implemented the first cut of alias analysis for Mercury.  It took A Very Long Time.
20:44:20 <Smerdyakov> flippo, what do you mean?
20:44:21 <Pseudonym> flippo: Well C9X does have a directive for that.
20:44:28 <Heffalump> Pseudonym: the alias analysis?
20:44:34 * Pseudonym nods
20:44:42 <flippo> Smerdyakov: you could add a directive asserting that two pointers are always disjoint
20:44:43 <Pseudonym> What we wanted for Mercury was _strong_ aliasing.
20:44:50 <Pseudonym> Analogous to strong typing.
20:45:04 <Pseudonym> So the compiler knew exactly what was (potentially) aliased and what wasn't.
20:45:17 <Pseudonym> And the programmer could guarantee statically that some variable wasn't aliased.
20:45:21 <Smerdyakov> flippo, 'cept you don't always know that!
20:45:43 <Pseudonym> It's been reimplemented now as a constraint satisfaction problem, and from all reports, it runs much better now.
20:46:02 <flippo> Smerdyakov: if you lie, you die
20:46:06 <Pseudonym> http://www.cs.mu.oz.au/research/mercury/information/papers.html#p33-overton
20:46:09 <Pseudonym> If anyone's curious.
20:46:22 <flippo> Smerdyakov: otherwise the default is to assume aliasing
20:46:32 <Smerdyakov> flippo, that's not very helpful if what you're setting out to do in the first place is automatic verification.
20:46:39 <Pseudonym> Right.
20:46:46 <Pseudonym> Still, that is the C way.
20:46:53 <flippo> Smerdyakov: yes, the directives I've seen are mostly for optimization
20:47:34 <Smerdyakov> In the context of a fancy counterexample-driven model checker, you can use whatever conservative alias you like, and then rely on the model checker to iron out the results as necessary.
20:47:34 <flippo> Imagine a pointer incremented with a random integer generator
20:47:47 <Pseudonym> "
20:47:50 <Pseudonym> "
20:47:52 <Pseudonym> Aargh.
20:47:59 <Pseudonym> "I
20:48:02 <Smerdyakov> Obviously pointer arithmetic is disallowed for reasonable verification. :-)
20:48:03 <Pseudonym> "I
20:48:09 <Pseudonym> If you lie to the compiler, it will get its revenge. 
20:48:10 <Pseudonym> - Henry Spencer 
20:48:11 <Pseudonym> There.
20:48:14 * shapr wonders about Pseudonym 
20:48:17 * Pseudonym curses bad cut 'n paste
20:49:07 <Heffalump> oh, that was the other talk in the same session as mine :-)
20:51:13 <Pseudonym> Ah!
20:51:31 <Pseudonym> So you know there's a lot of activity in Mercury but you have no clue what it is.  Is that fair to say?
20:52:39 <Heffalump> yep :-)
20:52:56 <Smerdyakov> Pseudonym, were you at the conference presenting that paper?
20:53:05 <Pseudonym> No.
20:53:10 <Heffalump> actually, to be fair, I probably took in as much of those talks as I do of most talks I hear (i.e. a lot at the time, but quickly forget stuff later)
20:53:11 * Pseudonym was long gone by this time
20:53:18 <Smerdyakov> Pseudonym, how long ago did you work on it?
20:53:33 <Pseudonym> Uhm... mid-'99 probably.
20:53:40 <Heffalump> I met Fergus Henderson in Cambridge in June, so I have a bit of an idea about what's going on from him
20:53:46 <Pseudonym> Right.
20:54:24 <Pseudonym> Fergus is a good guy.
20:54:29 <Heffalump> yeah
20:54:34 <Pseudonym> Works odd hours, though.
20:54:42 <Heffalump> I really liked his trick for making a Boehm collector safe.
20:54:56 <shapr> what are odd hours?
20:54:58 <Pseudonym> Oh?  Haven't heard that one.
20:54:59 <Smerdyakov> Pseudonym, are you David Overton?
20:55:03 <Pseudonym> No.
20:55:04 <Heffalump> 1,3,5,7...
20:55:06 <shapr> midnight to nine am?
20:55:11 <shapr> Heffalump: :-PPP
20:55:17 * shapr phbtts at Heffalump 
20:55:26 <Pseudonym> shapr: His hours are different every day.
20:55:36 <shapr> oh
20:55:39 <Smerdyakov> Pseudonym, are you... Peter Stuckey?
20:55:39 <Pseudonym> Admittedly his hours are nowhere near as odd as kre's.
20:55:42 <Pseudonym> No.
20:55:43 <shapr> on what sort of cycle?
20:55:44 <Heffalump> Pseudonym: it's a source to source translation on C that essentially constructs a virtual stack in global variables that point into the real stack
20:55:49 <shapr> Pseudonym: Peter!
20:56:03 <Pseudonym> I'm nobody on that paper.
20:56:12 <Pseudonym> I'm the guy who implemented the first system which was too slow.
20:56:18 <Heffalump> the neat thing being that this immediately prevents the C compiler from doing any nasty optimisations from under you
20:56:26 * shapr stands in the footsteps of giants.
20:56:29 <Pseudonym> Interesting.
20:56:37 <Smerdyakov> Pseudonym, and you did that in '99? I thought you graduated a long time ago. :\
20:56:46 <Pseudonym> Ah, now that's where you're wrong.
20:56:57 <Heffalump> '99 is a long time ago :(
20:57:12 <Pseudonym> About ten postgrads started working on Mercury projects.  About five will or have submitted.
20:57:20 <Pseudonym> That's a high failure rate, and I'm among them.
20:57:32 <Heffalump> when will Fergus submit? :-)
20:57:43 <Pseudonym> Heffalump: You noticed, huh? :-)
20:57:49 <Heffalump> well, he mentioned it
20:57:50 <Smerdyakov> I thought your official connection with academia ended long ago. How long did you spend working on that before you left?
20:58:02 <Pseudonym> It's kinda amusing because he was the first to start, but I was the first to leave.
20:58:20 <Pseudonym> I don't feel so bad about it now, because I know it wasn't just me.
20:58:27 * Pseudonym declines from elaborating further
20:58:58 <Pseudonym> To answer your question, though, Smerdyakov: I was on it from 1995 (when I did honours, and _did_ submit!) to mid-1999.
20:59:03 <Smerdyakov> Fine. Leave the chronological inconsistencies in my mental model of your life to invade all of my reasoning centers and slowly reduce me to be unable to function.
20:59:10 <Smerdyakov> Oh, good. An answer :D
20:59:17 <shapr> wow, that's like MS Solitaier.
20:59:23 <Pseudonym> No, I'm declining to comment on why Mercury has such a high failure rate.
20:59:40 <shapr> because.... it sucks?
20:59:53 <Heffalump> Mercury seems quite cool, though I've never used it.
21:00:04 <Smerdyakov> Pseudonym, ouch. What's the mean PhD completion time at oz?
21:00:19 <Pseudonym> I don't know when the mean completion time is, but it's supposed to be 3-4 years.
21:00:24 <Heffalump> but implementing random extensions to an existing complicated compiler strikes me as something that's rather hit-or-miss
21:00:45 <Heffalump> i.e. you could find something that's really cool, or you could find out that it was a waste of time
21:00:53 <Pseudonym> GHC doesn't have nearly so high a failure rate.
21:01:09 <Pseudonym> From what I hear.
21:01:24 <shapr> is it because of the internal structure differences?
21:01:27 <Heffalump> how many PhD students has it had?
21:01:33 * Pseudonym declines to comment
21:01:37 <shapr> I'd guess the easier it is to extend...
21:01:54 <shapr> since GHC is in essence a big term rewriting system (yes?) ...
21:01:57 <Heffalump> my feeling is that the recent ones have struggled to finish on time, at any rate
21:02:08 <shapr> then we should rewrite GHC in Stratego! yay!
21:02:13 <Pseudonym> I don't think the reasons are technical in nature.
21:02:15 <shapr> oh.
21:02:17 <Pseudonym> If that helps.
21:02:21 <shapr> that does. thanks.
21:02:23 * Smerdyakov plans to optimize his PhD finishing time as much as possible. :)
21:02:32 <Heffalump> shapr: no, it's not
21:02:43 <shapr> oh well.
21:02:52 <Heffalump> a lot of what it does is more complicated than simple term rewriting
21:03:01 <Heffalump> at some level I guess you could describe anything as term rewriting, though
21:03:04 <shapr> Pseudonym: hey, hdaume asked why plugins are typeclasses. is there a good reason?
21:03:07 <Heffalump> but that's not really useful
21:03:07 <Pseudonym> No, it's a compiler, much like any other.
21:03:10 <Pseudonym> Analysis + synthesis.
21:03:29 <Heffalump> well, it gets to Core quite quickly and then aggressively transforms that to itself
21:03:38 <Heffalump> so those bits _could_ be term rewriters
21:03:40 <Pseudonym> shapr: It seemed like a good idea at the time.
21:03:54 <Pseudonym> Heffalump: Yes, but the core -> core translators could be removed and it'd still be a working compiler.
21:03:59 <Heffalump> they either need to be typeclasses or records
21:03:59 <shapr> Pseudonym: ok. that's what I guessed.
21:04:04 <Heffalump> typeclasses allow for defaulting
21:04:12 <Heffalump> psued: true
21:04:22 <Heffalump> gah, autocomplete fails when you typo :-)
21:04:45 <Smerdyakov> Would you like probabilistic autocomplete? :)
21:04:58 <Pseudonym> Bayesian autocomplete!
21:05:00 <Heffalump> records would have the advantage of eliminating the existential type in MODULE
21:05:17 <Pseudonym> Actually, Bayesian autocomplete isn't such a dumb idea.
21:05:31 <Pseudonym> Yes, they would.
21:05:51 <Pseudonym> I also got the impression at the time that autoloaded modules were based somehow on type classes and existential types.
21:05:52 <Smerdyakov> Heffalump, but I think the human race as a whole simply is not ready for that.
21:05:54 <shapr> I bet hippie-expand would be fine with a bayesian autocomplete
21:05:58 <Heffalump> but lambdabot is heavily ghc-based anyway, so it's no real loss
21:05:58 <Pseudonym> This is a kind of a dim memory.
21:06:06 <Pseudonym> Right.
21:06:12 <Heffalump> "autoloaded"?
21:06:14 <o3> emacs' dabbrev is a pseudo-markov autocomplete, no?
21:06:22 <Pseudonym> Uhm...
21:06:26 <Pseudonym> Dynamically loadable modules.
21:06:29 <Heffalump> ah, right
21:06:30 <shapr> o3: no
21:06:32 <Pseudonym> That's what I meant to say.
21:06:36 <Heffalump> no, they could use records instead
21:06:41 <Pseudonym> OK.
21:06:49 <shapr> o3: hippie-expand lets you autocomplete a variety of things, but none of it is markov
21:06:52 <shapr> unless I'm way lost.
21:06:54 <Heffalump> you just need some type that'll be the same for any module
21:07:04 <Pseudonym> Typeclasses seemed marginally more flexible.  Besides, I wanted an excuse to use existential types for something.
21:07:08 <Heffalump> just like you need for the module list
21:07:11 <Heffalump> :-)
21:07:31 <Heffalump> I think the defaulting is a big win.
21:07:39 <Heffalump> though not massively used so far
21:08:06 <Pseudonym> Although records give you defaulting too, if you use it properly.
21:08:12 <Darius> Couldn't you make a default record and change that?
21:08:18 <Pseudonym> You make a "default" record and selectively override fields.
21:08:20 <o3> shapr: what's hippie-=expand do?
21:08:29 <Pseudonym> It's not statically checked, though.
21:08:33 <Smerdyakov> o3, feeds a hippie lots of tofu.
21:08:35 <Pseudonym> You could end up with some "undefined" methods.
21:08:54 <o3> Heffalump: i'd really like to find a way to allow instances to be used with dynamic loading (runtimeloader)
21:09:12 <shapr> o3: it's a meta-expand, you can write sub-expanders for it, and prioritize them
21:09:14 <o3> it looks like you can'can only use existential types
21:09:17 <Heffalump> o3: you have to use existentials
21:09:18 <o3> grr
21:09:37 <shapr> want hippie-expand example settings?
21:09:39 <o3> Heffalump: yeah.  it's just that using type classes + instances would be ... so much neater.
21:09:42 <Heffalump> otherwise there's nothing to stop GHC optimising away the dictionary, and then where would you be?
21:09:56 <o3> shapr: that sounds too complicated, i think i'll stick to dabbrev :)
21:10:05 <shapr> hippie-expand is worth it imho
21:10:12 <o3> Heffalump: i ponder the use of an extra 'dynamic' keyword or so
21:10:16 <Pseudonym> Of course, to fully implement polymorphic methods of typeclasses as records, you need rank-2 polymorphism anyway, so you're going to have to use -fglasgow-exts no matter what.
21:10:23 <shapr> of course, I have 1400+ lines of emacs config, so I'm probably biased.
21:10:29 <o3> to tell GHC to do runtime dispatch
21:10:50 <o3> shapr: nod :)
21:10:56 <Pseudonym> shapr: You also have way, way too much time on your hands.
21:11:01 <Heffalump> o3: well, if you could implement it :-)
21:11:10 <shapr> Pseudonym: because of my emacs configs?
21:11:24 <Pseudonym> Yes.  That's too much for any person.
21:11:45 <Pseudonym> @karma+ shapr
21:11:46 <lambdabot> shapr's karma has been incremented.
21:11:49 <shapr> I should split large chunks out into separate libraries and release them.
21:11:51 <Pseudonym> That's for coolness.
21:11:53 <shapr> heh
21:11:53 <Pseudonym> @karma- shapr
21:11:55 <lambdabot> shapr's karma has been decremented.
21:11:57 <o3> Heffalump: i was talking to Chilli about doing a ph.d around that (in context of getting better dynamic support into haskell), but that's not likely to happen for another year or so :)
21:11:59 <Pseudonym> That's for 1400 lines of emacs config.
21:12:00 <shapr> heh!
21:12:15 * shapr is entertained
21:12:31 <Pseudonym> shapr is also way, way too easily amused.
21:12:44 <shapr> I think that's an evolutionary advantage.
21:12:47 <shapr> well, I claim that.
21:12:48 <Heffalump> o3: because of lack of money?
21:12:50 <Pseudonym> Very possibly.
21:13:02 <Pseudonym> Perfectly adapted to the IRC environment.
21:13:15 <flippo> I only have 555 lines of emacs configs
21:13:16 <o3> Heffalump: no, because i just started working, and i think my boss would be very sad if i left immediately. :)
21:13:21 <Heffalump> ah :-0
21:13:23 <Heffalump> s/0/)/
21:13:25 <Heffalump> what are you doing?
21:13:40 <Smerdyakov> What do y'all think about the possibility of forming a company to do practical functional language tool development at some point?
21:13:43 <Heffalump> and are you coming to Sweden in the end?
21:13:54 <shapr> Smerdyakov: I think it's a good idea.
21:13:55 <Pseudonym> I have 25 lines of emacs configs.
21:13:59 <shapr> hire me. I know emacs.
21:14:01 <o3> i have 8288 lines of vim plugins
21:14:05 <o3> 6288, rather
21:14:10 <o3> so nyah
21:14:12 <Pseudonym> Smerdyakov: You mean like Galois?
21:14:23 <Smerdyakov> Pseudonym, it's possible that I do. URL?
21:14:30 <o3> Heffalump: working on a very cool project -- www.annodex.net
21:14:36 <shapr> I have the #emacs record for largest number of emacs libraries loaded in the course of normal use.
21:14:39 <Pseudonym> http://galois.com/
21:14:47 <Heffalump> what do you mean by "functional language tool"?
21:15:04 <o3> Heffalump: i have ambitions to get haskell supported on mac os x as an official language, so i can rewrite all the stuff for our project in haskell and save myself maintenance headaches :)
21:15:08 <flippo> shapr: "normal use"?
21:15:24 <shapr> flippo: yah, just writing code, reading email, chatting on irc, that sort of thing.
21:15:27 <Heffalump> o3: you mean official from Apple's point of view?
21:15:30 <Heffalump> that'd be cool :-)
21:15:39 <o3> Heffalump: yes.  hell, they ship ruby with mac os x
21:15:55 <o3> the only real problem to bundling ghc with the developer tools is that it's quite large
21:16:00 <Smerdyakov> Pseudonym, that's not what I was thinking of.
21:16:08 <Heffalump> Galois seem to divide their time behind designing random DSLs for clients and hacking on cool stuff for the fun of it.
21:16:16 <Smerdyakov> Heffalump, I mean things like compilers and maybe even OS's. The infrastructure for modern software dev.
21:16:22 <shapr> given that, I want to work for Galois.
21:16:30 <Heffalump> Smerdyakov: what makes you think there's money in that?
21:16:39 <Pseudonym> I don't think I want to work in Oregon.
21:16:40 <Smerdyakov> Heffalump, I don't care if there's money in it.
21:16:48 <Pseudonym> Actually, I don't think I want to work in the US. :-)
21:16:51 <shapr> I think there's money in Chilli's parr.
21:16:52 <shapr> lots of it.
21:17:03 <Heffalump> smerdyakov: enough money to pay you enough to live on would be nice, surely?
21:17:33 <shapr> array fusion + NDP could make some programmers very rich.
21:17:36 <Smerdyakov> Heffalump, it would, but I'm not constraining my options too tightly.
21:17:54 <Heffalump> more to the point, it'd be pretty much essential for the company to be able to work
21:17:58 <shapr> hey Pseudonym, have you heard of flat neighborhood networks?
21:18:03 <Heffalump> unless you don't need money to live on :-)
21:18:03 <Pseudonym> I don't think that's enough.  I think you need a popular killer app.
21:18:09 <o3> Heffalump: thanks for patch
21:18:12 <Pseudonym> shapr: No, but it sounds bizarre.
21:18:14 <o3> +es :)
21:18:22 <shapr> Pseudonym: it's nifty.
21:18:23 <Smerdyakov> Heffalump, within the mainstream economy, sure. Within better economic setups, we'd have to see.
21:18:30 <Heffalump> o3: well, it's one patch, just with lots of things in it :-)
21:18:34 <shapr> I think darcs has the best chance of being haskell's killer app.
21:18:40 <Heffalump> Smerdyakov: how do you define "better economic setups"?
21:18:41 <shapr> unless I see something better.
21:18:44 <Heffalump> shapr: yeah, possibly.
21:18:51 <Pseudonym> Oh, weird.
21:18:52 <Heffalump> it needs to be rather more scalable and robust, though
21:18:55 * Pseudonym looks at the link
21:18:58 <shapr> from the inside, Parsec is the existing killer app
21:19:00 <Smerdyakov> Heffalump, something like Participatory Economics.
21:19:10 <Heffalump> and it won't be a money-maker, cos BK has cornered the market for proprietary VC, I think.
21:19:12 <shapr> combinator parsing in general.
21:19:22 <Pseudonym> I think what you want to be is a company which does something else, but uses FPs heavily internally.
21:19:33 <Smerdyakov> shapr, why would I want to use combinator parsing over yacc?
21:19:34 <shapr> NDP, parr.
21:19:44 <shapr> Smerdyakov: because it's a lot easier.
21:20:05 <Smerdyakov> Pseudonym, no, what I want is to develop the fundamental tools needed for making good software, because then they can be used to make good software! :D
21:20:14 <shapr> and it'll work for binary file formats once struct-style Binary.hs is available.
21:20:22 <Pseudonym> Yes, but I think you want to actually make good software too.
21:20:28 <Heffalump> Smerdyakov: whatever one thinks about it in theory, that'll never happen in practice on any large enough scale to be able to "support" functional programming tool development
21:20:40 <Pseudonym> I'm still kinda shocked that people like yacc.
21:20:42 <Smerdyakov> Pseudonym, the first part has to be done and has less direct incentive to do it.
21:20:59 <Smerdyakov> Heffalump, I don't think I agree with you.
21:21:04 <Heffalump> if functional programming really was that good, I think it'd take off under its own volition
21:21:08 <Heffalump> maybe to some extent it is
21:21:16 <Heffalump> s/good/useful to the real world/
21:21:16 <shapr> I say we get hOp booting, stick parr into it, add SMP support, and rewrite hOp to use parr as much as inhumanly possible.
21:21:19 <Pseudonym> Well, yes and no.
21:21:31 <Pseudonym> There are lots of reasons why software technologies succeed and fail.
21:21:44 <Pseudonym> How good it is, well, that's just one reason out of many.
21:21:46 <shapr> then hOp will the most scalable OS available, and the NSA will hire us all.
21:21:49 <Heffalump> Pseudonym: true
21:22:08 <Pseudonym> That's why I think what you need to do is do something else for a living, and use FPLs to do it.
21:22:11 <Smerdyakov> shapr, hOp?
21:22:19 <Heffalump> I think FP in the world at large will always be hampered by being more complex than the "standard" languages.
21:22:23 <Heffalump> Pseudonym: yep, definitely.
21:22:24 <shapr> @fact hop http://wise.homedns.org/hOp/
21:22:24 <Pseudonym> And then develop the tools to make what you do better.
21:22:25 <Smerdyakov> Pseudonym, or, you can eliminate the idea of doing a single thing "for a living"!
21:22:26 <lambdabot> set hop to http://wise.homedns.org/hOp/
21:22:43 <o3> Heffalump: worse-is-better
21:22:43 <Smerdyakov> Pseudonym, ---> http://www.parecon.org/ <--- :D
21:22:47 <Pseudonym> Smerdyakov: I'm trying to work out a way to make developing FPL tools actually pay for itself./
21:22:53 <Heffalump> Smerdyakov: I cba to get into a political argument, so I won't waste time disagreeing with you
21:23:19 <Smerdyakov> Pseudonym, you don't have to pay for yourself if you have all your essential needs provided for by a planned economic system.
21:23:19 * Heffalump bets Igloo has gone to bed, and thus won't be around to faint in horror at what I just said
21:23:21 <Pseudonym> I don't really have time to read that.
21:23:27 <Pseudonym> Not right now, anyway.
21:23:49 <shapr> yay! wiwiwi author wants someone to host it :-)
21:24:22 <Pseudonym> Smerdyakov: Perhaps, but that _still_ doesn't help distinguish yourself from the next person with self-described cool technology.
21:24:23 <Smerdyakov> shapr, I don't think basing an OS on Haskell is a good idea.
21:24:39 <Pseudonym> Your technology ain't cool unless you've done something cool with it.
21:24:51 <Pseudonym> Personal opinion.
21:24:52 <Smerdyakov> Pseudonym, natch, but you need to make it first.
21:24:53 <lilith> *gasp*
21:25:07 <shapr> I got email from the hOp author, he says it'll probably be booting this weekend.
21:25:10 <shapr> hiii lilith!
21:25:14 <Pseudonym> Oh, hi lillith.
21:25:18 <Pseudonym> lilith, too
21:25:23 <Smerdyakov> shapr, is that meant to show that my thinking is wrong somehow?
21:25:24 <lilith> hello all
21:25:29 <shapr> Smerdyakov: no, not at all.
21:25:39 <lilith> an OS based on haskell?
21:25:55 <Smerdyakov> OK. From a political viewpoint, at the very least it should support all the popular functional languages well.
21:26:07 <Heffalump> o3: "worse-is-better"?
21:26:12 <shapr> Smerdyakov: it's the same thing as DbC, just that I am not convinced that it is a bad idea, nor am I convinced that it is a good idea. I'll tell you more when I have it booting.
21:26:26 <Pseudonym> For example, at my last job, I almost managed to get them to adopt a tool written in Haskell as part of their product.
21:26:32 <shapr> cool!
21:26:34 <Pseudonym> Unfortunately I left before I finished it.
21:26:36 * Heffalump thinks the idea of an OS that requires a GC in its kernel is a bit silly.
21:26:38 <shapr> awww
21:26:55 <lilith> Heffalump: yeah. i was thinking of that
21:26:55 <Pseudonym> I think that's the sort of thing you need.
21:26:58 <Smerdyakov> Heffalump, I don't. Why do you think that?
21:27:02 <o3> Heffalump: http://www.jwz.org/doc/worse-is-better.html (not written by jwz)
21:27:26 <Pseudonym> Heffalump: First off, it depends on the kind of GC.  Secondly, why does it have to be in the kernel?
21:27:43 <Pseudonym> Modern OS thinking is that the kernel should be very, very small.
21:27:46 <Heffalump> er, because the kernel would need to be GCed
21:27:55 <o3> Pseudonym: you want to have a GC running in userland to GC the kernel? :D
21:27:56 <Heffalump> tell that to Linus :-)
21:28:12 <Pseudonym> Yeah, well.  Linus isn't known for his modern OS thinking.
21:28:12 <o3> Pseudonym: have you heard of kernel-mode linux?
21:28:13 * Pseudonym ducks
21:28:21 <o3> that is truly a ... piece of art
21:28:26 <Pseudonym> No, I haven't.
21:28:30 <Smerdyakov> I think a kernel about the size and feel of a Haskell/ML/etc. runtime system would be the way to go.
21:28:56 <Pseudonym> For example, in QNX, even pipes are implemented outside the kernel.
21:28:56 <o3> Kernel Mode Linux : Execute user processes in kernel mode ... . For example, The Apache HTTP Server and PostgreSQL have been executed in the kernel-mode.
21:29:06 <o3> google for it if you want to bang head against wall
21:29:11 <Pseudonym> Oh, bloody hell.
21:29:13 * Pseudonym sighs
21:29:21 <Pseudonym> WHY GOD WHY?!
21:29:50 <Pseudonym> Don't these people know ANYTHING about software engineering?
21:30:12 <shapr> anyways, I have a 200MHz machine handy that's not doing anything, it would be fun to run hOp on it.
21:30:19 <Heffalump> maybe they just wanted to have a laugh
21:30:39 <o3> Heffalump: considering the guy wrote a masters thesis on it, unfortunately i think not :)
21:30:52 <Pseudonym> Maybe.  I used to think the tux webserver was a joke, but now it's a redhat product.
21:31:11 <Pseudonym> Chimeras should never be allowed out of the lab.
21:31:15 <shapr> I used to think the web was a joke.
21:31:41 <lilith> heh
21:32:16 <Heffalump> another reason not to have an OS written in an FL: the amount of effort that goes into some code should be proportional to how important it is. FLs allow one to produce functionality with low effort, but at a cost in performance. OSes are very important, and so a good OS will have had lots of effort expended on it, thus making it nice and fast.
21:32:52 <Heffalump> Pseudonym: well, if the only process you actually care about is the webserver anyway, you might as well let it run in kernel space
21:33:01 <Pseudonym> I disagree.
21:33:17 <Pseudonym> There is a basic principle here, which is not to let a program have any more permissions than it needs.
21:33:28 <Smerdyakov> Heffalump, ML doesn't cost you much in performance.
21:33:29 <Pseudonym> It's bad enough that the Unix security model requires web servers to run as root.
21:33:34 <Heffalump> the argument is that it needs the permissions for performance
21:33:43 <Pseudonym> Well, it doesn't.
21:33:43 <Heffalump> if you didn't need the performance, you wouldn't be running tux
21:34:00 <Pseudonym> If you need performance, buy a bigger box, or more than one box and a load balancer.
21:34:01 <Heffalump> people who run tux just for the hell of it are fools
21:34:10 <Heffalump> tux may be a cheaper alternative :-)
21:34:24 <Pseudonym> Fact is, NOBODY needs that much performance at the cost of the kernel possibly being compromised.
21:34:25 <Heffalump> Smerdyakov: got some real benchmarks to prove that?
21:34:26 <shapr> on the other hand, producing sane code with little effort is about as far away from the microsoft philosophy as you can get.
21:34:30 <shapr> so it might have some good points.
21:34:38 <Heffalump> Pseudonym: what is lost if the kernel is compromised?
21:34:38 <Pseudonym> Hell, if you need performance, turn off virtual memory.
21:34:39 <Smerdyakov> Heffalump, got reason to disagree?
21:35:00 <Heffalump> Smerdyakov: not really, but I've never seen hard evidence either way
21:35:06 <Pseudonym> Heffalump: Hosing your disk is one thing, hosing your firmware is quite something else.
21:35:18 <o3> if you want better performance, use gentoo with -O99!
21:35:27 <Heffalump> Pseudonym: in theory a root process can do anything the kernel can
21:35:36 <Pseudonym> No they can't.
21:35:48 <Heffalump> they can change the kernel.
21:36:01 <Heffalump> whether or not it supports dynamic modules
21:36:14 <Pseudonym> I run my servers with dynamic modules turned off.
21:36:17 <Pseudonym> For precisely this reason.
21:36:30 <Heffalump> you can still compromise the kernel as root, although it'd be hard
21:36:34 <Heffalump> I guess there's SElinux.
21:36:42 <Pseudonym> There's /proc/kmem, I suppose.
21:37:05 <Pseudonym> But yes, even root is shielded from certain things.
21:37:13 <Heffalump> and if the disk can be compromised, then the kernel is too, by the "change the kernel and reboot" approach.
21:37:17 <Pseudonym> Root processes which segfault are killed.  They don't hang the machine.
21:37:41 <Pseudonym> Heffalump: Which brings me to my second point, which is that "root" is a bad idea.
21:37:43 <Pseudonym> :-)
21:38:05 <Heffalump> there are no absolutes; everything is a tradeoff. Tux just pushes the balance away from security (both from accidental and malicious damage) towards performance
21:38:28 <Heffalump> there is always an overhead for separation of privileges.
21:38:42 <Heffalump> whether you pay that overhead in performance or in money for new hardware, it exists
21:38:46 <Pseudonym> I think you'd have to go a long way to find an application which requires that particular tradeoff.
21:39:09 <Heffalump> well, I don't know what people actually use Tux for.
21:39:13 <lilith> o3: yeah, gentoo is nice for creating cpu music
21:39:19 <Heffalump> anyway. *BED*.
21:39:23 <o3> i wonder when gentoo will run kde in kernel-mode linux
21:39:31 <Heffalump> damn you all for starting interesting conversations all the time
21:39:31 <Pseudonym> Can you think of anyone who a) has a need for tux-like perfornace, and b) doesn't have enough money to buy two boxen?
21:39:43 <Heffalump> Pseudonym: not personally, no.
21:39:45 <o3> Heffalump: yeah, go to bed and dream of more runtimeloader patches :)
21:39:47 <Pseudonym> No, me neither.
21:39:52 <Pseudonym> Anyway, night. :-)
21:40:13 <Pseudonym> Sorry, this is a pet peeve of mine.
21:40:26 <Heffalump> however, I also think that if Redhat are willing to sell it, and people are willing to buy it, it doesn't really affect my life :-)
21:40:31 <shapr> wtf
21:40:43 <Pseudonym> Correctness is first, robustness is second.  All else would be nice but is unimportant.
21:40:46 <shapr> suddenly all my postgresql databases are using a korean encoding.
21:40:52 <Heffalump> shapr: errm..
21:40:58 <Pseudonym> Note that performance constraints may be part of the definition of "correctness".
21:41:09 <shapr> this is very scary.
21:41:21 <lilith> Pseudonym: what exactly is "correctness"?
21:41:24 * Heffalump closes the laptop lid.
21:41:37 <Pseudonym> lilith: "Correctness" is that quality of software where it does what it's supposed to do.
21:41:51 <shapr> Heffalump: weren't you going to sleep hours ago? ;-)
21:41:58 * o3 imagines lilith taking notes for ethics classes ;)
21:42:01 <lilith> Pseudonym: all the time or most of the time
21:42:02 <Pseudonym> Example: A program which processes the monthly payroll must take less than a month to run.
21:42:18 <lilith> o3: :p as a matter of fact i do, but mainly so i don't fall asleep
21:42:26 <Pseudonym> lilith: All of the time.
21:42:30 <lilith> o3: why, were you spying on me in ethics?
21:42:49 <o3> lilith: no, i was referring to this conversation about correctness :)
21:43:06 <lilith> Pseudonym: so how would you go about measuring correctness?
21:43:21 <Pseudonym> Good question.
21:43:28 * lilith tries to work out what JMX is and if she can avoid writing java
21:43:37 <Pseudonym> Correctness is always relative to the requirements.
21:43:50 <Pseudonym> If it satisfies all of the requirements, it is correct.
21:44:09 <Pseudonym> Some programs are provably correct.
21:44:26 <Smerdyakov> Some program-requirement pairs are provably correct, you mean. :-)
21:44:28 <Pseudonym> There's a reductio ad absurdum problem, of course.  Stray cosmic rays can kill some kinds of software.
21:44:49 <Pseudonym> Even if the software is correct, it can still fail.  But that's a robustness issue.
21:45:25 <lilith> but a requirement of a piece of software could be that it had to be robust?
21:45:25 * Pseudonym will assume for the sake of argument that nothing that the software depends on fails
21:45:26 <Smerdyakov> Pseudonym, you don't need cosmic rays. Have you heard of using a lamp to hack into some Java VM? :-)
21:45:49 <Pseudonym> lilith: Sure.
21:45:57 <o3> Smerdyakov: you're such a party-pooper ;)
21:46:05 * lilith grins
21:46:57 <Pseudonym> Robustness is important, though, because every nontrivial piece of software is not 100% correct.
21:47:26 <lilith> o3: actually i think it's more software engineering that ethics
21:48:09 <Pseudonym> What we call "software engineering" isn't actually very close to "engineering".
21:48:25 <Pseudonym> University software engineering courses tend to teach things like revision control and project management.
21:48:31 <lilith> does formal methods come under software engineering?
21:48:45 <Pseudonym> It depends how it's taught.
21:48:51 <o3> lilith: a bit of both, imho.  and yes, formal methods does come under SENG at CSE
21:49:00 <Pseudonym> Let me put it this way:
21:49:07 <o3> B (which is taught in seng) is largely about correctness
21:49:09 <Pseudonym> Chemistry is not the same as chemical engineering.
21:49:10 <lilith> Pseudonym: that comes under "SPM" and "TQM" here *grimace*
21:49:16 <Darius> a program to analyze a programs correctness is, main = putStrLn "program is incorrect".  It can even be self-applied.
21:49:32 <lilith> not that we really learn anything abut project management, truth be told
21:49:52 <Smerdyakov> Darius, what was the point of that?
21:50:07 <Pseudonym> Classical physics isn't the same thing as civil engineering, either.
21:50:17 <Darius> Smerdyakov: personal entertainment
21:50:26 <Pseudonym> You can teach formal methods as computer science or you can teach it as software engineering.
21:50:30 <lilith> so what exactly is engineering?
21:50:44 <Pseudonym> Engineering is using science to build useful things.
21:51:05 <lilith> :)
21:51:11 <lilith> that's not what I learnt in SENG class
21:51:27 <Pseudonym> No, it's not what I learned in software engineering classes either.
21:51:40 <lilith> but it requires certain formal "methods"?
21:51:58 <Pseudonym> Yes, I think so.
21:52:16 <shapr> hi dnm 
21:52:29 <dnm> Hey shapr
21:53:40 <shapr> written any cool code lately?
21:54:07 <dnm> Nope.
21:54:09 <Pseudonym> lilith: Parnas, D.L. "Teaching Programming as if it were Engineering", published in Teaching and Learning Formal Methods, eds. C. Neville Dean and Michael G. Hinchey, Academic Press, 1996, pp. 43 - 55. 
21:54:12 <Pseudonym> Really good paper.
21:54:36 <vegai> "as if"... isn't that how it is?
21:54:40 <Pseudonym> Actually, anything by Parnas is a good paper.
21:54:59 <Pseudonym> vegai: His argument is that what we call "software engineering" isn't really engineering.
21:55:09 <vegai> ok then
21:55:18 <Pseudonym> Oh, another good one:
21:55:18 <Pseudonym> #
21:55:20 <Pseudonym> # Parnas, D.L., "Software Engineering Programmes are not Computer Science Programmes", Annals of Software Engineering, vol. 6, 1998, pgs. 19-37.
21:55:52 <Pseudonym> He thinks it's an artifact of how software development grew up.
21:56:17 <Pseudonym> The real engineers thought programming was some kind of trivial detail.  The REAL product was the hardware.
21:56:39 <lilith> hmm
21:56:44 <lilith> is there an online copy of those papers?
21:56:50 <lilith> ahr
21:57:02 <Pseudonym> I don't know.  Hang on.
21:57:43 <Smerdyakov> I've encountered a number of Old People with really negative attitudes against "programmers."
21:57:57 <Pseudonym> Not that I can see.  Which uni are you at, again?  UNSW?
21:58:03 <lilith> Pseudonym: yeah
21:58:16 * lilith points to her hostmask
21:58:30 <lilith> Smerdyakov: what do you mean?
21:59:49 <Smerdyakov> lilith, my father has talked down CS as an academic field forever. Of course, he has no idea what it is. He was involved with it in its prehistory.
21:59:59 <Pseudonym> Grrr.  Your library doesn't have a copy.
22:00:14 <lilith> Pseudonym: yeah. the UNSW library sucks :)
22:00:24 <lilith> the search engine sucks even harder
22:00:37 <Pseudonym> http://www.amazon.com/exec/obidos/tg/detail/-/0201703696/002-0151637-4294462
22:00:40 <Pseudonym> Excellent book.
22:00:56 <Smerdyakov> lilith, and I had a supervisor who kept trying to convince me that I shouldn't want to be a programmer, because they don't do any thinking for themselves, based on decades old experiences.
22:01:16 <o3> damn, and borders' student sale ended yesterday
22:01:23 <o3> or rather, was only on yesterday
22:01:46 <Smerdyakov> o3, don't go to Borders! You support evil corporation!
22:02:02 <lilith> my goodness, UTS library is bad too
22:02:20 <lilith> o3: you don't say. :( i just found out today
22:02:29 <Pseudonym> BRB
22:02:35 <o3> lilith: oh, sorry, should've told you
22:02:40 <lilith> no matter
22:02:47 <lilith> i'll wait till i get home in summer to buy books
22:02:49 <o3> Smerdyakov: :P  Not my fault they have a wide selection and nice lighting!
22:03:16 <lilith> hmm
22:03:26 <lilith> Smerdyakov: odd
22:10:21 <Pseudonym> I like their coffee.
22:10:51 <Pseudonym> Smerdyakov: Is Borders evil?
22:10:57 <Pseudonym> What do they do?
22:11:16 <Smerdyakov> I don't know. Let
22:11:21 <Smerdyakov> 's ask the Internet!
22:11:31 <Pseudonym> Or is any corporation over a certain size automatically evil?
22:11:45 * Pseudonym suspects that's actually true
22:11:52 <lilith> :)
22:12:02 <lilith> they have smart accountants :)
22:12:12 <lilith> does that make them evil?
22:12:35 <flippo> The original Borders in Ann Arbor is a fine store
22:12:38 <Smerdyakov> I'm sure they aren't very scrupulous in enough ways to evilify them. :)
22:12:43 <Pseudonym> I do think that all organisations over a certain size are at the very least amoral.
22:13:26 <Pseudonym> Admittedly that's a very half-baked thought.
22:13:35 <shapr> just macroorganism trying to survive.
22:14:05 <Pseudonym> Right.  Something like that.
22:14:10 <Pseudonym> Gaia on a very small scale.
22:14:20 <lilith> define evil
22:14:34 <o3> neutral evil, lawful evil, or chaotic evil?
22:14:45 <Pseudonym> Usually lawful evil.
22:14:49 <Smerdyakov> Chaotic funky
22:14:50 <Pseudonym> Occasionally chaotic.
22:15:07 <Pseudonym> Fractal evil.
22:15:26 <Darius> Statistical evil.
22:15:30 <Smerdyakov> Naaaah, I just chaotic funky all night laaaaaaaawng.
22:15:37 <Pseudonym> Oh, now there's a thought.
22:16:04 <Pseudonym> Given that humans are "simul justus et peccator", perhaps evil should me a statistical measure.
22:17:30 <Smerdyakov> Then we can convict people of a 45% likeliehood of crimes against humanity.
22:17:36 <Pseudonym> Right.
22:18:33 <lilith> o3: gee. too much NWN and nethack?
22:18:44 <Pseudonym> I've seen all good people turn their heads each day so satisfied I'm on my way.
22:18:51 <o3> lilith: life _is_ role-playing, my friend!
22:19:25 <shapr> I see the little tree, I want to paint it black..
22:19:36 <shapr> no red nodes anymore, they all must become black...
22:19:47 * Pseudonym laughs
22:20:21 <o3> laugh
22:20:37 <lilith> hmm
22:20:37 <Pseudonym> My point is that if Chris Squire has seen "all-good people" this might prove Martin Luther wrong.
22:20:50 <shapr> originally written in 1995 by some guys at warwick college I think
22:20:50 <Pseudonym> Maybe some people are 0% evil.
22:20:56 <lilith> parse failure
22:21:11 <lilith> hmm
22:21:21 <lilith> safari is a waste of money so far
22:21:50 <Pseudonym> I've proven Nietsche wrong a few times already.
22:21:52 <Smerdyakov> lilith, that sounds like a last line scribbled in a notebook by a would-be big game hunter about to be eaten by a lion.
22:21:57 <lilith> not too many books i want to read on safari
22:22:03 <Pseudonym> I had some corn chips the other day, and they neither killed me nor made me stronger.
22:23:03 * Pseudonym takes a look at safari
22:23:32 <Smerdyakov> What is safari? :\
22:23:46 <lilith> o3: come to the book sale bookclub is organising
22:23:49 <Pseudonym> Technical e-books.
22:24:23 <lilith> Smerdyakov: http://safari.oreilly.com/?x=1&mode=Home&Key=3081DF06092B0601040182375803A081D13081CE060A2B060104018237580301A081BF3081BC0203020000020266020202008004081202AD65F4A846F50410E400D24087A3D54C9DD789529F88D5BF048190AA9478870646B193AF153938FE91972C31E56493AB83F3651CE1E244D76D4E68E6A1D83B35BE864238EFC9B44A1A26CB55D887321707F700B05E227B37D91B104F55E21382EC1A9902F5C94533E950523440B1B3AF3EC1C7AD76262021ADB3E2F93FEF35812F3EC2DE52A9DE7389C4
22:24:30 <lilith> whoops
22:24:32 <lilith> sorry. 
22:24:38 <shapr> whee
22:24:40 <lilith> had no idea it was that long :)
22:25:15 <Darius> what kind of key is that long?
22:25:34 <Pseudonym> Hey, "The Pragmatic Programmer" is here.
22:25:41 <Pseudonym> There goes my productivity.
22:25:46 <dennisb> Darius: i very very very unique key
22:25:47 <lilith> omg
22:25:49 * lilith grins
22:25:55 <lilith> it looks like the UNSW licence
22:26:01 * lilith whistles
22:26:13 <shapr> Pseudonym: have you read that book before?
22:26:24 <lilith> it must cache it somewhere on my laptop
22:26:27 * dennisb wonders how an i came out when I of course pressed a
22:26:48 <lilith> shapr: i have
22:26:48 <Pseudonym> Yeah, it looks like a lot of this is crap, though.
22:27:00 <Pseudonym> Do you really need "MP3: The Definitive Guide"?
22:27:09 <shapr> I like that book.
22:27:15 <lilith> most of the books i want to read aren't in there
22:27:19 <lilith> which truly sucks
22:27:24 <Pseudonym> Yeah, me too.
22:27:33 <lilith> given that the university library is pathetic
22:28:28 <Pseudonym> One thing, though.  Most books have one gem in them which you either didn't know before, or get something out of the way it's explained.
22:28:46 <Pseudonym> The one gem usually doesn't justify the cover price, though.
22:28:53 <lilith> indeed
22:28:55 <Pseudonym> I think that's what Safari is for.
22:29:10 * lilith grimaces at her telecommunication textbook
22:29:27 <lilith> but safari isn't particularly cheap either
22:29:48 <Smerdyakov> Pseudonym, what are examples of these gems?
22:30:09 <Pseudonym> Let me think.
22:30:25 <Pseudonym> Have you read Kernighan and Pike's "The PRactice of Programming"?
22:30:37 <Smerdyakov> No
22:30:44 <Pseudonym> Ah.  Well, you should. :-)
22:30:48 <Smerdyakov> Why?
22:30:55 <Pseudonym> There's nothing in it that you don't know, probably.
22:31:04 <Pseudonym> But it's really well written.
22:31:07 <lilith> shapr: what did you like about "the pragmatic programmer"?
22:31:08 <Pseudonym> And there are good anecdotes in there.
22:31:12 <o3> agree.pseudonym
22:31:22 <lilith> Pseudonym: agreed
22:31:24 <Pseudonym> And it's good to see it all in one place.
22:31:27 <Smerdyakov> Anecdotes from crufty old hackers... hmm :P
22:31:29 <shapr> lilith: lots of stuff.
22:31:42 <lilith> is there a good book on project management?
22:31:56 <Pseudonym> lilith: Have you read The Mythical Man-Month?
22:32:02 <Pseudonym> SHould read that first.
22:32:05 <shapr> it's hard to give a short list of good things about tPP
22:32:05 <lilith> ok
22:32:19 <Pseudonym> Also recommended is Weinberg's "The Psychology of Computer Programming".
22:32:21 <shapr> my copy is wearing out :-)
22:32:38 <shapr> I've sent errata to the authors even.
22:32:41 <Smerdyakov> My style of software development (and dealing with intellectual things in general) is too stream-of-consciousness for me to get into reading pratical books about it.
22:32:58 <lilith> hmm
22:32:59 <Pseudonym> i.e. you're not an engineer. :-)
22:33:14 <lilith> i'm trying to give suggestions on prohject management/workflow to my boss
22:33:22 <shapr> read the XP books.
22:33:30 <Pseudonym> Oh, yes, definitely!
22:33:30 <Smerdyakov> Pseudonym, was that directed at me?
22:33:32 <Pseudonym> XP books.
22:33:38 <shapr> especially the list of Programmer/Client rights lists.
22:33:40 <Pseudonym> Smerdyakov: Yes.  So was the emoticon.
22:33:58 <Pseudonym> http://www.xpexaggerated.com/
22:34:01 <shapr> :-)
22:34:12 <shapr> I'm a big fan of XP.
22:34:21 <shapr> I try to be an engineer.
22:34:26 <Pseudonym> What Would Kent Do?
22:34:38 <shapr> in my situation? get fired ;-)
22:34:44 <Pseudonym> LOL!
22:35:05 <Smerdyakov> I would like to learn a bit about software engineering, but I have my doubts about most of it as being crutches for folks who started programming too late in their lives.
22:35:16 <shapr> Smerdyakov: I feel the same way about formal education.
22:35:31 <shapr> hi themus 
22:35:51 <Pseudonym> See, this is my problem with Safari.  They have a lot of the SOlaris series in here, but they don't have the best one.
22:35:59 <Pseudonym> All the best books aren't here.
22:36:05 <Pseudonym> Apart from tPP. :-)
22:36:10 <themus> hi
22:36:14 <shapr> SICP is freely available.
22:36:23 <shapr> themus: how's the sunny south?
22:37:54 <themus> shapr: nice that it is cooler in Sacramento, CA now.
22:38:13 <Pseudonym> Ooh, Dave's book is here.
22:38:19 <shapr> themus: are you a Haskell programmer?
22:38:26 <Smerdyakov> Dave Thomas?!
22:38:34 <Pseudonym> Uh, no.  Dave Lane.
22:38:39 <Smerdyakov> Oh.
22:38:43 <Pseudonym> "Web Database Applications with PHP & MySQL"
22:38:44 <Smerdyakov> You got me all excited over nothing.
22:38:50 <themus> not yet.  but interested, shapr
22:39:05 <Pseudonym> If I stand up, I can see him over the top of my cubicle.
22:39:18 <shapr> themus: have you seen the learning page, the HaWiki, the mailing lists?
22:39:20 <Pseudonym> Dave Lane, not Dave Thomas.
22:39:49 <Smerdyakov> Beware what dwells on Dave Lane.
22:39:56 <Pseudonym> Indeed.
22:40:16 <shapr> themus: have any questions, need any pointers?
22:40:31 * Pseudonym LOL!
22:40:36 <themus> shapr: is it one of the sites in the room topic list?
22:40:53 <Pseudonym> Speaking of which, there's an article on XP Exaggerated.  The by-line is: Dave Thomas (not that one..... or that one)
22:41:10 <shapr> themus: yes, the learning page is there, and some urls to HaWiki pages.
22:41:11 * Pseudonym wonders who the other one is
22:41:23 <shapr> the founder of Wendys'
22:41:27 <shapr> is the other one.
22:41:31 <Pseudonym> Ah.
22:42:26 <Pseudonym> We have a chain called "Wendy's" here, but it's an ice-cream vendor which lives in shopping centres.
22:42:45 <themus> shapr: thanks, I should read that first.
22:43:16 <Smerdyakov> Pseudonym, he lives there?
22:43:27 <shapr> hej andersca 
22:43:37 <shapr> themus: have you done any functional programming before?
22:43:42 <Pseudonym> Who lives where?
22:43:54 <Pseudonym> Wendy's?  Oh, yes.
22:44:44 <andersca> hej shapr
22:47:51 <themus> shapr: was trying to get into ML and Ocaml.  Got the NewJersy ML isntalled and did some tutorials.
22:49:56 <shapr> themus: I haven't used those, but if you have any questions, feel free to ask me. I can help most with Haskell.
22:50:12 <themus> shapr: hey thanks!
22:50:47 <shapr> :-)
22:54:44 <andersca> I need coffee
22:54:52 <shapr> me too.
22:55:05 <andersca> I'm waiting for my red meat t-shirt
22:56:04 * shapr yawns
22:57:19 <flippo> who's on the shirt?  The guy with the pipe?  Or the lemonhead?
22:57:49 <shapr> bob dobbs is the guy with the pipe?
22:57:57 <Pseudonym> prabob!
22:58:51 <flippo> 'And they danced in the midst of the devival, praising "Bob", and blessing the Pipe.'
22:59:26 <andersca> flippo: bug-eyed earl
22:59:41 <andersca> http://www.redmeat.com/redmeat/buyproducts/prodpage_glowt.html
22:59:43 <flippo> andersca: excellent choice
22:59:53 <flippo> andersca: he looks like Baudelaire to me
22:59:54 <shapr> the church of the subgenius would be the funny, if scientology hadn't happened.
23:00:15 <Pseudonym> Actually, it's gotten less funny recently.
23:00:30 <shapr> scientology?
23:00:34 <andersca> http://tigert.gimp.org/gimp/gimp-splash-history/splashes/1.15.png
23:00:49 <Pseudonym> I wasn thinking subgenius, but scientology is also less funny.
23:01:35 <Pseudonym> Have you ever read Dianetics?
23:01:43 * Pseudonym got about 1/3 of the way through it before giving up
23:02:53 <Pseudonym> You get the distinct impression that the guy had something deeply personal against the psychiatric profession.
23:08:25 <Pseudonym> Well, that killed the conversation.
23:09:17 <shapr> I've convinced postgresql that I don't speak Korean.
23:09:21 <shapr> but it require a large stick.
23:09:35 <shapr> oh, I can add wiwiwi to darcs now.
23:10:08 <lilith> shapr: what did you do to it? :)
23:10:52 <dnm> I may make tonight and all night writing and hacking night.
23:10:56 <dnm> But I lack snacks.
23:10:59 <shapr> I deleted the installation, the config files, the data directories, the text backups, and the cached debs, and then installed again.
23:11:10 <shapr> purchase snacks!
23:11:15 * andersca bounces
23:11:24 <shapr> I'd be happy to send you knackebrЖd.
23:11:31 * lilith thinks there are 2 classes of programming people
23:11:42 <dnm> I'm hoping someone will order a pizza for me so that I may continue the late night electronic freedom defending work that I do.
23:11:42 <andersca> shapr: knц╓ckebrц╤d
23:11:54 <shapr> lilith: what are those classes?
23:12:00 <shapr> andersca: your unicode client is confusing me.
23:12:12 <shapr> I guess I'll tell ERC to switch to unicode.
23:12:32 <andersca> I assume you mean utf-8
23:12:39 <shapr> yah, that.
23:12:46 <shapr> ERC is assuming latin1 probably.
23:12:53 <Pseudonym> I could send you lamingtons.
23:13:02 * shapr goes off to make coffee for his soon to be awake woman.
23:13:23 <dnm> Pizzas can be ordered online!
23:13:24 <dnm> ;]
23:13:44 <Pseudonym> dmn: Invest in a telephonic device which can be placed near your computer.
23:13:56 <lilith> dnm: hehe
23:13:57 <Pseudonym> You still have to get up to actually take delivery of the pizza, of course.
23:14:03 <dnm> Pseudonym: Ah, my problem isn't the lack of such a device, but lack of appropriated funds for pizza purchasing.
23:14:05 <lilith> not realy?
23:14:13 <lilith> you could wheel to the front door
23:14:18 <lilith> if you've got those chairs with wheels
23:14:24 * dnm would prefer to employ Space Age "delivery" technology.
23:14:36 <Pseudonym> lilith: It depends how many obstacles there are between yourself and the door.
23:14:48 <lilith> Pseudonym: i could do it :)
23:14:53 <dnm> Pseudonym: In my case, there are stairs, and also, my chair does not possess wheels.
23:14:58 <Pseudonym> I was caught out by this once.
23:15:17 <Pseudonym> dmn: Ah, stairs are a show stopper, yes.
23:15:48 <lilith> stairs are good. stops one from becoming too fat
23:16:07 <flippo> andersca: found the full strip http://www.redmeat.com/redmeat/2003-05-20/index.html
23:16:37 <lilith> shapr: fat and skinny ones
23:16:44 <andersca> bug-eyed earl rocks
23:16:48 <Pseudonym> Ones who climb on rocks...
23:16:51 <andersca> "no man is an island"
23:17:00 <andersca> "but if you tie a bunch of dead guys together they make a pretty good raft"
23:18:36 <Pseudonym> I disagree that stairs stop one from becoming "too fat" for all definitions of "too fat".
23:20:19 <Darius> What about "too fat to go up stairs"?
23:20:59 <lilith> Pseudonym: climbing stairs is a form of exercise
23:21:02 <flippo> andersca: I like ted johnson http://www.redmeat.com/redmeat/2000-06-27/index.html
23:21:11 <Pseudonym> Assuming you can't avoid the stairs, clearly it does prevent you from being too fat to use the stairs, yes.
23:21:28 <lilith> :)
23:21:40 <Pseudonym> But "too fat" is a relative term.
23:22:02 <lilith> Pseudonym: well, there's no elavators in college, so i have no alternative
23:22:18 <Pseudonym> You don't have disabled people there?
23:22:27 <andersca> flippo: yeah, me too
23:22:38 <Pseudonym> Actually, now that I think about it, my college didn't have them either.
23:22:40 <lilith> none. but if they were, they'd get the ground floor
23:22:47 <Pseudonym> And I had to give tutes up in the tower.
23:57:34 <shapr> lilith: I'm not skinny.
23:58:03 <reffie> you're fat?
23:58:09 <shapr> not really
23:58:18 <Marvin--> shapr's ph4t
23:58:21 <shapr> http://kungens.kemi.fi/~shae/foto/
23:58:24 <reffie> you're skinny, then.
23:58:33 <Pseudonym> shapr: Do you have stairs?
23:58:41 <shapr> pushing is the answer.
23:58:56 <shapr> yes, we have a spiral staircase in our apartment.
23:59:27 <reffie> you should get your hair cut!
23:59:31 <shapr> why?
23:59:36 <Marvin--> yeah, and get a job!
23:59:38 <Marvin--> oh, wait...
23:59:48 <reffie> short hair = teh r0x0r
23:59:51 <Pseudonym> And get yourself a REAL language!
23:59:54 <Marvin--> 'SCO, whose representatives are staying far away from LinuxWorld as they are "unsure of their welcome," ...'   no shit
