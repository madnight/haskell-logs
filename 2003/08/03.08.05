00:36:03 * Marvin-- goes "eek"
00:38:22 <seth> Marvin--: I'm not familiar with the denotational semantics of eek
00:39:28 <Marvin--> seth: sucks to be you :-)
00:39:53 <seth> Marvin--: yea, but I can't find a transformation that's any better.
06:11:37 <Marvin--> heh, we discovered the bottle neck with our indexing
06:12:34 <Marvin--> it's called "nfs"
06:18:28 <Igloo> :-)
06:19:44 * Igloo gets a new and exciting different sort of segfault
06:21:26 <Marvin--> seriously, it took an hour to dump all our in-memory dictionaries to berkeley db files over nfs, and 12 seconds on a local file system
06:21:43 <Marvin--> so now the indexing is cpu intensive again, great ;)
06:53:07 <shapr> delYsid: y0
06:56:40 <shapr> hi steveh 
06:58:10 <shapr> hi Darius 
06:58:15 <Darius> heya
06:58:21 <shapr> what's up?
06:59:26 <Darius> working on extensible syntax, mayhap I'll extend @eval to use it.
06:59:32 <shapr> spiff
06:59:33 <shapr> y
07:10:19 <steveh> hi
07:10:24 <shapr> what's up?
07:12:20 <steveh> not too much
07:12:27 <steveh> futzing with a web page
07:12:38 <shapr> with Haskell?
07:13:22 <steveh> heh, no :)
07:14:13 * Marvin-- tries to figure out how to create extension classes for python again
07:14:16 <steveh> it's actually a departmental home page my sister is now maintaining
07:14:29 <steveh> giving her a hand with styling it
07:14:56 <steveh> http://geology.cwru.edu/ is the original
07:15:21 <steveh> http://mulder.homeunix.net/~steve/geology.cwru.edu/template.html is the template I just sent her to fix up
07:16:55 <steveh> does anyone do much server-side/cgi with haskell?
07:17:04 <steveh> i'm pretty sure I read about a web server in haskell
07:17:16 <Igloo> WASH exists, but I don't know of anyone seriously using it
07:17:20 <steveh> but that's pretty much the 90s equivalent of writing a compiler in the language
07:17:33 <steveh> you have to do it or no one pays attention :)
07:28:34 <shapr> there is a haskell web server
07:28:39 * shapr points accusingly at Marvin-- 
07:29:00 <shapr> John Hughes used WASH for the ICFP contest website
07:30:33 <Marvin--> shapr: point that thing somewhere else (for example Simon M)
07:30:49 * Marvin-- goes back to writing Python in C
07:37:46 * Marvin-- is the envy of everybody at the office (no afternoon sun...)
07:43:08 <shapr> huh?
07:43:23 <shapr> you don't have any afternoon sun?
07:43:44 <Igloo> Sun bad. Makes it hot.
07:44:10 <shapr> ok
07:44:27 * shapr makes space on his driver for another archive.org download
07:44:39 <Igloo> driver?
07:44:45 <shapr> er, "drive"
07:44:50 <Igloo> Ah
07:44:57 <Igloo> What are you downloading?
07:45:14 <shapr> I got Cowboy Junkies last time, I was thinking of getting Bela Fleck and the Flecktones
07:45:24 <shapr> or maybe String Cheese Incident
07:45:32 <shapr> hi hal
07:45:39 <hdaume> hi
07:46:11 <shapr> how's code?
07:46:17 <Marvin--> shapr: yep, I have the coolest office .-)
07:46:31 <hdaume> some jerk changed the db tables i was accessing and now my programs are all broken :(
07:46:46 <shapr> that sucks
07:46:59 <shapr> which DB driver did you end up using?
07:47:59 <shapr> I just need to free another 500MB somewhere and I can download this show...
07:48:32 <shapr> Igloo: hey, is your zsh prompt online somewhere?
07:48:44 * Igloo looks at his feet
07:49:00 <shapr> you keep your config files on your feet?
07:49:01 <shapr> wow
07:49:02 <hdaume> i ended up writing a server in C# and connecting to it using sockets and issuing queries through that :)
07:49:04 <shapr> I want shoes like that.
07:49:32 <Igloo> Only thing is if your shoes get dirty you get syntax errors when you log in
07:49:40 <shapr> wow cool
07:49:58 * shapr laughs
07:52:00 * Marvin-- is using lots of evil fast access macros
07:58:47 * Igloo wonders what wanna-build does that is quite resource intensive and needs to be run by multiple people
07:58:59 <shapr> what's wanna-build?
08:00:27 <Igloo> I imagine it's something to do with the autobuilders
08:06:54 <Marvin--> now, let's see what I can do with these nasty import hacks *cough*
08:13:13 * shapr boings
08:13:37 * Riastradh grrs.
08:13:41 <shapr> ?
08:13:53 <Riastradh> A general grr at the storm two days ago.
08:14:28 <shapr> ah
08:14:56 <Riastradh> I _do_ profit an excuse for buying a new computer from the storm, but until I buy one, I'm stuck with an 8100 and an iBook to scramble a mail server onto.
08:15:16 <shapr> 8100 was powerful hardware
08:15:21 <shapr> some years ago
08:15:36 <Igloo> Errr, is the -liberty configure check a joke?
08:15:52 <shapr> what check are you talking about?
08:15:58 <o3> no
08:16:04 <o3> there's a library called iberty
08:16:09 * shapr grins
08:16:10 <Igloo> Ah, that's OK then
08:16:30 * Marvin-- groans
08:16:39 <Igloo> apt-cache search iberty didn't find it though
08:17:29 <o3> dpkg -S libiberty
08:27:56 <hdaume> anyone know what "internal error: unblockThread (I/O): TSO not found" means, other than the following line which says to report it as a bug?
08:46:55 <shapr> hi earthy
08:50:25 * Igloo cries
08:50:33 <Igloo> LdvProfile.c:45: #error Please use gcc 3.0+ to compile this file with DEBUG; gcc < 3.0 miscompiles it
08:50:44 <Igloo> But gcc 3 makes broken code on sparc
08:50:50 <hdaume> :(
08:52:15 <earthy> Igloo: dang. :)
08:54:36 <mandrill> even gcc 3.2 or 3.3?
08:55:37 <Igloo> It's possible 3.0 is OK. The most recent ones certainly aren't.
08:57:22 <mandrill> hm. 3.2 is > 3.0, in pretty much anything... on x86
08:57:45 <mandrill> 3.0 was kind of fucked up, i think they we're ashamed
08:58:05 <mandrill> we're o_O weather makes me dumb
09:04:42 <shapr> I don't need weather for that kind of thing.
09:04:54 <shapr> ;-)
09:47:34 <shapr> hej Marvin-- 
09:48:01 <Marvin--> hej igen
10:02:28 <shapr> I wonder, if PHP were implemented as a DSL in Haskell, would people use it?
10:02:37 <shapr> maybe if we made a PHP compiler?
10:03:01 <Riastradh> Ewwwwww.
10:03:06 <Riastradh> Why would you want to?
10:03:17 <shapr> because zillions of people use PHP
10:03:26 <shapr> and I'd like to steal some glory
10:03:27 <Marvin--> DSL?
10:03:31 <shapr> domain specific language
10:03:32 <Riastradh> But, um, PHP sucks.
10:03:51 <shapr> PHP doesn't suck when you want to quickly and easily build a dynamic website
10:04:22 <shapr> admittedly, it doesn't give you any abstractions or other nice features, but it does work.
10:04:40 <shapr> @fact dsl
10:04:43 <lambdabot> Nothing
10:04:48 <shapr> lambdabot is slow today
10:04:54 <Riastradh> Yes.  It works.  That's about the extent of its advantage list.
10:05:07 <shapr> and lots of people use it, and it's interpreted right now.
10:05:19 <shapr> I suspect a PHP compiler would be used
10:05:55 <Riastradh> But why do you want to encourage people to use PHP?
10:06:07 <shapr> I want to encourage them to use Haskell.
10:06:16 <shapr> let's steal some PHP users.
10:06:25 <Riastradh> Um...and writing a PHP compiler makes people use Haskell...how?
10:06:33 <shapr> because they'll want to hack on it?
10:06:42 <shapr> they'll know it's written in Haskell?
10:06:42 <Riastradh> I doubt it.
10:06:48 <Marvin--> <insert tired underpants gnomes joke here>
10:06:53 <shapr> Marvin--: hah
10:07:14 <opet> it'll be like cvsup. lots of people use it, but it doesn't make modula-3 any more popular
10:07:34 <shapr> is cvsup written in modula-3?
10:07:36 <Riastradh> CVSup in fact makes lots of people hate Modula-3.
10:07:39 <Riastradh> Yes.
10:07:43 <shapr> what is it?
10:07:53 <shapr> oh
10:07:54 <Riastradh> I don't understand the logic behind their hatred, but I also don't understand the logic behind lots of idiocy.
10:08:14 <Marvin--> shapr: did you listen to the HumanX1 mp3?
10:08:18 <shapr> yah, it's interesting
10:08:29 <shapr> I'll have to borrow the CD from my friend and check it out.
10:08:42 * shapr is downloading String Cheese Incident at the moment
10:08:52 <opet> Riastradh: ime most of the hatred was because the modula-3 libs etc took ages to compile, so compiling cvsup from source was a bit of a challenge
10:08:57 <shapr> it's great to find high quality legally downloadable music.
10:10:01 <shapr> ok, what's a better way to get people to use Haskell?
10:10:29 <opet> get it on /. ;)
10:10:39 <Marvin--> get micros~1 to embrace&extend it in a Visual Haskell IDE? *ducks*
10:10:40 <shapr> ok, how do you do that?
10:10:55 <delYsid> shapr!
10:11:07 <shapr> hiya delYsid, how are ya?
10:11:10 <delYsid> I think it'll happen, rms made me switch to XEmacs
10:11:15 <shapr> holy shit
10:11:18 <shapr> what happened???
10:11:28 <Marvin--> will what happen?
10:11:30 <delYsid> well...
10:11:59 * shapr is explorbed
10:12:05 <delYsid> I learned that I can do this (http://delysid.org/emacs/xemacs.html) with XEmacs, and RMS explicitly doesnt want it to be possible (so much about "free" software)
10:12:45 <delYsid> I am still not very happy, but it seems I have no choice other than jump into the cold water
10:13:50 <shapr> I knew that he turned off dso loading in gnumacs cvs
10:13:58 <Riastradh> What's the IP address of delysid.org? -- my nameserver seems to be broken...
10:15:10 <delYsid> anyway, makes for a good project for the CCC Camp (hacking up the at-spi bindings in native emacs lisp)
10:15:22 * Riastradh pokes delYsid.
10:15:25 <shapr> Chaos Computer Club?
10:15:33 <delYsid> Riastradh: the IP doesn't help, its a virtual server...
10:15:42 <shapr> Riastradh: delysid.org has address 216.218.178.127
10:15:49 <delYsid> shapr: yeah, http://www.ccc.de/camp/
10:15:55 * delYsid is leaving for Berlin in about 2 hours
10:16:09 <shapr> delYsid: I didn't know you were a member of the CCC
10:16:20 <delYsid> I am not.
10:16:26 <delYsid> But I'll join the Camp :)
10:17:06 <shapr> if you start hacking on XEmacs sources, I may get interested
10:17:23 <delYsid> 've already started.
10:17:39 <shapr> I'd like to have other languages plugged into XEmacs next to elisp
10:17:39 <delYsid> Writing modules seems very straight forward.
10:17:47 <Riastradh> I'll use XEmacs if someone gets something like Scheme48 working with it...
10:17:54 <Riastradh> And if the Quack mode and ERC work well with it.
10:17:59 <shapr> I'm using ERC Version 4.0 $Revision: 1.547 $ with XEmacs 21.4 (patch 12) "Portable Code" XEmacs Lucid!
10:18:05 <Riastradh> I'm using ERC Version 3.0 $Revision: 1.328 $ with Emacs 21.2.1!
10:18:07 <delYsid> well, erc might get a boost if I really switch :)
10:18:10 <shapr> truly
10:18:16 <shapr> I'll jump back into coding for ERC
10:18:37 <shapr> I rewrote my xmms-shell.el into ap-shell.el last coupla days
10:18:58 <shapr> sadly, my C skillz suck
10:19:05 <Riastradh> I _would_ hack ERC if it were not for twisted-scheme, my mail server problem, a very large but secret project, and a couple of little Erlang projects.
10:19:12 <delYsid> gah, C is *the* language.
10:19:21 <shapr> I'm not so fond of C
10:19:27 <delYsid> I love it
10:19:31 <delYsid> its so real
10:19:54 <shapr> I'll take your word for it :-)
10:20:17 <delYsid> 've written much C recently.
10:20:20 <Riastradh> *cough*C--*cough*
10:20:23 <delYsid> seems I finally got rid of my blockade.
10:20:28 <shapr> spiffy!
10:21:27 <delYsid> shapr: well, for instance, writing a native python eval for elisp should be more than simple...
10:21:43 * Riastradh mumbles irritatedly at Python.
10:21:47 <Riastradh> Scheme!  Scheme!  Scheme!
10:22:14 <shapr> delYsid: turn PyMacs into a dso?
10:22:16 <shapr> or what?
10:24:00 <Riastradh> Or, better yet...Haskell!  Haskell!  Haskell!
10:24:06 <delYsid> Riastradh: Well, maybe I was a bit too much exposed to Guile, but I kind of lost a bit of the Scheme intusiasm recently :/
10:24:15 <delYsid> shapr: yah, something like that.  But OTOH, why bother :)
10:24:42 <shapr> Haskell scripting in XEmacs would make me very very happy.
10:24:43 <Riastradh> delYsid, yuck, be away from guile!
10:24:49 <shapr> I was trying to do it yesterday in fact
10:25:05 <delYsid> Riastradh: Does it really not have define-syntax?
10:25:33 <delYsid> shapr: I am having a bit of a hard time seeing a declarative language being very useful in a scripting context.
10:25:47 <Riastradh> I don't know all of guile's disgustingness.
10:25:49 <Riastradh> Just avoid it!
10:26:06 <delYsid> well, its C linking abilities lured me
10:26:28 <shapr> I wanted to write a keyboard macro in Haskell
10:26:36 <Riastradh> You can do the same with Scheme48, with MzScheme, with CHICKEN, with Bigloo, with Gambit (I think), with _lots_ of other implementations.
10:26:41 <shapr> oh, Joy would be spiffy
10:27:15 <delYsid> Hmm, since I looked at forth a bit, I cant really see why joy is that cute.
10:27:34 <shapr> I haven't looked at Forth, so I don't know the differences.
10:27:48 <Riastradh> I haven't looked at either, but from what I've heard, Joy is a cutification of Forth.
10:28:12 <delYsid> Lots of Forth's power is drawn from the tricks you can pull by using the stack and side-effects and such.
10:28:23 <andersca> ha
10:28:26 <delYsid> Joy by being pure seems to leave all that aside
10:28:28 * andersca just found out how CORBA_free works
10:29:21 <delYsid> What really amazed me was that Forth basicly has the same powerful macro system that lisp has.
10:29:45 <delYsid> It also offers the ability to selectively execute FORTH at compile and/or run-time.
10:29:49 <Riastradh> ...'Lisp' doesn't have one macro system -- there are lots of them...
10:30:34 <delYsid> no stupid preprocessing, The Real Thing (TM)
10:31:43 <delYsid> And, you can define words in terms of asm code.
10:31:53 <delYsid> So its basicly just a very powerful macro assembler :)
10:32:13 <delYsid> But quite fascinating given that Chuck basicly did it on his own in 1970.
10:34:55 <shapr> I haven't tried Forth yet.
10:35:02 <shapr> I'll put it on my list.
10:35:13 <delYsid> well, it was a fun learning experience.
10:35:13 <shapr> I was considering mozart/oz next.
10:35:21 <delYsid> but I have no real use for it, its a bit too low level.
10:35:32 <Riastradh> ...says the C weirdo.
10:35:45 <shapr> Lunar^ was hacking on GHC to get it running on the raw metal last weekend.
10:36:18 <delYsid> raw metal?
10:36:54 <shapr> http://wise.homedns.org/blog/
10:37:18 <shapr> in the spirit of http://jnode.sourceforge.net/ which is the JVM running on raw x86 hardware.
10:37:41 <shapr> Seems there are several languages that can run on raw x86 hardware.
10:37:45 <shapr> I only knew about Oberon
10:37:55 * Riastradh mumbles irritatedly about x86.
10:38:07 <delYsid> I want an Opteron!
10:38:10 <shapr> me too
10:38:10 <Marvin--> me too
10:38:17 <shapr> I'm saving up for a 4-way Opteron box.
10:38:19 * Marvin-- inserts some <aol> tags in #haskell
10:38:32 <andersca> are you sure you want an ultra1 Marvin--
10:38:35 <Riastradh> I want a Power4!
10:38:39 <Marvin--> andersca: yeah, that too :-)
10:38:46 <shapr> I want an Alpha, but they killed them :-(
10:38:54 <shapr> DEC Alpha was the coolest CPU yet.
10:39:01 <delYsid> erm
10:39:04 * andersca is pondering getting two Athlon MPs
10:39:05 <delYsid> more like the hottest :)
10:39:16 <shapr> andersca: it's nice
10:39:21 <shapr> but produces *much* heat
10:39:29 <shapr> and you *really* need a kickass PSU
10:39:34 <delYsid> A two-way opteron would just be right.
10:39:36 <shapr> my weenie 450 is not doing it.
10:39:42 <delYsid> But around here they dont sell 'em.
10:39:53 <shapr> delYsid: you could order it
12:47:15 <andersca> http://www.cs.washington.edu/homes/sds/rb.html
12:50:41 <hdaume> hehe
12:55:53 <Igloo> Oh, hdaume, didn't you say you learnt sparc stuff?
12:56:07 <Igloo> (prepare to regret it...  :-)  )
12:57:05 <Igloo> Is the reason why the argument to waitThread_ is getting lost in http://urchin.earth.li/~ian/prob.txt obvious?
12:57:45 <hdaume> Igloo: some
12:58:44 <hdaume> sorry...i can only read spart assembly :)
12:58:46 <hdaume> sparc
12:58:56 <hdaume> oh
12:58:57 <hdaume> nm
12:59:04 <Igloo> Those are sparc registers  :-)
12:59:16 <hdaume> yes, i just noticed :)
12:59:21 <hdaume> hold on a sec
12:59:26 * Igloo finds out how to disassemble with gdb and goes ot put that in a file too
13:00:24 <Igloo> http://urchin.earth.li/~ian/prob-asm.txt
13:01:02 <hdaume> okay, let's see...
13:02:22 <Igloo> Which way round is "mov  %i0, %l0"?
13:02:40 <Igloo> Ah, looks like it must be from,to which is good
13:02:45 <hdaume> move i0 into l0
13:03:37 * Igloo looks at the PCs and notices it hasn't actually done that yet anyway
13:03:47 <hdaume> heehee
13:04:16 <Igloo> It looks OK (to my entirely untrained eye)
13:04:35 <hdaume> it looks okay to me, too.  my only guess is that you're trying to load into %i0 which might be hardwired to the value 0
13:04:35 <Igloo> The right value went from the first output register, appeared inthe first input register
13:04:39 <hdaume> but i could be very wrong about that
13:04:55 <Igloo> HDYM?
13:05:23 <Igloo> Looking at the PCs before and after the only assembly instruction that's happened is call  0x26fd10 <waitThread_>
13:05:51 <hdaume> herm
13:05:56 <Igloo> So the only thing I can think of is that gdb is looking in the wrong place, which seems very odd
13:06:25 * Igloo wonders if I can stick values into random registers with gdb
13:07:22 <hdaume> no, i was wrong...ignore what i said :)
13:07:29 <hdaume> i dunno :)
13:07:55 <Igloo> OK, thanks for trying  :-)
13:07:59 <hdaume> np
13:08:03 <hdaume> good luck :)
13:10:18 <Igloo> Heh, if you forget the = in a set command in gdb you get the incredibly helpful      A parse error in expression, near `'.
13:11:00 <hdaume> :)
13:17:13 <Igloo> Aha! "info address m" thinks it moves from o0 to l0
13:17:27 <hdaume> :)
13:17:52 * Igloo wonders why it thinks a silly thing like that
13:43:46 * Heffalump wonders if SyntaxPolice is around
13:43:52 <SyntaxPolice> Heffalump: yes :)
13:44:05 * Heffalump is wondering what the chances of getting a hugs-dev package are ;-)
13:44:18 <SyntaxPolice> what would be in hugs-dev?
13:44:29 <Heffalump> headers and libraries for embedding hugs
13:45:06 <SyntaxPolice> should be possible, but it'll have to wait until after ICFP, I'm on vacation from thursday until then.
13:45:13 <SyntaxPolice> can you remind me in september?
13:45:25 <Heffalump> sure :-)
13:45:37 <Heffalump> you might even have a patch waiting for you by then :-)
13:53:08 <Igloo> Ooo, you have your users well trained, Syn  :-)
13:54:08 <Heffalump> :-p
13:54:15 <Heffalump> note the "might".
14:02:29 <Riastradh> At last!  I got a mail server working!
14:02:33 <mattam> phew, Coq is hard...
14:03:29 <mattam> any of you worked with it ?
14:51:34 <SyntaxPolice> Heffalump: patches are always welcome :) :)
14:52:52 <SyntaxPolice> Heffalump: oh, I already have a patch from ross to apply for the new hugs build system
14:53:11 <SyntaxPolice> which might end up in the hugs-cvs deb soon, so you might check that out also
14:53:20 <Heffalump> right
14:54:32 * SyntaxPolice goes home
14:54:33 <SyntaxPolice> peace all
15:07:54 <d33p> SyntaxPolice: peace
15:08:37 <Heffalump> war
15:24:32 <Riastradh> ignorance
15:24:49 <Riastradh> Oops, no, strength, not ignorance.
15:25:16 <Riastradh> _Then_ it's ignorance.
17:21:07 * Pseudonym yawns
17:21:33 <clausen> gday Pseudonym
17:21:39 <Pseudonym> G'day.
17:22:06 <Pseudonym> I love new compilers.
17:22:33 <Pseudonym> We just started using a new compiler for our Itanium system, and it throws up a whole new class of warnings.
17:22:42 <Pseudonym> Now we have to go see if it's really a problem or not.
17:22:44 * Pseudonym sighs
17:22:58 <clausen> it's better to discover bugs this way than the alternative ways
17:23:08 <Pseudonym> Yeah, that's assuming they're bugs.,
17:23:29 <Pseudonym> If I see MSVC tell me about how it truncated my linker symbols ONE MORE TIME...
17:24:52 <clausen> I usually find that adding a port to a program makes it 10x more robust
17:25:05 <Pseudonym> In this case it won't be 10x.
17:25:23 <Pseudonym> We're already on Solaris and Windows, so we've already hit the 10x figure. :-)
17:25:36 <Pseudonym> And we're already on Itanium using gcc.
17:25:50 <Pseudonym> It's just the new compiler (Intel's) which is throwing up bizarre warnings.
17:26:07 <Pseudonym> But I do agree with you.
17:31:08 <Pseudonym> Blerg.  Meeting.  BBL
18:09:23 <Igloo> Bah, don't talk to me about porting  :-)
18:53:34 <Riastradh> What, in the IRC message pseudo-BNF, is <servername>? -- what character set?
18:54:29 <Riastradh> (I ask here because there are probably lambdabot hackers around somewhere here.)
18:55:33 <Pseudonym> So, Igloo, how about porting, then.
18:55:47 <Igloo> :-P
18:55:51 <Pseudonym> Riastradh: Uhm... not sure.
18:56:09 <Riastradh> I'd prefer that someone who were sure answer me.
18:56:20 * Pseudonym looks up RFC 1459
18:56:33 <Riastradh> I'm looking at it right now.  I can't find it.
18:56:44 <Pseudonym> That's because it's a forward to RFC 952.
18:56:55 <Riastradh> Huh?
18:57:45 <Pseudonym> <servername> ::= <name>*["."<name>]
18:57:54 <Pseudonym> <name>  ::= <let>[*[<let-or-digit-or-hyphen>]<let-or-digit>]
18:58:35 <Pseudonym> Is that what you wanted to know?
18:59:12 <Riastradh> Yes.
18:59:16 <Pseudonym> Cool.
18:59:17 <Riastradh> Now what about <nick>, <user>, and <host>?
18:59:32 <Riastradh> Er, oh, and, um.  <servername> can be foo or foo.bar but not foo.bar.baz by that BNF.
18:59:41 <Pseudonym> Ah, now they're interesting.
18:59:46 <Pseudonym> Uhm...
18:59:46 <Riastradh> Unless [] means something different.
18:59:59 <Pseudonym> I believe that * is a prefix kleene star.
19:00:16 <Pseudonym> Not postfix, as is more conventional.
19:00:24 <Pseudonym> <nonwhite>   ::= <any 8bit code except SPACE (0x20), NUL (0x0), CR (0xd), and LF (0xa)>
19:00:30 <Pseudonym> <user>       ::= <nonwhite> { <nonwhite> }
19:00:40 <Pseudonym>  <nick>       ::= <letter> { <letter> | <number> | <special> }
19:00:52 <Pseudonym> <letter>     ::= 'a' ... 'z' | 'A' ... 'Z'
19:00:52 <Pseudonym>    <number>     ::= '0' ... '9'
19:00:53 <Pseudonym>    <special>    ::= '-' | '[' | ']' | '\' | '`' | '^' | '{' | '}'
19:01:13 <Riastradh> Where are you finding this?
19:01:30 <Pseudonym> RFC 1459, section 2.3.1.
19:01:56 <Riastradh> Oh, hey, it is there!
19:02:03 <Pseudonym> What do you know. :-)
20:18:51 <Riastradh> Huh?  By the BNF on RFC 1459, <user> may contain an @ -- i.e. this is valid: foo!bar@baz@quux.zot -- foo is the nick, bar@baz is the user, and quux.zot is the host.
20:57:02 <Pseudo> Interesting.
20:57:16 <ganesh> Interesting?
20:57:24 <Pseudonym> That was supposed to be Pseudo@nym
20:57:32 <Pseudonym> Now it could be the client.
20:57:36 <ganesh> I'd be very impressed if @ was an allowed character
20:57:41 <ganesh> given the potential for confusion
20:59:06 <Pseudonym> Does someone have a working lambdabot build?
20:59:12 <ganesh> I imagine I do
20:59:14 * Pseudonym can't get to cvs.sourceforge.net
20:59:20 <Pseudonym> Try it with an @ in the nick.
20:59:32 <ganesh> on this network?
20:59:46 <Pseudonym> Wherever.
20:59:59 * ganesh is Heffalump if that's not obvious, btw (I accidentally killed the ssh server off on the machine Heffalump is connected via)
21:00:33 * Pseudonym nods
21:00:38 <Pseudonym> You should be able to kill the job.
21:00:45 <ganesh> which job?
21:01:00 <Pseudonym> Whichever irc client thinks it's connected.
21:01:02 <ganesh> I don't particularly want to kill the client, since I can get to the console of the machine in the morning.
21:01:06 <ganesh> But I can't, anyway.
21:01:08 <Pseudonym> Ah, OK.
21:01:13 <ganesh> I really can't login to the machine at all remotely.
21:01:23 <Pseudonym> Are you registered with NickServ?
21:01:32 <Pseudonym> Should be able to get the old client booted off.
21:01:33 <ganesh> oh, yeah, I could probably get the _connection_ killed off
21:01:45 <Pseudonym> I know you don't particularly care.
21:02:07 <ganesh> it's trying to use the nick heffa@lambda
21:02:11 * Pseudonym nods
21:02:19 <Pseudonym> It could be the server.
21:02:29 <ganesh> I'd be very surprised if any server allowed it.
21:02:38 <ganesh> what's the background to this?
21:02:44 <Pseudonym> Kind of interesting that... oh...
21:02:50 <Pseudonym> No, @'s are not allowed in nicks.
21:03:04 <Pseudonym> They are in _users_.
21:03:09 <Pseudonym> Duh.
21:03:10 <ganesh> "users"?
21:03:15 <Pseudonym> Yes.
21:03:19 <Pseudonym> user@host
21:03:26 <Pseudonym> User /= nick
21:03:35 <ganesh> ahh
21:03:36 <ganesh> yeah :-)
22:38:33 <andersca> hola Syntax
