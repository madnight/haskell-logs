00:00:00 <Pseudonym> Is that intermediate or advanced? :-)
00:00:48 <shapr> Soups that can accept any sort of meat, including cow's feet, are considered to have Add Hock Polymorphism
00:01:12 <Pseudonym> No, they can't accept snake meat.
00:01:28 <shapr> snakes don't have hocks
00:01:31 <Pseudonym> Right.
00:01:35 <Darius> Tendon isn't that good.  It doesn't have much flavor and it has an unpleasant texture.
00:01:38 <Pseudonym> You need Adder Hoc Polymorphism.
00:01:42 * shapr snickers
00:02:50 <Darius> But talking of meat and soup, pho is good stuff.
00:03:05 <Pseudonym> Pho is Vietnamese, right?
00:03:11 <Darius> Yeah
00:03:15 * Pseudonym nods
00:03:26 <Pseudonym> It is nice.  We have a number of suitable restaurants locally.
00:03:59 <Pseudonym> Mind you, Melbourne is known for its restaurants.  We have about 300 nationalities and regions within a 5km radius of the CBD.
00:04:23 <shapr> sounds like a place where I could not be thin.
00:04:26 * Darius participated in the Vietnamese section of the 4th of July parade in DC last year.
00:04:31 <Pseudonym> Cool.
00:04:41 <shapr> nifty
00:04:50 <Pseudonym> shapr: Aren't you a tall skinny geek?
00:04:55 <shapr> um
00:04:58 <shapr> no?
00:04:59 <Pseudonym> One of the known geek types.
00:05:02 <Pseudonym> Oh, OK.
00:05:05 * Pseudonym is a fat bearded geek
00:05:09 <Pseudonym> I'm going for the guru look.
00:05:09 <shapr> @fact shaprsvisage
00:05:11 <lambdabot> Nothing
00:05:13 <shapr> hmm
00:05:31 <shapr> http://kungens.kemi.fi/~shae/foto/
00:05:46 <shapr> I'm 100 kilos
00:05:50 * Darius is short and trim.
00:05:55 <Pseudonym> Oh, OK.
00:06:01 <shapr> I'm middlin and rather wide.
00:06:03 <Pseudonym> I dunno where I got the idea that you were tallk from.
00:06:10 <shapr> I don't know either.
00:06:20 <shapr> .au is metric, right?
00:06:25 * Pseudonym nods
00:06:36 <shapr> I'm 175
00:06:52 <Pseudonym> OK, you're about my size.  You need to grow a beard.
00:06:56 <shapr> heh
00:06:59 <Pseudonym> Go for the Alan Cox look.
00:07:05 <Pseudonym> Except you're not balding.
00:07:06 <shapr> if only I could persuade my woman of that same thing.
00:08:13 <Pseudonym> If it's because she thinks beards are wiry, there's a secret on how to ensure that they are not.
00:08:14 <shapr> I once shaved my head. I must say, it's low maintenance.
00:08:30 <Pseudonym> You never, ever use shampoo on a beard.
00:08:36 <Pseudonym> That's what makes them wiry.
00:08:43 <shapr> That's a neat trick.
00:09:09 * Darius never even thought of shampooing a beard.
00:09:25 <Pseudonym> Do you have a beard, Darius?
00:09:33 <Darius> Not now
00:09:39 * Pseudonym nods
00:09:52 <Pseudonym> Some people have the mistaken impression that you should.
00:10:01 <Pseudonym> Of course, some guys' beards might just be naturally wiry.
00:10:19 <shapr> mine is just red.
00:10:27 <Pseudonym> Interesting.
00:10:48 <Pseudonym> Beards are lower maintenance than daily facial hair amputation.
00:10:58 <Darius> Indeed
00:11:26 <shapr> it takes several days before I really need to shave, so I think it may be different for me.
00:12:39 <Darius> What's 'really'?  I'd need to shave at least once every two days to be relatively clean shaven.
00:13:52 <shapr> most people don't notice I haven't shaven until three to four days afterwards.
00:15:21 <shapr> Darius: are there pix of you online?
00:17:33 <Pseudonym> People don't notice if I don't shave for a week.
00:17:52 <Pseudonym> But that's because a) I have a beard, and b) people are used to the fact that I use personal grooming creatively.
00:22:16 <ddarius> shapr: not really and certainly not any that are current
00:23:26 <shapr> aw, ok.
00:25:54 <Pseudonym> What's the opposite of common subexpression elimination?
00:26:06 <Pseudonym> Common subexpression reintroduction?
00:26:46 <ddarius> Inlining?
00:28:57 <andersca> strakt-marvin
00:29:10 <Marvin--> så är det nog
00:30:11 <Marvin--> iik, scary to irc with a proportional font
00:31:01 <Marvin--> but it looks quite pretty :-)
00:31:13 <Marvin--> anti-aliasing and stuff
00:31:38 <Pseudonym> OK, here's an interesting question.
00:31:54 <Pseudonym> What's the highest bandwidth mailing list you can think of?
00:32:04 <Pseudonym> So far, xml-dev and linux-kernel have been suggested.
00:32:05 <andersca> l-k is pretty high
00:32:27 <Pseudonym> Mailing lists which are just glorified CVS logs don't count.
00:32:32 <andersca> ok
00:32:36 <andersca> was gonna suggest g-c-l :)
00:32:39 <Pseudonym> :-)
00:32:40 <andersca> oh, c-c-l
00:32:46 <Pseudonym> c-c-l?
00:32:52 <andersca> the gnome cvs-commits-list
00:32:55 * Pseudonym nods
00:33:07 <Pseudonym> There's a reason for this, incidentally.
00:33:09 <andersca> although it's just ~100 mails a day
00:33:40 <Pseudonym> There is a distinct lack of large English text corpuses out there.
00:34:11 <Marvin--> xchat2 is pretty
00:34:12 <Pseudonym> There's TREC, but you're only allowed to use it to compute numbers for your papers submitted to the TREC conference.
00:34:37 <Pseudonym> So we've decided to have a go a building one from high-bandwidth mailing lists.
00:34:42 <Marvin--> heh, yeah, I read about that one in an article on indexing & searching
00:34:56 <ddarius> couldn't you just use usenet?
00:34:59 <Pseudonym> perl5-porters would be pretty high bandwidth.
00:35:08 <Pseudonym> Well, we don't have a copy of usenet handy.
00:36:43 <Pseudonym> And pulling as much as we can off google isn't very nice to google. :-)
00:37:02 <Pseudonym> And, of course, usenet today is less useful than it once was.
00:37:18 <Pseudonym> Unless we want to test information retrieval effectiveness on spam.
00:40:12 <Pseudonym> One of the things we might like to try, for example, is a Google pagerank-style ranking scheme.
00:40:27 <Pseudonym> Try to determine who is an "authoritative" poster.
00:40:52 <Marvin--> that's PageRank(tm) dammit ;)
00:40:58 <Pseudonym> Sorry, yes. :-)
00:41:24 <Pseudonym> One thing I thought of was that a posting to a mailing list is probably more relevant if the text you're searching for is _quoted_.
00:41:35 <Pseudonym> Because it's more likely to be an answer, rather than a question.
00:41:59 <Marvin--> unless it's of the +3,Funny type :-)
00:42:04 <Pseudonym> True.
00:42:06 <Pseudonym> Oh, slashdot!
00:42:12 <Pseudonym> Perfect corpus. :-)
00:42:16 <Darius> Oh god
00:42:18 <Marvin--> slashdot is pretty high bandwidth yes
00:42:26 <Marvin--> what are you going to do?
00:42:30 <Pseudonym> Search for "in soviet russia".
00:42:55 <Pseudonym> Oh, I work for a company which writes large scale text database systems.
00:43:08 <Marvin--> oh, right, I remember you've said that before
00:43:16 <Pseudonym> Our problem is that we don't have a lot of text ourselves.
00:43:26 <Pseudonym> Our customers do, and they generally don't let you have it.
00:43:38 <Marvin--> heh
00:43:46 * andersca waits for shapr to ask if the database software is written in haskell
00:43:46 <Marvin--> hmm... maybe you have stuff I can use
00:43:59 <Pseudonym> What do you want to do?
00:44:01 <Marvin--> I'm supposed to work on an indexing/free-text search engine for CAPS during the summer
00:44:11 <Pseudonym> CAPS is...?
00:44:42 <andersca> something you do with beer, glasses and bottle caps
00:44:48 <Pseudonym> Clearly.
00:44:52 <Marvin--> if you ask marketing, it's a "Real-Time Enterprise Computing platform"
00:45:03 <Pseudonym> I thought CAPS was an Apple file sharing protocol.
00:45:08 <Pseudonym> Or Disney's ink & paint system.
00:45:30 <Marvin--> if you ask us developers we'll mumble something about workflow application framework
00:46:11 <Marvin--> to be honest, I'm not quite sure how to describe it since I don't know enough about it
00:46:15 <Pseudonym> How much text do you have to store?
00:46:57 <Marvin--> we're not dealing with text per se, we're dealing with an object-oriented data base (in a typical example of a help desk, you've got cases, actions, messages...)
00:47:42 <Marvin--> but the idea is that we should be able to handle a lot of data. A lot, as in "what do you mean delete? We don't delete things from the database, we buy more hard drives"
00:48:02 <Pseudonym> I still don't know what you mean by "a lot".
00:48:34 <Pseudonym> One of our in-house customers stores 1Gb.  One of the customers we're trying to get stores 40Tb.
00:48:42 <Pseudonym> 1Gb is "small".  40Tb is "a lot".
00:49:06 <Marvin--> right
00:49:20 <Marvin--> I have no idea how much we store now, I'm trying to look up some of the future plans
00:49:25 * Pseudonym nods
00:49:33 <Pseudonym> Well I can certainly tell you how to index text.
00:49:41 <Pseudonym> You probably don't want our product, though.
00:50:02 <Pseudonym> Full licences are about US$15k per CPU.
00:50:24 <Pseudonym> But if you have 40Tb of text which you need fast access to, it's definitely worth it.
00:51:14 <Marvin--> I don't think we do, yet anyway :)
00:51:47 <Pseudonym> Do you have access to a univesity library?
00:52:12 <Darius> SPJ post to ghu to try to get people to stop reporting the bug?
00:52:19 <Pseudonym> Probably. :-)
00:52:49 <Marvin--> Pseudonym: yep
00:52:56 <Pseudonym> http://www.cs.mu.oz.au/mg/
00:52:59 <Pseudonym> See if they've got that book.
00:53:56 <Pseudonym> Though there are easier ways to implement things than what they mention in the book, it'll give you all the theory you need.
00:54:05 <Pseudonym> Easier and faster.
00:54:36 <Marvin--> yeah, I've seen numerous references to that book
00:54:44 <Pseudonym> My copy is signed.
00:54:50 <Marvin--> nice :)
00:54:55 <Pseudonym> Alistair Moffat was one of my honours lecturers.
00:54:56 <andersca> signed books are cool
00:55:11 <Pseudonym> We joked at the time that unsigned copies were probably more valuable.
00:55:29 <Pseudonym> Certainly more rare.
00:55:50 <Marvin--> yep, the chalmers library seems to have it
00:55:55 <Pseudonym> Cool.
00:57:02 <Pseudonym> One of the things that we've discovered since the book was published is that compressed inverted indexes are actually faster than uncompressed indexes, even if the indexes fit in RAM.
00:57:18 <Pseudonym> It's the first time we noticed cache effects dominating text retrieval.
00:57:24 <Marvin--> cool
00:57:37 <Pseudonym> But only if the compression method is simple.
00:57:48 <Pseudonym> i.e. simpler than in the Managing Gigabytes book
00:57:53 <Marvin--> oh
00:58:10 <Pseudonym> Hence: You only really want to read that book for the theory behind text retrieval.
00:58:22 <Pseudonym> I can point you to some more recent papers once you've read it.
00:59:57 <Marvin--> I glanced through some material from http://www-2.cs.cmu.edu/~guyb/real-world/indexing/ and I glanced through an article on Searching the Web by some Stanford people
01:00:12 * Pseudonym laughs
01:00:22 <Pseudonym> I remember when yahoo was in some guy's account at Stanford.
01:00:30 <Marvin--> heh
01:02:24 <Pseudonym> http://www.seg.rmit.edu.au/research/download.php?manuscript=23
01:02:27 <Pseudonym> Good paper that.
01:05:26 <Marvin--> thanks, I'll give it a read
01:06:38 <Marvin--> dammit, www.mdstud is b0rken
01:06:52 <jlouis> Pseudonym: seems interesting
01:06:58 <Marvin--> why did they have to go break it the same day that I put up hws-wp on it and send a URL to g-h-u about it?!
01:08:50 <Marvin--> cool that SPJ was going to check it out though :-)
01:12:40 <andersca> marvin is a fanboy, nya nya nya
01:12:44 * andersca runs
01:12:53 <Marvin--> I SO am
01:13:10 <andersca> aren't we all
01:13:54 <Marvin--> exactly!
01:14:30 <Marvin--> Pseudonym: what's your view on using signatures for indexing?
01:20:44 <Pseudonym> I say run like hell.
01:20:50 <andersca> runST
01:20:53 <andersca> runST hell
01:21:25 <Pseudonym> Our CTO did his PhD thesis on signature files.  His conclusion: They're bloody useless.
01:21:33 <Pseudonym> See, here's the thing:
01:21:34 <Marvin--> heh
01:21:44 <Pseudonym> You compute some bit vector for each word.
01:22:02 <Pseudonym> Then you use this to compute a bit vector for each document.
01:22:18 <Pseudonym> Then you compute a bit vector for your query and look up documents by matching bit vectors.
01:22:20 <Pseudonym> All well and good.
01:22:41 <Marvin--> yes, it sounds nice, doesn't it? :)
01:22:43 <Pseudonym> Except that to compute a vector for a document, you OR the vectors for all the words.
01:23:09 <Pseudonym> Now the signature lookup is approximate.  You have to then grep the documents to see if they really match.
01:23:29 <Pseudonym> OK, now consider a long document.
01:23:41 <Marvin--> yeah, it's a probabilistic approach, sor tof
01:23:42 <Pseudonym> 1) It's going to have a lot of 1 bits in the signature.
01:23:52 <Pseudonym> Because it has a lot of words.
01:24:05 <Pseudonym> 2) It's therefore going to match a lot of irrelevant queries.
01:24:17 <Pseudonym> 3) It's precisely the long documents which take the most time to grep.
01:24:21 <Marvin--> yeah
01:24:32 <jlouis> Bummer!
01:24:43 <Pseudonym> So signature files are actually _pessimal_ for documents of differing sizes.
01:25:09 <Marvin--> indeed
01:25:18 <Pseudonym> Like I said: Run like hell.
01:26:08 <Pseudonym> I don't think anyone seriously promotes signature files these days.
01:26:08 <Marvin--> however, the applications of our framework currently as a helpdesk doesn't really have any long documents in it, so I was conjecturing that it might be interesting... but since we're dealing with a framework, I guess I need something more general
01:26:12 <Marvin--> okay
01:26:28 <Pseudonym> In the late 80s/early 90s there were a few.
01:27:03 <Pseudonym> You'd hear people claim, for instance, that graphics hardware would be great for evaluating signature file queries.
01:27:11 <Pseudonym> Not that anyone actually tried it.
01:27:36 <Marvin--> heh
01:28:15 <Pseudonym> I think what would help you is simple categorisation.
01:28:35 <Pseudonym> Searching on category _and_ text is far more powerful than text alone.
01:29:27 <Pseudonym> Oh, signature files also don't support phrase queries.
01:29:32 <Pseudonym> Which you may or may not find important.
01:29:59 <Marvin--> yeah I think we want that
01:30:30 <Pseudonym> Gotta go.
01:30:34 <Pseudonym> Happy reading. :-)
01:30:45 <Marvin--> thanks for the info
01:30:49 <Pseudonym> No problem.
03:40:34 * shapr install ghc6 debs
03:40:49 <Marvin--> hey shapr
03:40:52 <shapr> hej Marvin-- 
03:41:11 <shapr> wassup?
03:42:47 * shapr bounces happily
03:42:50 <shapr> yay, ghc 6
03:42:52 <Marvin--> I'm trying to learn things about indexing and searching
03:43:11 <shapr> I saw your discussion with Pseudonym, looks nifty
03:47:10 <kosmikus> shapr? have you had a look at the Yale library system yesterday?
03:52:07 <vegai> hm, I wonder if ghc6 still requires older ghc to build
03:52:19 <vegai> ah, seems like it does
03:53:32 <kosmikus> what do you mean, vegai? ghc requires ghc to build, but not necessarily an older one ...
03:53:33 <Heffalump> "older"?
03:53:39 <Heffalump> presumably it can build itself
03:56:20 <vegai> it can't
03:56:35 <vegai> I mean... yes, it requires ghc... version doesn't matter
03:58:58 * Heffalump looks confused
03:59:27 <Heffalump> I'm not sure if it's still the case that you have to build it with precisely the same version to get ghci
04:00:01 <kosmikus> Heffalump: afaik, it is
04:00:15 <Darius> I think TH is added to that too
04:00:22 <kosmikus> yes
04:01:58 <Heffalump> bah, Igloo isn't an apt source :-)
04:02:25 <vegai> I just noticed that my OS's package-manager wanted to install ghc5 before installing ghc6, so I wondered aloud
04:03:25 <vegai> wonders of source-based operating systems...
04:03:43 <Darius> GHC5 is source too?
04:03:59 <vegai> I guess not
04:04:15 <vegai> as long as it works, I don't care ;-}
04:04:55 <Darius> That would make sense, without a GHC you have to bootstrap from GHC4
04:05:19 <kosmikus> Darius: is that possible again?
04:05:32 <kosmikus> I thought you can't bootstrap from C sources anymore with gcc 3
04:05:39 <Heffalump> surely you can start from .hc files?
04:05:58 <kosmikus> last thing I heard was that they only work with gcc 2.95
04:06:28 <vegai> seems to work here
04:06:30 <Darius> Heffalump: you can only build GHC4 with .hc files. Kosmikus:  I don't know if it works with gcc3, but you can always use gcc2.95
04:06:33 <vegai> though the build isn't complete yet
04:07:27 <kosmikus> yes, but as for Gentoo (what I suppose vegai is using), forcing a source installation of gcc 2.95 as well just to get ghc seems a little bit too much. I guess I could offer it as an alternative.
04:07:56 <vegai> yes, Gentoo
04:08:17 <kosmikus> vegai: you can unmerge ghc-bin after ghc is installed once
04:08:29 <vegai> ah, yes
04:08:41 <vegai> hm, ghc seems pretty slow
04:08:45 <kosmikus> if ghc is updated next time, you don't have the problem anymore
04:09:01 <kosmikus> vegai: the compilation, the compiler?
04:09:04 <vegai> but I guess compile time performance wasn't the primary goal there, right?
04:09:18 <vegai> compile times
04:09:32 <kosmikus> compared to gcc, certainly ...
04:09:40 <Darius> kosmikus: with my experience building (cross-compiling even) gcc and building ghc (though not from .hc, but that can only make it worse), ghc would still likely dominate the pain factor
04:10:15 <vegai> comparing to ocaml, in fact... which I've had much experience lately =)
04:10:29 <Darius> kosmikus: compared to gcc certainly considering with -fvia-C or just with -O it calls gcc
04:11:26 <Darius> without -O (or -fvia-C) ghc isn't that slow (though it's not exactly lightning)
04:12:29 <kosmikus> Darius: right.
04:13:41 <kosmikus> I will add bootstrapping from hc files back to Gentoo as soon as it works for gcc 3 and/or more recent GHC versions, should that ever happen ...
04:14:18 <vegai> ah, it was your ebuild
04:14:37 <vegai> thanks, kosmikus 
04:14:38 <kosmikus> I'm maintaining it at the moment.
04:15:11 <Darius> kosmikus: do you require a binary then to build it?
04:15:18 <kosmikus> Darius: yes
04:20:48 <Heffalump> hmm, downloading Igloo's debs from debian.org back to the same network he probably built them on feels silly
04:22:27 <shapr> but entertaining?
04:22:41 <shapr> kosmikus: no, I haven't investigated Yale's fptools alternative yet.
04:26:33 * shapr emails SPJ, asking him to be a juror for the Succ Zero IOHCC
04:26:48 <Heffalump> when are you going to hold it?
04:26:56 <Heffalump> (I imagine you should wait a while)
04:27:17 <shapr> the current plan is to accept submissions from July 1st to August 1st, and awards two week later.
04:27:18 <Marvin--> shapr: I got a mail from SPJ today, he was complaining about broken hws-wp links
04:27:25 <shapr> Marvin--: cool :-)
04:27:31 <Heffalump> even the IOCCC is only once a year, isn't it?
04:27:56 <shapr> well, the 0th IOHCC was a prototype, only two weeks to submit, and announced at the beginning of those two weeks.
04:28:10 <shapr> Marvin--: I felt like such a fanboy getting email from SPJ =)
04:28:35 <shapr> I want to get my copy of the H98 report autographed :-)
04:28:44 <shapr> of course, I have to buy a copy first...
04:28:49 <shapr> Riastradh: hey, any word on the T-shirts?
04:29:19 <Marvin--> shapr: <andersca> marvin is a fanboy, nya nya nya
04:29:26 <shapr> several people told me they would have submitted to the IOHCC if they had time to write a submission, so I say we give them a chance.
04:30:03 <Heffalump> ah, ok
04:30:38 * Marvin-- skillfully dodged a tricky question at the meeting today
04:30:57 <shapr> Marvin--: o3 just had runtime loader working with ghc6, have you had any problems?
04:31:15 <Marvin--> shapr: haven't tried
04:31:53 <Marvin--> been sorta busy
04:31:56 <shapr> he ran it on MOX, I'm going to try it on linux in my next fun time chunk.
04:32:46 <shapr> I want to get a in-hand opinion on Riastradh's T-Shirts, if they're spiffy I'll announce them on haskell@haskell.org
04:33:05 <Heffalump> T-shirts?
04:33:09 <shapr> though of course, they're not limited to Haskell. Any Hindley-Milner typed language users would be interested.
04:33:24 <shapr> Heffalump: read the top quote --> http://www.haskell.org/hawiki/QuotesPage
04:34:31 <vegai> woh, I've seen mozilla compile faster than ghc =) 
04:35:01 <shapr> I think glibc and XF86 take longer to compile than GHC
04:35:26 <vegai> something wrong with my system, then
04:35:51 <shapr> it takes me several hours to compile ghc on my dual Athlon MP 1544 MHz
04:36:00 <vegai> any idea what is the reason that ghc produces very memory-intensive code sometimes (ref: doug's shootout)
04:36:11 <shapr> doug's shootout is waaaay old.
04:36:13 <Marvin--> compiling gcc from scratch takes a fair time too...
04:36:20 <vegai> it uses ghc-5.00.1
04:36:29 <Marvin--> yes, waaaaaaaay old
04:36:36 <vegai> ghc is the worst performer memory-wise in lots of tests
04:36:53 <vegai> so, the present implementations are nicer?
04:37:09 <shapr> probably?
04:37:15 <shapr> I don't know how 5.0 behaved.
04:37:22 <shapr> that was before my time
04:37:28 <Darius> hmm, is that live data though?
04:37:52 <vegai> say, in "Array Access III", ghc takes 30,4MB. The second worst, java, takes 7,5MB
04:38:10 <vegai> perhaps the task just doesn't work well with lazyness?
04:38:27 <shapr> is it reading from an array?
04:38:29 <Marvin--> got a URL?
04:38:29 <Darius> Um, did it use functional arrays non-functionally?
04:38:39 <shapr> yah, that's what I wonder.
04:39:03 <vegai> http://www.bagley.org/~doug/shootout/lang/ghc/
04:39:04 <shapr> with extra cheese, you could unbox the arrays.
04:41:17 <Marvin--> this doesn't strike me as ultra-efficient code
04:41:53 <vegai> gotta love those tasks that "bash" wins hands-down =) (eg. "reversing a file": one line: "tac")
04:42:12 <Marvin--> but that's just silly
04:42:17 <vegai> sorta, yeah
04:42:52 <vegai> and then a glorious java-implementation in 39 lines ;-/
04:43:09 <vegai> or just "main = interact $ unlines . reverese . lines"
04:43:13 <vegai> pretty nifty that, too
04:43:23 <vegai> s/reverese/reverse/
04:44:59 <vegai> I guess Doug's measures the quality of a certain language's culture as well
04:45:03 <Marvin--> indeed, the haskell implementation is a one-liner too :-P
04:52:47 <shapr> hey Marvin--, wasn't the major downside of BNFConv the lack of typechecking in generated code?
04:53:27 <Darius> vegai: the Haskell Array Access III creates 1000+ arrays, the C version allocates 2.  Using ST/IOArrays would make a massive difference.
04:54:54 <dennisb> it could be fun to rewrite, it's hard to make a version that is slower at least :-)
04:55:11 <shapr> you could use ftp as your array backend.
04:55:35 <shapr> ok, it really is hard to make a slower version.
04:55:35 <dennisb> shapr: and that is hard to do
04:55:39 <shapr> you're right :-)
04:56:08 <Darius> You could make an APL interpreter then solve the problem.
04:56:11 <vegai> too bad that good programmers didn't catch on Doug's when it was going on
04:56:27 <Marvin--> shapr: lack of type checking? I found the major problem to be that you had to post-process the AST anyway, since it was way too unwieldy for use after desugaring some things
04:56:36 <shapr> eh?
04:56:49 <shapr> oh
04:57:12 <Marvin--> I don't know what you mean with lack of type checking
04:57:43 <shapr> I thought I read in the BNF Conv Report that the major drawback the authors saw was lack of type checking somewhere, but I can't remember.
04:58:19 <Marvin--> type checking of the parser or type checking on the parsed language?
04:58:26 <shapr> of the parser
04:58:45 <Marvin--> huh
04:58:50 <Marvin--> I don't recall
04:59:38 <shapr> I really do want full text searching of my local research papers ... sounds like a good lambdabot plugin.
05:02:01 <Darius> shapr: me too
05:02:18 <Darius> actually I'd rather have a browsing interface
05:02:31 <shapr> wiki-style?
05:02:36 <shapr> with annotations? :-)
05:02:42 <shapr> that would be extranifty
05:04:54 <Darius> I want something that rips out the titles and abstracts and categorizes on keywords and other things.
05:06:10 <shapr> if pstotext and pdftotext exist and are decent, a wiki would be one solution
05:16:14 * o3 laughs evilly
05:16:40 <o3> objc subversion is 50% complete
05:16:40 <o3> muahaha
05:25:44 <Darius> o3: I'm suprised you didn't include Apache on your list of projects using plugins; Apache has plugins with a larger codebase than it I believe.
05:27:34 <o3> Darius: good point.  i'm in the middle of redoing my website right now, so i'll add in that suggestion.  thanks
05:28:12 * Marvin-- notes on the noise level that Laura arrived :P
05:29:55 <shapr> heh
05:30:00 <shapr> yay LAC!
05:30:34 <Igloo> Afternoon all
05:30:53 <shapr> hiii Igloo!
05:31:05 <shapr> my minimal use of the ghc6 debs is positive.
05:31:14 <Igloo> Cool
05:31:28 * Igloo has just started what I hope will be the final build
05:31:35 <Marvin--> huh, BRS doesn't run on Linux
05:31:36 <Marvin--> damn
05:31:53 <vegai> time emerge ocaml, 12m5s... while compiling ghc6 =)
05:32:05 <Marvin--> it runs on AIX, HP-UX, Solaris and Windows, but not Linux... :-/
05:32:30 <Igloo> That's with no libraries though, presumably?
05:33:20 * Igloo thinks roughly speaking stage1 takes me 30 mins, libraries without splitting take 30 mins, libraries with splitting takes 1 hour and stage 2 takes 30 mins
05:33:35 <o3> Igloo: what kinda beefmachine do you have? :)
05:33:39 <shapr> yah, really
05:33:46 <Igloo> But I've no idea how long ocaml takes
05:34:10 <Igloo> "AMD Athlon(tm) XP 2200+" (1.8GHz), 1G RAM
05:34:20 <vegai> Igloo: the source sizes for ocaml and ghc are 2 436 887 and 5 250 663, respectively
05:34:29 <vegai> so yes, ghc probably has more meat as well
05:34:53 <vegai> I'm not complaining per se, just noting how nice ocaml is speedwise
05:35:19 <Igloo> Yeah, I was just looking for the reason why  :-)
05:35:33 <Igloo> Do you know how long GHC takes you?
05:36:41 <Igloo> GHC is about 50-50 libraries and compiler, the compiler getting largely compiled twice
05:36:49 <o3> Igloo: ah
05:37:07 <Igloo> o3: What do you have?
05:37:15 <vegai> I started compiling ghc about an hour ago
05:37:29 <vegai> ok, almost 2 hours ago now
05:37:32 <Igloo> vegai: What's it going now?
05:37:43 <vegai> stage2, by the looks of it
05:38:04 <vegai> with -O -fvia-c ... 
05:38:10 <Igloo> OK, about the same as the time it takes me
05:38:23 <Darius> It takes me like a day or two to build GHC (though admittedly it's thrashing for large chunks of time)
05:38:32 <vegai> whoa
05:38:49 <Darius> (with optimizations and with or without splitting though splitting is worse)
05:39:11 <Darius> no profiling
05:39:18 * shapr starts the "buy Darius a 600MHz machine" fund
05:39:25 <Igloo> :-)
05:39:31 <Darius> It's not processor it's memory.
05:39:37 <Igloo> I think a memory stick would probably be a more cost-effective way to speed it up
05:39:53 <vegai> mine is an Athlon 2000XP (~1,667MHz?) with 512MB memory
05:39:53 <shapr> Darius: you have 64mb of ram, right?
05:40:21 <Darius> yes.  The 128 doesn't seem to want to work anymore
05:40:41 <shapr> I'd recommend the badram patch for the kernel, but iirc, you're using windows
05:41:17 * shapr starts the "buy Darius 512mb of ram" fund
05:42:12 <shapr> actually, it would be nifty to have a decent colocated box for #haskell peoples.
05:42:38 <Igloo> But then you'd have 5 people building GHC in 512M RAM which wouldn't work either  :-)
05:42:54 <Marvin--> :P
05:43:22 <Igloo> An S390 port would be nice, but I don't know if it would make any difference
05:44:00 <Marvin--> I ain't touching that with a ten foot pole
05:44:10 <Darius> Hat takes an impressive amount of memory to build.  I can't even build it with optimizations.
05:44:22 <o3> Igloo: powerbook g4, 1ghz
05:44:43 <Igloo> Ah, how long does a GHC compile take on that?
05:44:44 <shapr> I don't know anyone who has access to an S390
05:44:52 <Igloo> (and Linux or OS X?)
05:45:02 <o3> Igloo: it would be interesting to see it compile on my friend's xserve, actually.  that's 2x1ghz, but with 2MB L3 cache.  his compilation times on that machine are roughly equivalent to a dual athlon 1400
05:45:02 <Igloo> shaor: You know several people, I think
05:45:21 <o3> Igloo: ~3 hours?  i don't really know.  (mac os x)
05:46:01 <o3> Igloo: i always just start a compile, do other things for a few hours (with the compile running at priority 19), then come back a while later.  so no idea, really
05:46:14 <shapr> oh, wli may have access to an s390 actually
05:46:29 <shapr> 2mb l3 cache, wow
05:46:38 <Igloo> (base)igloo@raptor:~$ uname -a
05:46:38 <Igloo> Linux raptor 2.4.19 #1 SMP Fri Nov 29 23:53:27 CET 2002 s390 unknown
05:46:38 <Igloo> (base)igloo@raptor:~$ hostname -f
05:46:38 <Igloo> raptor.debian.org
05:46:44 <shapr> w00
05:46:51 <o3> shapr: the IBM POWER4 machines have _32MB_ L2 cache, i think
05:46:56 <o3> something absolutely crazy like that
05:47:23 <shapr> awesome :-)
05:47:39 <shapr> I always wanted an alpha with the max l2 cache
05:47:49 <shapr> was it 4mb or so?
05:48:13 <o3> sorry, 32MB L3 cache
05:48:19 <o3> (oh no, it's only L3! :)
06:11:57 <Igloo> o3: What gender of person reads webmistress@cse.unsw.EDU.AU OOI?
06:14:21 <Marvin--> heh
06:16:16 <o3> Igloo: OOI?
06:16:22 <dennisb> I rewrite the array example to use IOArrays and the speed is down to C level, but still the C version is 3 times faster
06:16:28 <Igloo> Out Of Interest
06:16:46 <Marvin--> "Canadian Association for People who Stutter (CAPS)"  *giggle*
06:16:55 <dennisb> I spent the last 30 minutes trying to make it faster, but every change I make makes it slower (very strange since some should have made it faster)
06:17:21 <o3> Igloo: :)  she'd be a ... she (thankfully)
06:17:27 <dennisb> If someone else wants to play, here it is: http://www.zigo.dhs.org/~dennis/tmp/Main.hs
06:17:59 <Igloo> OK, just wondering if it was just a pun or if it would actually be changed if the person changed  :-)
06:18:13 <Smerdyakov> dennisb, it would be amazing if you reached C level with lazy evaluation.
06:18:31 <dennisb> I even tried to make more things unboxed, but it was just a lot of work with no real gain
06:18:38 <Igloo> I've been able to get about a factor of 2 off. I think IO tends to lose you a lot
06:18:43 <wli> dennisb: what are you trying to do?
06:18:45 <dennisb> Smerdyakov: well, it's not much lazy about it
06:18:49 <Igloo> (with a different problem)
06:19:12 <Igloo> I assume you're using -O?
06:19:12 <dennisb> Igloo: so the ST-arrays might be faster, or what do you say?
06:19:21 <dennisb> yes, -O2 of course
06:19:25 <Smerdyakov> dennisb, I don't know much about how the compiler you use optimizes, but _every_ expression is lazy, officially, unless you mark it otherwise somehow.
06:19:49 <Igloo> dennisb: No, I mean actual IO. the putStrLn at the end, for example
06:20:12 <Igloo> putStr (show a)\nputStr " "\nputStr (show b) might be faster
06:20:26 <Igloo> Depending on how big a is
06:21:00 <dennisb> Igloo: I see, I only tried it on very small inputs so my 3 times slower is also not very reliable. Maybe I should do real measurements before saying things like that
06:21:23 <Igloo> Oh, a is just an Integer?
06:21:40 <Darius> Hopefully you mean Int?!
06:21:55 <Igloo> sorry, yes
06:22:19 <Igloo> dec_list n end = [n, n-1..end] no?
06:22:22 <Marvin--> oh, "Collaborative Approach to Problem Solving" is what our CAPS stands for
06:23:00 <shapr> I was thinking the Haskell collaborative desktop should be called Öland
06:23:33 <dennisb> Hmm forget about the 3x, I was measuring to small examples
06:23:52 <andersca> what's it like now?
06:23:57 <dennisb> the difference is much bigger
06:24:05 <Igloo> :-)
06:24:19 <dennisb> that is a surprise, I was about to leave this, but now it became interesting again
06:24:24 <andersca> dennisb: use C instead!
06:24:24 * andersca runs
06:24:34 <Igloo> Try looking at the core. I think the most likely problem is the sequence_s not being strict
06:24:47 <dennisb> andersca: it's kind of booring to compare C to C
06:26:23 <Darius> I would use replicate then sequence as opposed to a list comprehension you have now.
06:27:15 <Marvin--> shapr: eh?
06:27:53 <shapr> Marvin--: I've been having wild dreams of a graphical collaborative Haskell development environment
06:28:03 <Darius> shapr: how long is a strand of your hair?
06:28:07 <dennisb> Darius: the inner list needs the index, but for the outer, yes
06:28:47 <Marvin--> shapr: but why "Öland"?
06:28:56 <andersca> because no man is an Ã¶land
06:29:01 <shapr> yes, exactly :-)
06:29:06 <Marvin--> huh
06:29:12 * Marvin-- is not following
06:30:25 <shapr> Darius: almost 12"
06:30:50 <shapr> Marvin--: have you heard the quote "no man is an Island" ?
06:30:52 <dennisb> Marvin--: me neither, they are probably both crazy
06:31:04 <andersca> dennisb: well you know one of us are
06:31:08 * shapr grins
06:31:44 <Marvin--> shapr: no
06:31:44 <shapr> aldrig män finns själv öland ?
06:31:54 <andersca> ingen mÃ¤nniska Ã¤r en Ã¶
06:31:58 <Marvin--> shapr: that makes even less sense
06:32:02 <Darius> I have heard that quote but Oeland didn't make me think of it at all, of course I don't speak Swedish at all.
06:32:08 <Marvin--> andersca: cut out the utf-8isms :)
06:32:11 <andersca> Darius: Ã¶land is an island
06:32:14 <andersca> Marvin--: never!
06:32:22 <Marvin--> Darius: Öland is a Swedish island
06:32:23 <andersca> we've changed to utf-8 in #swedesex now
06:32:28 <Marvin--> andersca: heh
06:32:46 <Marvin--> andersca: irc + i18n == horrible
06:33:53 <dennisb> andersca: this is not #swedesex, it's not even on the same server
06:34:04 <shapr> actually, isn't it the same server?
06:34:09 <shapr> leguin at least?
06:34:18 <andersca> shapr: gimpnet
06:34:44 <shapr> yah, but I thought leguin.freenode.net was just another ircd on the same box?
06:34:49 <shapr> maybe I'm confused.
06:34:53 <andersca> oh i dunno
06:35:09 <shapr> Marvin--: http://isu.indstate.edu/ilnprof/ENG451/ISLAND/
06:35:30 <Marvin--> shapr: way ahead of you
06:36:20 <dennisb> shapr: nice layout on that page
06:36:27 <shapr> yes, it's ... exciting.
06:36:38 <Marvin--> good god that's ugly
06:36:50 <dennisb> my eyes hurt
06:37:07 <shapr> maybe ö would be a better name?
06:37:40 <Marvin--> from an i18n perspective I'd have to say no :)
06:37:47 <shapr> sadly, I agree.
06:38:31 <andersca> ..o
06:38:39 <Marvin--> \"o
06:39:10 <andersca> yeah
06:39:12 <Marvin--> backslash-quote-o might not be quite as catchy as slash-dot though
06:41:28 * Igloo giggles at Marvin on g-h-u
06:41:36 * Marvin-- grumbles at Igloo
06:41:49 * Marvin-- waits for theraft to crash too
06:43:54 <Marvin--> Igloo: I wouldn't even have noticed that www.mdstud was down (it worked fine yesterday!) if SPJ hadn't mailed me about it
06:44:45 <Marvin--> @ Martin: the two previous servers I've had these files on seem to have. not from high load though
06:44:45 <Marvin--> @ Fredrik: Moving pr0n to theraft?
06:44:45 <Marvin--> @ Martin: haskell pr0n, yes
06:44:46 <lambdabot> Sorry, I don't know the command "", try "lambdabot: @listcommands"
06:44:46 <lambdabot> Sorry, I don't know the command "", try "lambdabot: @listcommands"
06:44:46 <lambdabot> Sorry, I don't know the command "", try "lambdabot: @listcommands"
06:44:49 <Marvin--> heh
06:45:32 <Igloo> :-)
06:45:36 <Igloo> What is theraft?
06:46:14 <Marvin--> our server
06:46:32 <Marvin--> www.strakt.com          CNAME   theraft.strakt.com
06:48:17 <Marvin--> machines here are named from Snow Crash, I'm using lagos, theraft is the main server, u-stor-it the database server, et.c.
06:48:32 <Igloo> Ah, right. Still haven't read it  :-(
06:49:11 <shapr> Marvin--: that's a great series of names.
06:49:19 <Marvin--> Igloo: it's a must for all nerds :-)
06:49:22 <shapr> Igloo: I think Snow Crash is my favorite fiction book.
06:49:40 <Igloo> It's on the list  :-)
06:49:46 <steveh> no yourstruly?
06:50:04 <steveh> or uncleenzo :)
06:50:23 <steveh> uncle-enzo should be a firewall or something
06:50:36 <Marvin--> I don't have a full list of names
06:50:55 <steveh> and yourstruly the mail server 
06:51:00 <steveh> :)
06:51:31 <shapr> rife should be the marketing server?
06:51:36 <steveh> hehe
06:51:45 <Marvin--> there's a 'rife' workstation though I don't know who's using it
06:51:51 <shapr> cool :-)
06:51:55 <steveh> clint and brandy maybe
06:52:08 <Marvin--> there's da5id and others too... and the machines on dhcp are all called ratthing-<something>
06:52:27 <shapr> it was da7id wasn't it?
06:53:01 <steveh> i think it was the 5 version
06:53:04 <shapr> oh
06:53:10 <steveh> but my GF has my copy so I can't confirm
06:53:12 <Marvin--> I'm pretty sure the geeks here wouldn't screw that up :P
06:53:18 <shapr> yah, I've loaned out my copy as well.
06:53:24 <shapr> and my copy of Diamond Age
06:53:26 <shapr> and Zodiac
06:53:29 <Darius> 189440 that's better.
06:53:38 <shapr> I've lost my copy of cobweb :-(
06:53:39 <steveh> the man can't write an ending worth a crap
06:53:53 <shapr> the rest of the book is worth it though.
06:53:59 <steveh> i have been disappointed by the big u, the diamond age, snow crash ...
06:54:03 <shapr> I want a young lady's primer very much.
06:54:04 <steveh> I suppose Zodiac worked all right
06:54:21 <steveh> and I haven't finished cryptonomicon
06:54:27 <steveh> largely because I fear his endings
06:54:27 <shapr> cryptonomicon is great.
06:54:37 <shapr> it has a good ending imho
06:54:50 <Igloo> Yay, one I've read at last  :-)
06:54:56 <shapr> Igloo: what did you think of cryptonomicon?
06:55:20 <steveh> Igloo: you gotta read Snow Crash
06:55:21 <Igloo> I thought it was good, but maybe a bit dilute
06:56:06 <Marvin--> I wonder where the dns stuff is kept
06:56:21 <shapr> host one of your IPs
06:56:54 <Marvin--> what do you mean?
06:57:20 <Marvin--> well, I know that theraft is the dns server, but I don't know anything about this so I don' know where to look
06:57:37 <shapr> oh, you want the entire domain list?
06:58:14 <Marvin--> yeah
06:59:21 <shapr> crap, nslookup has changed in the last few years.
06:59:41 <shapr> used to be you could do nslookup <enter> server theraft.strakt.com <enter> ls strakt.com
06:59:44 * Igloo stamps deprecated on shapr's forehead
06:59:54 <shapr> :-P
07:00:04 <shapr> I've not done any network exploration in years.
07:00:14 <Igloo> host -l strakt.com theraft.strakt.com
07:00:23 <andersca> ln -s haskell.org strakt.com
07:00:42 <Marvin--> Igloo: ooh, thanks
07:00:54 <Marvin--> right, there is an enzo, and zode, et.c.
07:02:09 <shapr> heheh, reason,enki,metacop,whytee,mrlee
07:02:22 <shapr> nam-shub should be your backup server.
07:04:42 <steveh> i'm sure they'll listen to Reason
07:04:48 <shapr> everyone else does.
07:05:27 <syntax-laptop> shapr: I thought the ending to crypt. wasn't too hot
07:06:06 <steveh> syntax-laptop: aah, now you're making me not want to finish it
07:06:57 <syntax-laptop> steveh: finish it :)
07:07:26 <Marvin--> http://troed.se/linuxonthewall.jpg <- LOL
07:07:48 <shapr> heh, that's cool
07:08:13 <syntax-laptop> haha
07:10:03 <syntax-laptop> is there a punchline to "how many recursions does it take to screw in a lightbulb?"?
07:10:37 <shapr> syntax-laptop: did you see the bottom-most quote?
07:11:01 <syntax-laptop> the cowgirl quote?
07:11:05 <shapr> yes
07:11:17 <syntax-laptop> yeah. I wish there _were_ a punchline, though.
07:12:01 * shapr thinks
07:12:08 <syntax-laptop> maybe a punchline could be: <blank stare> "hang on..." <blank stare>  "hang on..."
07:12:15 <syntax-laptop> like you're waiting for the recursionto terminate
07:12:15 <shapr> heh
07:12:52 <syntax-laptop> maybe there's something complex you could make up about the circular motion of screwing in a lightbulb and the circular idea of recursion
07:14:03 <cale> It takes n recursions to screw in a light bulb, one to turn the light bulb once, and n-1 to screw it in.
07:14:22 <syntax-laptop> thats pretty good!
07:14:27 <shapr> cale: yah, I like it.
07:15:27 <cale> :)
07:28:37 <cale> I find it funny (though I can understand why) that monads are considered basic, and comonads advanced, despite the fact that they are simply duals of one another.
07:28:48 <cale> (this taken from the wiki)
07:29:06 <shapr> I find it funny that arrows are considered more complicated that monads.
07:29:14 <shapr> arrows seem a lot more natural to me.
07:29:28 <Heffalump> give me a simple intuition for what comonads do
07:29:30 <vegai> I find it funny that anything is considered more complicated than monads
07:30:08 <Heffalump> shapr: explain the effects of an Arrow being an ArrowApply on what you can do with Paterson's arrow syntax
07:30:14 <Heffalump> (and why)
07:31:30 <cale> arrows are much simpler than monads.
07:31:37 <shapr> yah, arrows are just transformers
07:31:40 <shapr> one datatype in, one out.
07:32:00 <Heffalump> I won't believe you understand them until you can answer my question :-)
07:32:11 <shapr> you may be right.
07:32:12 <cale> If you pick up any introductory text on category theory, the two first definitions will be arrow and object.
07:32:16 <Heffalump> I also dispute that they are much simpler; for example, they have a much longer set of laws.
07:32:16 * shapr records that question
07:32:31 <Heffalump> cale: category theory arrows are not Haskell arrows a la John Hughes
07:33:03 <Heffalump> Haskell arrows are equivalent to some much deeper category theory (I forget what)
07:33:25 <cale> let me have another look at them
07:35:50 <Darius> Heffalump: ArrowApply means you have higher order arrows
07:36:24 <cale> Darius: as in functors?
07:36:29 <Heffalump> well, in practice it means you can simulate monads
07:36:54 <Darius> cale: no
07:37:09 <SyntaxPolice> shapr: have you come up w/ a nice simple example for using an arrow for the wiki?
07:37:10 <cale> higher order in what way?
07:37:17 <shapr> SyntaxPolice: nah, I wish.
07:37:40 <shapr> somedays I'm convinced I understand both monads and arrows, somedays I'm sure I have no clue.
07:38:10 <andersca> that's the wonder
07:38:12 <andersca> the wonder of monads
07:38:23 * shapr joins in, making a duet
07:38:27 <Darius> cale: arrow "computations" can be returned and passed (perhaps with emphasis for the same overall arrow "computation")
07:38:32 <shapr> o/~ the wonder of monads o/~
07:38:48 <Igloo> Does anyone know when /usr/lib/ghc-6.0/*.o would be used?
07:39:01 <shapr> when making binaries?
07:39:12 <shapr> oh, maybe with ghci?
07:39:17 <Darius> As opposed to usr/lib/*.o you mean? and the question being why it's putting it there?
07:39:34 <Igloo> I uses the .so and .a when compiling - ghci is a good pint
07:39:35 * Igloo tries
07:40:13 <Igloo> Yup, that's it, ta
07:41:23 <Igloo> And they can't be stripped, so I think http://people.debian.org/~igloo/ghc6-2003-06-12-01/ are effectively lintian&linda clean and ready to be uploaded!
07:41:26 <shapr> though if the sources are in the path, you won't need the .o files.
07:41:40 <Heffalump> are you going to be the ghc6 maintainer, then?
07:41:44 <Igloo> Yup
07:41:46 * shapr cheers for Igloo 
07:41:48 <Heffalump> cool.
07:42:04 <Marvin--> Igloo: yay
07:43:41 <Darius> Heffalump: You are right in that Haskell arrows aren't category theory arrows.  First I believe they are closer to arrows of a cartesian category (because they have products) and then they are "polymorphic" in that any Haskell function (with suitable type) can be lifted to an arrow.
07:45:16 <Darius> i.e. representing the poset of naturals wouldn't be doable (or at least I can't see any reasonable way, maybe with Peano naturals?)
07:46:39 <shapr> what's a poset?
07:47:49 <Smerdyakov> A set from the ghetto
07:48:02 <shapr> SPJ is too busy to be an IOHCC juror. aww.
07:48:02 <cale> A partially ordered set.
07:48:08 <shapr> unsurprising though.
07:48:13 <Marvin--> shapr: indeed
07:48:29 <wli> IOHCC heh
07:49:47 <Heffalump> judging from 1st August?
07:50:36 <shapr> that's the current plan.
07:50:48 <shapr> that depends on finding enough jurors, but I don't think that will be a problem.
07:53:22 <SyntaxPolice> Igloo: hey, I think I saw a problem w/ your debs actually, let me think a minute
07:53:40 * Igloo wonders what
07:54:15 <SyntaxPolice> OK, there may be a fix to this, but:
07:54:16 <SyntaxPolice> /usr/bin/ghc-pkg --list-packages-local
07:54:18 <SyntaxPolice> er
07:54:25 <SyntaxPolice> /usr/bin/ghc-pkg --list-packages
07:54:26 <SyntaxPolice> option `--list-packages' is ambiguous; could be one of:
07:54:39 <SyntaxPolice> which is a problem that I think they fixed maybe in cvs or something, but it breaks hmake
07:55:38 <Igloo> Ah, I'll make the change they made to CVS to fix that
07:55:47 <Igloo> I'm not sure why it happened, though
07:55:54 <Igloo> Which debs are you talking about?
07:56:12 <SyntaxPolice> ghc6 deb? sorry if thats not what you were talking about
07:56:23 <Igloo> ghc6-2003-06-12-01/ or ghc6-2003-06-11-01/ though?
07:57:53 <SyntaxPolice> probably 6-11 since I installed it yesterday
07:58:00 * SyntaxPolice tries the new one
07:58:00 <Igloo> Right, OK, that makes sense
08:02:44 <Marvin--> well, I'm offf
08:02:51 <Igloo> See ya
08:02:55 <SyntaxPolice> Igloo: OK that looks good, I'm recompiling my biggest program now :)
08:03:07 <SyntaxPolice> Igloo: did I mention that you totally rule?
08:03:14 * shapr agrees
08:03:58 <Igloo> :-)
08:06:21 <kosmikus> the problem with the option name "--list-packages-..." was that Sven Panne said it's a bug in the GetOpts lib that has been fixed in the meantime, but ghc-pkg is only compiled once, therefore, if the bootstrapping compiler does not yet have the fix in its libraries, the resulting ghc-pkg will fail
08:07:59 <Igloo> I know - I was the one who pointed it out on the cvs list  :-)
08:08:07 <Igloo> I'd just forgotten the fix wasn't in 6.0
08:09:04 <SyntaxPolice> Igloo: OK, I take it back. this deb looks good :)
08:10:19 <Igloo> Syn: Only because it was compiled with GHC 6. I'm recompiling with the -local option renamed so it can be built with anything and still work.
08:10:27 <cale> Darius: oh, I wouldn't suspect that arrows are unqualified category theoretic arrows, but I would argue that they were the arrows in some category. (sorry, I was away) Though, I'd like a more thorough description of what these higher order arrows are.
08:11:50 <Smerdyakov> They're things that go beep.
08:11:53 <Smerdyakov> Next question?
08:12:38 <cale> Smerdyakov: your clear and concise explanations know no bound.
08:13:15 <Darius> cale: basically exponents
08:13:29 <cale> okay
08:31:53 * shapr mucks around with Arrows
08:32:54 <Darius> Perhaps the correct answer is simply class Arrow represents all the arrows in a categories whose objects are Haskell values.
08:33:36 <cale> Darius: that's what I'd thought.
08:34:26 <Heffalump> I doubt that.
08:34:47 <cale> hmm...
08:35:00 <hdaume> hi shae?
08:35:12 <cale> All the arrows in a category where the objects are haskell types?
08:36:02 <Darius> that's what was thinking (not what I said)
08:36:21 <shapr> doh, I missed :-)
08:36:24 <cale> Yeah, that's what I read.
08:36:24 <shapr> hi hal!
08:36:34 <shapr> I'm being distracted by Arrows
08:36:38 <cale> So it didn't matter that you said it wrong :)
08:36:51 <shapr> doing the Yampa exercises
08:36:54 * Heffalump doesn't think that's true either.
08:37:05 <cale> Heffalump: the computable arrows?
08:39:39 <Heffalump> I'll be more convinced by any definition you give if you can explain how the arrow laws fit into said definition :-)
08:39:43 <shapr> what are the names of these guys like &&& and *** ?
08:42:18 <SyntaxPolice> shapr: does lambdabot interact w/ the wiki at all? One kinda nice thing would be if I said "@hawiki TemplateHaskell" (or something) it would output the URL for that wiki page.
08:42:43 <shapr> good idea
08:42:51 <Darius> Not yet, but shapr has been wanting to do something along those lines.
08:43:13 <shapr> outputting the url would be easy enough, just tack on the beginning part
08:43:25 <shapr> I'd like to see more integration though
08:43:27 <shapr> dunno what exactly
08:43:53 <shapr> twice daily RecentChanges notifications? (if there are changes)
08:44:41 <Darius> Heffalump: splitting first/&&&/***/etc. into class ArrowPair leaving arr and >>> in Arrow, arr == id, >>> = ; and need to satisfy the normal arrow laws (associativity and left/right unit)
08:45:14 <Heffalump> "id"?
08:45:32 <Darius> idA : A -> A
08:45:42 <Heffalump> that sounds to me like you're showing how an instance of the Arrow class is something that you describe, not how *all* instances are the thing you describe
08:46:32 <Darius> all instances aren't, but neither are all instances of class Monad monads.  If they don't satisfy these laws then they aren't arrows and bad things will happen.
08:47:01 <Heffalump> sorry, IM all instances that do satisfy those laws
08:47:18 <Heffalump> you appear to have explained how the trivial instance (for pure functions) does
08:47:36 <Darius> I mean id as in categorical id not functional id
08:47:37 <SyntaxPolice> shapr: yeah. probably any integration whatsoever would suggest new ideas.
08:47:59 <shapr> SyntaxPolice: I'll whip up something.
08:48:07 <Heffalump> which does what, in this context? My category theory is rather rusty, and I never knew that much to begin with.
08:48:35 <SyntaxPolice> woohoo!
08:48:47 <Darius> actually arr doesn't == id that doesn't make sense
08:49:28 <cale> id is an arrow on each object such that id . f = f and f . id = f for all f.
08:50:16 <shapr> aha, I think I've solved the Yampa exercises.
08:50:22 <cale> I could make that clearer, but you probably get what I mean.
08:50:35 <Heffalump> yeah.
08:51:05 <Heffalump> so yeah, it doesn't make sense, cos the result type needs to be an arrow itself :-)
08:51:36 <cale> well, the result is an arrow, the problem is the domain
08:52:09 <cale> no wait, am I being silly?
08:52:12 <Heffalump> id foo is an object, not an arrow
08:52:19 <Heffalump> you might want to define arr = (id.)
08:52:19 <shapr> loop is for an arrow that needs to "iterateUntil" right?
08:52:19 <cale> yeah
08:52:38 <Heffalump> shapr: isn't loop the operator for ArrowFix?
08:52:39 <Heffalump> (ICBW)
08:53:00 <Heffalump> cale: but then I still claim you're just defining the trivial instance of the Arrow class, and nothing else.
08:53:01 * shapr isn't sure
08:53:35 <cale> arr seems to simply lift haskell functions to the arrows that represent them.
08:53:55 <shapr> ah, yes, that's what loop is for.
08:54:06 <Darius> cale: yes
08:54:11 <shapr> though I dunno how you'd use it.
08:54:15 <Heffalump> correct, but there can be other ways of constructing arrows too.
08:54:27 <Heffalump> and any specific arrow instance will probably provide some
08:55:12 <cale> Can you provide an example of one that is not a lifted haskell function?
08:55:45 <shapr> the stateful signal functions in Yampa claim to be such I think
08:55:53 * cale runs to see if there's coffee, potentially making some.
08:58:01 * cale is back
08:58:02 <Darius> arr id is like the categorical id
08:58:15 <Darius> (it's returnA if I remember correctly)
08:58:17 <Heffalump> yes, the State arrow is the simplest example.
08:59:54 <shapr> "Stateful signal functions cannot be de ned using arr, which only lifts pure functions to the level of arrows. Stateful functions must either be pre-de ned or be de ned in terms of other stateful signal functions"
09:00:13 <shapr> that's from the Yampa PDF
09:00:42 <cale> can you get me a url?
09:01:21 <shapr> http://haskell.cs.yale.edu/yampa/AFPLectureNotes.pdf
09:01:23 <shapr> I think that's it.
09:01:55 <Darius> having primitive arrows isn't a problem
09:03:31 <Darius> every other arrow class can be looked at as adding primitive arrows
09:06:28 <cale> shapr: I think I've seen this paper before, though I don't recall anything about state, which page should it be on?
09:06:35 <Darius> Hmm, perhaps the (abridged) Arrow class can be for representing arrows that are an extension (possibly an empty one) of the free category generated by composing Haskell types.
09:06:39 <shapr> page 9
09:06:42 <shapr> in the PDF I have
09:06:49 <shapr> cale: is that the first Yampa paper?
09:07:10 <cale> This is "Arrows, Robots, and Functional Programming"
09:07:28 <shapr> "Arrows, Robots, and Functional Reactive Programming"
09:07:32 <cale> ah, I see the bit now.
09:07:39 <shapr> Hudak, Courtney, Nilsson, Peterson
09:07:44 <cale> yes, reactive.
09:07:57 <cale> The quote is there, anyway - I'll have a look.
09:08:55 <shapr> hi tims
09:09:19 <tims> hi!
09:09:39 <shapr> how's code?
09:10:02 <shapr> Have any Haskell questions?
09:10:37 <tims> No.  I have been (lurked) on this channel a couple of times and you have always been very helpful.
09:11:26 <shapr> Just wondering if you'd come up with some questions since the last time I asked :-)
09:11:40 * andersca bounces!!
09:11:41 <tims> Are you the channel op?
09:11:51 <Darius> no, that's not right.  Seemingly all pure Haskell functions are liftable, so the arrow can only extend it by functionality that "pure" Haskell functions can't "support."
09:12:10 <shapr> tims: sort of... though I prefer the term "organizer" :-)
09:12:37 <tims> shapr: Cool.
09:12:53 <cale> Darius: I'm unsure of what you mean with all the quoting going on. :)
09:13:25 <shapr> tims: have you checked out the Learning Haskell page in the channel topic?
09:15:11 <Darius> Yeah, the quoting was important.
09:15:57 <shapr> the integral arrow supports functionality a pure function can't support
09:16:00 <Darius> Obviously, there is no functionality an arrow can add that you can't just code in Haskell anyways, so you can always lift a normal Haskell computation to get what you want.
09:16:15 <shapr> actually, an arrow like the lambdabot @state plugin would be the simplest example of such, I think.
09:16:48 <Darius> The "pure" Haskell code is code that doesn't deal with any of the details you are hiding, not that it couldn't be written without the arrow, you are just purposely limiting yourself.
09:17:33 <Igloo> Oh, bootstrapping from GHC 4 will now be impossible
09:17:36 <cale> Oh, so it's basically just a way to get the functionality without having to figure out what to lift.
09:18:04 * Igloo makes a mental note to look at the best way to get GHC to a new architecture ASAP
09:18:54 <shapr> how could you lift a "f :: a -> b " to an arrow that outputs (b,b) with one value being this return value, and the other bein the former return value?
09:19:17 <shapr> Igloo: why is ghc4 bootstrap impossible?
09:19:56 <Igloo> Because it doesn't have the libraries to compile some stuff Simon M's just checked in
09:20:22 <shapr> oh
09:21:28 <shapr> actually, the "buy Darius a non-WinModem" fund would be popular with me.
09:21:44 <Igloo> :-)
09:23:16 <shapr> Igloo: have you read Ender's Game?
09:23:30 <Igloo> Is that a book?
09:23:33 <shapr> yes
09:23:48 <Igloo> No - should I add it to the list?
09:23:54 <shapr> I think so
09:24:19 <shapr> yesterday I realized our RTS idea is related to some stuff in the book
09:29:44 <Igloo> OK, I now have in no particular order "_Diaspora_ by Greg Egan", "_A Fire Upon The Deep_ by Vernor Vinge", "Godel, Escher, Bach", "Snowcrash", "Ender's Game". I *think* that's it.
09:30:00 <Darius> Ender's Game was good (along with the rest)
09:30:19 * Darius still has Heinlein as his favorite author though.
09:30:21 <Heffalump> yes, you should read it
09:30:27 <Heffalump> you can borrow it from me if you want
09:30:34 <Heffalump> Heinlein has some good stuff, but he gets a bit tedious
09:31:31 <cale> GEBEGB is my personal favourite.
09:32:46 <cale> I also really liked 1984, which is a completely different book.
09:32:47 <Heffalump> getting back to the arrows conversation, I believe other primitive arrows are likely not to be "proper" arrows, given that they can do things like store state
09:33:32 <cale> hmm... but things like integral would be arrows in the category of haskell types.
09:34:21 <Igloo> Heff: Which?
09:34:26 <Heffalump> there may be no functionality an arrow can provide that can't be provided in pure Haskell, but only if you change what the objects are
09:34:44 <Heffalump> igloo: Ender's Game
09:35:01 <cale> Hmm...
09:35:23 <Igloo> Would returning Cryptonomicon tonight be inconvenient for you incidentally?
09:35:24 <cale> Heffalump: what would you propose?
09:35:37 <Darius> How does storing state make them improper?
09:35:42 <Heffalump> and anyway that's not entirely true, since there might be a primitive implementation that still satisfied the arrow laws
09:36:06 <Heffalump> darius: errm, well it makes them non-pure
09:36:13 <Darius> So?
09:36:48 <Darius> I was originally trying to think of how to define arr in terms of arr id and >>>, hence justifying it as simply a more reasonable thing to define
09:36:59 <Heffalump> are arrows in categories not implicitly pure things?
09:37:09 <Heffalump> if you have state etc you need to model it explicitly
09:37:42 <Heffalump> oh right, I thought you were trying to find an equivalent categorical structure to the Arrow class
09:38:42 <Darius> I don't think that that is possible, however, I do think it's possible to do it in the "full" class Arrow with pairs too.
09:39:09 <cale> hm...
09:39:35 * Heffalump doubts that it is possible at all.
09:39:56 <cale> I'd be pretty surprised if there wasn't a category theoretic description of Arrow.
09:41:10 <cale> (or is that not what we're looking for)
09:41:29 <Heffalump> I'm fairly sure there is one, because John Hughes said there was. I just can't remember what it is :-)
09:41:52 <cale> We could probably derive it from the list of laws.
09:42:08 <Heffalump> >> Workers in denotational semantics have independently
09:42:08 <Heffalump> >> defined equivalent structures, called
09:42:08 <Heffalump> >> Freyd-categories or (more generally) premonoidal
09:42:08 <Heffalump> >> notions of computation.
09:42:16 <Heffalump> or just look it up (http://www.haskell.org/arrows/what.html)
09:43:20 <cale> I find it highly unusual that one would call something so closely tied to category theory an "arrow", when it wasn't one.
09:44:23 <Heffalump> blame John :-)
09:44:51 <Heffalump> monads tend to have a bad reputation partly because of their name (see SPJ's "wearing the hair shirt" talk)
09:45:57 <cale> pfft. I don't understand this whole "I'm scared of the name" business. After all, even more popular languages have their jargon, especially the OO stuff.
09:46:17 <Heffalump> and look how long OO took to get accepted
09:47:53 <shapr> Darius: cool, Heinlein is my favorite author also.
09:48:03 <shapr> Igloo: you should add True Names by Vernor Vinge
09:48:42 <cale> Yampa has to work in the Yoneda functor somehow. :)
09:49:32 <cale> just for the sake of names
09:49:58 <Heffalump> :-)
09:51:02 <shapr> I think John has it right. Market-speak really does have an effect.
09:52:24 <cale> Well, I guess I don't care so much whether we have market-speak or not, it's just I wish that market-speak didn't clash horribly with traditional-speak.
09:52:43 <syntax-laptop> shapr: Just FYI: you mentioned that you were going to move the numeric-quest stuff to haskell-libs... there's a thread on haskell-cafe about the out-of-dateness of haskell.org that mentions correcting the page to point to the internet archive instead of numeric-quest.
09:54:12 <steveh> numeric-quest?
09:55:04 <steveh> and re: monad names, I read "Discourse on Metaphysics and the Monadology" a couple years ago and people _should_ be scared of the name :)
09:55:25 <steveh> after all
09:55:56 <steveh> it is not in the object represented that the Monads are limited, but in the modifications of their knowledge of the object
09:55:58 <Darius> I'm back to the drawing board. Except for arr, the rest seems to more or less fall into place.  My current theory is that arr simply let's you "import" pure (as in not using the arrow functionality) without having to pipe it to everyplace that needs it, like how all the top-level definitions are (implicitly) tupled together in a big Y combinator.
09:56:12 <syntax-laptop> steveh: don't know the historical detials, but there was a web site numeric-quest.com where a lot of haskell libraries were hosted, and it went away.
09:56:29 <shapr> yah
09:56:57 <steveh> no percentage in hosting haskell libraries?
09:56:58 <steveh> :-/
09:57:51 <shapr> well, I thought the libraries weren't licensed
09:57:59 <Darius> And the GHCziErr bug reports keep coming...
09:58:13 <shapr> I got an email a few days ago saying "the license is on the last line or two of each file"
09:58:41 <Heffalump> darius: I'm sure arr is necessary to be able to do useful things.
09:58:52 <Heffalump> as in I don't think it can be simulated
09:59:09 <steveh> I like this one: It is evident from this that if we were to have nothing distinctive, or so to speak prominent, and of a higher flavor in our perceptions, we should be in a continual state of stupor. This is the condition of Monads which are wholly bare.
09:59:56 <cale> steveh: so what is a comonad in this context?
10:00:24 <steveh> cale: :)
10:00:45 <steveh> there are no comonads
10:00:56 <cale> Oh, and here's one for everybody: A comathematician is a machine for turning theorems into coffee.
10:01:00 <Heffalump> lol
10:01:02 <steveh> Monads are the true Atoms of nature, and, in fact, the Elements of things.
10:01:02 <shapr> it's the borg, someone who's codependenant on your distinctiveness, and will now add it to their own.
10:01:09 <Heffalump> cale: did you provide a simple intuition for what a comonad is, btw?
10:01:20 <steveh> cale: I like that one :)
10:02:12 <steveh> I always like reading Philosophy of the Enlightenment, since even in Translation there are Random Capitalizations which bring me good Cheer & feelings.
10:02:58 <cale> Heffalump: I have a good idea, but I've been thinking of a good way to express it.
10:07:54 <cale> Monads naturally represent state, whereas comonads naturally represent context. With a monad, you "push" state effects into your environment, whereas with a comonad, you "pull" contextual data out of the environment.
10:08:37 <Heffalump> but with a monad you view the state, too
10:09:05 <cale> Sure, and with a comonad, that pulling can embody side effects.
10:09:14 <tims> Has anyone come across a good book/article that presents an Analysis & Design methodology for FP?  I'm especially interested in the handling of "state" in a FP application.
10:09:40 <Heffalump> so what are the operations in class CoMonad?
10:10:06 <shapr> tims: I'd suggest you read Hudak's "School of Expression"
10:10:22 <shapr> state in FP is handled by explicit or implicit passing of that state.
10:10:24 <tims> Great.  That name sounds familiar
10:10:28 <cale> For example, we have putChar :: Char -> IO (), whereas we might have coPutChar :: OI Char -> ()
10:10:31 <Darius> extr(act) :: w a -> a (dual to return) and dupl(icate) :: w a -> w (w a) (dual to join)
10:11:02 <Heffalump> right, I sort of see
10:11:02 <cale> oh, yes - that's probably what you were looking for
10:11:20 <Heffalump> oh, there was a thread about this on the Haskell list a while back, wasn't there?
10:11:32 <cale> So it's basically the same thing, you're just looking at everything in a mirror.
10:12:07 <tims> shapr: I thought that passing of the state might be the way that state is handled.  I just thought that there might be multiple copies of that state and thus multiple "realities" (with the posibility that none of them are correct).
10:12:23 <Igloo> Ta, shapr
10:12:34 <tims> ERC > shapr: I'll check out that reference.  Thanks!
10:12:47 <Darius> I think cale statement earlier (or maybe a corruption thereof) that arr lifts all "pure mod arrow" code into arrow primitives is the most sensible outlook.
10:12:51 <Heffalump> tims: that's possible, but if you use a monad to encapsulate things it's unlikely that this could happen by accident
10:13:58 <Darius> tims: if there is no support for getting the state then there should be -no- way that could happen.
10:14:26 <tims> Heffalump: I read the martial arts belt color codes on the Wiki.  I'm still trying to grasp Monads.
10:14:57 <Heffalump> tims: they're best grasped in terms of passing state.
10:15:25 <Heffalump> suppose you make all your functions take an extra state parameter, and return a tuple of their real result and the new tuple
10:15:36 <Igloo> Right, definitelyreallyfinal debs built  :-)
10:15:40 <SyntaxPolice> so what belt should we give to tims? ;)
10:16:00 <tims> Darius,Heffalump,shapr: Thanks for helping me through this paradigm shifting process.
10:16:20 <tims> I need a seat belt to prevent mental whiplash.
10:16:25 <Heffalump> tims: the Monad class defines two operations (ignoring "fail" for now)
10:16:37 <Heffalump> the operation return "lifts" a value into the monad
10:16:45 <cale> I'm now starting to wonder when other category theoretic stuff is going to get popular in functional programming :)
10:17:01 <Heffalump> in other words, given a value, it makes the function that takes in some state, and returns the tuple of the state and the value
10:17:07 <Heffalump> (for the state monad)
10:17:12 <Darius> cale: other such as?
10:17:43 <cale> perhaps pushouts and pullbacks, if they don't already occur somewhere sneaky.
10:18:40 <tims> Heffalump: Okay that makes sense.   Kind of like a parsing function that reads in some tokens and retuns an AST and the remaining unparsed tokens.
10:18:55 <Heffalump> tims: indeed
10:19:02 <Heffalump> a parser is another example of a monad :-)
10:19:05 <cale> The funny thing is that they're just patterns, so you don't really know where they'll show up. Seems like the module system might be the first place to watch with those.
10:19:24 <Heffalump> tims: anyway, the second, and most important operation, is "bind" or ">>="
10:20:05 <Heffalump> essentially it takes two functions that change the state, and passes the output state of one as the input state to the next
10:20:23 <Heffalump> so if you get the definition of that right, and then write all your code using that (which is possible), you can't possibly accidentally duplicate state
10:20:57 <tims> Wow!  That's the clearest description of Monads I've heard.  Thanks.
10:21:48 <cale> http://citeseer.nj.nec.com/peytonjones00tackling.html - you might want to check out this paper, it has a nice desciption and some useful diagrams.
10:21:53 <Heffalump> well, I did simplify somewhat :-)
10:22:12 <Darius> yeah, and there is a lot more to monads than state
10:22:18 <Heffalump> in particular, a lot of other things support those two operations and thus are monads too, it's just that state is the easiest way to introduce them
10:23:41 <cale> I think that "Maybe" might be the simplest example of a monad, but it's almost too simple to glean any of the general pattern from.
10:24:30 <tims> My mind has been sufficiently blown/expanded for now.  I've got lots of reading to do.  Thanks all!
10:24:36 <Heffalump> the simplest example is the pure monad :-)
10:24:49 <Heffalump> Maybe is a good way of introducing exceptions
10:25:00 <Heffalump> [] is a good way of introducing non-determinism
10:25:02 <cale> :)
10:25:30 <hdaume> except [] isn't really a monad :)
10:26:23 <Darius> hdaume?
10:26:30 <hdaume> it's not associative, right?
10:26:52 <hdaume> you really want 'Set' to be the monad, but [] is as close as we can get
10:26:59 <Heffalump> you have to relax your definition of equality, yes
10:27:02 <Heffalump> YM "Bag"
10:27:18 <hdaume> yeah
10:27:23 <Darius> hdaume, uh you can get as close as Set.
10:27:46 <Heffalump> you can't make Set be an instance of Monad in Haskell
10:27:57 <hdaume> right
10:28:09 <Heffalump> because you can't give context to monadic constructors, and making Set a requires Eq a
10:28:32 <Heffalump> (of course, you can cheat)
10:30:35 <Darius> Would making Set, newtype Set a = Set (a -> a -> Bool) [a] work?
10:31:56 <Heffalump> no, because you can't define return
10:31:56 <hdaume> Darius: you can't write >>= for that
10:32:01 <hdaume> or return :)
10:32:07 <Heffalump> hdaume: yes you can, you just pick one of the equality functions
10:32:15 <hdaume> yeah, i meant return :)
10:32:18 <Heffalump> also, that's not a valid use of the newtype syntax, but that's a minor niggle :-)
10:37:42 <Darius> well I can think of more twisted was to do it that may work combining Reader and the Set
10:38:52 <Heffalump> I'm convinced you can't do it.
10:38:59 <Heffalump> because you'll never be able to define return
10:39:08 <Darius> yeah the type would be too specific for return
10:39:18 <Darius> (of course, none of this keeps you from defining a monad, it simply keeps you from making it an instance of Monad).
10:39:20 <hdaume> i doubt it...i belive you provably can't do it: suppose the person says 'return id'.  you're going to need to somehow get an equality function on the type 'a -> a' from somewhere.  this either has to come from a dictionary (but it cannot because you can't have contexts) or a passed argument (also cannot)
10:40:08 <Heffalump> well, equality on a -> a is easy :-)
10:40:16 <Heffalump> but equality on Int -> Int is hard.
10:40:22 <hdaume> Darius: certainly you could define your own 'returnSet' and 'bindSet' functions which take the necessary dictionaries, but then you don't get overloading or do notation
10:40:32 <hdaume> Heffalump: not really.  id /= const undefined
10:40:41 <hdaume> or rather '(const undefined :: a -> a)'
10:40:42 <Heffalump> oh, true
10:40:55 <hdaume> stupid bottom :)
10:40:56 <Heffalump> just use seq to distinguish them :-)
10:40:59 <hdaume> haha
10:41:02 <shapr> Heffalump: you could do it if you could compare the supercombinators that make up a function
10:41:22 <Darius> Couldn't you hack Int -> Int, it's Integer -> Integer that's the issue (Int -> Int would just take a very long time)
10:41:30 <Heffalump> darius: point
10:41:55 <hdaume> true :)
10:42:12 <Heffalump> shapr: yes, if you have access to the syntactic definition you can do it
10:42:16 <hdaume> so i suppose you could write 'instance (Bounded a, Eq b) => Eq (a -> b)'
10:42:27 <Heffalump> Enum a, surely
10:42:32 <hdaume> ah, true
10:42:44 <shapr> would it be possible to expose the combinators that make up a function in Haskell?
10:42:51 <shapr> for example, in GHC?
10:42:52 * hdaume is off for a bit
10:42:53 <Heffalump> shapr: no.
10:43:05 <shapr> why not?
10:43:19 <Heffalump> actually, /me qualifies that
10:43:48 <shapr> forall Heffalump...
10:43:51 <Heffalump> not efficiently :-)
10:43:56 <Heffalump> right, got to go
10:43:58 * Heffalump disappears
10:44:01 <shapr> well, efficiency aside
10:50:05 * Darius looks at the arrow laws again and immediately notices that arr is a functor, but then immediately reads Hughes say that in the next sentence.
10:52:07 <shapr> :-)
10:57:05 <shapr> Darius: actually, an arrowized Conway's game of life might be a good precursor to RTS
10:57:10 <shapr> what do you think?
10:58:28 <Darius> an AFRP one you mean?
10:58:32 <shapr> yah
11:01:44 <shapr> I think that would be a good test for the rpSwitch combinator
11:02:43 <shapr> assuming the whole Yampa system is a good way to go, which seems right to me.
11:03:24 <Darius> It would be a relatively limited test as the behavior is completely synchronous and never changes, as well as it would be a horribly inefficient way of doing it (at least comparatively)
11:04:38 <shapr> it would include the features of separate 'units' though they don't move, and a terrain grid, no matter how boring.
11:05:53 <shapr> a StarLogo implementation would be much cooler.
11:07:35 <shapr> actually, that's a much better idea.
11:08:51 * Riastradh bounces very enthusiastically.
11:08:56 <Riastradh> shapr - No word on t-shirts.
11:08:59 * Riastradh has been bouncy all day.
11:09:36 <shapr> Riastradh: I think I'll give in and purchase some anyway.
11:29:04 <Riastradh> Hi.
11:29:31 <Marvin--> evening
11:29:39 * Marvin-- grumbles
11:29:45 <Marvin--> I so don't stand a chance in the tournament on saturday
11:47:39 <Marvin--> apparently we're releasing CAPScase 1.2.1 on monday (so we're going to celebrate with some CAPSbeer)
11:57:09 * shapr boings
12:00:51 * andersca gabooms
12:00:54 * andersca is EXCITED!
12:01:00 <shapr> andersca: what's up?
12:01:09 <andersca> shapr: guadec! going to ireland tomorrow
12:01:14 <shapr> yay!
12:06:51 <Marvin--> PigeonRank(TM)  haha
12:08:37 <shapr> ?
12:09:12 <Marvin--> http://www.google.com/technology/pigeonrank.html
12:15:05 <Marvin--> "I'm Feeling Lucky?" siiigh
12:15:17 * shapr coos
12:17:09 <Marvin--> they have a decently-sized cluster, google
12:27:03 <Marvin--> still can't get War3 to work in WineX
12:27:14 <shapr> what happens?
12:27:21 <Marvin--> nothing
12:27:27 <shapr> have you read the war3 faq page on transgaming.com?
12:27:30 <Marvin--> I get lots of  fixme:msvcrt:__CxxFrameHandler (0x40642574,0x408519d0,0x40642210,0x406421a0):stub?
12:27:33 <Marvin--> no
12:27:46 <Marvin--> will I be able to view it without a subscription?
12:27:56 <shapr> yes
12:28:05 <shapr> what window manager are you using?
12:28:31 <Marvin--> windowmaker
12:28:51 <Marvin--> I mean, I can't even get the installer running
12:29:11 <shapr> have you tried running X with only an xterm, or with twm, and then trying it?
12:29:43 <shapr> have you created a directory for your C drive, and Windows and Windows/System directories in there?
12:29:53 <shapr> oh, of course you have.. you installed war2
12:30:23 <Marvin--> hrrm... wait a sec... my c: is ntfs
12:30:57 <Marvin--> and no I haven't tried to run X with only an xterm, kinda defeats the purpose of not having any hassle
12:31:35 <shapr> if it's a system config issue, you can find/fix it that way, and then run it with no hassle
12:32:03 <Marvin--> still a major "ugh"
12:32:23 * shapr shrugs
12:32:27 <shapr> it's worth it to me.
12:32:32 <shapr> windows sucks ass.
12:32:44 <shapr> imnsho
12:33:16 <Marvin--> http://193.11.232.159:8080/wine.war3.log
12:34:58 <shapr> Marvin--: create a dir in your home dir for the wine C: drive
12:35:01 <shapr> try installing it there.
12:37:39 <Marvin--> what should the Type and Filesystem be?
12:38:05 <shapr> um
12:38:16 <shapr> I dunno?
12:38:36 <cale> Marvin--: you have mathematica
12:38:52 <shapr> oh,
12:39:00 <shapr> [Drive C]
12:39:00 <shapr> "Path" = "/home/shae/winedrives/cdrive"
12:39:00 <shapr> "Type" = "hd"
12:39:00 <shapr> "Label" = "MS-DOS"
12:39:00 <shapr> "Filesystem" = "win95"
12:39:01 <Marvin--> cale: I do?
12:39:13 <cale> well, at least you have the mathematica fonts
12:39:23 <Marvin--> shapr: and 'cdrive' is a directory?
12:39:24 <cale> :)
12:39:28 <shapr> Marvin--: yup
12:39:41 <Marvin--> cale: might be from when I tried to get MathML to work
12:39:44 <keverets> for a second I thought he was speaking in the second person.
12:40:05 <cale> ah, possibly
12:40:08 <shapr> want me to stick my winex config online?
12:42:20 <Marvin--> seeing as I can't get the installer to start
12:43:12 <Marvin--> hmm, now how do I get another X server started on another tty
12:43:24 <shapr> ?
12:43:43 <cale> wine performs terribly for me. I couldn't even get starcraft to run decently. Probably some strange configuration issue.
12:43:58 <shapr> it works just fine for me
12:44:05 <shapr> counterstrike was gorgeous
12:44:30 <shapr> happily, wine is multithreaded, so I got to run counterstrike with both CPUs =)
12:44:45 <keverets> I setup gdm to start another X server (and respawn as appropriate)
12:45:39 <Marvin--> I just want an xterm, hmm
12:45:54 <Marvin--> I don't know anything about X (which may or may not be good .)
12:47:39 <keverets> Ah, just do a "X :1"
12:47:53 <keverets> then "DISPLAY=:1 xterm &"
12:48:06 <keverets> (from another vt or your other X server)
12:48:35 <Marvin--> ah, smart
12:49:07 <keverets> make that "DISPLAY=:1 x-terminal-emulator &" for a debian system.
12:50:44 <Marvin--> I asked for xterm :)
12:51:12 <Marvin--> well, that didn't work any better
12:51:14 <Igloo> Evening
12:51:27 <keverets> Afternoon
12:51:49 * Igloo giggles as the MS GHC autobuild fails because it uses GHC 4
12:52:28 <shapr> afternoon
12:52:31 <shapr> morning
12:52:39 <shapr> good $TIMEOFDAY to you.
12:52:46 <Marvin--> uhm, I wonder why I don't have any wine/debugger directory
12:53:23 <shapr> http://kungens.kemi.fi/~shae/config
12:53:25 <Marvin--> or rather, why wine looks in that directory
12:57:17 <Marvin--> this is annoying
12:57:23 <shapr> ?
12:57:30 <shapr> I started out using wine and wineconfig
12:57:36 <shapr> that's where I got my config.
12:57:49 <shapr> er, winesetuptk
13:00:46 <Marvin--> I don't see how the config can be at great fault since SC works fine...
13:01:01 <shapr> that's a good point.
13:01:02 <shapr> I don't know.
13:01:09 <shapr> I'll try installing war3 tomorrow.
13:01:14 <shapr> maybe I can come up with something.
13:01:25 <shapr> Marvin--: if you get desperate, you could try #winex
13:01:34 <Marvin--> shapr: I don't think I'm that desperate
13:01:37 <shapr> ok
13:01:40 <shapr> helpful guys there though
13:01:45 <Marvin--> really?
13:01:45 <Marvin--> cool
13:01:52 <Marvin--> then maybe I am that desperae
13:02:00 <shapr> some of the Linux HalfLife guys for example
13:09:44 <shapr> hrm, I've just realized the Yampa stuff currently doesn't allow anything other than unaltered redistribution
13:10:01 * shapr asks for BSD/lGPL on the Yampa list
13:12:22 * Igloo bounces
13:12:48 <Marvin--> #winex seems kinda slow right now
13:13:10 <shapr> yah, it does
13:13:15 <shapr> hi Igloo!
13:13:30 <shapr> hah, finally I've stumped the CDDB server on earth.li
13:13:44 <shapr> It must not be used to country music.
13:13:49 <Marvin--> eeww
13:13:51 <Igloo> urchin.earth.li?
13:13:52 <shapr> not that I am :-)
13:14:14 <Marvin--> shapr: phew
13:14:33 <shapr> Igloo: sites.urchin.earth.li
13:14:35 * Igloo didn't know that was widely used, especially outside of the UK
13:14:39 <Igloo> Right
13:14:49 <shapr> it's uk.freedb.org, which is the closest freedb mirror to me.
13:14:52 * Marvin-- is reminded of a comment from the Blues Brothers movie
13:15:04 <Igloo> Ah, OK, slightly surprising
13:15:04 <Marvin--> "Oh, we've got both kinds, Country *and* Western"
13:16:09 <shapr> actually, I should try to run all the Yampa stuff with ghc6 beforehand, so I can report any errors.
13:20:11 <shapr> fptools is large
13:20:15 <shapr> the build system, that is
13:20:20 <Marvin--> the fun thing about the Blues Brothers movie is seeing the real artists :) like Ray Charles :)
13:20:50 <shapr> have you seen Blue Brothers 2000 ?
13:20:58 <Marvin--> no
13:21:04 <Marvin--> it probably sucks
13:21:11 <shapr> it's awesome
13:21:17 <shapr> we have it on DVD
13:21:31 <Marvin--> hmm, maybe I should give it a shot
13:21:36 <Marvin--> it was on TV some time ago, but I forgot it
13:22:18 <Marvin--> don't remember what channel, if it was channel 3, it's bound to reappear soon :)
13:23:16 * shapr happily remove ghc-5.05 from his system
13:25:01 <Marvin--> I think I'll have it stick around
13:25:44 * Marvin-- laughs at the "special effects" of Jeanne de'Arc
13:25:57 <Marvin--> poor guy who gets hit with the same big rock repeatedly and flies into the same pile of sand
13:29:50 <steveh> factoid: her name was Jeanne Darc, not Jeanne D'Arc
13:29:51 <steveh> :)
13:30:29 <Marvin--> I don't really care
13:30:40 <Marvin--> the movie is still bad
13:30:50 <steveh> well naturally, everyone thinks she's "joan of arc"
13:30:55 <steveh> but she's not!
13:30:58 <steveh> isn't that funny?
13:30:59 <Marvin--> no, I don't
13:31:02 <steveh> well, I think it's funny
13:31:03 <steveh> :)
13:32:32 <Marvin--> the best part of the movie is the part with Dustin Hoffman :-)
13:33:26 <Igloo> Am I right in thinking that "Also, beware that you're reopening `outputfile` (to `handle4`) before" is wiki speak (the ``s)?
13:33:50 <Riastradh> It probably originated from shell quoting.
13:33:51 <shapr> I think it's just emphasis.
13:34:57 <Marvin--> I think it's just silly
13:36:38 <Igloo> Ah, OK, I thought someone said `` enclosed code in the wiki
13:39:07 <Marvin--> no idea
13:40:11 * shapr takes an axe to the Yampa version of HGL
13:41:39 <SyntaxPolice> Igloo: {{{code}}} is how to put code in the wiki :)
13:42:04 <Igloo> Fair enough, I'm clearly confused
13:45:12 <Riastradh> They both work, I think.
13:50:19 * shapr tries greencard 3.01 with the Yampa HGL
13:55:04 * shapr hopes nothing explodes
13:55:22 <Igloo> :-)
13:55:49 * shapr bangs head
13:56:05 <Igloo> ?
13:56:09 <shapr> Xlib.hs:3462:
13:56:09 <shapr>     No instance for (GHC.Prim.CCallable ForeignObj)
13:56:09 <shapr>       arising from an argument in the _ccall_ to `do {Region arg1; Region arg2; Region arg3;int res1;
13:56:09 <shapr>                arg1 = (Region)%0; arg2 = (Region)%1; arg3 = (Region)%2;
13:56:09 <shapr>                do {res1 = XIntersectRegion(arg1, arg2, arg3);
13:56:16 <shapr> the error message is huge.
13:56:32 <Igloo> Oh, that sounds interesting
13:56:37 <shapr> of course, I'm using ghc6 and green-card 3.01 so I was expecting excitement.
13:57:30 <Igloo> Ah, CCallable is presumably the things it knows how to marshal?
13:57:42 <shapr> I don't know.
13:58:45 * Marvin-- ponders what to remove from his deck to make room for another Treachery
13:59:24 * Igloo recommends a Despair
13:59:32 <Marvin--> don't have any of them
13:59:44 <Igloo> Ah. Did I guess a real card though?
13:59:44 <Marvin--> I don't think there *is* a Despair card in GoT
13:59:48 <Igloo> Damn
13:59:51 <Marvin--> :)
14:00:33 <Igloo> My excuse is I thought we were talking about MtG. I don't even know what GoT is  :-)
14:00:57 <shapr> er, Alistair Reid said he's been updating the X11 stuff, does that mean there's a later version of HGL also?
14:02:31 <Marvin--> Igloo: A Game of Thrones, based on the books by George RR Martin
14:04:09 <shapr> well, I hope the yampa guys have some solution.
14:06:18 <Marvin--> "Jeanne, there's an arrow in your leg!" "So there is"
14:08:29 <Igloo> "And a monad in your arm!"
14:08:37 * Marvin-- groans
14:09:09 <Igloo> Well, you were asking for it  :-P
14:09:22 <Marvin--> I was, wasn't I? :/
14:19:30 * shapr stares at AFRP sources
14:23:21 * shapr finds amusing comments
14:23:25 <shapr> -- This is extremely crude. Use at your own risk.
14:23:39 <shapr> hi whee 
14:23:43 <whee> hola
14:23:48 <shapr> what's up?
14:23:57 <whee> job hunting :|
14:24:04 <shapr> how's it going?
14:24:19 <shapr> have any interviews?
14:24:20 <whee> no idea :)
14:24:26 <Smerdyakov> wit, are you finishing a degree now?
14:24:33 <whee> I just sent out a bunch of letters/resumes yesterday
14:24:43 <whee> Smerdyakov: I'm supposed to get a co-op job for next fall
14:26:08 <Smerdyakov> whee, oh. Icky. :D
14:27:51 <shapr> strange, ghc -M doesn't seem to work with the debs
14:28:24 <Marvin--> "No, that was a sword, on a field."
14:28:29 * Marvin-- likes that scene
14:29:03 <Smerdyakov> whee, what degree is this for?
14:29:23 <whee> computer engineering
14:29:27 <whee> just a BS
14:30:00 <Smerdyakov> Interesting. Do CS students need co-ops for BS's?
14:30:26 <shapr> has anyone tried "ghc -M" with ghc6 ?
14:30:31 <whee> I don't believe they do
14:30:44 <Igloo> shapr: Looks OK to me?
14:30:48 <Smerdyakov> OK. Would they accept a university research job for this?
14:30:49 <Igloo> What goes wrong?
14:30:55 <shapr> Igloo: I get zero output
14:31:02 <whee> wait, they do. heh
14:31:07 <Igloo> You know it's meant to alter Makefile by default, right?
14:31:09 <shapr> ghc -M Foo.hs # right?
14:31:19 <whee> they'd take anything related to your major, provided you get paid for it
14:31:19 <shapr> eh?
14:31:24 <Igloo> cat Makefile
14:31:42 <Smerdyakov> whee, have you considered that?
14:31:45 <shapr> no, I didn't know that.
14:31:57 <whee> considered what :|
14:32:01 <shapr> I thought they were printed...
14:32:19 <Igloo> -o - or -f - or something might do that
14:32:34 <shapr> oh, I must be thinking of hmake -M
14:32:34 <Igloo> You can certainly change what file they get written to
14:32:40 <shapr> which doesn't work... interesting.
14:32:44 <Smerdyakov> whee, research at a university
14:33:00 <shapr> hmake is unhappy about ghc --list-packages not working
14:33:06 <shapr> er "ghc-pkg --list-packages"
14:33:12 <shapr> but you already knew about that.
14:33:20 <Igloo> The latest debs should work
14:33:20 <shapr> fooey
14:33:25 * shapr updates
14:33:31 <Igloo> http://people.debian.org/~igloo/ghc6-2003-06-12-02/
14:33:52 <whee> Smerdyakov: I don't know if there's any openings for that type of thing
14:33:56 <whee> not sure where to look on that, either
14:34:41 <Smerdyakov> whee, you do well in classes, so professor ask YOU. :-)
14:34:49 <whee> haha
14:34:50 <Igloo> I think that's exactly what I uploaded for unstable
14:34:59 <shapr> spiffy
14:35:04 <whee> well, I guess it's late for that then :P
14:35:15 <Smerdyakov> Then you go ask them!
14:35:33 <Igloo> May be a few days till they hit the archive as they are new package names
14:35:44 <whee> next co-op block I'll keep that in mind
14:36:17 <whee> right now I'm aiming for a local job at Xerox or Kodak
14:36:57 * shapr wants a local job at Frasses
14:37:12 * Riastradh wants a job at Google.
14:37:23 <shapr> with the pigeons?
14:37:36 <Marvin--> heehee
14:37:40 <Riastradh> Yeah.
14:37:42 <shapr> actually, I'd like to have a job at chalmers/oxford/galois, doing Haskelly stuff
14:37:42 <whee> I'm going for a full-time job doing R&D at any company when I get my degree
14:37:48 <whee> I'd love doing zany things
14:37:53 <shapr> but I'm happy enough doing it by myself.
14:37:53 <Riastradh> I've got experience handling pigeons, I'll have you know!
14:38:16 <Igloo> I imagine you'd need a PhD for that sort of thing
14:38:22 <Riastradh> Well, Haskell hacking would be nice, but being at Google would be -really- nice, too.
14:38:41 <Igloo> Hacking Haskell for google...mmm  :-)
14:39:14 <Riastradh> Indeed.
14:39:28 <shapr> I hope to introduce Haskell to the masses. That's the advantage of doing self-employed Haskell work.
14:39:40 <Igloo> *nod*
14:39:51 <Riastradh> How do you live off of being self-employed?
14:40:00 <Igloo> You have customers...
14:40:11 <shapr> yup
14:40:12 <Riastradh> Hmm, that never occured to me.
14:40:16 <Marvin--> heh
14:40:31 * Igloo would be crap at getting customers so I don't think that would work out for me  :-(
14:40:32 <shapr> it's sort of like looking for co-op work, but you have to balance having too little and too much.
14:40:48 <shapr> I'm not so good at getting customers, but Bea is *amazing*
14:40:57 <shapr> plus she's fluent in four languages, and decent in two others.
14:41:14 <shapr> and she's a great organizer and manager. I'm so lucky :-)
14:41:24 <Igloo> Ah, that's where I went wrong. I got a wol instead of a Bea  :-)
14:41:28 * shapr grins
14:41:29 <Riastradh> Pah, that's nothing.  There was some Bishop a while ago who was totally fluent in -sixty- languages, and who could get by in 200 others.
14:41:41 * Riastradh can barely even -name- sixty languages.
14:41:49 <shapr> Riastradh: yes, but I don't want to live with him, and he's probably not a decent manager.
14:41:58 <Igloo> Haskell, C, perl, ... I'm sure I could make it
14:42:01 <Riastradh> How do you know?  You've never met him!
14:42:12 <shapr> 1. He's male.
14:42:26 <shapr> that's enough.
14:42:29 <Riastradh> Heh.
14:42:37 <hdaume> hehe
14:42:51 <Riastradh> How do you know?  He might be a female in disguise.
14:43:00 <shapr> in which case, I still don't want to live with hir
14:43:11 <Riastradh> Hir?
14:43:17 <shapr> him + her = hir
14:43:18 <Marvin--> hirhir
14:56:19 <Marvin--> time to head to bed
15:59:46 * shapr boings happily
16:06:15 <Igloo> Is it working?
16:13:13 <Strike> anybody got a minute to explain some bit of Haskell syntax I haven't found docs on?
16:13:24 <Strike> the $ operator(?), in particular
16:13:36 <jlouis> it is the apply operator
16:13:43 <jlouis> f $ x = f(x)
16:13:53 <Strike> isn't f x = f(x) already?
16:13:54 <jlouis> the special thing is that it has very low precedence
16:14:20 <Strike> I just can't see when I'd use it versus just using grouping with ()s to explicitly determine order
16:14:41 <jlouis> Prelude> print "foo" ++ "bar"
16:14:41 <jlouis> ERROR - Type error in application
16:14:42 <jlouis> ...
16:14:47 <jlouis> Prelude> print $ "foo" ++ "bar"
16:14:48 <jlouis> "foobar"
16:14:48 <hdaume> foo = bar (baz (quo (fluff x)))   versus    foo = bar $ baz $ quo $ fluff x
16:14:54 <hdaume> i'd say the second is more readable
16:15:00 <hdaume> the print is also a good example
16:15:03 <Strike> so it's not really a "necessary" thing as much as a "makes it look nice" thing
16:15:10 <jlouis> Strike: exactly
16:15:15 <Strike> ah, okay, I can deal with that
16:15:22 <jlouis> it removes parenthesis
16:15:30 <hdaume> Strike: it's not like it's built in to the language -- it's just a function defined in the prelude
16:15:32 <Strike> the YAHT doc uses it and never explained it and I didn't find it in the Tour of the Haskell Syntax
16:15:42 <Strike> hdaume: yeah, I figured that, most things are :)
16:16:00 <hdaume> Strike: i'll fix that in YAHT :)
16:16:06 <Strike> oh, is that your doc?
16:16:14 <hdaume> yeah
16:16:26 <Strike> overall it's quite nice (minus the occasional typo, etc.), thanks :)
16:16:34 <hdaume> cool, thanks
16:16:37 <Strike> ex. 23, part 5 I think
16:16:46 <Strike> I can send more revision suggestions if you want
16:16:53 <hdaume> Strike: that would be cool
16:16:57 <hdaume> Strike: email hdaume@isi.edu
16:17:28 <Strike> no problem :)  I strangely get a kick out of technical writing and helping maintain it, etc. :)
16:17:48 <hdaume> cool :)
16:19:06 <hdaume> Strike: ah, i found it :)
16:19:23 <Strike> yeah, there was some latex nastiness in the output PS as well, right around there
16:19:29 <Strike> so you might check for closing all environments
16:19:45 <Strike> oh, wait
16:19:47 <Strike> that was in the solution
16:19:52 <Strike> but it was the solution to 23
16:20:11 <hdaume> it's the (uncurry $ flip f) thing, right
16:20:15 <Strike> and yeah, I didn't even realize there were included solutions until I was like 50 pages in :p
16:20:17 <Strike> yeah, that's it
16:20:29 <hdaume> hehe okay
17:20:54 <shapr> g'day Pseudonym 
17:21:45 <Pseudonym> G'day.
17:21:55 <shapr> how's code?
17:24:03 <Pseudonym> OK, I think.  I've finally cracked sorting.
17:24:13 * Pseudonym sighs heavily
17:24:22 <Pseudonym> I thought sorting was a solved problem.
17:24:27 <shapr> didn't you say this last time several months ago?
17:24:58 <Pseudonym> Yes/
17:25:04 <shapr> ok
17:25:09 <Pseudonym> It's taken this long.
17:25:11 <shapr> wow
17:26:32 <Pseudonym> The thing is, though, for a DBMS, you need to cover a lot of cases.
17:27:17 <Pseudonym> Z39.50 has support for sort instructions like... OK, if you have a set of data which came from multiple databases, you can say "if the record is from this database, use this key, if it's from that database, use that key".
17:27:36 <Pseudonym> To make things even more complicated, it's not obvious what's a "key".
17:28:36 <Pseudonym> Relational databases just have "columns".
17:28:48 <Pseudonym> And columns are used for searching, for retrieving and for sorting.
17:29:02 <Pseudonym> In general, Z39.50 lets you use different things for each.
17:29:14 <shapr> scary
17:29:21 <Pseudonym> Well it kinda makes sense.
17:29:36 <Pseudonym> When you're retrieving on text, words don't come in their own columns.
17:29:40 <Pseudonym> You have to extract the words.
17:29:51 <Pseudonym> So you can't really retrieve and search on the same "fields".
17:30:30 <Pseudonym> Also, the Z39.50 model is to separate an abstract record structure from a physical record structure.
17:30:56 <Pseudonym> You can have different kinds of physical records, but you query on a common abstract view of them all.
17:31:05 <Pseudonym> This occasionally comes in handy.
17:31:10 <shapr> it sounds like it.
17:31:18 <Pseudonym> For example, google can index HTML, PDF, postscript etc.
17:31:25 <shapr> I've been looking for a SQL parser for similar reasons.
17:31:26 <Pseudonym> All through a common interface.
17:31:41 <Pseudonym> Google doesn't use Z39.50, but it's the same kind of issue,
17:42:06 <Pseudonym> The point here being that if you then want to sort records, you in general have to map sort keys through to the physical records.
17:43:43 <shapr> have you seen http://telecomasia.net/telecomasia/article/articleDetail.jsp?id=53441 ?
17:46:16 <Pseudonym> I soon will have.
17:46:53 <shapr> I had no idea Telstra was so scary.
17:46:56 <Pseudonym> Oh, yes.
17:47:02 <Pseudonym> We have telstra broadband at home.
17:47:16 <shapr> you are part of the rare 2%
17:47:21 * Pseudonym nods
17:47:45 <Pseudonym> We use cable internet, though.  It turned out to be slightly cheaper for what we wanted.
17:48:17 <Pseudonym> Telstra's biggest problem is that it's still mostly government owned.
17:48:40 <Pseudonym> Now don't get me wrong.  I'm as wannabe-European as the next guy.  I believe in lots of government services etc.
17:48:51 <Pseudonym> But there's no reason for the government to own a phone company.
17:49:12 <shapr> I'm rather anti-gov't services.
17:49:25 <Pseudonym> Why are you living in Europe, then?
17:49:29 <Pseudonym> :-)
17:49:49 <shapr> because my woman is much more important to me than my political leanings.
17:49:55 <shapr> in most cases, I don't really care.
17:49:58 * Pseudonym nods
17:50:16 <Pseudonym> The argument is that Australia's demographics are unique.
17:50:20 <Pseudonym> And they are.
17:50:28 <Pseudonym> 65% of Australians live in one of five cities.
17:50:40 <shapr> yah, that's way out of the bell curve.
17:50:45 <Pseudonym> A further 20% live in the next eight or so cities.
17:50:59 <Heffalump> surely the government should own the distribution infrastructure?
17:51:02 <shapr> if wireless had been developed in .au, it'd reach a hundred miles and be line-of-sight only ;-)
17:51:34 <Pseudonym> Well this is the thing.  We got a GSM phone network like the rest of the world did, then realised that it didn't work in the country.
17:51:51 <shapr> that seems ... obvious?
17:52:07 <Heffalump> but what would?
17:52:10 <shapr> GSM was developed in europe
17:52:25 <Pseudonym> We have a lot of country towns, of course, but they have a population of 2000 or so each, and it's an hour's drive to the next one.
17:52:43 <Pseudonym> It's not like Europe or the USA where there's a settlement every 5 mins.
17:52:53 <shapr> the US systems have a bit more signal strength, but .au is not like anything else.
17:53:04 <Heffalump> and you have lots of woods :-)
17:53:15 <Pseudonym> No, we have lots of desert.
17:53:20 <Heffalump> you have lots of woods too.
17:53:33 <Pseudonym> Heffalump: I don't know if the government should own the distribution infrastructure.  It seems to me that appropriate regulation would be sufficient.
17:53:34 <Heffalump> SE corner of NSW/Victoria. I got bored of driving through them.
17:53:38 * Pseudonym nods
17:53:40 <shapr> heh
17:53:43 <Pseudonym> Oh, I know.
17:53:46 <Heffalump> and I hit a wombat
17:53:48 <Pseudonym> I have family down there.
17:53:51 <Pseudonym> Oh!  Was it a big one?
17:53:52 <shapr> I'd like to drive around in .au 
17:53:56 <Heffalump> I don't think so.
17:53:59 * Pseudonym nods
17:54:04 <Pseudonym> Wombats can get pretty big.
17:54:05 <Heffalump> I only think it was a wombat from the rough size.
17:54:19 <Heffalump> We had a little car and it cracked the bumper but that was it
17:54:27 <Pseudonym> They range from the size of a small cat to the size of an average 9 year old child.
17:54:27 <shapr> I drove across most of the US. It was nice.
17:54:48 <Pseudonym> OK, maybe not quite that big.
17:55:07 <Pseudonym> At least you didn't get a roo strike.
17:55:14 <Heffalump> yeah, that'd have been bad
17:55:15 <Pseudonym> They can do a lot of damage.
17:55:24 <Heffalump> do they hang out in forests?
17:55:35 <Pseudonym> Bush mostly.
17:55:46 <Heffalump> easier to see coming then
17:55:50 <Pseudonym> It depends how dense the forests are.
17:55:59 <Pseudonym> Rainforests are way too dense for kangaroos.
17:56:06 <Strike> heh, I need to pick a nick that gets said less in casual conversation, the xchat tabs always turn blue when it's not about me at all ;)
17:56:15 <shapr> roos bounce more than I do.
17:56:16 * Pseudonym laughs
17:56:21 <Pseudonym> So do tiggers.
17:56:23 <Heffalump> kangaroo steak is nice
17:56:26 <Pseudonym> Yes, it is.
17:56:33 <Pseudonym> Some people don't like it.  Too gamey.
17:56:38 <shapr> I dunno, I could argue the point about tiggers, but roos are over my head.
17:56:47 <Pseudonym> shapr: You must be quite short, then.
17:57:06 <shapr> I thought they could jump over 175cm ?
17:57:08 <Heffalump> maybe he's bending down
17:57:12 <Pseudonym> True.
17:57:30 <Pseudonym> shapr: It depends on the roo.  We have eastern greys out our way, which are fairly small.
17:57:37 * Heffalump wants to visit .au again.
17:57:53 <Pseudonym> The red kangaroos can pull themselves up to the height of a 175cm person if they want to fight you.
17:57:53 <shapr> scientifically speaking, roos legs are about as close as you get to a perpetual motion machine.
17:58:07 <Pseudonym> They don't really box, BTW.,
17:58:23 <Pseudonym> They put their paws around your neck, hold on with the claws, and thump you with their feet.
17:58:25 <shapr> I always assumed they kicked
17:58:27 <shapr> right
17:58:30 * Pseudonym nods
17:58:36 <Pseudonym> That can do a lot of damage, too.
17:58:39 <shapr> with leg muscles like that, I bet
17:59:01 <Pseudonym> A friend of mine struck an emu on a motorbike.
17:59:08 <Pseudonym> The emu didn't survive.
17:59:14 <shapr> did the motorbike?
17:59:23 <Pseudonym> I think it was repairable.
17:59:31 <Pseudonym> He was in hospital for a week, thogh.
17:59:33 <shapr> yow
18:00:17 <shapr> my only interesting car story is nearly going off mount palomar once.
18:00:29 <Pseudonym> Well that's kinda interesting.
18:00:36 <shapr> no guardrails on the switchbacks
18:01:12 <shapr> I haven't been up mount palomar since.
18:01:17 <Pseudonym> Fair enough.
18:01:40 <shapr> is land in the bush cheap?
18:01:46 <Pseudonym> Pretty cheap, yes.
18:01:57 <shapr> I'm occasionally tempted to buy some for retirement purposes.
18:01:58 <Pseudonym> Lots of very small country towns which are slowly dying.
18:02:01 <Pseudonym> Land there is cheap.
18:02:01 <Igloo> .au is probably the country I'd most like to visit
18:02:23 <Pseudonym> It's the country most people would like to visit but haven't.
18:02:33 <Pseudonym> Trouble is we're so far from most places.
18:02:48 <Pseudonym> One former prime minister referred to Australia as "the arse-end of the world".
18:02:49 <shapr> that's why it's such a good retirement spot.
18:03:24 <Pseudonym> One thing I like about Australian politicians is their colourful use of English.
18:03:31 <Igloo> I should convince Chilli to organise something it's vital I intend
18:03:38 <shapr> Igloo: oh, me too!
18:03:45 <shapr> I want to go with you!
18:03:48 <Igloo> :-)
18:03:53 <Pseudonym> Hey, I can tell you the names of all of the important FP people in Australia if you want.
18:03:58 <Pseudonym> Get them to arrange something.
18:03:59 <shapr> sure
18:04:16 <shapr> AUCFP
18:04:16 <Igloo> A Template Haskell conference at UNSW would be ideal
18:04:32 * Igloo suspects I'm dreaming, though  :-)
18:06:46 <shapr> we'll have to persuade Chilli that for purposes of balance, some FP conferences must happen in the southern hemisphere.
18:07:05 <Pseudonym> We'll rotate between Sydney, Melbourne and Cairns.
18:07:15 <Pseudonym> Oh, hang on, I think the FP team at Cairns has been disbanded.
18:07:19 <shapr> ??
18:08:07 <Pseudonym> All the academics moved elsewhere.
18:09:24 <shapr> Cairns hase a nice website.
18:09:37 <Pseudonym> http://www.jcu.edu.au/
18:10:12 <Pseudonym> I've been to Cairns once or twice.  Every single time I went by the beach, the tide was out.
18:10:24 * Pseudonym had impeccable timing
18:10:40 <Pseudonym> This is not the prelude to a joke or anything.  It's just a weird factoid.
18:11:05 <Pseudonym> It's kinda humid up there, though.
18:11:08 <Pseudonym> Queensland == Florida
18:11:20 <Pseudonym> Lots of retired people.
18:11:32 <shapr> :-)
18:11:35 <Strike> that can't vote?
18:11:39 <Strike> .. correctly
18:11:46 <shapr> I lived in Florida for awhile, it's actually part of New York.
18:11:50 <Pseudonym> We don't have a problem with voting.
18:12:01 <shapr> demographically speaking
18:12:17 <Pseudonym> Well, first of all, voting is organised by a national authority.
18:12:19 <Strike> shapr: I assume by New York you mean New York City
18:12:24 <Pseudonym> So voting is the same everywhere.
18:12:29 <Pseudonym> Secondly, voting is compulsory.
18:12:34 <shapr> hdaume: hey, I quoted you yesterday :-)
18:12:48 <Strike> Pseudonym: nothing like forcing people to decide on things they know nothing about ;)
18:12:55 <Pseudonym> Yup.
18:12:56 <shapr> Strike: well, northeast US in general.
18:13:15 <shapr> "choo want some qauffee?"
18:13:19 <Strike> heh
18:13:21 <Igloo> Is there an abstain option?
18:13:37 <Pseudonym> No, but you don't actually have to fill in the boxen.
18:13:45 <Pseudonym> All you have to do is turn up and get your name ticked off.
18:13:50 <Strike> ah, that's not such a bad idea I guess
18:13:51 <Igloo> What happens if you refuse to vote?
18:13:56 <Pseudonym> You get fined.
18:14:13 <Pseudonym> Well, if you refuse to turn up and don't have a valid reason.
18:14:28 <Igloo> I don't think I like that
18:14:36 <Pseudonym> There is one advantage.
18:14:42 <shapr> you get paid to show up?
18:14:49 <Pseudonym> In other places, you see things like "I like bumper stickers and I vote".
18:14:59 <Pseudonym> In Australia, that carries no threat.  Everyone votes.
18:15:05 <shapr> interesting.
18:15:26 <Pseudonym> So large lobby groups can't hold public policy to ransom because they can mobilise voters.
18:15:33 <Strike> sounds like an administrative nightmare to track those who don't show up
18:15:48 <Pseudonym> Possibly, but Australia only has 20 million or so people.
18:15:59 <Strike> yeah, and they all live in one part of the country
18:15:59 <Strike> heh
18:16:09 <Pseudonym> Well, five parts of the country.
18:16:13 <Pseudonym> But still.
18:16:15 <Strike> yeah, hyperbole ;)
18:16:34 <Strike> kinda like how 90% or something of the .ca population live within 200km of the US border
18:16:42 <Pseudonym> Something like that.
18:17:05 <Pseudonym> Australia is a very post-modern place.
18:17:18 <Strike> yeah, (much like everyone else apparently ^^) I'd like to visit someday
18:17:19 <shapr> well, .ca is cold.
18:17:20 <Pseudonym> We got our sense of national identity kinda late.
18:17:41 <Pseudonym> Our national capital is a country town in the middle of nowhere.
18:17:46 <Strike> heh
18:17:58 <Pseudonym> We have someone else's monarch on our coins and someone else's flag on ours.
18:18:00 <Strike> ours was the murder capital of the country for a while ;)
18:18:07 <shapr> yikes
18:18:08 <Pseudonym> Nobody knows all the words to the national anthem.
18:18:15 <Pseudonym> And we don't mind.
18:18:25 <Strike> heh, that's an interesting little factoid
18:18:41 <Igloo> I don't know how many verses our anthem has to know if I know all the words or not
18:19:07 <Strike> oh, I don't know ALL the verses of our national anthem, just the ones sung at sporting events :)
18:19:34 <Pseudonym> Oh, enough people know the first verse of ours that we can do it at sporting events.
18:19:47 <Pseudonym> Where "enough" here means more than 50%.
18:19:51 <Strike> heh
18:20:06 <Pseudonym> Nobody knows what "girt" means, though.
18:20:15 <Strike> is that in the anthem?
18:20:20 * Pseudonym nods
18:20:25 <Pseudonym> Apparently we're "girt by sea".
18:20:38 <Darius> That's a normal word
18:20:41 <Pseudonym> Some have suggested that Australia is more accurately described as "dirt by sea".
18:20:43 <Strike> no one here really knows what a "rampart" is either ;)
18:21:11 <Pseudonym> Darius: You're using the word "normal" in a non-normal sense there.
18:21:14 <Pseudonym> Normal == usual
18:21:49 <Darius> Well it isn't a day to day word
18:22:12 <Darius> (at least not in American English and presumably Australian English either)
18:22:37 <Pseudonym> This reminds me of a review of a rock 'n roller's biography that I heard once.  The reviewer noted that "sex, drugs and rock 'n roll were literally dripping from the pages".
18:22:57 <Strike> heh
18:22:59 <Pseudonym> Presumably using the word "literally" non-literally.
18:23:08 <Strike> and by literally he meant figuratively
18:23:12 <Pseudonym> Right.
18:23:15 <Strike> :)
18:23:22 <Darius> Yeah, that's actually quite common
18:23:40 <Pseudonym> The word "literally" isn't meant literally any more.
18:24:05 <Strike> kinda like how "regardless" and "irregardless" are actually synonyms now
18:24:09 <Darius> It is but not all the time so you have to wonder, though it's usually clear from context
18:24:19 <Strike> 'twas a sad, sad day when I saw those listed in a dictionary as synonyms
18:24:42 <Pseudonym> As has been noted many times, English is so full of ambiguity that we don't notice it most of the time.
18:24:55 <Pseudonym> It usually only comes up in jokes and libel suits.
18:25:18 <Strike> yeah, the love/hate relationship I have with English is tied to its extreme pliability
18:25:55 <Darius> "Irregardless Nonstandardd. Regardless.  Usage: Irregardless, a double negative, is never acceptable except when the intent is clearly humorous."
18:26:04 * Darius loves his dictionary.
18:26:21 <Darius> Isaac Asimov is one of the people on the usage panel.
18:26:55 <Pseudonym> Which dictionary is that?
18:28:04 <Pseudonym> Going through this broadband story, I forgot one other reason why it's a shambles over here.  Richard Alston, the communications minister, is a complete moron.
18:28:16 <Pseudonym> Just thought I'd mention it.
18:28:38 <Strike> yeah, I've heard that from a number of .au-ians
18:28:53 <Pseudonym> Actually, "complete moron" is a little too mild.
18:29:18 <Pseudonym> I don't know if he's stupid, pig-headed or just clueless.
18:29:29 <Pseudonym> Probably a lot of each.
18:30:40 <Strike> I wish it were a law of nature that people in power weren't allowed to be stupid
18:30:59 <Pseudonym> It's a pre-requisite for wanting to be in power, I think.
18:31:14 <Strike> yeah, there's a famous quote about that .. can't recall it at the moment
18:31:29 <Pseudonym> I think it's from Douglas Adams.
18:31:35 <Strike> ooh, that might be the case
18:31:38 * Strike searches fortune
18:32:21 <Darius> "The American Heritage Dictionary of the English Language"  I think the page with the copyright data is torn out.
18:32:51 <Strike> this one's close:
18:32:53 <Strike> Anyone who is capable of getting themselves made President should on no
18:32:53 <Strike> account be allowed to do the job.
18:32:53 <Strike>                 -- Douglas Adams, "The Hitchhiker's Guide to the Galaxy"
18:33:17 <shapr> Riastradh: hey, what do you think about a Template Haskell T-shirt?
18:33:25 <Riastradh> shapr, what would be on it?
18:33:43 <shapr> at least the logo
18:33:55 <Riastradh> Hmm, I suppose.
18:34:06 <shapr> I can't think of anything else especially nifty for a TH tshirt at the moment.
18:34:14 <shapr> I'll mull it over.
18:34:48 <Igloo> Do I get royalties?  ;-)
18:34:48 <Darius> shapr: How many -Haskell- shirts would sell? Let alone TH
18:35:06 <shapr> Darius: I'll buy one of each flavor :-)
18:35:20 <shapr> I wear tshirts for my own entertainment.
18:35:22 <Igloo> Darius: If they were good and I could avoid paying shipping etc I'd get one of each
18:35:23 <Riastradh> There should be one with just an ordinary lambda on it, too.
18:35:44 <shapr> my vendorware I imported is slowly dying off
18:36:00 <Igloo> where avoid paying shipping ~= get someone to bring to a conference I'll be at
18:36:06 <shapr> I have some 68k Apple T-Shirts that are nearly gone.
18:36:39 <Igloo> Do you mean faded?
18:36:59 <shapr> no, almost more holes than tshirt :-)
18:37:04 <Igloo> Ah  :-)
18:37:05 <shapr> bouncing is not easy on clothes.
18:37:08 <Igloo> lol
18:37:22 <Igloo> Hopefully they were open source so you can get more made
18:37:59 <shapr> well, I'd like some Haskell tshirts nowadays.
18:38:53 <Igloo> True
18:39:10 * Igloo will see if I get inspiration for the rest of a TH one
18:39:26 <shapr> yah, I'll try to come up with some ideas too.
18:39:48 <shapr> the TH logo is great, it really deserves to be on a tshirt.
18:39:57 <Igloo> lol
18:40:29 <Igloo> With a little work it's probably possible to get it in a vector format
18:40:29 <Darius> It'll look like you are using cloth from a do-it-yourself home sowing kit.
18:40:40 <Igloo> :-)
18:40:43 * shapr grins
18:41:01 <Igloo> There could be a summer version with the lambda cut out
18:41:07 <shapr> heh
18:41:18 <shapr> tshirt-less sleeves.
18:41:52 <Darius> shapr: I think that'd be a hit in the women's department.
18:42:16 * shapr leaves that one alone :-)
18:42:59 <shapr> I wonder if patterns from sewing would be a good theme for the back of a TH shirt
18:43:29 <Igloo> A TH joke would be good
18:43:35 <Igloo> in 3-5 words
18:43:49 <Igloo> But that's pushing it  :-)
18:43:58 <Pseudonym> Is there a TH joke?
18:44:24 <shapr> "Shirts off to SPJ" ?
18:44:43 <shapr> that's too much of an in-joke though...
18:45:18 <Igloo> "Template Haskell programmers do it with" is too verbose before you even get to the punchline
18:45:23 <shapr> Template TyCoon ?
18:45:41 <shapr> TyCon jokes are too cheezy.
18:45:58 <Pseudonym> Haskell programmers do it lazily
18:46:11 <Pseudonym> OOh, this sounds fun.
18:46:13 <Pseudonym> Let's think...
18:46:18 <Darius> Haskell programmers do it constantly.
18:46:21 <Pseudonym> Java programmers do it once, do it anywhere.
18:46:28 <shapr> heh
18:46:32 <shapr> Darius: that's pretty good.
18:46:42 <Pseudonym> Perl programmers do it more than one way.
18:47:04 <shapr> Python programmers do it like you would expect.
18:48:13 <Strike> C programmers do it for hours.
18:48:16 <Strike> ;)
18:48:24 <shapr> that's true too :-)
18:49:59 <shapr> metaprogramming means "higher than programming" or "next level up"
18:50:28 <Pseudonym> C++ programmers do it to their own standards.
18:50:51 <shapr> Eiffel programmers do it without variance.
18:51:23 <Strike> Brainfuck programmers do it in 8 chars or less
18:51:41 <Smerdyakov> I guess "Perl programmers do it like idiots" is not subtle enough? :)
18:51:45 <Strike> hehe
18:52:04 <shapr> SML programmers strictly do it
18:52:08 <Pseudonym> Visual Basic programmers do it where they want to, today.
18:52:16 <shapr> (and pay for it tomorrow)
18:52:45 <whee> are there any weird problems with openbsd and ghc?
18:53:10 <Igloo> Don't recall hearing of any
18:53:23 <whee> hooray
18:53:38 <Strike> hehe:
18:53:39 <Strike> LISP: To call a spade a thpade.
18:53:39 <Pseudonym> Oh, ML has a slogan.
18:53:43 * Pseudonym didn't know that
18:53:55 <Pseudonym> "Well-typed programs cannot go wrong."
18:53:58 <shapr> Does Haskell have a slogan?
18:54:04 <Heffalump> Metaprogrammers do it recursively?
18:54:08 <Strike> or (and this applies to all Func Langs), Lisp programmers do it without any unexpected side-effects
18:54:08 <whee> shapr: if not, that should be it.
18:54:16 <Igloo> If not, we could use "Well-typed programs cannot go wrong."  :-)
18:54:16 <whee> Haskell -- "Does Haskell have a slogan?"
18:54:16 <Pseudonym> Metaprogrammers do it at a higher level.
18:54:22 <whee> :D
18:54:45 <Pseudonym> Haskell -- "we'll fill in the slogan when it's needed"
18:54:47 * Igloo wonders if I'd get shouted at for saying I wasn't a particular fan of "XXX do it YYYly" jokes anyway  :-)
18:54:52 <shapr> Pseudonym: heheh
18:55:09 <Pseudonym> Igloo: Not at all.  We were just on a roll.
18:55:15 <shapr> or a role
18:55:54 <Igloo> TH programmers can't do it recursively, anyway  :-/
18:56:04 <shapr> sad but true.
18:56:07 <Strike> bahaha "C++ programmers do it with private members and public objects"
18:56:16 * shapr grins
18:56:46 <Pseudonym> Slashdotters do YOU
18:56:59 <shapr> In Soviet Slashdot...
18:57:07 <Pseudonym> Let's not go there.
18:57:53 <shapr> Template Haskell - Sew What?
18:59:04 * Igloo groans
18:59:08 <shapr> Template Haskell - Design Patterns
18:59:50 <shapr> I'm trying to think up something that matches the simplicity of the logo
18:59:58 <shapr> something iconic
19:00:36 <Igloo> A slogan would be another alternative
19:01:05 <Pseudonym> TH programmers do it at compile time.  No, doesn't really work.
19:01:25 <Igloo> :-)
19:01:48 <Darius> TH Programmers do it earlier.
19:02:05 <Darius> Haskell Programmers do it later.
19:02:40 <Pseudonym> Haskell programmers do it only when they need to.
19:03:34 <Pseudonym> And even then, only once.
19:05:33 * Igloo can't do better than "Building the future"
19:06:07 <Igloo> Actually, "Examining the past"/"Building the future", but I don't like "Examining". Or the rest of it really  :-)
19:06:17 <shapr> what about Patterning the Future/
19:06:27 <Darius> shaping
19:06:44 <shapr> I like that, of course :-)
19:06:56 <Igloo> Hmm, "Building" was the word I liked best
19:07:32 * shapr yawns
19:08:08 <shapr> well, maybe we'll think of something surprisingly nifty tomorrow
19:08:20 <shapr> or maybe today, but I'm off to sleep
19:08:36 <Igloo> g'night
19:08:56 <Pseudonym> Night.
19:22:58 <Heffalump> Template Haskell, the scaffolding of Haskell
19:54:48 <syntax-laptop> hola
19:55:18 --- topic: set to '["We put the Funk in Funktion","See logs @ http://tunes.org/~nef/logs/haskell/","Learning Haskell - http://www.haskell.org/learning.html","ICFP Contest http://www.dtek.chalmers.se/groups/icfpcontest/","GHC 6.0 pre-debs: http://people.debian.org/~igloo/","ghc rpms: http://haskell.org/~petersen/rpms/ghc/"]' by juhp
19:55:52 <juhp> just s/ghc-6.0 rpms/ghc rpms/
19:56:23 <steveh> hola
19:56:26 <steveh> que tal?
19:56:33 <steveh> what laptop is that anyway, Syntax?
19:56:50 <syntax-laptop> steveh: a gateway 450 x running Debian unstable :)
19:57:11 <syntax-laptop> muy bien
19:58:20 * steveh should get a notebook ...
19:58:41 <steveh> I suppose I should put linux on it, too :)
19:58:47 * steveh hasn't run linux in years
19:59:35 <syntax-laptop> at this point, I couldn't live without it :)
20:00:25 <steveh> well, I'd get pissy if I had no unix-like machine
20:00:34 <steveh> but I have two of those
20:00:41 <steveh> just no linux
20:01:50 <syntax-laptop> so what do you enjoy running?
20:03:39 <steveh>   lesse
20:03:49 <Strike> AmigaOS ;)
20:03:56 <steveh> here I've got a mac with OS X and a FreeBSD machine
20:04:07 <Strike> slap Linux on the mac ;)
20:04:12 <steveh> see
20:04:14 <steveh> I did that
20:04:15 <steveh> before OS X
20:04:16 <steveh> :)
20:04:20 <syntax-laptop> I ran freeBSD for a while on the open source club's machine, but no one knew anything about free bsd, so I switched it to debian :)
20:04:29 <steveh> aaah
20:04:30 <Strike> both are pretty easy
20:04:39 <steveh> well, I started with Linux on the Mac
20:04:47 <steveh> then I had OpenBSD on an ancient machine
20:04:57 <steveh> then I built a machine expressly for FreeBSD
20:05:17 <steveh> made school a lot easier
20:05:58 <steveh> until OS X became usable on my machine FreeBSD was pretty much my primary OS
20:06:08 <Strike> "became usable"?
20:06:15 <steveh> fast X11
20:06:19 <steveh> speed improvements
20:06:22 <Strike> ah
20:06:27 <steveh> my computer got a brain transplant
20:06:28 <Strike> so basically ... at Jaguar
20:06:32 <steveh> yep yep
20:07:23 <steveh> so I was running FreeBSD primarily for about 2 years -- and the only reason I run things on my Mac now is that it's got two video cards
20:08:00 <steveh> doesn't really make a difference to me where things are actually being run -- though Aqua has some nice features
20:09:58 * Strike just doesn't like the "only one menubar" UI :)
20:10:30 <steveh> I actually don't find myself using menus all that often
20:10:43 <steveh> anything I'd use more than twice has a keyboard shortcut
20:10:51 <Strike> yeah, I don't really either, but it still bugs me :)
20:11:12 <steveh> ahh, you like lossage on your vertical space :)
20:11:27 <Strike> not really, I don't appreciate the FORCED lossage of having that menubar there
20:11:33 <Strike> regardless of what I want
20:11:55 <Strike> with my individual apps I can decide if I want a menubar there or not :)
20:12:05 <Strike> to a degree
20:12:46 <steveh> I imagine it's possible to hack the menu away :)
20:13:07 <Strike> yeah, and a lot of apps I use can either turn it off or I could tear it off or whatever
20:13:34 <steveh> that's more of a nod to old Mac users and to newbies than anything else
20:13:41 <Strike> then again, I run all (but a few of) my apps maximized each on their own desktop anyway
20:13:52 <Strike> with terms and IM windows and whatnot floating as needed
20:13:53 <steveh> I seem to recall NextStep's menu being a detachable palette
20:14:21 <steveh> oh yeah, virtual desktops
20:14:24 <steveh> I remember those
20:14:46 <Strike> remember?  I love 'em ;)  can't stand not having them when I'm on Windows at work
20:15:12 <steveh> If I didn't have two monitors I'd probably work on getting them somehow
20:15:22 <steveh> but I never really used more than two on FreeBSD 
20:15:36 <Strike> I have 8, each for a pretty specific purpose
20:15:43 <Strike> though one is "misc" :)
20:15:58 <steveh> hehe
20:16:01 <steveh> I actually had 3
20:16:14 <steveh> web browser, chat clients, coding
20:16:23 <Strike> mine are arranged in a 2(rows) by 4(cols) grid
20:16:25 <steveh> where coding could be just about anything
20:16:48 <Strike> 1st row: Mail - IRC - Web - Graphics   2nd row: News (as in newsgroups) - Music - Code - Misc
20:16:58 <Strike> and pretty much everything centers around the center 4
20:17:07 <steveh> aah
20:17:13 <steveh> I just used Mozilla's mail program
20:17:25 <steveh> and had XMMS minimized/sticky everywhere
20:18:03 <Strike> yeah, I have a little applet (wrong choice of words, but can't think of the right one) that I can use to change songs and/or pause and one to do volume and whatnot
20:18:25 <steveh> you run WindowMaker?
20:18:27 <Strike> actually the volume up/down keys on my keyboard are fine
20:18:34 <Strike> nah, Gnome actually
20:18:41 <Strike> used to be a hardcore Enlightenment user
20:18:44 <steveh> I was big into Windowmaker
20:19:01 <steveh> I had KDE and GNOME installed and tried them from time to time but they seemed to be trying too hard
20:19:12 <Strike> I hated gnome until 2.x
20:19:14 <steveh> wmaker just got out of my way
20:19:50 <Strike> yeah, E was very much out of my way except where I wanted it to be there :)
20:20:02 <Strike> like the snapshotting pager and the iconbox that it came with
20:22:35 * steveh is gonna add remove functions to okasaki's data structures
20:22:51 <steveh> kinda weird they're not there
20:34:58 <Pseudonym> I really want an OS like BeOS.
20:35:07 <Pseudonym> But I want it to be as Unix compatible as possible.
20:35:10 <Pseudonym> Maybe I really want QNX.
20:35:14 <Pseudonym> Hmm.
20:35:26 <steveh> what part of BeOS do you want?
20:35:35 <Pseudonym> I want soft real-time.
20:35:45 <Pseudonym> No, actually, I want hard real-time.
20:36:07 <steveh> wow, what are you working on?
20:36:32 <Pseudonym> Nothing really.  I want to watch a media file without it skipping.
20:36:37 <steveh> lol
20:36:42 <Pseudonym> I want to burn a CD on a heavily loaded machine and not ruin the CD.
20:37:05 <Pseudonym> Maybe I want to serve streaming media, or maybe do ATM switching some day.
20:37:09 <steveh> i've never had that be an issue with freebsd
20:37:14 <steveh> and I've burned many a CD
20:37:23 <Pseudonym> My point is that real tasks need real-time scheduling.
20:37:33 <Pseudonym> Not just embedded control stuff.
20:38:15 <steveh> well
20:38:20 <Pseudonym> Actually, I would like to mix 12 channels of CD audio in real-time.
20:38:31 <steveh> I don't think media apps are written to take advantage of what we have
20:38:34 <Pseudonym> That needs real-time scheduling, too.
20:39:31 <Pseudonym> No, they're not.  They're written to "make do".
20:39:45 <steveh> then switching OSes wouldn't do much about the problem
20:40:04 <Pseudonym> No, you'd have to rewrite a bit of them.
20:41:48 <steveh> next time you burn a cd use nice -n -10 and see what happens :)
20:42:07 <steveh> though actually what you might have there is IDE bus issues
21:49:00 <o3> Pseudonym: you don't really need "hard" real-time on linux to do that.  the linux audio guys had a major discussion about it on linux-kernel a few years ago
21:49:18 <o3> s/a few years ago/~a year ago/
21:49:23 <o3> and thankfully linus agreed with them
21:49:46 <Strike> isn't that what the O(1) scheduler and the low-latency patch are supposed to help?
21:50:00 <Strike> and pre-emptible kernel
21:50:16 <o3> yep
21:50:51 <o3> although it still takes a lot of fiddling with things in linux to get a system which "feels" responsive
21:51:18 <Strike> yeah, well at least, responsive on a "real-time level"
21:51:25 <Pseudonym> What You Really Want(tm) is guaranteed response time.
21:51:44 <o3> Pseudonym: nothing stopping you from using RTLinux
21:52:06 <Pseudonym> Assuming that nothing of higher priority wants to run, there is a guaranteed maximum latency between when an event happens and when you get to handle it.
21:52:13 <Pseudonym> o3: Oh yes there is. :-)
21:52:21 <Pseudonym> All the poorly-written drivers.
21:52:34 <Strike> nothing stopping you from working on RTLinux ;)
21:52:45 <o3> Pseudonym: exactly :)  soft real-time is good enough for 99.9% of everything
21:52:49 <Pseudonym> The enemy of low-latency is disabling interrupts for an unlimited amount of time.
21:53:04 <Pseudonym> e.g. around a loop
21:53:32 <Pseudonym> Oh, and I don't like monolithic kernels.
21:53:57 <Pseudonym> Yes, there's something stopping me from working on RTLinux.  I think the software patent is bogus.
21:54:10 <steveh> i don't think you can complain about latency and sing microkernel praises :)
21:54:24 <Pseudonym> Really?
21:54:30 <Pseudonym> How so?
21:54:50 * Strike is reminded of an old argument between Andy Tannenbaum and Linus Torvalds
21:55:13 <Pseudonym> Andy Tannenbaum was 100% correct, but also 90% missing the point.
21:55:31 <Strike> http://groups.google.com/groups?hl=en&lr=&ie=UTF-8&threadm=1992Jan31.103323.29629%40klaava.Helsinki.FI&rnum=19&prev=/groups%3Fq%3Dgroup:comp.os.minix%2Bauthor:torvalds%2540klaava.Helsinki.FI%26start%3D10%26hl%3Den%26lr%3D%26ie%3DUTF-8%26selm%3D1992Jan31.103323.29629%2540klaava.Helsinki.FI%26rnum%3D19   pardon the URL
21:55:51 * o3 is reminded of the whole "worse is better" thing
21:56:01 <Pseudonym> 1) The "if you were my student I'd fail you" was correct.  Linux wasn't interesting from a research point of view, but Linus didn't care.
21:56:17 <Pseudonym> Linus wasn't after research points.
21:56:29 <Strike> right, he was after getting something done :)
21:56:33 <Pseudonym> Right.
21:56:43 <Pseudonym> However, remember that this argument was over 10 years ago.
21:56:55 <Strike> yeah, and Hurd still isn't anywhere near finished ;)
21:56:57 <Pseudonym> When Tannenbaum said "microkernel", he meant Mach.
21:56:58 <vegai> I guess hurd-people would've gotten high grades...
21:57:19 <Pseudonym> When I say "microkernel", I mean BeOS, ChorusOS or QNX.
21:57:26 <Pseudonym> Mach isn't "micro".
21:57:27 <Strike> don't get me wrong, Hurd excites me a lot, I want it to do really well .. but I'm not all that interested in it until it's a semi-suitable replacement
21:57:36 <Pseudonym> Oh, I could also mean L4.
21:57:56 <o3> Pseudonym: how's mach not micro?
21:58:00 <vegai> Strike: when is that?
21:58:05 <Pseudonym> Have you seen how big it is?
21:58:08 <Strike> vegai: at this rate ... 2050?
21:58:13 <Strike> :)
21:58:18 <vegai> Strike: heh. I meant, what feature do you need?
21:58:21 <Pseudonym> It even has networking support.  IN THE KERNEL.
21:58:21 <o3> Pseudonym: sure, but i don't see how it's not a micro arch
21:58:38 <steveh> heh
21:58:46 <Strike> oh, well, it's not so much kernel features that I need, it's infrastructure - though better support for things like USB and whatnot would be nice
21:58:50 <o3> Pseudonym: it does?  i think i need a refresher course on mach
21:58:56 <steveh> Linus developed Linux even though he thought Hurd would be along "any day" then
21:58:56 <steveh> :)
21:58:57 <Strike> I mean Debian is the only working install for Hurd and it's not very nice :)
21:59:10 <Pseudonym> IMO, Mach throws away all of the advantages of using a microkernel in the first place.
21:59:17 <vegai> some people tend to think that without Linux, Hurd would've been ready some 10 years ago
21:59:29 <vegai> ...for an arbitrary definition of ready
21:59:32 <Strike> meh, I doubt that
21:59:36 <Pseudonym> Which, admittedly, was not such a big deal 10 years ago when this stuff was research.
21:59:43 <Strike> maybe ready by NOW, but .. not 10 years ago
22:00:41 * Strike doesn't muck about the details all that much, is just glad to have a free (as in (beer|speech)) OS that he can run as he sees fit that suits his needs
22:00:49 <Pseudonym> Oh, I agree.
22:00:55 <Pseudonym> Beggars can't be choosers.
22:00:58 <Pseudonym> And all that.
22:01:01 <vegai> so, what about *bsd? =)
22:01:09 <Pseudonym> BSD is still monolithic.
22:01:12 <Pseudonym> And it's still Unix.
22:01:42 <vegai> also, a free OS
22:01:55 <steveh> Pseudonym: not so loud, the Open Group can hear you! 
22:01:56 <Pseudonym> Not that Unix is such a bad thing in principle, it's just worn a little around the edges.
22:01:58 <Strike> well, some BSDs :)
22:02:01 <Strike> steveh: heh
22:02:08 <Pseudonym> BSDI is Unix(tm).
22:02:10 <Pseudonym> I'm pretty sure.
22:02:18 <Strike> yeah, me too
22:02:27 <Strike> but it's neither free as in beer or speech :)
22:02:32 <Strike> (iirc)
22:03:02 <Strike> and apparently "ALL Unixen are not free"</SCO>
22:03:38 <Pseudonym> I'm glad to use Linux as my daily OS of choice, don't get me wrong.
22:03:50 <Pseudonym> It's just not quite ideal.
22:04:06 <o3> Pseudonym: worse is better :)
22:04:14 <Pseudonym> Though when we finally get real thread support, that will be better.
22:05:38 <Strike> Pseudonym: you mean like the ... crap, what's that four letter acronym ... NLTP or something .. stuff that the RedHat guys are/were working on?
22:05:48 <Pseudonym> NPTL, I believe.
22:05:53 <Pseudonym> Yes, that's going to help a lot.
22:06:07 <Pseudonym> I want to be able to spawn a process from one thread and wait on it from another.
22:06:40 <Pseudonym> For example.
22:07:15 <Strike> ah yes, NPTL Native POSIX Thread Library
22:08:19 <Pseudonym> Apart from that, I have two main peeves with Unix/Linux.
22:08:24 <Pseudonym> 1) The security model.
22:08:38 <Pseudonym> The superuser is a bad idea.
22:09:00 <Pseudonym> 2) The event model, which is all over the place.
22:09:09 <Pseudonym> Or should I say "what event model?"
22:09:43 <Pseudonym> These are minor quibbles, though.
22:09:43 <Strike> 1) SELinux :)
22:09:50 <Pseudonym> SELinux ain't there.
22:09:53 <Strike> 2) no clue about any solution in the pipeline
22:09:58 <Strike> what's your qualms with SELinux?
22:10:13 <Pseudonym> It isn't really a general purpose OS.
22:10:14 <Strike> it removes the idea of the superuser (well the traditional notion of one)
22:10:23 <Strike> not sure I follow...
22:10:31 <Pseudonym> Not everything is there yet.
22:10:38 <Pseudonym> Do you know how you back up a SELinux server?
22:10:44 <Strike> heh, can't say I do
22:10:50 <Pseudonym> You use dd.  That's all you can do.
22:11:04 <Strike> hmm, no offense but I'm not sure I buy that :)
22:11:08 * steveh wonders why the superuser is a bad idea...
22:11:18 <Pseudonym> Seriously.  tar hasn't been ported to SELinux yet.
22:11:22 <Strike> steveh: all eggs in one basket :)
22:11:37 <Pseudonym> steveh: There are a specific set of permissions that the superuser has.
22:11:45 <Pseudonym> For example, the superuser can access any file on the file system.
22:11:51 <steveh> ok
22:11:52 <Pseudonym> And the superuser can send any signal to any process.
22:11:58 <Strike> Pseudonym: oh, I thought you meant in kernel-space not everything was there
22:12:04 <Pseudonym> And the superuser can open a server socket under port 1024.
22:12:15 <Strike> in fact, they have to :)
22:12:16 <Pseudonym> Strike: No, I mean it's not a general purpose OS.
22:12:18 <Pseudonym> Right.
22:12:30 <Pseudonym> And ONLY the superuser can do this.
22:12:43 <Strike> which is why all daemons on "privileged" ports run as root
22:12:50 <Pseudonym> Which means if you want to do any one of these things, you have to be root.
22:13:04 <Pseudonym> Which means if you are compromised, the compromiser gets all of the other privileges too.
22:13:04 <steveh> you don't have to "be" root though
22:13:11 <Strike> steveh: the process does
22:13:15 <steveh> right
22:13:16 <Strike> rather, it has to have a UID of 0
22:13:25 <steveh> but not the user's shell or anything else
22:13:25 <Pseudonym> UID of 0 is "the superuser".
22:13:33 <Strike> steveh: smash the stack and it will be :)
22:13:52 <Pseudonym> Unix really, really needs finer-grained control than this.
22:14:12 <Strike> which is what SE Linux is about
22:14:17 <Pseudonym> I should be able to create a "daemon" user or group which has permissions to open server sockets under port 1024 and nothing else.
22:14:27 <Strike> "capabilities" I think is the term they use
22:14:31 <Pseudonym> Yes.
22:14:36 <Pseudonym> I also want "subusers".
22:14:58 <Pseudonym> I want to be able to run an untrusted program by making a version of myself which, say, can't write to the filesystem.
22:15:05 <Pseudonym> Or can't open network connections.
22:15:13 <Pseudonym> A finer-grained version of chroot().
22:15:48 <Strike> I'm not sure if that's inherent in the system, but I can see how the principles of the SELinux system wouldn't explicitly disallow that
22:16:04 <Strike> rather, I can't see how SELinux does/would explicitly disallow that
22:16:07 <steveh> I like jails for some things
22:16:07 <steveh> :)
22:16:15 <Pseudonym> Well in SELinux you can make a whole virtual machine to run programs in.
22:16:17 <Pseudonym> So that's okay.
22:16:33 <Pseudonym> I think (though I haven't checked), for example, that you can act as the firewall for that machine you made.
22:16:53 <Strike> I'm just pretty impressed with the "challenges" that people using SELinux have put forth which have gone unanswered/unbeaten
22:17:03 * Pseudonym nods
22:17:10 <Strike> throwing an SELinux machine on the net, posting the root pass, inviting all to come hack away, etc.
22:17:12 <Pseudonym> Oh, SELinux is a good idea.  It's just not quite "there yet".
22:17:23 <Strike> I think we're on the same page :)
22:17:52 <Strike> in fact, I'd love to use it as soon as I can basically find a good guide documenting all the quirks that I have to watch out for when setting an SELinux system up :)
22:20:24 <Pseudonym> The Unix event model or lack thereof, BTW, is a serious problem for our software.
22:20:46 <Pseudonym> We want to wait on several sockets and a condition variable at the same time.
22:20:54 <Pseudonym> You pretty much can't do that.
22:21:16 <Pseudonym> You need to set up another thread which sends a signal to the server thread to wake it up from the select() call.
22:21:19 <Pseudonym> Very frustrating.
22:21:33 <Pseudonym> I imagine that people who use SysV semaphores probably have the same problem.
22:23:41 <Strike> heh, so ssh is ported to selinux .. but not tar, how odd
22:26:00 <Strike> actually .. http://sourceforge.net/docman/display_doc.php?docid=15285&group_id=21266   now that I've found that, maybe I will play around with SELinux on a spare box
23:46:46 <seth> Strike: What I do is spawn an extra thread (that is, I have two threads per connection).  Then I write into a Chan object when data is available.  Chan has a method to test whether it is empty, without blocking.
