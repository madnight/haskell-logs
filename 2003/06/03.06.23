02:39:16 <kosmikus> what a morning ...
02:42:46 <vegai> wassup?
02:43:57 <kosmikus> someone has broken into my office during the weekend ...
02:44:29 <kosmikus> ... but it could have been worse -- apparently they only tried to steal the computer ...
02:44:59 <kosmikus> ... and that has been found later outside the building in the bushes ...
02:45:13 <kosmikus> It still seems to work -- at least, irc is working fine ;)
02:59:47 <elmex> l0ol
02:59:52 <elmex> kosmikus: i feel sorry
03:18:32 <vegai> auch
03:18:40 <elmex> ?
03:18:45 <vegai> dumb thieves, though
03:18:53 <elmex> ;)
03:19:16 <pesco> They always are.
04:36:12 <andersca> hey hey shapr
04:36:16 <shapr> hiya andersca 
04:36:23 * andersca uploads guadec photos
04:36:37 * shapr uploads coffee to his brain
04:36:52 <Marvin--> andersca: yay
04:37:39 <shapr> andersca: are they ready yet? :-)
04:38:15 <andersca> hmm, I should separate them 
05:15:22 * Marvin-- growls at galeon
05:15:55 <shapr> try mozilla-firebird
05:16:00 <shapr> I've switched
05:16:04 <Marvin--> does it respect $DISPLAY?
05:16:09 <shapr> I dunno
05:16:10 <andersca> http://carbon.csbnet.se/gallery/album23
05:16:13 <shapr> but it's a nice browser
05:16:22 <andersca> Marvin--: DISPLAY is an Xlib think
05:16:24 <andersca> thing
05:18:24 <Marvin--> I know, but it's still annoying that 99% of my gui programs respect it but galeon doesn't
05:18:46 <shapr> who's the guy with the sideburns?
05:18:50 <shapr> or the guy who always blinks?
05:19:00 <andersca> I think that would be zilch and hallski
05:19:18 <shapr> oh, cool
05:19:45 <shapr> who's the Mr. Bean lookalike ?
05:20:20 <shapr> very funny pix in here :-)
05:20:26 <andersca> you can paste the urls you know :)
05:21:12 <shapr> mr bean? --> http://carbon.csbnet.se/gallery/album27/p1010038
05:22:13 <andersca> oh that's peter boen
05:22:15 <andersca> one of the ximian guys
05:23:39 <shapr> wow, you know lots of programmers
05:25:05 <shapr> heh --> http://carbon.csbnet.se/gallery/album25/p1010081
05:25:26 <andersca> yeah, we had this hack fest
05:25:29 <andersca> and I was the only one with a hack
05:25:44 <shapr> oh, so that's james henstridge
05:25:48 <andersca> yes
05:26:58 <shapr> who is the always smiling person? --> http://carbon.csbnet.se/gallery/album25/p1010103
05:28:22 <shapr> which day did you give a talk?
05:28:36 <andersca> tuesday
05:28:45 <andersca> there are no pictures of that ;)
05:29:12 <andersca> shapr: the smiling person is richard hult
05:29:27 <shapr> aww, no pictures of the famous andersca?
05:29:51 <andersca> shapr: http://carbon.csbnet.se/gallery/album24/p1010134 <- me and james
05:29:59 * andersca is considering sending a paper to LCA
05:30:09 <shapr> aha, I just found that pic
05:30:25 <shapr> what's LCA?
05:30:31 <andersca> linux.conf.au
05:30:36 <shapr> oh, cool
05:31:29 <shapr> who? --> http://carbon.csbnet.se/gallery/album24/p1010153
05:31:37 <shapr> is that RMS?
05:31:47 * shapr thinks not
05:32:14 <shapr> it's surprising to see the age grouping of GUADEC
05:33:00 <andersca> shapr: that's alan cox and telsa
05:33:34 <shapr> I don't know telsa
05:34:44 <shapr> looks like it was very much fun
05:36:22 <shapr> I hope ICFP is as much fun :-)
05:42:49 <Marvin--> http://www.dct-net.co.jp/special/usb_hot.html <- wtf!
05:43:26 <Marvin--> USB noodle heater?!
05:48:27 <shapr> scary thought
06:01:18 * dbagnell is back (gone 20:26:02)
06:01:41 <juhp> nah, it's a heater for canned warm drinks!
06:03:25 <Marvin--> still scary
06:06:00 * shapr boings
06:06:02 <shapr> hi juhp 
06:06:44 <juhp> hi shapr
06:06:49 <shapr> what's up?
06:07:41 <juhp> i should make another release of hircules.... just haven't had time recently
06:08:04 <shapr> new changes coming up in lambdabot
06:08:09 <juhp> did lots of ghc builds though in the last week or two... ;)
06:08:11 <juhp> cool
06:08:33 <shapr> polli moved most of the doFOO methods into the module typeclass, so modules can do almost anything
06:09:25 <juhp> i should try to sync with the newer lambdabot code too
06:11:15 <juhp> what else is new in lambdabot recently?
06:11:33 <shapr> not much new development other than that
06:11:43 <shapr> Darius has modified his EvalModule a bit
06:33:19 <Marvin--> http://www.bash.org/?77904  how...nice
06:34:03 <SyntaxPolice> 'morning
06:35:40 <shapr> g'morning SyntaxPolice 
06:42:06 <steveh> morning
06:42:22 <SyntaxPolice> shapr, steveh: how's it going?
06:42:23 <shapr> hi steveh 
06:42:33 <shapr> I'm workin, how are you?
06:42:48 <steveh> it's going pretty well here
06:45:18 <SyntaxPolice> I'm doing OK.  had a pretty good weekend. I went mountain biking (more like mud biking actually) and fell twice but didn't hurt myself.
06:45:59 <steveh> SyntaxPolice: where'd you go?
06:55:02 * Marvin-- looks at the spec for what he's going to be working on and says "oh my..."
06:55:20 <shapr> ?
06:55:34 <Marvin--> who the hell needs query operators for "exactly X words away" anyway?
06:57:22 <pesco> Arrh.
06:57:23 <shapr> sounds like fun in any case
06:57:28 <shapr> hi pesco!
06:57:32 <pesco> hey shapr!
06:58:08 <Marvin--> shapr: I mean, it's like a generalized phrase query, but still...
06:58:57 <pesco> New Apple stuff tonight. I want 64bit PowerBooks!
07:00:23 <shapr> apple is shipping 64bit hardware now?
07:00:50 <pesco> Not yet, but everyone expects them to be announced tonight. Desktops that is.
07:01:05 <pesco> IBM is building a 64bit PowerPC.
07:01:09 <shapr> nifty
07:01:26 <shapr> do you know if they'll be selling 2-way or 4-way desktops?
07:01:37 <pesco> What do you mean by "way"?
07:02:13 <shapr> 2cpus or 4cpus
07:02:25 <pesco> two
07:02:41 <pesco> Top spec is rumored to be a dual 2GHz machine.
07:02:52 <pesco> 1GHz processor bus, btw. *G*
07:02:58 <shapr> wow, spiffy
07:03:03 <pesco> Up to 8GB mem.
07:04:16 <pesco> If PCs weren't so damn cheap and I needed one for Doom, I'd want one of those.
07:04:32 <pesco> But what the hell, I just want the stuff in a PowerBook! :P
07:04:58 <shapr> PCs are required for Doom 3?
07:05:10 <pesco> I'd assumed so.
07:05:15 <pesco> Or do you kno otherwise?
07:05:45 * Marvin-- has a quote in his quote book about doom 3 systems requirements
07:06:13 <pesco> What's it say?
07:06:25 <shapr> no, I don't know
07:06:27 * shapr googles
07:06:57 <Marvin--> @ Martin: ynk, 512-node cluster of 2GHz P4 with 1G ram each
07:06:57 <Marvin--> @ Rikard: The new requirements for Doom III?
07:06:57 <lambdabot> Sorry, I don't know the command "", try "lambdabot: @listcommands"
07:06:57 <lambdabot> Sorry, I don't know the command "", try "lambdabot: @listcommands"
07:07:13 * Marvin-- thwaps lambdabot
07:07:38 <pesco> Heh, which book is that?
07:08:10 <Marvin--> ?
07:08:21 <pesco> Oh, you said "quote book"
07:08:26 <pesco> I just read "book"...
07:08:40 <Marvin--> heh
07:08:43 * pesco is playing armagetron in parallel
07:10:01 <SyntaxPolice> steveh: I went to Alum Creek
07:12:02 <pesco> Anyone here ever wish they could use regular (+) on vectors and matrices? Without defining a fakey Num instance of course.
07:12:20 <shapr> I think there's info about that on the FunDeps page on HaWiki
07:12:30 <pesco> Huh?
07:12:44 * pesco looks
07:12:50 <Marvin--> pesco: well, I guess (+) would be all right since it has the same behaviour for matrices as for integers and reals, but (*) would be tricky
07:13:37 <pesco> Yes.
07:16:05 <Marvin--> shapr: how many computer players was it you used to play against in War3?
07:16:38 <shapr> at the moment we can beat either three or four teams of two, it all depends on the lag
07:17:00 <Marvin--> okay
07:17:05 <shapr> what do you play against?
07:17:12 <Marvin--> I don't usually play against computer players
07:17:20 <shapr> oh
07:17:31 <Marvin--> yesterday I found out that a friend of mine was a lot better than when last I played him
07:17:31 <shapr> I've never played against humans
07:17:39 <Marvin--> or maybe I was out of shape, or both
07:17:58 <Marvin--> I'm thinking if he plays NE and I play Undead, we could perhaps take on quite a few computer players
07:18:15 <shapr> night elf build slowly in my experience
07:18:25 <shapr> have you tried playing with random hero?
07:18:32 <shapr> I think it's much fun.
07:18:45 <Marvin--> thing is, huntress rushes are so frickin' nasty
07:18:59 <Marvin--> random hero? no, where do you configure that?
07:19:05 <shapr> in the game setup
07:19:11 <Marvin--> huh, cool
07:19:32 <shapr> you start out with a hero as well as your normal starting units
07:20:00 <shapr> means you get a chance to gain xp early, but also means you're in real trouble if your hero dies before you build an altar
07:20:11 <Marvin--> hmm, can't really play that on a small map then, the heroes that have a summoning spell will rule
07:20:49 <shapr> I'm getting much more impressed with brilliance aura
07:21:03 <jlouis> WC III?
07:21:07 <Marvin--> it's especially great in team play
07:21:17 <Marvin--> alla auras are
07:21:19 <Marvin--> jlouis: yeah
07:21:20 <shapr> jlouis: yup
07:21:29 <shapr> I'm not so impressed by unholy aura
07:21:58 <Marvin--> well, all your units will have increased attack rates and not the enemy... that's good
07:22:03 <shapr> increases regeneration and movement, what's so great about that?
07:22:14 <Marvin--> I was pretty impressed about how my friend handled the dryads
07:22:30 <Marvin--> shapr: hmm, I thought unholy had increased attack rate
07:22:33 <shapr> dryads rock
07:22:45 <shapr> dispel, venom, air attack, and they're fast
07:22:55 <shapr> and magic immune
07:24:38 <shapr> Marvin--: since you suggested it, I've been using carrion swarm, shockwave, storm bolt lots
07:24:40 <d-bug> shapr & Marvin--: it's amazing how one forgets the time while playing those games. I played Rise Of Nations from 22 to 0600 this weekend
07:24:47 <shapr> truly
07:25:01 <tic> that, or coding immensily(sp?)
07:25:04 <shapr> I can play for twelve or fifteen hours without noticing any time passing.
07:25:13 <shapr> same for coding binges
07:25:28 <Marvin--> d-bug: :)
07:25:46 <Marvin--> shapr: I suggested carrion swarm?
07:25:59 <d-bug> shapr: I should buy a new chair or something, that session gave me neck pain "?rnnacke" :-/
07:26:03 <jlouis> You are weird. Here I sit hacking on a simple Proof carrying code thing and you just play WC III
07:29:11 <earthy> `Simple' and `Proof carrying code' in one sentence...
07:29:15 <earthy> *sigh* :)
07:29:43 <d-bug> that is weird ;)
07:30:51 <jlouis> earthy: indeed not. The only problem will be how much you will be able to prove
07:31:13 <earthy> okay, granted
07:31:17 <earthy> some things *are* simple
07:31:28 * steveh is learning about lazy data structures and amortized costs and here you are playing WC III
07:31:30 <earthy> there wouldn't be any PhD's in it if it was all simple. ;)
07:31:35 <jlouis> The only dangerous operation my language has is division by zero
07:31:50 <jlouis> steveh: Chris Okasaki?
07:32:01 <steveh> jlouis: yep, pretty good book :)
07:33:02 <jlouis> steveh: reached his chapter about keeping amortization when using a data structure persistently?
07:33:11 <jlouis> hint: call-by-need ;P
07:33:24 <steveh> that's where I am now
07:33:34 <jlouis> Logical futures, right?
07:33:54 <steveh> yes
07:34:12 <steveh> 6.2 Reconciling Amortization and Persistence
07:34:12 <steveh> :)\
07:34:59 <d-bug> jlouis: Make / return a Maybe then :)
07:36:03 <jlouis> d-bug: not funny, then I have to check on it all over the program. Nah, we better proove it cannot happen ;)
07:36:11 <earthy> d-bug: if you're trying to proove roperties, Maybe doesn't really help you.
07:36:15 <earthy> -o
07:37:02 <d-bug> jlouis: What will you do with those cases where you can't prove it can't happen?
07:37:26 <jlouis> d-bug: as of now. Nothing. Goedels incompleteness theorem and stuff
07:37:33 <earthy> d-bug: carry along a proof of incorrectness. :)
07:37:45 <d-bug> :)
07:38:05 <jlouis> d-bug: in a real setting you would have a certifying compiler (like CCured) in front of it. 
07:38:23 <jlouis> so, when it knew things to be unproveable, it would rewrite it into a simpler form
07:38:32 <jlouis> (for instance adding a bounds check to an array)
07:38:44 * earthy takes down notes
07:38:47 <jlouis> and then, it would be proveable
07:39:01 <earthy> `good idea'
07:39:10 <jlouis> earthy: George C. Necula
07:39:12 <jlouis> Peter Lee
07:39:26 <jlouis> they have some quite interesting papers
07:40:06 * earthy hugs google
07:40:15 * jlouis smirks
07:40:26 <jlouis> citeseer is good too ;{
07:41:06 <earthy> true ;)
07:41:44 <earthy> but google tends to throw out people's personal homepages, and I like people's own links more than I like citeseer's links. :)
08:08:57 <hdaume> hi all
08:09:01 <Riastradh> Hi.
10:20:29 <shapr> @yow
10:20:30 <lambdabot> When you said ``HEAVILY FORESTED'' it reminded me of an overdue
10:20:30 <lambdabot>  CLEANING BILL..  Don't you SEE?  O'Grogan SWALLOWED a VALUABLE
10:20:30 <lambdabot>  COIN COLLECTION and HAD to murder the ONLY MAN who KNEW!!
10:21:32 <kunphuzil> Heh, cool
10:30:49 <tez> shapr: Is there a webpage that I can found out more about lambdabot, or is it an unreleased pet project of yours?
10:31:41 <Riastradh> @fact source
10:31:42 <lambdabot> http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/haskell-libs/libs/lambdabot/
10:32:52 <tez> lol
10:32:58 <tez> cheers
10:46:37 <shapr> it's a project of #haskell not mine personally
10:46:37 <shapr> I'm just head cheerleader.
10:51:40 <tez> Ah
11:50:38 <Igloo> I swear each time I look at the contest page the picture has changed
11:50:52 <hdaume> :)
11:53:45 <cale> which contest?
11:53:49 <hdaume> icfp
11:53:54 <hdaume> http://icfpcontest.org
11:53:54 <Igloo> http://www.dtek.chalmers.se/groups/icfpcontest/index.html
11:54:10 <Igloo> Are you entering, Hal?
11:54:22 <hdaume> i don't know...
11:54:26 <Igloo> :-)
11:54:28 <hdaume> depends how busy i am :)
11:54:28 <hdaume> you?
11:54:39 <hdaume> (and whether i find the task interesting or not)
11:54:41 <Igloo> Yeah, got a uni team
11:54:45 <hdaume> (and wither i'm feeling lazy or not)
11:54:47 <hdaume> (and ...)
11:54:52 <hdaume> s/wither/whether
11:54:57 <hdaume> cool
11:55:07 <inkedmn> hdaume: YAHT kicks ass, thanks :)
11:55:17 <hdaume> inkedmn: :) thanks
12:25:27 * shapr boings
12:26:23 * cale p'kangs
12:26:31 * shapr k'pangs
12:26:38 <shapr> I wonder what that means in klingon.
12:26:42 * andersca whabooms
12:27:09 * shapr tries to reload some monadic state
12:28:23 * SyntaxPolice dances like a fool
12:28:38 <cale> We are no longer the knights who say "Ni!". We are now the knights who say "Ekki ekki ekki ekki p'kang zoom-boing, z'nourrrwringmm"
12:28:50 * andersca drools
12:29:00 <Riastradh> Ecky-ecky-ecky-ecky-pikang-zoop-boing-goodem-zoo-owli-zhiv!
12:29:07 <shapr> yay, I have time to write Haskell
12:29:14 * shapr cranks up bouncy music
12:29:54 * Riastradh is listening to Mozart's Symphony No. 40.
12:30:09 * shapr is listening to The Chemical Brothers - Block Rockin' Beats
12:30:19 * inkedmn is listening to Sarah McLachlan
12:30:28 <shapr> hi Dark-Star 
12:30:54 * cale is listening to a band called "Stuff" with Eric Gale.
12:31:26 * SyntaxPolice suddenly feels like putting on some music
12:31:28 <SyntaxPolice> or should I make coffee?
12:31:49 <cale> I recommend both.
12:32:01 <inkedmn> SyntaxPolice: agreed, both.
12:32:07 <inkedmn> and both should be strong :)
12:32:07 <cale> The coffee idea is a good one. I think I'll do that now.
12:32:19 <shapr> mmm, coffee
12:32:39 * andersca sips some more
12:33:13 * inkedmn needs to buy more coffee
12:33:29 * SyntaxPolice recruits Mark Carroll to help him make coffee (its an aetion tradition by now)
12:33:43 <andersca> shapr: so, we're starting to get D-BUS java bindings and D-BUS .NET bindings
12:33:49 <andersca> shapr: "you know what to do!"
12:35:18 <shapr> whine?
12:37:56 <shapr> does anyone have a darcs repos running?
12:38:00 * jlouis is listening to Clawfinger
12:38:14 <shapr> what's Clawfinger?
12:38:29 <jlouis> Some Rammstein-like band
12:38:33 <andersca> shapr: you need to write a Haskell binding of course
12:38:50 <shapr> oh
12:39:22 <Marvin--> hrrrm, X really wasn't happy about running NWN in WineX
12:39:37 <Marvin--> (yes, I know there's a linux client, this was just to test what WineX can do)
12:41:10 <shapr> suddenly I wish I could divide a diff up into pieces and commit them separately
13:02:12 * shapr refactors lambdabot 
13:02:57 * steveh ponders XP and Haskell
13:03:07 <shapr> eXtreme Programming?
13:03:10 <steveh> yes :)
13:03:13 * Riastradh wants TwistedHaskell.
13:03:14 <steveh> eXtreme!
13:03:19 <shapr> ya know, I've been thinking about XP and Haskell myself...
13:03:29 <shapr> I can't figure out how to do test-first with QuickCheck
13:03:31 <shapr> I'm sure it's possible
13:03:31 <steveh> I think pair programming is a pretty good idea
13:03:37 <shapr> yes, pair programming is nifty
13:03:43 <Riastradh> shapr, work on TwistedHaskell!
13:03:45 <steveh> and it transcends programming language :)
13:03:55 <shapr> Riastradh: nah, I'm having fun with lambdabot
13:04:10 <Riastradh> shapr, with TwistedHaskell, lambdabot could be a lot simpler in places.
13:04:11 <cale> @yow
13:04:12 <lambdabot> Where's my SOCIAL WORKER?
13:04:19 <shapr> how so?
13:04:41 <Riastradh> shapr, have you ever used twisted.internet?
13:04:49 <shapr> no, not really.
13:05:35 <Riastradh> http://intarweb.us:8088/twisted_internet-0.html
13:06:12 <shapr> it refuses connection
13:06:17 <Riastradh> Curses.
13:06:23 <SyntaxPolice> shapr: are you hacking on lambdabot ATM?
13:06:24 <cale> http://twistedmatrix.com/products/twisted ?
13:06:27 <shapr> SyntaxPolice: yah
13:06:27 <Riastradh> The server upon which it ran was having some, ah, problems.
13:06:29 <shapr> cleaning stuff up
13:06:59 <shapr> making a few minor changes in preparation for some larger changes
13:07:12 <Riastradh> glyph thinks he found a new kind of elementary particle in the heat sink of that server.
13:07:36 <SyntaxPolice> I was going to hack-in that @wiki thing which concats the argument to the prefix for the wiki site, but I couldn't get it to build because of that database problem (couldn't find HSQL) 
13:07:54 <SyntaxPolice> then I got pissed off and started working on Library Infrastructure :)
13:07:56 <shapr> just comment out that module in Main.hs
13:08:01 <shapr> yah, I understand that
13:08:25 <SyntaxPolice> I get pissed off all the time now, which is good since it makes me hack
13:08:30 * shapr grins
13:08:37 <shapr> but be careful of the dark side...
13:09:15 <steveh> hehe
13:09:25 <andersca> man!
13:09:26 <SyntaxPolice> heh
13:09:27 <andersca> dasher is so cool
13:09:27 <steveh> forever shall it dominate your destiny!
13:11:22 <SyntaxPolice> OKOK, point taken
13:11:32 <shapr> just teasing :-)
13:11:35 * SyntaxPolice gets his chee flowing again
13:14:02 <SyntaxPolice> chessModule seems to want a module called Board?
13:14:13 <SyntaxPolice> which I don't see, but I'll cvs up
13:14:14 <shapr> yah, you need to include ../chess
13:15:16 <Riastradh> @prelude (==)
13:15:18 <lambdabot> *** "(==)" prelude "Haskell Standard Prelude Dictionary": text follows
13:15:18 <lambdabot> (==)
13:15:18 <lambdabot>   instance (Ix a, Eq b) => Eq (Array a b) where
13:15:18 <lambdabot>     a == a'   =   assocs a == assocs a'
13:15:18 <lambdabot>   infix  4 ==
13:15:20 <lambdabot>   class Eq a where
13:15:22 <lambdabot>     (==) ::  a -> a -> Bool
13:15:24 <lambdabot>     x == y      = not (x/=y)
13:15:26 <lambdabot> [there's @more]
13:15:43 <Riastradh> Gack, it shows instance definitions, too?
13:17:27 <steveh> shouldn't it show everything pertinent in the prelude?
13:18:06 <Riastradh> I don't think it should show instance definitions.
13:18:47 <cale> what if you're interested in the instance definition?
13:21:11 <cale> maybe it should show the core definition first, and only show instance definitions after the first @more?
13:21:54 <shapr> HToolkit is a real pain to build.
13:28:10 <jlouis> mmmm, Blade Runner Soundtrack - Rachels Song :)
13:28:25 <jlouis> And my verification condition generator seems to work correctly :)
13:28:32 <shapr> yay
13:29:21 <jlouis> if a datatype derives Eq, does it derive it by structural equality?
13:30:29 * shapr wonders if that's a deconstructivist viewpoint
13:30:44 <shapr> is the glass halfway built? or halfway destroyed?
13:31:16 <shapr> jlouis: I don't know.
13:31:48 <jlouis> going to test it then :)
13:31:53 <Riastradh> The optimist says the glass is half-full, the pessimist says the glass is half-empty, and the engineer says that the glass is twice as big as it needs to be.
13:32:15 * shapr grins
13:34:53 <jlouis> data Test = A | B | C | D deriving Eq
13:34:54 <jlouis> it is ;)
13:37:02 <steveh> nah
13:37:18 <steveh> any engineer worth their salt knows the value of tolerating a wide range of conditions
13:37:34 <steveh> a smaller glass couldn't cope with too much water
13:37:45 <steveh> :)
13:38:11 <Riastradh> Engineers worth their salt also know that overkill is one of the worst possible afflictions.
13:38:32 <steveh> well, if the glass were only 1/4 full or so
13:38:39 <steveh> then yes
13:39:06 <steveh> of course one would have to analyze the possible quantities
13:39:21 <steveh> but I for one would prefer a glass with extra capacity ;)
13:39:57 <steveh> in fact, overkill is aka "over-engineering"
13:42:04 <shapr> ok, lambdabot in cvs appears sane.
13:47:05 <shapr> wow, ICFP contest has $1500 in cash prizes and copies of FoP
13:47:09 <shapr> ok, now I really want to win.
13:47:30 <shapr> so far I have team functional beer on my side.
13:48:13 <jlouis> Team functional beer?
13:48:28 <shapr> the famous Tom Moertel :-)
13:48:41 <jlouis> hum...
13:48:53 <jlouis> Unfortunately I have no time this year :(
13:48:56 <shapr> aww
13:48:56 <jlouis> which is sad
13:48:58 <shapr> that sucks
13:49:15 <jlouis> I would have loved being there with a Haskell solution :)
13:49:17 <shapr> I'm self-employed, so I have the opportunity to binge-work and binge-play
13:49:29 <shapr> I've reserved some binge time that weekend.
13:49:41 <Igloo> :-)
13:50:16 <shapr> hi Igloo
13:50:18 <shapr> what's up?
13:50:45 <Igloo> Hmm, rejection mainly
13:50:54 <shapr> who's rejecting you?
13:50:56 <Igloo> HW
13:51:48 <shapr> oh
13:52:05 <Igloo> Which means it'll be harder for me to egt to ICFP too  :-(
13:52:08 <shapr> silly question, do you get constructive criticism along with a rejection?
13:52:15 <shapr> :-(
13:52:33 <Igloo> Yes
13:52:43 <shapr> that's good to hear.
13:52:50 <shapr> I think I'll write up some papers and submit them then.
13:52:57 <Igloo> You get the (3 or more for HW) judges comments (possibly filtering out some stuff, it didn't say)
13:53:44 <shapr> that's really useful input then.
13:53:53 <Igloo> Yup yup
13:54:54 <shapr> how many times does it usually take for a paper to be accepted?
13:55:04 <shapr> is it like book publishing? six rewrites if you're lucky?
13:55:40 <hdaume> once :)
13:55:45 <shapr> oh
13:55:45 <hdaume> maybe twice
13:56:31 <jlouis> Depends much on what you are trying to get in
13:56:31 <Igloo> By the time you'd submitted to 6 suitable conferences 3 years would have past and it would be obsolete  :-)
13:56:55 <Igloo> There were 30 submissions for HW with 10 selected (which was presumably roughly fixed by it only being 1 day)
13:57:20 <jlouis> HW?
13:57:29 <Riastradh> Haskell Workshop.
13:57:44 <jlouis> oh
13:59:46 <shapr> andersca: do you know when polli returns?
14:00:05 <Marvin--> Igloo: damn, now you're making me nervous about writing articles
14:11:21 <shapr> hi Heffalump 
14:11:24 <shapr> what's up?
14:11:38 <Heffalump> hiya, not much
14:11:57 <Marvin--> <Jag> I think I'm going to print out the Kama Sutra and label it "TFM" so I can leave it laying around work.
14:11:59 * Marvin-- laughs
14:12:03 <Marvin--> "it's funny because it's true"
14:12:12 * shapr grins
14:12:21 <Riastradh> Kama Sutra?
14:13:05 <jlouis> Good book indeed
14:13:48 <kunphuzil> Isn't putStrLn producing side effects? 
14:14:04 <shapr> yes
14:14:27 <Riastradh> Sort of.
14:14:32 <Riastradh> Internally, yes.
14:16:21 <Riastradh> If you really understand monads and the IO monad, you'll see that to the programmer it's purely functional.
14:16:42 <shapr> yup
14:17:20 <kunphuzil> Hmm, for some things I like scheme and others haskell so far. 
14:17:37 <kunphuzil> Haven't found which I like better. I think I understand scheme a little better tho. 
14:18:08 <Riastradh> Monads can be confusing at first.
14:18:14 <Riastradh> Have you read 'What the Hell are Monads?'
14:18:19 * shapr still isn't quite sure
14:18:30 <kunphuzil> No, I'm not into monads etc. yet
14:18:32 <Riastradh> shapr, of what?
14:18:39 <shapr> of how to build my own monad
14:18:41 <shapr> for example...
14:18:48 <shapr> TwistedHaskell 
14:18:48 <Riastradh> kunphuzil, ok, well, when you do get to them, read that -- Google should find it fairly rapidly.
14:18:57 <kunphuzil> ok
14:19:28 <Riastradh> shapr, don't bother with twisted.spread in Haskell yet; get twisted.internet first.
14:19:31 * Riastradh will help.
14:19:49 <shapr> the way I see it, TwistedHaskell is mostly a state monad, holding local state that matches remote server state
14:20:16 <Marvin--> shapr: have you read the notes from Koen's course here? Introducing monads via embedded languages helped me a lot
14:20:22 <shapr> show me?
14:20:28 <shapr> what's the url?
14:20:38 <Riastradh> TwistedHaskell is a state monad...?
14:20:41 <shapr> sure,
14:20:42 <Marvin--> http://www.cs.chalmers.se/Cs/Grundutb/Kurser/afp/schedule.html
14:20:48 <Riastradh> I thought it was a library.
14:21:08 <kunphuzil> Even tho this is a haskell channel, which do you prefer more, scheme or haskell?
14:21:18 * Riastradh prefers Scheme ever so slightly more.
14:21:22 * shapr prefers Haskell
14:21:29 <shapr> though scheme is very cool, I agree.
14:21:50 <kunphuzil> Yeah, i'm kind of learning both
14:22:18 <kunphuzil> can't get haskell-mode to work tho in emacs
14:23:30 <shapr> I may be able to help you there.
14:25:16 <kunphuzil> cool
14:25:22 <shapr> what's the problem?
14:25:27 <kunphuzil> well
14:25:31 <kunphuzil> i open a .hs file, 
14:25:44 <kunphuzil> then try to do C-c C-l but i only get a beep. where it should open hugs
14:25:57 <shapr> do you see an error message?
14:26:43 <kunphuzil> no
14:26:48 <kunphuzil> i'll show you my .emacs
14:26:55 <shapr> do you have it online?
14:27:20 <kunphuzil> my .emacs?
14:27:23 <kunphuzil> well, i can make it online
14:28:22 <kunphuzil> shapr: http://devusb.us/~kunphuzil/.emacs
14:29:05 * shapr looks
14:29:38 <shapr> kunphuzil: I bet quack is wrong in there.
14:29:55 <kunphuzil> quack words fine.. 
14:30:08 * shapr shrugs
14:30:29 <shapr> I've never heard of an elisp module named quack.
14:30:36 <shapr> learn something everyday
14:30:43 <andersca> quack quack
14:30:47 * andersca quacks!
14:30:49 <Riastradh> http://www.neilvandyke.org/quack/
14:31:02 <kunphuzil> quack is for scheme editing
14:31:03 <shapr> wow, spiffy
14:31:32 <shapr> kunphuzil: ok, then I think I'm right, "quack-browse-url-browser-function"
14:31:53 <Riastradh> shapr, don't worry about the Quack stuff.
14:32:03 <kunphuzil> i don't see that
14:32:16 <shapr> kunphuzil: line 11
14:32:16 <kunphuzil> oh
14:32:24 <kunphuzil> automatic thing
14:33:09 <shapr> kunphuzil: ok, hit C-c C-l in a .hs file, and then hit C-h l
14:33:25 <shapr> first, is the .hs buffer really in haskell-mode ?
14:33:33 <kunphuzil> ah
14:33:52 <kunphuzil> no, i didn't do haskell mode first (M-x haskell-mode) when i do, i get:
14:33:52 <shapr> C-h l shows the lossage
14:33:56 <kunphuzil> run-hooks: Cannot open load file: haskell-hugs
14:34:20 <shapr> try 'locate haskell-hugs.el'
14:34:35 <shapr> I suspect it's not in your load-path
14:34:48 <kunphuzil> /usr/share/emacs/site-lisp/haskell-mode/haskell-hugs.el
14:34:53 <shapr> aha
14:35:06 <kunphuzil> all my lisp files are there (that i've installed with emerge)
14:35:07 <shapr> does 'locate haskell-mode.el' give you the same dir?
14:35:28 <kunphuzil> yes
14:35:37 <shapr> in that case you need to change this line: "(setq load-path (cons "/usr/portage/app-emacs/haskell-mode" load-path))"
14:35:47 <kunphuzil> doh!
14:36:02 <kunphuzil> yeah, that's the problem
14:36:05 <shapr> the explicit solution is to point that to /usr/share/emacs/site-lisp/haskell-mode/ but I don't think it's the best solution
14:36:26 <shapr> usually, a site-lisp dir has an autoload.el or something that add load-path stuff for all of the subdirs when emacs starts
14:36:45 <kunphuzil> oh
14:37:34 <shapr> for example, I have /usr/share/emacs21/site-lisp/debian-startup.elc which is rebuilt whenever I install emacs packages
14:38:09 <kunphuzil> oh
14:38:24 <kunphuzil> i loaded haskell-mode,
14:38:32 <kunphuzil> er
14:38:40 <shapr> oh, btw
14:38:50 <kunphuzil> and i do C-c C-l and it asks me what file to save in..
14:39:10 <shapr> you won't need to manually do M-x haskell-mode if you put (require 'haskell-mode) just after that path statement
14:39:48 <kunphuzil> ok
14:39:53 <shapr> at least, that should work
14:40:23 <shapr> try it, does it work?
14:40:42 <kunphuzil> well, haskell mode is already loaded so i don't know
14:40:54 <shapr> I have my .emacs online, if you want to look at an existing init file.
14:41:02 <shapr> it is a bit large though.
14:41:10 <shapr> 1300 lines or so
14:41:13 <Riastradh> My Haskell stuff looks just like kunphuzil's.
14:41:19 <kunphuzil> shapr: whoa
14:41:31 <Riastradh> Mine is only 154 lines.
14:41:33 <kunphuzil> mine is 50
14:41:45 <shapr> I like to configure stuff
14:41:55 <shapr> though I still can't get autoinsert to work >:-(
14:42:39 <shapr> I wrote a neat one-button emacs+haskell unit-test thingy
14:43:42 <kunphuzil> shapr: ?
14:43:47 <stevehu> helloooo #haskell
14:43:48 <shapr> what?
14:43:51 <shapr> hellooo stevehu
14:43:58 <Riastradh> Hiiii, stevehu.
14:43:59 <kunphuzil> shapr: i mean, what does it do?
14:44:00 * stevehu is using zenirc.
14:44:03 <shapr> what does what do?
14:44:06 <Riastradh> Heretic!
14:44:11 <shapr> stevehu: you should try ERC
14:44:44 <shapr> kunphuzil: you mean the one-button unit testing thingy?
14:44:46 <Riastradh> stevehu - You SHALL try ERC.
14:44:49 <stevehu> Riastradh: To top it off I'm using XEmacs :-P
14:44:55 <shapr> I'm using ERC Version 4.0 $Revision: 1.534 $ with XEmacs 21.4 (patch 12) "Portable Code" XEmacs Lucid!
14:45:00 <stevehu> shapr: I halfheartedly tried it but it gave me errors.
14:45:05 <kunphuzil> I tried ERC and it annoyed me
14:45:07 <Riastradh> What's wrong with XEmacs?
14:45:12 <shapr> I luv ERC, and XEmacs
14:45:21 <kunphuzil> I <3 emacs
14:45:22 <Riastradh> kunphuzil, you were saying a couple days ago that ERC was really cool...heh...
14:45:23 <kunphuzil> but not ERC
14:45:24 <shapr> I wrote a very tiny part of ERC.
14:45:29 <stevehu> Riastradh: XEmacs is considered heretical by some on #emacs :)
14:45:45 <Riastradh> stevehu, bah!
14:45:51 <shapr> I even have the FSF copyright assignment papers in front of me.
14:45:53 <kunphuzil> Riastradh: well, i dunno. i like it seperate i guess. 
14:46:06 <Riastradh> Separate from what?
14:46:23 <kunphuzil> i hate how it scrolls along with the text.. i like the part where you enter text to stay fixed
14:46:28 <kunphuzil> Riastradh: from where i am coding
14:46:32 <jlouis> Emacs? Escape-meta-alt-control-shift you mean?
14:46:32 <shapr> kunphuzil: you can do that.
14:46:43 * Riastradh doesn't like that, either, actually, but aside from that he likes ERC.
14:46:44 <shapr> there's a minibuffer entry setting.
14:47:04 <Riastradh> I don't think it should use the minibuffer either.  It should have its own buffer.
14:47:08 <shapr> there's also a "stay with a full screen" setting
14:47:21 <shapr> so that the ERC> prompt is always at the bottom of the screen
14:47:39 <kunphuzil> hmm 
14:48:03 <kunphuzil> minibuffer?
14:48:15 <shapr> yah, the tiny bit under the mode-line
14:48:27 <shapr> where it shows messages and lets you type stuff when you hit M-x
14:48:43 <kunphuzil> oh yeah
14:48:51 <kunphuzil> so you can type stuff in the minibuffer ?
14:49:03 <shapr> that's one ERC setting, yes.
14:49:16 <shapr> I tried it once, it didn't appeal to me, so I turned it off again.
14:49:26 <kunphuzil> i also don't like how it's kind of a lot of work to change to a different channel in erc
14:49:36 <stevehu> The ZenIRC programmer seems very adamant about IRC = waste of time :)
14:49:54 <kunphuzil> stevehu: yeah, it is.. heh
14:50:00 <shapr> kunphuzil: first of all, try iswitchb, second of all, try erc-track and C-c C-space
14:50:29 <kunphuzil> what do all those do? 
14:50:40 <shapr> iswitchb is a much spiffier way to switch to any buffer
14:50:41 <kunphuzil> plus, i think having IRC in where i am coding gets me distracted more
14:51:11 <shapr> erc-track shows you in the mode-line when a channel has activity, and with gnumacs, the channel abbrev changes color to match the activity
14:51:38 <shapr> so if you've changed the font of the highlight for your nickname, that shows up in the mode-line
14:52:20 <shapr> or if the activity is from an erc-pal or erc-fool, that also shows up in the mode-line channel activity indicator.
14:52:23 <kunphuzil> yeah, i get that already
14:52:27 <shapr> :-)
14:52:28 <kunphuzil> automagically
14:52:31 <shapr> yup
14:52:35 <kunphuzil> but, 
14:52:41 <shapr> doesn't work in xemacs because I never bothered to send in patches.
14:52:42 <kunphuzil> it only shows part of the channel name
14:52:52 <shapr> you can change how much or little of the channel name it shows.
14:53:15 <shapr> my mode-line is busy enough, I want as little space taken as possible
14:53:26 <kunphuzil> i also dislike how it doesn't show how many users. and how it organizes the users.. 
14:53:36 <shapr> have you tried erc-speedbar?
14:53:42 <shapr> it looks a lot like mIRC
14:54:00 <kunphuzil> i like irssi a lot :/ 
14:54:05 <shapr> ok
14:54:09 <kunphuzil> well, can i run a terminal in emacs?
14:54:12 <shapr> sure
14:54:14 <shapr> eshell is spiffy
14:54:20 <kunphuzil> if i can, i can just run irssi in the terminal of emacs 
14:54:24 <shapr> that's true
14:55:01 <shapr> if you just want to use irssi, that's okay too :-)
14:55:19 <kunphuzil> maybe i'm not ready for ERC :P
14:55:39 <kunphuzil> i don't know why, i mean if I have a crap irc client it shouldn't really matter. irc isn't that important
14:55:49 <kunphuzil> (not saying erc is crap)
14:56:03 <stevehu> anyone use "liece?"
14:56:14 <shapr> on the other hand, I think everything should be done well as possible
14:56:36 <kunphuzil> yeah
14:56:50 <shapr> even though I despise cleaning cat toilets I've gotten very efficient at it so that it's over quickly.
14:58:05 <kunphuzil> lol
14:59:20 <shapr> hey Riastradh, you busy?
14:59:35 <Riastradh> Not particularly.
14:59:57 <shapr> mind if I bounce the twisted + monad thingy ?
15:00:11 <Riastradh> OK.
15:00:33 <shapr> I was thinking of twisted haskell as an encoder wrapper on a socket
15:01:04 <Riastradh> No, no, you're thinking of twisted.spread.
15:01:19 <shapr> so if you wanted to make a simple wrapper, say "base64 encoder + send socket" and "receive socket + base64 decode" would that be a good use of a monad?
15:02:22 <Riastradh> Base64...?
15:02:41 <shapr> yah, assume the other end needs input base64 encoded
15:03:40 * Riastradh is a bit confused now.
15:03:51 <shapr> what about an xmlrpc library?
15:03:55 <Riastradh> What about it?
15:04:16 <cale> If you're unfamiliar with it putting data in base64 represented as a textual subset of ascii is a common way to encode binary data over text channels so it won't be mangled.
15:04:18 <shapr> is a monad a good way to wrap an xmlrpc wrapper around a socket?
15:04:32 <Riastradh> cale, yeah, I know what Base64 is.
15:04:40 <Riastradh> OH!
15:04:50 <Riastradh> Are you talking about just layers over sockets?
15:04:53 <shapr> yah
15:04:57 <Riastradh> Why monads, though?
15:05:00 <Riastradh> I think the best thing would be:
15:05:08 <Riastradh> class Socket a where
15:05:10 <shapr> because an xmlrpc wrapper would require statefulness as well
15:05:12 <Riastradh>     openSocket :: a
15:05:20 <shapr> with base64, you could compose a codec
15:05:23 <shapr> but not with xmlrpc or SOAP
15:05:36 <Riastradh> Er, no, I'm confused again.
15:06:06 <shapr> you can't just directly send a message, various negotiation has to happen
15:06:35 <shapr> same for a twisted.spread server, it's acts as a partially transparent redirection to remote services
15:06:45 <Riastradh>     send :: String -> a -> a
15:06:55 <shapr> in python, you have local proxies. in haskell you'd have to hold local state somehow
15:06:59 <Riastradh> ...more methods here...
15:07:02 <Riastradh> Then:
15:07:31 <Riastradh> instance Socket a => Socket (BananaSocket a) where
15:07:34 <Riastradh>     openSocket = ...
15:07:58 <Riastradh>     send str (BananaSocket realSocket) = send (bananify str) realSocket
15:08:46 <Riastradh> Er, something like that.
15:11:00 <Riastradh> Oh, hmm.
15:11:02 <shapr> ?
15:11:56 <Riastradh> Is this layering stuff sort of what you were talking about?
15:12:07 <shapr> I think so
15:12:37 <Riastradh> How were you thinking of monadifying this?
15:14:08 * shapr thinks
15:15:25 * esap just improved http://haskell.org/hawiki/AbstractDataType
15:15:45 <kunphuzil> wiki's are so awesome
15:15:51 * shapr agrees
15:15:54 <kunphuzil> is the hawiki in haskell?
15:16:00 <shapr> nope
15:16:02 <cale> I think that the web needs more wikis.
15:16:28 <shapr> wouldn't be too hard to write a wiki in Haskell if you followed the original wiki
15:17:25 <kunphuzil> right now i think wikis are becoming a lot more popular
15:17:44 <kunphuzil> FHP is centered around it's wiki
15:18:06 <kunphuzil> oh hawiki uses moinmoin it looks like
15:18:29 <shapr> yup
15:19:03 <kunphuzil> i think moinmoin is the most popular
15:19:10 <shapr> with good reason
15:19:23 <kunphuzil> it's the only one i've seen infact besides swiki i think
15:20:08 <cale> I'm running an altered version of OddMuse on my computer.
15:20:37 <shapr> isn't Alex Schroeder the OddMuse guy?
15:20:53 <cale> There are actually quite a lot of wiki programs out there. shapr: I'll check.
15:21:00 <Heffalump> moinmoin is the only Wiki I can remember seeing that I actually like the look of
15:21:22 <shapr> iirc, swiki and twiki look nice also
15:21:34 <shapr> but I don't think any other wiki has all the moinmoin features
15:23:53 <cale> Yes, Alex Schroeder wrote OddMuse
15:24:02 <shapr> he's a nice guy.
15:29:52 * esap again improved AbstractDataType.
16:30:19 --- topic: '["We put the Funk in Funktion","See logs @  http://tunes.org/~nef/logs/haskell/","Learning Haskell - http://www.haskell.org/learning.html","ICFP Contest http://www.dtek.chalmers.se/groups/icfpcontest/","GHC 6.0 pre-debs: http://people.debian.org/~igloo/","ghc rpms: http://haskell.org/~petersen/rpms/ghc/","contact shapr for #haskell ICFP contest team members","arrows preprocessor pre-debs: deb http://urchin.earth.li/~ganesh/apt/ unstable/'
16:30:19 --- topic: set by Heffalump on [Fri Jun 20 19:23:46 2003]
16:30:19 --- names: list (clog esap saz jao shapr` stevehu kunphuzil tic gdsx Heffalump ludde juhp Segora vegai cm shapr hdaume lambdabot el_diego kosmikus|away Igloo andersca xkb mattam jlouis Chilli ChilliX dennisb mgoetze|away Fractal sjj tmoertel Rafterman emu wax smklsmkl wli alanl_ Riastradh themus galority SyntaxPolice steveh thornber Strike whee polli norpan S-)
16:31:16 <shapr`> whee
19:45:18 --- topic: '["We put the Funk in Funktion","See logs @  http://tunes.org/~nef/logs/haskell/","Learning Haskell - http://www.haskell.org/learning.html","ICFP Contest http://www.dtek.chalmers.se/groups/icfpcontest/","GHC 6.0 pre-debs: http://people.debian.org/~igloo/","ghc rpms: http://haskell.org/~petersen/rpms/ghc/","contact shapr for #haskell ICFP contest team members","arrows preprocessor pre-debs: deb http://urchin.earth.li/~ganesh/apt/ unstable/"]'
19:45:18 --- topic: set by Heffalump on [Fri Jun 20 19:23:46 2003]
19:45:19 --- names: list (clog cl1dev Pseudonym Riastradh cale keverets dbagnell esap saz shapr stevehu kunphuzil tic gdsx Heffalump ludde juhp Segora vegai el_diego kosmikus|away Igloo xkb jlouis Chilli dennisb S- norpan polli whee Strike thornber SyntaxPolice galority mgoetze|away Fractal sjj tmoertel Rafterman emu wax themus alanl_ wli smklsmkl)
20:39:40 <cale> The wallops on freenode always remind me of supermarket announcements :)
20:40:58 <cale> That, or announcements made by a pilot.
20:42:01 <kunphuzil> How do I use the filter function?
20:42:42 <cale> filter p l where p is a function that returns true or false on the elements of the list l.
20:43:19 <cale> It will return a list containing only those elements of l for which p returns true.
20:43:34 <kunphuzil> can you give me an example?
20:44:01 <cale> filter (< 5) [1, 7, 3, 4, 10, 2] = [1, 3, 4, 2]
20:44:10 <kunphuzil> ah
20:45:01 <kunphuzil> thanks
20:45:11 <cale> no problem
20:49:27 <kunphuzil> What does F n mean? (n below the F..)
20:50:56 <cale> you mean the n is subscript?
20:51:04 <kunphuzil> yeah..
20:51:48 <cale> it could mean anything - but generally you can tell that there would probably be a lot of F's and they're indexed by n's. Like F_0, F_1, F_2 etc.
20:52:00 <cale> F_n just means "one of those".
20:52:25 <cale> Given that it's an F, it's probably a function of some kind.
20:52:47 <kunphuzil> Hmm, i'm not sure if that is what they mean. it is descrive the fibonacci sequence.. is it still the same answer?
20:52:47 <cale> All of this is guesswork on my part though. It's just notation.
20:53:02 <cale> Oh, the fibonacci sequence.
20:53:04 <kunphuzil> describing*
20:53:29 <cale> Yeah, then F_0 would be the first one say, F_1 the second, and so on.
20:54:14 <cale> You're probably looking at something that looks like F_n = F_(n-1) + F_(n-2)
20:54:59 <kunphuzil> yes, i am
20:55:31 <steveh> mm memoization
20:55:51 <cale> steveh: heh :)
20:56:25 <cale> so, that means to get the next fibonacci number, add the previous two.
20:56:53 <kunphuzil> Hmm, I have this so far:
20:57:01 <kunphuzil> fib n 1 = n
20:57:02 <kunphuzil> fib n 2 = n
20:57:02 <kunphuzil> fib n = 1 * fib (n-2) + fib (n-1)
20:57:08 <kunphuzil> ERROR "/home/jtmendes/haskell/code/fib.hs":2 - Equations give different arities for "fib"
20:57:26 <cale> er, yeah
20:57:54 <cale> you want to get rid of the n's before the = signs in the first two lines.
20:58:16 <kunphuzil> that's what i thought too, then i get this:
20:58:19 <cale> and "1 *" doesn't do anything.
20:58:26 <kunphuzil> Undefined variable "n
20:58:43 <kunphuzil> i think i know.. 
20:58:46 <cale> er, and change the n after to the number it should be
20:58:53 <cale> F_1 = 1
20:58:55 <cale> F_2 = 1
20:59:01 <kunphuzil> yeah
20:59:10 <cale> F_n = F_(n-1) + F_(n-2)
20:59:11 <kunphuzil> yay :)
20:59:16 <cale> fib 1 = 1
20:59:20 <cale> fib 2 = 1
20:59:23 <kunphuzil> with a little help, i did it ;)
20:59:26 <steveh> kunphuzil: you just want to compute (fib 1), (fib 4), etc, there should only be one argument :)
20:59:29 <steveh> congrats :)
21:00:05 <cale> :)
21:00:39 <kunphuzil> recursive functions are cool
21:01:35 <cale> yeah, they are. There are some really (mathematically) hard to understand resursive functions out there.
21:02:06 <kunphuzil> yeah
21:02:23 <kunphuzil> do i need a base class for all recursive functions?
21:02:29 <kunphuzil> are there any that don't need one?
21:03:13 <cale> you generally need to stop somewhere, though it isn't strictly required. Computing values of a recursive function that never stops tends to take a long time.
21:03:27 <cale> :)
21:03:32 <kunphuzil> heh
21:03:40 <Fractal> Now, try to think of why that definition of fib is ridiculously inefficient. :)
21:04:18 <steveh> hey!
21:04:20 <steveh> i know!
21:04:20 <steveh> :)
21:04:39 <steveh> it's because any fibonacci number can be determined by multiplying by a constant ;)
21:04:43 <kunphuzil> Fractal: ..all i can think of is since there is F_(n-1) maybe i can call that three times? don't know if that is more effeciant.. 
21:04:49 <kunphuzil> ehm. nm
21:05:02 <kunphuzil> steveh: constant?
21:05:06 <steveh> kunphuzil: no, you are on the right track, I am being facetious
21:05:20 <kunphuzil> oh heh.. 
21:05:34 <steveh> well I am telling the truth
21:05:53 <steveh> but I am sure Fractal is alluding to other more efficient recursive or iterative methods to determine fib n
21:05:54 <steveh> :)
21:06:05 <cale> not quite, but almost. The fibonacci sequence isn't linear.
21:06:22 <kunphuzil> ehm, i forget what a constant is.. 
21:06:25 <steveh> yeah, you don't multiply by a constant, I forgot
21:06:35 <Fractal> Well more or less yeah.
21:06:36 <steveh> you plug in n as an exponent in a constant expression
21:06:40 <cale> yeah
21:06:52 <Fractal> I mean think about it... Think about how many times you have to evaluate the same sequence of additions!
21:07:12 <kunphuzil> i'm writing a multiplying function using adding.. (don't tell me how btw)
21:07:33 <steveh> kunphuzil: think in your head how many times "fib 5" is computed when you look for "fib 10," say.
21:08:09 <Fractal> Exactly...
21:08:10 <cale> there's apparently a neat and very fast way to compute fib n using a little bit of linear algebra.
21:08:25 <Fractal> cale : Not even linear algebra...
21:08:45 <Fractal> There's a very elegant definition
21:08:50 <cale> Well, simple 0,1 matrix calculations.
21:08:51 <Fractal> It looks something like:
21:09:04 <Fractal> fib n+1 = fibStream !! n
21:09:04 <Fractal>   where fibStream = 1:1:zipWith (+) fibStream (tail fibStream)
21:09:11 <cale> I know that one :)
21:09:37 <flippo> I'm satisfied with n/n+1 as n -> inf
21:09:38 <Fractal> Excuse me:
21:09:39 <Fractal> fib (n+1) = fibStream !! n
21:09:39 <Fractal>   where fibStream = 1:1:zipWith (+) fibStream (tail fibStream)
21:09:39 <kunphuzil> what exactly is fibonacci?
21:09:47 <steveh> fib n = (phi^n) - (-phi)^-n / sqrt(5)
21:09:58 <steveh> oops, that's not right
21:10:11 <steveh> fib n = (phi^n - (-phi)^-n) / sqrt(5)
21:10:17 <steveh> better
21:10:33 <cale> There's apparently something even nicer than that, which computes fib n in log n time for when the constant-time solution isn't appropriate.
21:10:38 <Fractal> kunphuzil : It's a function that was defined recursively by Fibionacci in an attempt to model rabbit population growth
21:11:00 <kunphuzil> strange
21:11:31 <cale> It shows up all over the place in nature and mathematics.
21:12:09 <cale> Like in counting sunflower-seeds.
21:12:32 <kunphuzil> I think i saw it on some hokey movie, where they found out the pattern was the fib. sequence and then it cured cancer or something (big exaggeration, but you know what i mean :P)
21:12:43 <kunphuzil> cale: ?
21:13:47 <cale> The spiral pattern of sunflower seeds and in pine cones tends to show the fibonacci sequence.
21:14:00 <kunphuzil> cool
21:14:02 <cale> I'll see if I can find a good webpage on it.
21:14:15 <flippo> (sqrt(5) -1)/2
21:14:29 <flippo> it's called the Golden Ratio
21:14:44 <Pseudonym> It's also the most irrational number.
21:14:55 <flippo> ancient Greek temples also honor the ratio
21:15:04 <kunphuzil> pi? 
21:15:09 <cale> Pseudonym: by what metric?
21:15:15 * Pseudonym is unsure
21:15:22 <kunphuzil> are you guys talking about pi ? 
21:15:37 <cale> No, the Golden Ratio is not pi.
21:15:41 <Pseudonym> When you have a many-body gravity problem, how "chaotic" the motion is depends on how irrational the ratios of masses of the bodies are.
21:15:42 <kunphuzil> er.. :/
21:15:55 <flippo> which is hardest to converge to with a geometric sequence?  (pi is harder than e)
21:15:57 <Pseudonym> I forget which way around.
21:16:04 <Pseudonym> I think rational numbers aren't very chaotic.
21:16:08 <Pseudonym> But irrational ones are.
21:16:09 <flippo> s/geometric/arithmetic/
21:16:18 <Pseudonym> Turns out the golden ratio is the most irrational number.
21:17:05 <cale> Hmm... I think it might be related to the rate of convergence of the continued fraction.
21:17:07 <Pseudonym> It also turns up in combinatorics.
21:17:14 <Pseudonym> cale: Might be.
21:17:26 <Pseudonym> Phi has a slowly converging continued fraction.
21:17:28 <Pseudonym> It's [1,1..]
21:17:36 <Pseudonym> Which is as slow as they get.
21:17:53 <cale> I remember going to a talk last term dealing with some algebraic number theory where at least a similar concept came up. I don't recall very well.
21:17:57 <kunphuzil> Phi /= pi ?
21:18:33 <Pseudonym> Oh, and phi is the limit as n -> infinity of the ratio of two adjacent fibonacci numbers.
21:18:54 <kunphuzil> math is cool ;>
21:19:03 <Pseudonym> Maths is very cool.
21:19:08 <cale> phi = (sqrt(5) - 1) / 2, whereas pi is not expressible in terms of radicals.
21:19:19 <Pseudonym> I'm playing with Gaussian quadrature at the moment.  It's amazing how many things tie in.
21:19:38 <Pseudonym> I thought phi = (sqrt 5 + 1) /2
21:19:47 <cale> Oh, could be, yes.
21:20:05 <cale> They're very closely related, the two.
21:20:23 <Pseudonym> They're both solutions to x^2 + x + 1 = 0
21:20:28 <Pseudonym> Or is it -1?
21:20:30 * Pseudonym hmms
21:20:47 <cale> (It probably won't simplify any expressions whether you pick one or the other)
21:21:19 <Pseudonym> Oh, and one of them is the reciprocal of the other.
21:21:52 <flippo> (a + b)/a = a/b 
21:22:49 <cale> yes
21:23:11 <cale> There are tons and tons of really nice properties you can get.
21:23:46 <kunphuzil> I love how haskell is so close to all this maths :D
21:24:15 <Pseudonym> Gaussian quadrature pulls in integration, vector spaces, special polynomials and linear algebra in one big swoop.
21:24:41 <cale> On one of my first homework assignments for classical algebra first term at university there was a nice assignment question, something like proving the closed form for the fibonacci sequence, and to make it easier I spent some time exploring and finding nice properties to make the expressions simpler.
21:25:07 <Pseudonym> Well proving the closed form is very easy.
21:25:13 <cale> Yeah.
21:25:13 <Pseudonym> But playing is fun.
21:25:35 <Pseudonym> Oh, here's an exercise.
21:25:47 <cale> I think that most of the problems they gave us were to spur on exploration.
21:26:12 <Pseudonym> Write, in Haskell, a function which computes the nth Fibonnaci number, accurate on Integers, in as low a time complexity as you can.
21:26:31 <Pseudonym> The "accurate on Integers" part means you can't use the simple closed form version.
21:26:55 <cale> I think there is a nice log n algorithm out there somewhere I remember hearing about.
21:26:55 <Pseudonym> Actually that's not entirely true.  You can use infinite continued fractions to represent phi. :-)
21:27:07 <Pseudonym> cale: Could have been from me.
21:27:23 <Pseudonym> :-)
21:27:52 <cale> Perhaps - either that or it was someone in #csc (my uni's cs club)
21:27:54 <Pseudonym> Basically, you raise the matrix [ [1 1] [1 0] ] to the nth power.
21:27:58 <cale> Yes
21:28:08 <Pseudonym> And you can do that in log n time.
21:28:31 <kunphuzil> cale: what uni?
21:28:52 <cale> Waterloo.
21:30:06 * Pseudonym wishes he'd gone to Waterloo
21:30:15 <Pseudonym> Sounds like they have more interesting discussions ther.
21:32:07 <kunphuzil> You are in australia, Pseudonym ?
21:32:48 <cale> Yeah, the math courses are pretty decent there. Especially the advanced math courses (which only apply to the generic MATH courses, once you specify PMATH it's destreamed.) 
21:32:50 <Pseudonym> Yes.
21:33:23 <kunphuzil> Did you grow up in Australia? 
21:33:28 <Pseudonym> Yup.
21:33:37 <kunphuzil> Just wondering, because you said you'd want to go to Waterloo. 
21:34:20 <kunphuzil> College/high school seems scary :/
21:34:41 <Pseudonym> Just because it sounds like they have interesting conversations there. :-)
21:34:46 <cale> :)
21:34:57 <Pseudonym> Oh, I wouldn't want to _live_ there.  Just have conversations.
21:35:02 <cale> heheh
21:35:14 <cale> Especially not in the winter. :)
21:35:22 <kunphuzil> I love the cold. :>
21:35:32 <cale> It's actually not that bad.
21:36:08 <cale> There are days where you wish it would stop though.
21:36:12 <Pseudonym> I love the cold too, but "cold" here is relative.
21:36:23 <Pseudonym> In Melbourne, it never snows.
21:36:29 <Pseudonym> And when it gets hot, it's never humid.
21:36:42 <cale> I don't like non-room temperature tempuratures.
21:37:09 <Pseudonym> The only problem with Melbourne is that it rains in winter.
21:37:18 <Pseudonym> The rain can be unrelenting.
21:37:48 <kunphuzil> Mmm, I love the rain.
21:37:56 <cale> How is New Zealand's climate? I heard it was a pretty nice country for weather.
21:37:59 <kunphuzil> I generally like what others call "crappy" weather ;)
21:38:27 <cale> Rain doesn't bother me so much, but if it didn't stop for a long time it would probably get to me.
21:38:31 <Pseudonym> New Zealand is kind of like Scotland.
21:38:54 <Pseudonym> Well, haven't you seen the Lord of the Rings films?
21:38:58 <Pseudonym> That's New Zealand. :-)
21:39:21 <cale> :)
21:39:23 <kunphuzil> Oh boy, here comes discussions on LOTR. ;>
21:41:48 <Pseudonym> Evidently not.
21:41:50 <kunphuzil> Can I past some code? getting errors
21:41:53 <cale> sure
21:41:57 <kunphuzil> module Main 
21:41:57 <kunphuzil>     where 
21:41:57 <kunphuzil> import IO 
21:41:57 <kunphuzil> main = do 
21:41:57 <kunphuzil>        hSetBuffering stdin LineBuffering 
21:41:59 <kunphuzil>        putStrLn "Please enter your name: " name <- getLine 
21:42:02 <kunphuzil>        putStrLn ("Hello, " ++ name ++ ", how are you?")
21:42:05 <kunphuzil> Dependency analysis
21:42:06 <kunphuzil> ERROR "/home/jtmendes/haskell/code/Name.hs":6 - Illegal pattern syntax
21:42:06 <kunphuzil> IO> 
21:42:27 <kunphuzil> copied it right out of the tutorial.. :/
21:42:35 <Pseudonym> I think you want to put the "name <- getLine" onto  new line.
21:42:43 <kunphuzil> ah..
21:42:46 <kunphuzil> yes, you are right
21:43:06 <kunphuzil> (of course you are right ;)
21:43:38 <cale> kunphuzil: what sort of internet connection do you have btw. I always see you in here apparently afk and you're wildly disconnecting and reconnecting.
21:43:39 * Pseudonym is always right
21:44:01 <kunphuzil> cale: :/ sorry
21:44:07 <kunphuzil> cable modem, but the problem is my router
21:44:27 <kunphuzil> (and/or my adaptor card) i think it's overheating or something
21:44:53 <kunphuzil> Linksys sucks.
21:46:00 <kunphuzil> is clog the log bot?
21:46:21 <kunphuzil> NM. Yep
21:47:00 <cale> I have one of those home-networking routers, it's alright, but could stand to be more configurable. I don't understand why they'd only allow a small finite number of redirected ports.
21:47:37 <cale> It's made by SMC.
21:52:21 <kunphuzil> :/
21:55:24 <kunphuzil> That would be cool if there was a chan like #schemerepl for haskell
21:56:05 <Smerdyakov> I think that wouldn't be hard to implement.
21:56:58 <demoncrat> schemerepl?  what's that?
21:58:45 * Pseudonym is curious too
21:58:52 <cale> It appears to be a read-eval-print-loop for scheme
21:59:02 <cale> (using a bot)
21:59:16 <demoncrat> ah
22:01:38 <kunphuzil> It's fun. 
22:01:59 <demoncrat> but i've already got a scheme repl in emacs!
22:02:16 <kunphuzil> demoncrat: this is a group scheme repl ;)
22:02:28 <kunphuzil> that's what i'd use it for..
22:02:48 <demoncrat> give it multiuser security - that ought to be fun
22:03:11 <kunphuzil> demoncrat: ?
22:03:53 * cale just noticed why there was no new strongbad email this week :)
22:04:18 <demoncrat> k - like in jonathan rees's thesis
22:04:50 <kunphuzil> don't know of it :/
22:05:14 <demoncrat> security kernel for the lambda calculus, or something like that
22:07:13 <kunphuzil> good night all
22:07:21 <demoncrat> night
22:07:56 <Pseudonym> Night.
22:12:12 <cale> night
23:50:45 <cale> anyone here know scheme? I'm curious as to what filter is called.
