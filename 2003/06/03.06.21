02:38:12 <roman> hi
02:38:20 <roman> could I have a question?
02:38:22 <cale> hello
02:38:37 <cale> sure, put it up in the channel
02:39:28 <roman> is there any way how to divide Float with Int number?
02:40:57 <cale> Sure, convert the int to a float. I'm pretty sure it's toFloat.
02:41:29 <cale> no, that's not right
02:41:45 <roman> ie: a/n becomes a/(toFloat n), right?
02:42:11 <cale> er, except that toFloat isn't there - hang on.
02:44:25 <cale> It's fromIntegral
02:44:42 <cale> (or fromInteger, if it's specifically an integer)
02:44:54 <roman> yes yes
02:45:09 <roman> I'v got that idea but I looked at bad topic
02:45:22 <roman> I was looking up "type casting" instead of "overloading"
02:45:26 <roman> damned not native english ;)
02:45:31 <roman> thnx a lot!
02:45:35 <cale> no problem
02:47:28 <cale> Type casting is the correct English term from C. You need specific functions to convert between types in Haskell, though.
02:47:54 <roman> ye
02:48:11 <roman> I know but I am not native speaker so I used the first term I though of
02:48:19 <roman> and didn't think about others
02:48:25 <roman> program is working now ;)
02:48:30 <roman> thnx a lot once again
02:48:43 <cale> you're welcome
02:49:39 <roman> oh
02:49:45 <roman> works not perfectly
02:49:53 <cale> what's up?
02:50:36 <roman> dunno
02:50:51 <cale> What happens?
02:51:15 <roman> that's mathematican problem
02:58:54 <roman> (-1)^nn*(x^n)/(fromInt (fact n))
02:59:01 <roman> where nn=3 and n=1
02:59:05 <roman> what's the result?
02:59:23 <roman> I'd say -0.16666
02:59:30 <roman> but it gives me +0.1666
03:00:14 <cale> what is x?
03:12:47 <roman> shit!
03:12:58 <roman> it gives me correct results but I haven't touched it1
04:44:51 <jlouis> Good introduction to Presburger arithmetic, anyone?
10:28:53 <esap> Hmm... ghc gives interesting error messages nowadays. I just got a "My brain just exploded" error message from ghc-6.0. Hmm...
10:30:03 <cale> esap: nice. Let us know what it actually means if you find out.
10:30:47 <esap> It has a description afterwards: "I can't handle pattern bindings for existentially-quantified constructors.".
10:31:27 <cale> That's newbie-friendly.
10:31:29 <cale> :)
10:34:23 * esap is trying to implement a function with type a (f b) c -> a b (g c) such that f is instantiated to [] and g is instantiated to data ListF a res = ListF res ([a] -> res). It's not very easy.
10:35:09 <d-b> hello
10:35:12 <Ilswyn> d-b: hey
10:35:18 <Ilswyn> d-b: I didn't know you liked haskell
10:35:19 <Ilswyn> !
10:35:20 <d-b> i'm interested
10:36:01 <cale> There are quite a few good tutorials at http://www.haskell.org
10:36:03 <Ilswyn> cale: I just started learning it though
10:36:08 <Ilswyn> cale: I got Paul Hudak's book
10:37:06 <cale> Ilswyn: cool :)
10:37:32 <Ilswyn> cale: hmm are there SDL bindings for haskell?
10:38:12 <cale> That was more aimed towards d-b, in that I don't recall seeing him around here before and he said he's interested.
10:38:21 <cale> Ilswyn: not yet, I don't think.
10:39:27 <Marvin--> there's someone working on it, iirc
10:39:37 <cale> Marvin--: cool
10:56:33 * Ilswyn[AWAY] is away: I'm busy
12:19:07 <hdaume> hi all
12:21:09 <andersca_> hi hdaume
17:54:54 <inkedmn> ok, i'm working through Yet Another Haskell Tutorial
17:55:03 <inkedmn> i'm on the section about Binary Trees
17:55:33 <inkedmn> one of the exercises had me write a function to return the values of all the elements in tree in list form
17:55:38 <inkedmn> which i did, no problem
17:55:52 <inkedmn> but the next exercise is to create a fold function for Binary Trees
17:56:14 <inkedmn> and i'm wondering if i should just fold the resulting list from the last exercise, or if there's another way to do it
18:01:59 <inkedmn> ok, i cheated and looked at the solution code at the end :)
18:06:22 <Riastradh> What was the solution?
18:09:42 <inkedmn> Riastradh: foldtree f z (Leaf x) = f x z
18:09:54 <inkedmn> foldtree f z (Branch lhs x rhs) =
18:10:07 <inkedmn>    foldtree f (f x (foldtree r z rhs)) lhs
18:29:56 <kunphuzil> Are there any guides that teach functional programming using haskell?
18:30:31 <inkedmn> http://www.haskell.org/bookshelf/
18:30:38 <inkedmn> probably find something you can use there
18:30:47 <kunphuzil> any of those online? :/
18:30:52 <inkedmn> yep
18:30:56 <kunphuzil> ok, cool. 
18:30:59 <inkedmn> the last 2/3 of the page, iirc
18:31:07 <inkedmn> several tutorials, etc.
18:31:07 <kunphuzil> the gentle into to haskell doesn't seem to gentle to me
18:31:14 <inkedmn> are you teaching yourself?
18:31:26 <Riastradh> kunphuzil, if you're new to functional programming, it probably won't seem that gentle.
18:31:46 <kunphuzil> inkedmn: yeah
18:31:55 <kunphuzil> Riastradh: i'm semi-new
18:32:03 <Riastradh> kunphuzil, you're learning Scheme at the same time; anything else?
18:32:11 <kunphuzil> no
18:32:20 <Riastradh> Zigackly.
18:32:23 <kunphuzil> i'm learning both to see which i like better :/
18:33:46 <kunphuzil> IBM's site is always slow
18:36:34 <inkedmn> kunphuzil: i'm new to haskell/FP too
18:36:44 <inkedmn> i'm going through Yet Another Haskell Tutorial
18:37:10 <inkedmn> with a buddy of mine, actually
18:37:18 <kunphuzil> i've read part of that.. 
18:37:24 <inkedmn> we like it so far
18:37:32 <inkedmn> about a third of the way through
18:38:29 <inkedmn> i tried picking up scheme first, but haskell is much cooler (imho) :)
18:39:18 <kunphuzil> i like them both
18:40:21 <inkedmn> i'm probably going to try out *ML after i'm decent w/ haskell
18:42:04 * Riastradh likes them both too.
19:34:23 <kunphuzil> What editors do you guys use? I just use nano right now..
19:34:33 <Riastradh> Emacs.
19:34:34 <Smerdyakov> emacs, of course.
19:34:44 <Strike> vim
19:34:52 <Riastradh> Heretic.
19:34:58 <Strike> RSI sufferer
19:35:00 <juhp> xemacs
19:35:02 <Riastradh> Bah.
19:35:11 <Riastradh> Just use a keyboard with the control key in the right place.
19:35:19 <Riastradh> i.e., where caps lock is on most keyboards.
19:35:21 <Strike> find me one :)
19:35:24 <Strike> and buy me one
19:35:37 <Riastradh> Oh, come on, they're not hard to find.
19:35:38 <kunphuzil> emacs seems kunphuzing.
19:35:42 <Strike> vim: friendly with Real Keyboards(tm)
19:35:50 <Strike> :)
19:36:01 <Riastradh> Real Keyboards?  No, Real Keyboards have control in the Right Place.
19:36:20 <Strike> says you, I have it trademarked!  ^^ see?
19:36:33 <kunphuzil> Riastradh: why should control be there? i've heard this a lot, is it some pet peve emacs people have ? :P
19:36:59 <inkedmn> emacs is for the unenlightened
19:37:00 <inkedmn> :)
19:37:01 <Riastradh> Real Keyboards(R)?  No, Real Keyboards(R) have control in the Right Place(R).
19:37:04 <Riastradh> Take that!
19:37:17 * Strike takes that and poops on it
19:37:20 <Riastradh> kunphuzil, hey, control is used in lots of places, not just Emacs.
19:37:40 * Riastradh cleans it off and smacks Strike with a vector comprehension from SRFI 42.
19:38:00 <kunphuzil> I didn't mean to start an editor war
19:38:11 <inkedmn> kunphuzil: well, ya did :)
19:38:15 <Riastradh> SURE YOU DIDN'T, YOU BRINGER-OF-USENET-TO-#HASKELL!
19:39:13 <Strike> heh, different strokes for different folks, that is all
19:39:24 <Riastradh> Never!  Emacs forever!
19:39:48 <inkedmn> you guys just haven't discovered the majesty of Pico
19:40:03 * Strike edits all files with cat and sed
19:40:07 <inkedmn> heh
19:40:11 <Riastradh> I tried pico.  It didn't have a built-in psychiatrist so I almost committed suicide after trying it.
19:40:44 <kunphuzil> yeah, right now i just use nano.. 
19:40:49 <kunphuzil> but it sucks for coding i think
19:40:58 <Strike> kunphuzil: try vim, try emacs, pick one :)
19:41:12 <Strike> that's what I did
19:41:40 * inkedmn has only used emacs briefly.  <in living color> Hated it! </in living color>
19:42:25 <Strike> I'm pretty sure this is a mostly emacs channel though
19:42:28 <Strike> but I'm not afraid ;)
19:42:32 <kunphuzil> hmm, the keys kunphuze me.. 
19:42:42 <kunphuzil> and all that buffer stuff..
19:42:50 <Strike> well, every editor has "buffer stuff"
19:42:57 <Strike> every decent one anyway :)
19:43:06 <Riastradh> kunphuzil, when you start Emacs, you see 'C-<key>' means 'hold down control and hit key,' and 'C-h t' for an Emacs tutorial.
19:43:16 <Riastradh> How could that possibly be confusing?
19:43:18 <Strike> and "vimtutor" for a vim tutorial
19:43:25 <inkedmn> :p
19:43:35 <kunphuzil> oh
19:43:40 <kunphuzil> i get it now
21:10:05 <jtmendes> erc seems cool
21:10:11 <kunphuzil> hello self :P
21:10:13 <inkedmn> erc?
21:10:23 <jtmendes> emacs built in irc client
21:10:27 <inkedmn> ah
21:10:54 <jtmendes> now i can combine my coding window with my irc window :-P
21:25:18 <inkedmn> heh, guess it only works w/ emacs21
21:25:35 <inkedmn> at least, that was apt thinks
21:25:50 * inkedmn decides he may have been too hard on emacs earlier...
21:25:59 <inkedmn> never have given it a fair shake, really
21:27:00 <jtmendes> i think i'm too attatched to irssi ..
21:29:58 <inkedmn> heh
21:30:03 * inkedmn is too
21:42:58 <inkedmn> *yawn*
21:43:04 <inkedmn> man, i'm freakin' bored...
22:40:25 * Ilswyn is back (gone 11:43:38)
