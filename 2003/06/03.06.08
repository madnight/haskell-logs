04:38:49 <Janni> hi
05:44:30 * Igloo reads Sven saying OpenGL from 6.0 probably wouldn't build and wonders if I should give up packaging 6.0 and package the latest on the STABLE branch instead
07:47:26 <shapr> Igloo: ghc6 isn't the latest stable?
08:05:20 <Igloo> Various fixes have been merged into the branch
09:01:02 <Riastradh> In the nonstandard multiparametre typeclass and fundeps stuff, what does the '| a -> b' in 'class Foo a b | a -> b where ...' mean?
09:04:43 <Riastradh> Oh, never mind, I think I get it.
09:07:18 <Smerdyakov> It means you have to type the first parameter first. If the compiler sees that you typed the second parameter and then used the left arrow key to go back and type the first, it will segfault.
10:24:04 <Heffalump> everyone's dead, clearly
10:24:21 <Smerdyakov> I am quite alive.
10:24:38 * Riastradh stabs Smerdyakov to death.
10:24:39 <Riastradh> Now you're not.
10:24:45 <Smerdyakov> Maybe you would like to follow an interesting link while you wait for them to wake up! http://www.hprog.org/
10:25:09 * Riastradh pastes a big sign upon which the words 'SHAMELESS MARKETING' are written above Smerdyakov's last statement.
10:28:55 <Heffalump> :-)
10:29:49 * Heffalump likes MoinMoins
10:30:10 <Igloo> Why?
10:30:38 <Heffalump> they're pretty
10:30:51 <Riastradh> But they're Python, aren't they?
10:31:23 <Heffalump> I don't care about the underlying implementation :-)
10:33:37 <Smerdyakov> Is impredicative polymorphism the more restrictive type?
10:33:42 <Smerdyakov> (I.e., what SML has)
12:30:35 <Riastradh> What does a 'V'-like operator operating on two booleans do?
12:34:39 <polli> Riastradh: or
12:34:52 <Riastradh> What's and?
12:35:02 <Riastradh> (just out of curiosity)
12:35:10 <polli> ^
12:35:39 <polli> not is the left side of a T
12:35:42 <polli> :)
12:36:51 <Riastradh> xor?
12:37:57 <polli> don't know if there's standard notation for that 
12:38:19 <Riastradh> Does the right side of a T mean anything?
12:39:01 <polli> don't know 
12:39:26 <esap> I've seen a V with a strikethrough "-V-" be used for xor. Or U with '+' inside it.
12:40:15 <esap> Not very consistently though.
12:48:51 <BlitzNL> I don't seem to able to create a function that checks if all items in this list are of type just x [Just 1, Just 2, Nothing], anyone who can give me some tips??
12:49:21 <Riastradh> 'Of type just x?'
12:49:24 <Riastradh> Rephrase, please.
12:50:10 <BlitzNL> well I want a function that returns true if all elements of the list are of Just x so no Nothing may appear
12:50:47 <Riastradh> Oh.
12:50:49 <BlitzNL> Riastradh: ahh I can use the isNothing function from the Maybe lib
12:51:05 <Riastradh> Use also the 'any' function from the Prelude.
12:51:30 <BlitzNL> Riastradh: I will thnx
12:52:32 <dennisb> and don't forget the all function
12:54:05 <Riastradh> dennisb, well, he could use 'all' and 'isJust' or 'any' and 'isNothing' -- he doesn't need to use both.
12:54:33 <dennisb> of course
12:58:23 <Hipo> Hi! :)
12:59:18 <Riastradh> Hi!
15:23:41 <cale|afk> I like circle plus for xor.
21:44:18 * d33p is back (gone 36:03:25)
