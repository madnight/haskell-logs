00:14:38 <Marvin--> morning
00:15:18 <Pseudonym> G'day.
00:23:06 * Marvin-- groans at the bad jokes he makes
04:06:10 <dark> Hmm.  I have a lookup list (Eq a) => [(a, b)], and I want to group the ones with identical a's and get [(a, [b])].  I have a hunch this should be a one-liner.
04:19:28 <Heffalump> ISTR it's not
04:20:14 <Heffalump> collect :: Eq a => [(a,b)] -> [(a,[b])]
04:20:14 <Heffalump> collect [] = []
04:20:14 <Heffalump> collect ((a,l):x) = (a,l:ls):collect z
04:20:14 <Heffalump>                     where (y,z) = splitWith ((==a).fst) x
04:20:14 <Heffalump>                           ls = map snd y
04:20:24 <Heffalump> seems to be the best I could do when I wrote it a while back
04:21:01 <Heffalump> splitWith :: (a -> Bool) -> [a] -> ([a],[a])
04:21:01 <Heffalump> splitWith p [] = ([],[])
04:21:01 <Heffalump> splitWith p (a:x) = if p a then (a:y,z) else (y,a:z)
04:21:01 <Heffalump>                     where (y,z) = splitWith p x
04:21:35 <Heffalump> it's probably shorter if all the ones with identical a are together in the original list
04:21:44 <Heffalump> (or if you have a better idea than I did)
04:23:30 <earthy> dark: this exact same problem came by on comp.lang.haskell this week
04:23:45 <earthy> s/haskell/functional/
04:24:08 <earthy> process xs = [(head n,t) | g <- (groupBy p (sort xs)), let (n,t)=unzip g]
04:24:08 <earthy>   where p (a,b) (c,d) = a==c
04:24:13 <earthy> that was the trick.
04:24:49 <Heffalump> ah, and it's even nlog n :-)
04:26:03 <earthy> unfortunately it only works if you can sort. ;)
04:26:51 <Heffalump> oh yes, that has context Ord a => 
04:27:10 <earthy> :)
04:27:19 <dark> You know... I hadn't realized yet that my identical a's might _not_ be together in the list :)
04:28:11 <Marvin--> dark: bravo ;)
04:28:27 <dark> Fortunately I do have Ord a as well.
04:28:39 <Marvin--> maybe you can use groupBy?
04:28:48 <Marvin--> @type groupBy
04:28:54 <Marvin--> oh wait, it's in the List module
04:28:56 <earthy> groupBy only groups adjacent elements
04:29:02 <Marvin--> it does?
04:29:15 <Marvin--> too bad
04:29:36 <Marvin--> dark: if you have Ord a, the solution often is 'import FiniteMap'
04:29:47 <dark> I made a sortWith and groupWith earlier on, so that I can use groupWith fst instead of the helper function p :)
04:30:41 <dark> Marvin--: This is a lookup list constructed on the fly :)  Sorting it is easier than constructing and listing a FiniteMap.
04:31:54 <Marvin--> dark: okay, what I meant was to use FiniteMaps instead of lists
04:32:04 <Marvin--> you know, completely :)
04:33:56 <dark> Marvin: They're hard to make lazy :)
04:34:53 <dark> earthy: Hmm, do you need g there?  It should pattern-match if you do (n, t) <- groupBy ...
04:35:26 <earthy> dark: unsure
04:35:34 <Marvin--> yes, pattern matching works
04:35:58 * earthy is not very good at haskell syntax.
04:36:35 <dark> Oh, wait, but you still need to actually unzip :-)
04:36:53 <earthy> dark: uhm, yes. ;)
04:37:02 * dark uses the power of $
04:38:49 <Marvin--> blegh, meeting
05:03:24 <dark> Cool, it works.  And it was a one-liner after I defined enough helper functions :-)
05:10:04 <earthy> ;)
05:23:15 <dark> I find it slightly worrisome that Mage's executable is already half a megabyte (stripped), and it's not even a game yet.
05:46:14 <earthy> why? mem is cheap these days...
05:46:35 <earthy> and you have something of a runtime system to deal with
05:47:57 <Marvin--> I worry about executable size in operating system installers, not otherwise :)
06:31:14 * dark starts adding Language.Orcish next to English and Dutch.
06:35:43 <Igloo> Getting the important features in first, then?
06:35:55 <Igloo> :-)
06:36:10 <dark> Igloo: I need to stay entertained while writing this :)
06:36:27 <dark> Problem is, I don't know yet if I'll have orcs in the game.
06:37:28 <Igloo> But you need to save some entertaining bits for the end  :-)
06:38:52 <Igloo> Does unicode have Orcish characters?
06:39:29 <dark> I don't think so.  It doesn't even have Klingon officially, and that's had several books published in it.
06:40:47 <dark> It doesn't matter what Unicode has, I have to make it work with ncurses :-)
06:40:57 <Igloo> "officially"?
06:41:21 <dark> Igloo: There's an unofficial registry for fictional languages, which uses codes in some reserved range.
06:42:20 <dark> I'm not sure how they decided that Klingon is fictional and Esperanto is real :-)
06:42:26 <Igloo> Nothing in the FAQ - I can't believe more people ask about Indic scripts than Klingon
06:43:25 <Igloo> Hmm, "Klingon (determined to be inappropriate for encoding)"
06:44:14 <Igloo> Tengwar is still under investigation, though
06:45:18 <dark> http://higbee.cots.net/~holtej/klingon/faq.htm#2.17
06:46:17 <dark> Anyway, I don't want Tolkien orcs, so maybe I should just call them goblins or something.
06:49:16 <Igloo> So it looks possible if it starts being used that it would get integrated into official unicode
06:58:13 <dark> Igloo: Yeah, but if it starts being used, it'll be the unofficial range that gets used.  And then when it become part of Unicode it would have to move.  Somehow I suspect people will continue to use the unofficial range instead.
07:00:18 <Heffalump> is anyone here at the University of Bremen?
07:00:38 <Igloo> Yeah, fun fun
07:23:23 <xkb> hi.. is the source of lambdabot freely available?
07:24:53 <Igloo> It's in CVS on SF
07:24:57 <Igloo> @source
07:25:09 <xkb> It is written in Haskell right?
07:25:12 <Igloo> @fact source
07:25:15 <Igloo> Yup
07:25:21 <xkb> cool :D
07:25:30 <Igloo> For some reason I can never do anything useful with the silly thing  :-)
07:25:36 <xkb> doesnt want to respond to the source question :D
07:25:52 <xkb> ah
07:25:53 <xkb> found it
07:25:57 <xkb> http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/haskell-libs/libs/lamb
07:25:57 <xkb>           dabot/
07:26:24 <xkb> thanks!
07:26:35 <xkb> finally something else after weeks of semantics
07:26:46 <Igloo> :-)
07:26:52 <Igloo> semantics of what?
07:27:03 <xkb> programming languages in general 
07:27:18 <xkb> and more specific: semantics for a design of exception handling in Clean
07:27:24 <xkb> but that's very sketchy atm
07:27:38 <Igloo> Ah, cool
07:28:14 <xkb> I got stuck on it about 2 months ago.. did some finals, and now Im continueing "the quest" :)
07:28:20 <xkb> Its my masters thesis
07:55:15 <earthy> Clean? *ick*ptoey*
07:56:05 <earthy> (even if it's cleaner than haskell :))
07:57:00 <xkb> lol
07:57:21 <xkb> I like Haskell better atm.. but thats more cause Im used to reading it
07:57:23 <earthy> but my opinions have a thing or two to do with the figure of R. Plasmeijer ;)
07:57:29 <xkb> ahhh
07:57:33 <xkb> He's my "promotor"
07:57:42 <xkb> or whatever you call it
07:57:47 <earthy> promotor on a master's thesis? `supervisor'. ;)
07:57:51 <xkb> yeah
07:57:51 <xkb> :D
07:58:06 <xkb> aha.. now I see your Dutch 2
07:58:07 <xkb> :D
07:58:21 <earthy> `afstudeerdocent', even. ;)
07:58:27 <xkb> indeed
07:58:40 <xkb> So did you study on the KUN?
07:58:51 <earthy> umm, yeah, well, umm. :) I've seen some *old* Clean versions, back in 1994. ;)
07:59:01 <xkb> ah.. the C-versions I guess?
07:59:08 * earthy nods
07:59:12 * earthy shivers
07:59:15 <xkb> really nice code :D
07:59:19 <xkb> not
07:59:23 <earthy> `the horror, the *horror*'
07:59:40 <xkb> Nowadays its written in Clean.. at least the biggest part of it
07:59:45 * earthy can remember interfacing it to C just to get directory-reading functionality. ;)
07:59:52 <xkb> yikes
08:00:16 * earthy nods
08:00:24 <xkb> Are you still a student? Or are you work related to functional programming?
08:00:35 * earthy is a PhD student in Utrecht, currently.
08:00:45 <xkb> aha.. so you know mbravenboer probably?
08:01:00 <xkb> Also PhD student
08:01:05 <xkb> working on Stratego
08:01:05 <earthy> nope.
08:01:16 <earthy> but then again, I've only been here for 2 months.
08:01:23 <xkb> you just started?
08:01:27 <earthy> PhD student working on stratego? he ought to be in this group...
08:01:30 <xkb> What's your topic of research?
08:01:34 <xkb> First name Martin
08:02:01 <xkb> I think he's in the same group as Eelco Visser (if I remebered the name correctly)
08:02:12 <earthy> yeah, yeah. not a PhD student though.
08:02:22 <xkb> ahh.. he's still doing his masters?
08:02:23 <earthy> he's a master's student. ;)
08:02:43 <xkb> wow.. he's been at it for more then a year now..
08:02:43 <Heffalump> I'd hope he was in Eelco's group if he's working on Stratego :-)
08:02:48 <xkb> hehe
08:02:59 <xkb> So are there any vacancies in Utrecht atm?
08:03:08 * Heffalump really ought to visit Utrecht sometime.
08:03:39 <xkb> I would really like to work on generic haskell for example
08:04:08 <earthy> xkb: yup, 1 for a PhD student with Eelco Visser, 1 for a postdoc with him
08:04:12 <earthy> that's in the ST group.
08:04:25 <earthy> Heffalump: do. what's stopping you?
08:05:10 <xkb> earthy : is that PhD position on Aspect Oriented software? Or that "install-management" stuff?
08:05:24 <earthy> http://www.cs.uu.nl/vacatures/en/62306.html
08:05:31 <xkb> thanks
08:06:18 <Heffalump> earthy: well, time, and lack of a specific good reason, I guess.
08:06:44 <earthy> heffalump: time is always a matter of priority, and `I'd love to go there' sounds like a pretty darn good reason to me. ;)
08:06:55 <Heffalump> this is true, yes
08:07:00 <xkb> Utrecht's great
08:07:05 <Heffalump> the specific good reason is the greater lack
08:07:07 <xkb> the university terrain isnt though
08:07:41 <earthy> true. just about the only inspiring thing about the university terrain is the med.school students. :)
08:07:58 <earthy> and social sciences students.
08:08:05 <Marvin--> wow, for a poor student, the pay on these postdoc positions seem enormous
08:08:31 <earthy> marvin--: that's *max*.
08:08:32 <xkb> earthy : let me guess: they are female :D
08:08:37 <earthy> xkb: :)
08:08:39 <xkb> hehe
08:08:48 <Marvin--> earthy: ?
08:08:48 <xkb> I remeber my days at the "terassjes"
08:09:01 <xkb> nice spelling again :D
08:09:02 <xkb> lol
08:09:17 <Marvin--> earthy: oh, I was talking to myself, really, about postdoc positions here at Chalmers
08:10:01 <Marvin--> 1950 euros/month, no taxes
08:10:09 <earthy> marvin--: ah, right. ;)
08:10:22 <earthy> but, that's *post* doc...
08:10:35 <earthy> I just started on my phd. grmph. ;)
08:10:39 <Marvin--> yes
08:10:49 <xkb> earthy : are you in the new CAO?
08:11:02 <Marvin--> I'm just contemplating that the PhD student salaries are about 2000 euros/month *before* taxes
08:11:26 <earthy> xkb: nope, the old.
08:11:30 <xkb> :(
08:11:36 <earthy> marvin--: I'm at 1500 euros/month before taxes
08:11:51 <earthy> xkb: the new one doesn't hold until sept 1st.
08:12:00 <Heffalump> how much are taxes?
08:12:03 <xkb> hmm.. so I have to wait until sep 1st to start :D
08:12:06 <Marvin--> earthy: all I'm saying is that in Sweden, there's a huge difference between 2000 euros before and after taxes
08:12:24 <earthy> xkb: nope, my salary will jump 167 euro's on sep 1st. ;)
08:12:29 <Heffalump> I used to get about 1200 euros/month after taxes
08:12:39 <xkb> earthy : nice!
08:12:43 * earthy is at about that, currently, as well.
08:12:48 <Marvin--> there's the basic income tax on 30%, and there are extra taxes if your salary is high (and 2000 euros/month counts as high)
08:12:51 <Heffalump> this was from 98-01, though
08:13:02 <Marvin--> so I guess you'll end up somewhere around 1200-1300 euros/month
08:13:17 <earthy> marvin--: not too shabby for a PhD.
08:13:36 <Marvin--> earthy: no, I guess not, but 2000 euros/month is more :)
08:13:50 <earthy> net. yes. it is. I've never had that much money available to me. :)
08:14:05 <earthy> (not even when I was in industry)
08:16:38 <Marvin--> I'm in "the industry" right now, but it's only a summer job, and I haven't graduated yet, so I'm not getting a lot of money right now either :)
08:16:46 <Marvin--> (beats the kind of money you have as a student though!)
08:16:52 <earthy> owh yeah. ;)
08:17:00 <Marvin--> but I gotta go
08:34:23 <xkb> lol @ http://www.willamette.edu/~fruehr/haskell/evolution.html
08:41:47 <earthy> yeah, that's pretty good
08:42:08 <earthy> I've never made it through the entire page while still understanding each and every version though...
08:45:49 <xkb> yeah.. esp those versions near the end
08:45:53 <Heffalump> I'd like to see someone make a version that uses http://research.microsoft.com/~nick/interpret7.ps - in particular the last bit about PI-calculus
08:52:52 <Heffalump> 'lo
08:58:13 <earthy> heffalump: you'd like to see footnote 8 on page 26 refuted? :)
08:59:21 <Heffalump> oh, duh :-)
09:13:27 <earthy> oh well. time for my weekend.
09:27:31 <xkb> earthy : have a good weekend 
11:53:57 <Vincenz> Hi
11:57:14 <syntax-laptop> hi Vincenz
11:59:58 <Vincenz> interesting name
12:00:32 <syntax-laptop> heh, thanks. I'm also SyntaxPolice on here
12:00:46 <Vincenz> ah!
15:33:13 <pesco> *Main> node_labels taug
15:33:13 <pesco> ["OH1","E1","E3","E4","E5","E6","E7","E8","OH2","OH3","OH4","OH5","OH6","PH1","E2","PH2","PH3","PH4","PH5","PH6"]
15:33:16 <pesco> eek
22:19:18 <syntax-laptop> does anyone know whats wrong w/ this (template haskell):
22:19:20 <syntax-laptop> hasMain = True
22:19:20 <syntax-laptop> arch :: DecQ
22:19:20 <syntax-laptop> arch = if not hasMain
22:19:20 <syntax-laptop>        then fun "main'" [clause [] (normal [| 4 |]) []]
22:19:21 <syntax-laptop>        else fun "foo" []
22:19:25 <syntax-laptop> arch' :: Q [Dec]
22:19:27 <syntax-laptop> arch' = [d| arch |];
22:19:29 <syntax-laptop> I get a parse error on that last line 
22:19:39 <syntax-laptop> (with or without the ;)
22:33:13 <Riastradh> What's the 'd' for on the last line?
22:36:39 <syntax-laptop> what I'm trying to do is bring the fucntion defined by arch into scope elsewhere
22:36:48 <ddarius> Declaration reification
22:36:53 <syntax-laptop> but I guess that the syntax is wrong for a declaration thingy
22:37:07 <ddarius> er I can't think of the term
22:37:15 <syntax-laptop> I can say this:
22:37:18 <syntax-laptop> foo :: Q [Dec]
22:37:18 <syntax-laptop> foo = [d| asdf = putStrLn "foo" |]
22:38:07 <syntax-laptop> so I guess its getting the syntax error for the lack of the '='
22:39:09 <ddarius> arch is not a declaration.  You could stick the entire declaration into arch' (which may work and may do what you want)
22:41:16 <ddarius> more or less
22:42:08 <syntax-laptop> heh
22:42:21 <syntax-laptop> the devil's in the details :)
22:43:07 <syntax-laptop> basically I want to create a main function if there is none in scope, which would be pretty neat
22:43:18 <syntax-laptop> but instead of checking if there is one in scope, I just use hasMain for now
22:43:25 <syntax-laptop> since I don't want to mess with rarifraction yet
22:58:08 <stepcut> does 'Compilers: Principles, Techniques and Tools (aka "The Dragon Book") - by Aho' cover the HM type system ?
23:06:38 <seth_> stepcut: mine is one version behind, but I don't see it there.  The newer one may have it.
23:06:55 <dennisb> is there a new one?
23:07:12 <dennisb> It's not in mine either and I bought it just 10 years ago
23:07:33 <dennisb> (and it was old already back then)
23:07:39 <stepcut> from what I understand the book doesn't change much
23:07:39 <seth_> I believe one came out fairly recently.
23:08:15 <dennisb> but it's a good book even if it's old
23:09:12 <stepcut> I am trying to give myself a strong enough foundation to under the internals of ghc
23:10:18 <seth_> yes, the sixth edition was released.
23:10:56 <seth_> there are many papers on HM.
23:10:58 <stepcut> the table of contents for the six edition just says "type systems"
23:11:28 <seth_> the sixth edition has much nicer dragons, too.  I've been delaying buying it because it is so expensive.
23:11:50 <stepcut> seth_: can you recommend some ? I have found many about overcoming weaknesses, but they assume you know about HM already
23:12:09 <seth_> wait on that, though, I may be confusing another book that sethi is coauthor on.
23:12:17 <seth_> stepcut: papers on HM?
23:12:20 <stepcut> although this one I just found looks good: A Simple Take on Typed Abstract Syntax in Haskell-like Languages
23:12:36 <stepcut> seth_: yeah
23:12:54 <seth_> I just found some refs in the dragon book.
23:13:29 <seth_> but those sites are quite old.
23:15:35 * stepcut is off
23:15:48 <dennisb> The "original" paper is quite nice and easy to read. As usual I don't rememeber the title, but it should be referenced just about everywhere. The bad thing is that i've not found it on the web
23:18:52 <seth_> Milner, R, A Theory of type polymorphism in programming, J computer and system sciences, 17:3, 348-375
23:19:54 <seth_> hindley, are [1969], the principal type-scheme of an object in combinatory logic, Trans. AMS 146, 29-60
23:20:06 <seth_> hindley, R that is
