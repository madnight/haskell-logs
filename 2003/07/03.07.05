01:12:09 * seth_ is away: Off to the glue factory
06:26:46 <shapr> whee
06:30:53 <Arnia> whoooooooooooooooooooo
06:31:03 * Arnia bounces around the channel like an elephant
06:32:59 <shapr> do elephants bounce?
06:33:10 <Arnia> If they don't, they should
06:33:52 <shapr> sounds reasonable
06:35:53 * Arnia plays Moloko at high volume whilst GHC6 downloads
06:36:10 <Arnia> Music is a wonderful aid to coding
06:52:12 <earthy> err... yes.
07:16:09 <jlouis> hmm, cant newtypes be instanced?
07:16:20 <Igloo> They can
07:16:47 * jlouis goes back to ponder over the code then
07:24:35 <shapr> @yow
07:24:35 <lambdabot> It's so OBVIOUS!!
08:11:23 <jlouis> it was trivial, heh
08:13:11 <Riastradh> shapr, implement a Chefalized Zippy quote generator in lambdabot.  I'm too busy with the reference implementation of SRFI 44 right now.
09:52:03 <Igloo> Can anyone explain the difference between "DO .data" and "DF .text" in objdump -T output?
10:30:07 <jlouis> SRFI 44?
10:30:18 <Riastradh> http://srfi.schemers.org/srfi-44/srfi-44.html
10:30:23 <jlouis> thanks
13:14:42 <Igloo> shapr?
13:24:18 <vorlon> ibid: ping
13:24:53 <ibid> pong
13:25:25 <vegai> oh, howdy
13:25:33 <vorlon> so, is there a use case, in your opinion, for trying to fix ghc4 when there's 5 and 6 in the archive?
13:25:47 <ibid> i don't really know. there could be
13:25:54 <ibid> then again there could be none
13:26:23 <ibid> the problem is that 4, 5 and 6 have slightly different source languages (in terms of nonstandard extensions)
13:26:41 <ibid> (and to some degree, of standard compliance)
13:26:49 <ibid> vegai: hi
13:27:08 <ibid> any ghc debian packagers around?
13:27:44 <Heffalump> well, each should presumably be compiled with the same major release of ghc
13:27:46 <vorlon> Well, fwiw, there are precisely three packages in the archive with build-depends on ghc4: ghc4, ghc5, and ghc6, and ghc6 is preferred. :)
13:28:17 * Heffalump pokes Igloo and wonders why ghc6 depends on 4
13:28:56 <vorlon> Heffalump: it only allows ghc6 to be built using 4, it doesn't really depend on it. :)
13:29:26 <ibid> vegai: have you test-driven helium?
13:29:48 <vegai> ibid: I've been mostly using ghc
13:30:04 <ibid> i mean, if it is good enough, maybe we should use it
13:30:08 <vegai> my distro has package for helium, though.
13:30:11 <vegai> ok, I'll check it ou
13:30:13 <Heffalump> OIC
13:30:13 <vegai> +t
13:30:22 <Heffalump> that makes more sense.
13:30:29 <ibid> ghc is my first choice if helium is not good enough
13:30:39 <Heffalump> helium isn't Haskell 98, though
13:30:52 <vegai> helium depends on jdk? oh my
13:30:53 <Heffalump> (deliberately so, AIUI)
13:31:04 <ibid> yeah, last i looked they said they'd have type classes in summer
13:31:11 <Heffalump> oh, ok
13:31:22 <Heffalump> I thought they left them out on purpose to avoid confusion - the docs certainly imply that.
13:31:47 <ibid> last i looked the lack of type classes was a reason for me to summarily disqualify it
13:32:50 <ibid> i can understand the desire to not have overloading in a teaching language, but the difference to real haskell is too great a price in my opinion
13:32:51 <vegai> shall we set up a darcs repository for all student works? =)
13:33:09 <ibid> darcs?
13:33:39 <ibid> Heffalump: it seems i misread their statement
13:33:42 <ibid> Heffalump: "Note: Helium does not support type classes yet. For that reason it is incompatible with Haskell text books. In the summer we plan to support 'textbook Haskell'."
13:33:50 <ibid> Heffalump: but that would probably be enough for me :-)
13:34:25 <vegai> ibid: another cvs replacement
13:34:36 <ibid> heh
13:34:38 <vegai> written in haskell
13:34:39 <ibid> is it any good
13:34:48 <vegai> just installing it myself
13:34:54 <vegai> so can't tell yet
13:34:56 <ibid> ok
13:35:11 <ibid> i'm not doing anything work-related before mid-august :-)
13:35:17 <ibid> (except talk, occasionally)
13:35:33 <vegai> good idea
13:36:11 <ibid> (a helium user interface depends on jdk, not helium itself)
13:36:18 <ibid> (at least last i looked :-)
13:36:34 <vegai> ah
13:37:56 <ibid> vegai: is darcs code good to read? :)
13:38:26 <vegai> from my point of view probably not ;-/
13:38:47 <ibid> your pov?
13:39:20 <vegai> ie. I have no idea if some piece of haskell code is good to read
13:39:37 <vegai> I'd vote for "yes, it is"
13:39:47 <ibid> heh
13:40:39 <vegai> ohh, almost all of darcs is in .lhs
13:41:08 <vegai> LaTeX
13:41:17 <vegai> clever
13:42:45 <ibid> i'd use .lhs more if haskell-mode were more intelligent about it
17:41:27 <ddarius> Pi in Haskell in approximately 50 lines
17:43:21 <kunphuzil> ddarius: what did you use to calculate it?
17:44:01 <ddarius> Wrong Pi
17:44:35 * Arnia uses macs to calculate pi
17:44:40 <kunphuzil> which Pi do you mean?
17:44:51 * Arnia waits for someone to get the terrible pun
17:45:22 <kunphuzil> Arnia: i don't get it
17:45:37 <Arnia> Apple pi
17:46:25 <ddarius> Pi calculus
17:46:26 * kunphuzil still doesn't get it
17:46:41 <Arnia> Apple Mac -> Apple Pi
17:47:13 <kunphuzil> oh
17:47:19 <kunphuzil> i saw macs as EMACS
17:47:21 <kunphuzil> heh
17:48:03 <Arnia> I'd claim that jokes aren't as good when explained... but this wasn't good to start with
17:48:40 <kunphuzil> heh, yeah. true to both 
17:50:22 * ddarius attempts some semi evil trickery for a bit nicer syntax
17:51:14 <kenikov> Does API count as a programming language or does it count as programming?
17:52:00 <Arnia> DSELs as well
17:52:17 <kenikov> or does it not count as any of those at all.  Because people keep on telling me it is the same as programming.
17:53:25 <Arnia> DSELs blur the line :)
17:53:38 <Igloo> Is there some reason why anyone would want ghc4?
17:53:56 <Heffalump> is it more ported than anything later?
17:54:27 <Igloo> Hmm, that's possible
17:55:44 <ddarius> Igloo isn't it the only one you can build from scratch?
17:55:47 <ddarius> @type asTypeOf
17:55:48 <lambdabot> asTypeOf :: a -> a -> a
17:55:58 <ddarius> @prelude asTypeOf
17:56:05 <lambdabot> *** "asTypeOf" prelude "Haskell Standard Prelude Dictionary": text follows
17:56:05 <lambdabot> asTypeOf
17:56:05 <lambdabot>   asTypeOf ::  a -> a -> a
17:56:05 <lambdabot>   asTypeOf        = const
17:56:26 <Igloo> I don't think you can compile it from scratch any more than you can ghc5
17:56:51 <Arnia> Igloo: How is GHC bootstrapped on a new platform?
17:57:08 * Igloo is wondering if it's worth fixing the Debian package or just having it removed. I suppose it's possible that interoperability with other OSes is one reason
17:57:14 <ddarius> I thought that GHC4 was the last GHC that could be built from .hc files.
17:57:15 <Igloo> Arnia: With difficulty ATM  :-)
17:57:30 <Igloo> ddarius: In theory or practise?
17:58:06 <ddarius> Both I suppose, I thougth/think that's the -only- route for a port
18:01:13 <Igloo> http://cvs.haskell.org/cgi-bin/cvsweb.cgi/fptools/distrib/cross-port?rev=1.1&content-type=text/x-cvsweb-markup is a script that builds a crossport. In practise last time I tried one of the intermediate compilers segfaulted.
18:01:51 <Igloo> Simon M said he'd try to look at it at some point
18:28:55 <ddarius> well it was evil, but it worked
18:39:14 <Igloo> what did?
18:41:14 <ddarius> The nu equivalent for my EDSL was used like (new $ \ping -> new $ \pong -> ...) now from some type class hackery I can go new $ \ping pong -> ... or new $ \a b c d e -> ...
18:41:47 <Igloo> Ah, right
18:41:57 <Heffalump> instance Foo a => Foo (b -> a) is nice :-)
18:46:46 <ddarius> I believe that would give me a type ((a -> b) -> c) -> d where I needed (a -> b -> c) -> d
18:47:25 <Heffalump> are you sure you needed that
18:47:37 <Heffalump> and not (a -> (b -> (c -> d)))
18:47:42 <Heffalump> (which is what that will actually give you)
18:48:57 <ddarius> new is definitely a higher-order function
18:49:23 <Heffalump> yes, since it takes a lambda-expression on the RHS
18:50:59 <ddarius> new originally had type (Channel -> IO a) -> IO Channel (and attempting to generalize replacing Channel is why I said the above type)
18:51:43 <Heffalump> hmm, ok
18:51:59 <Heffalump> mine was just a general comment anyway, I cba to work out what I actually meant for the details of your problem :-)
18:54:24 <ddarius> I was hoping for that (but not much with it in a contravariant position), my current solution is fairly evil
18:54:56 <Heffalump> ok :-)
19:21:51 * Igloo builds haskell98-report - wow, building ghc so much has really scrweed with my perception of how long things should take
19:22:30 <Arnia> Upwards or downwards?
19:22:40 <Igloo> upwards
19:23:01 <Igloo> I collapsed back in my chair for a breather before starting something else, looked up and it had finished
19:24:09 <Arnia> Woah... I love modern software
23:36:04 <seth_> anyone tried to mix Haskell and java?
23:37:16 <o3> seth_: theoretically, or practically?
23:37:54 <seth_> o3: practically.  I'm forced to do the gui part in Java, because I don't have alternatives for one target, but I'd hate to do the whole thing in Java.
23:38:39 <o3> seth_: ah. can't help there, sorry
23:38:53 <seth_> it ought to be possible, I hope.
23:39:00 <seth_> I _really_ don't like java.
23:40:46 <o3> seth_: there's a few haskell<->java bindings around; see the haskell.org webpage and go to the Tools and Libraries page
23:41:01 <seth_> o3: thanks, I'll definitely do that.
23:41:11 <o3> the only one i remember off the top of my head is lambada, although i know there's at least one other one
23:41:20 <o3> no problemmo
