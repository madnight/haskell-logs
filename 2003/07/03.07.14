00:12:08 <shapr> good morning #haskell!
00:22:41 <shapr> hej Marvin-- 
00:22:54 <kosmikus> good morning shapr
00:22:55 <Marvin--> morning
00:22:58 <kosmikus> how are you?
00:23:01 <shapr> gutentag kosmikus 
00:23:08 <shapr> gut, danke
00:25:37 <Marvin--> --- Topic for #debcamp is We're heading towards releasing sarge... :-) | ... | Branden we love you even more without a guitar
00:54:12 * shapr bounces cheerfully
00:54:59 <Heffalump> "heading towards"?
00:56:50 <Marvin--> ?
00:59:07 <Heffalump> how long is it likely to be?
00:59:20 <Marvin--> good question
00:59:27 <Marvin--> we're trying to get out a beta of debian-installer after this week
01:27:14 <shapr> Igloo: finally, I think I understand your comment about getting out a list of factes
01:27:15 <shapr> faces
02:15:02 <Marvin--> grr
02:18:34 <Marvin--> heh, Koen just sent me a mail about hdaume's "all in one" thingy
02:19:11 <Marvin--> I should just give up irc until they fix the **** routers
03:17:02 <shapr> what sort of all in one thingy?
03:19:04 <o3> shapr: combines lots of haskell modules into a single module
03:19:40 <shapr> oh, I've wanted something like that
03:19:51 <shapr> is it just a simple preprocessor?
03:20:02 <o3> no, it looks rather complex actually
03:20:19 <shapr> have an url?
03:21:07 <o3> http://www.mail-archive.com/haskell@haskell.org/msg13007.html
03:22:46 <clausen> anyone in the mood for checking proofs?
03:24:34 <Igloo> shapr: Cool  :-)
04:02:25 <clausen> thornber!
04:02:40 * clausen wonders if he's alive
04:02:52 <shapr> freenode is flaky today
04:36:21 <shapr> yay, unicycle pictures: http://kungens.kemi.fi/~shae/foto/
04:36:42 * shapr bounces cheerfully
04:36:51 <shapr> hej Marvin-- 
04:36:56 <Marvin--> hello
04:37:01 <shapr> see my unicycle pictures I just took: http://kungens.kemi.fi/~shae/foto/
04:37:06 <Igloo> Is that Bea in unicycle.jpg?
04:37:12 <shapr> yes, that's Bea
04:37:46 <Marvin--> :)
04:38:12 <shapr> enhjulinger är kul.
04:38:45 <Marvin--> enhjulingAr
04:38:55 <shapr> oh, ok
04:39:02 <shapr> enhjulingar, tack
04:39:19 <o3> hmm.  if i'm going to sweden, will i be able to get by only speaking english?
04:39:39 <shapr> yes
04:39:48 <Marvin--> o3: yes
04:39:54 <shapr> it's hard to find people who don't speak english where I live, 800km north of stockholm
04:40:13 <o3> okie dokie
04:40:29 * o3 ponders whether he can learn basic Netherlandish in a few weeks
04:40:33 <Marvin--> moshez was absolutely thrilled about moving europython from Charleroi to GÃ¶teborg ;) "yay, a city where I can talk to people"
04:40:39 <shapr> o3: start with graag gedann
04:40:59 <o3> and that means ...?
04:41:11 <shapr> thanks much
04:41:18 <shapr> though you can also say dank u vel
04:41:57 <o3> dank u vel :)
04:42:11 <kosmikus> graag gedaan is more like "you're welcome"
04:42:20 <shapr> I thought that was astublieft
04:42:24 <shapr> however you spell it
04:42:29 <kosmikus> yes, that too
04:42:30 <shapr> o3: maybe I'm not the best dutch teacher ;-)
04:43:25 <kosmikus> and it's "dank u *w*el" :)
04:43:46 <shapr> good point
04:43:52 <shapr> but you say it like an english vee
04:44:01 <shapr> donk oo vel
04:44:25 <kosmikus> approximately, yes ...
04:44:38 * Heffalump is definitely hoping to get by only speaking English :-)
04:44:39 <o3> shapr: no problem :)
04:45:11 <o3> Heffalump: are you going to PLI/HIM?
04:45:16 <kosmikus> o3: what do you want to learn Dutch for?
04:45:37 <o3> kosmikus: may be dropping by holland at the start of september, to visit my cousin and some friends there
04:45:41 <Heffalump> ICFP.
04:45:46 <Heffalump> (so PLI, yes)
04:45:47 <kosmikus> ah
04:45:48 <o3> thought i should do the polite thing and actually learn the bloody language of the country i'm visiting :)
04:46:07 <Heffalump> I've heard it's almost impossible to speak Dutch in the Netherlands unless you have a perfect accent.
04:46:23 <Heffalump> because people are too keen to helpfully speak English when they realise you're not a native
04:46:45 <kosmikus> the Dutch are very happy to speak English most of the time, although learning Dutch yourself is nicer, of course :)
04:46:49 <shapr> swedes are willing to play along and give helpful corrections, I really like that.
04:47:13 <kosmikus> Heffalump: that's really true
04:47:23 <Heffalump> I always feel really embarrassed visiting countries I can't speak the language of, but it's just not practical to learn a language for each trip.
04:47:28 <kosmikus> it still happens to me after almost three years
04:47:33 <kosmikus> but not that often anymore
04:47:40 <o3> Heffalump: i just feel embarrassed that the only language i know is english
04:47:49 <o3> that's what i get for not living in europe, i suppose :)
04:48:42 <Heffalump> if I wasn't a native English speaker, I'd feel better about communicating with random people in another country in English, cos we'd each be going to the same effort
04:49:02 <Heffalump> The only language I know is English, really :-) I can survive in French if I have to, but it's pretty rusty.
04:49:43 <Marvin--> <liw> http://liw.iki.fi/liw/log/debconf3-signs.jpg - I'm probably confused and missing something here
04:50:07 <Igloo> I probably don't know enough French or German to survive without pointing, and I could probably survive equally well by doing that in any other language
04:51:12 <o3> Marvin--: will i get a polite response if i point at something in sweden and say "b0rk b0rk b0rk"?
04:51:12 <Igloo> Marvin: It's directing you through the door-schecane(but spelt right), obviously  :-)
04:51:17 * o3 hides
04:51:49 <Marvin--> o3: no :)
04:52:12 <o3> Marvin--: what if i can cook really well? ;)
04:53:36 <o3> Heffalump: if you're going to PLI/ICFP, i might see you there
04:54:47 * Heffalump is expecting to meet a lot of people from on here there :-)
04:54:50 <shapr> o3: yes, come to the #haskell meeting at PLI/ICFP
04:55:04 <Marvin--> damn you for tempting me :-/
04:55:19 <Marvin--> maybe I can just go to HW and the #haskell meeting, and skip the ICFP
04:55:23 <Marvin--> (thus saving money)
04:55:37 <o3> shapr: well, it all depends on whether i get a paper accepted (not to PLI, but a nearby conference -- IFL, i think)
04:56:03 <o3> shapr: but i've never been to sweden before, so i'm working pretty hard to make sure this paper kicks some booty :)
04:56:45 <Heffalump> when do you hear about acceptance?
04:57:48 <o3> Heffalump: i don't know, actually.  the submission deadline for IFL is august 1st
04:57:51 <o3> http://www.macs.hw.ac.uk/~ifl03/
04:58:29 <Igloo> It must be before Aug 22 though
04:58:33 <Heffalump> that's a registration deadline
04:58:54 <Heffalump> it looks to me as if anyone who wants can give a paper at the conference, it's only for the proceedings afterwards that there'll be refereeing
04:59:01 * shapr dances cheerfully
04:59:06 <Igloo> Oh, oops, I didn't read it properly
04:59:09 <o3> ah.  yeah, now i remember something like that :)
04:59:29 <Heffalump> so how will the decision on whether you can go be made? :-)
04:59:35 <o3> ooh, 100 euro prize.  will go nicely toward an ipod
05:00:14 <o3> Heffalump: erm.  yeah ... i'll have to chat to chilli about this again :)
05:00:33 <Igloo> What will your paper be on?
05:01:09 <o3> Igloo: an abridged version of http://www.algorithm.com.au/mocha
05:05:19 <shapr> hi Arnia
05:09:01 <shapr> hej norpan 
05:14:18 <Arnia> shapr: Think I've solved my AppArrow conceptual problems :(
05:14:24 <Arnia> s/:(/:D
05:14:48 <Heffalump> Monad!
05:14:59 <Arnia> Monad?
05:15:15 <Heffalump> assuming by AppArrow you mean ArrowApply, then it's just a Monad.
05:16:04 <shapr> Arnia: yay, what did you come up with?
05:16:12 <Arnia> No... Application Arrow. An arrow for a comprehensive applications framework
05:16:55 <Arnia> shapr: I decided to use URIs to key into a binary search tree storing resources of type AppData
05:17:48 <Arnia> shapr: This resource cache stores results indefinitely... with requesting Signal Functions asking for it to be cleaned up
05:18:35 <Arnia> shapr: I only need the signal functions to produce about five 'commands'... LoadResource, UnloadResource, WriteResource, ParseResource and DeleteResource
05:19:31 <Arnia> shapr: I have a mapping of protocol to handlers where a handler is a record containing three functions -- loadResH, writeResH and delResH
05:20:25 <Arnia> shapr: By describing URI schemes and request parameters for each protocol we can access so many different concepts
05:21:00 <Arnia> shapr: I've come up with basic ideas for the mappings for threads/IPC, sound, 3D graphics etc
05:21:00 * Heffalump looks confused. Are these Hughes-style arrows?
05:21:29 <shapr> Arnia: I don't understand, I think I'd have to see code
05:23:23 <Arnia> shapr: Quick example... if a signal function wants to load a file, it searches the resource cache (provided as one of the signals in an AppArrow) for the URS (Universal Resource Selector, essentially a URI plus parameters).
05:23:41 <shapr> ok
05:24:08 <Arnia> shapr: If its not there, it adds a "LoadResource <urs>" form command into the RequestQueue (one of the output signals)
05:25:14 <Arnia> shapr: It uses arrow loop to wait until the resource appears in the cache and then changes itself (using a switch) into a constant signal with that value, removing the resource from the cache just before it does so
05:26:02 <Heffalump> what are you aiming to gain by this approach?
05:26:27 <Arnia> Access to files and networks from AFRP
05:26:37 <Arnia> Plus what ever else IO we need to do
05:28:10 <Heffalump> right
05:32:00 <Arnia> Unless you can think of another extensible way to do it :)
05:32:49 <Heffalump> can the AFRP arrow be expressed as an arrow transformer?
05:34:53 <Arnia> No, don't think so, but it is 'reactimated' by a HOF function that allows you to take your own IO computation to act on the data emerging from the Signal Function and feed your own data in
05:35:08 <Heffalump> whatted?
05:36:31 <Arnia> Umm... AFRP uses the concept of signal functions which are applied pointwise to an input signal every time step. You can specify your own IO computation that produces the input and processes the output of the outermost signal function (effectively plumbing it into the world)
05:36:52 <shapr> the loop is the recursive-until arrow, yah?
05:37:16 <Arnia> Monad... the reactimation is a monad, not an arrow
05:37:34 <Arnia> (yes, I know all monads are arrows...)
05:38:08 <Heffalump> right.
05:38:17 <Heffalump> oh, so it can be any monad, not just IO?
05:38:59 <Arnia> Hmm... it can be if you're willing to write your own reactimator.
05:39:12 <Arnia> Not the lightest of things...
05:39:50 <Heffalump> why, what's required?
05:40:20 <Arnia> Something that can efficiently interpret the continuations of signal functions
05:40:39 <Arnia> That is fairly tricky and the code they use to do it fast is quite messy
05:41:29 <Arnia> This is why the reactimator takes parameters of IO computations to be used in the reactimation loop
05:43:55 <Arnia> Also, you can't just put an IO type into the return type of the arrow, because then that IO action would be executed every single loop. Some sort of cache is essential
05:44:20 <Arnia> s/arrow/signal function
05:58:30 <Marvin--> man, I
05:58:32 <Marvin--> 'm tired
06:05:36 <shapr> whyfor?
06:06:20 <o3> Marvin--: ditto.  i never knew lactic acid would suck this much
06:06:48 <Marvin--> shapr: 'cause I slept horribly bad last night, I hate inflatable mattresses
06:06:59 <shapr> oh, that does suck
06:07:36 <phubuh> the people in my neighbourhood insist on running enormous lawnmowing or whatever machines when i'm sleeping
06:07:42 <Marvin--> hopefully I'll sleep better tonight, if nothing else than because I'm dead tired
06:07:57 <phubuh> and then they stop, and after a minute, they go at it again, and i want a rifle
06:08:14 <shapr> phubuh: when do you sleep? during the day?
06:08:46 <phubuh> well, that woke me up about an hour ago
06:08:54 <phubuh> (around 2 pm)
06:11:39 <Heffalump> when would you prefer they cut their grass?
06:12:10 <shapr> 3am, when I'm awake.
06:17:48 <arguile> I'd just like them to use push mowers and not the 450HP self-propelled 120km/h monsters they use
06:18:10 <shapr> I thought it was cool to run a V8 in my mower
06:18:22 <o3> shapr: see, i solved this problem by keeping normal sleeping hours
06:18:31 <shapr> I'm trying!
06:18:50 <o3> shapr: to be honest, life has been much better since i've done that ;)
06:19:56 <arguile> Alternately you could just install central air and triple pane windows :)
06:23:45 <o3> Igloo: hmm, template haskell question ... do you think it's possible to have a TH pragma to link in a library?  e.g. insetad of writing -lfoo on the commandline, have a {-# TH_LINK foo #-} pragma or so ...
06:24:24 <o3> by 'possible', i mean possible to implement in the current GHC infrastructure
06:25:57 <Heffalump> why should that be a TH-ish thing?
06:26:28 <Marvin--> yay, I found coffee
06:26:38 <shapr> yay
06:26:51 <Marvin--> and it's both free and Free
06:26:54 <Marvin--> :-)
06:27:02 <o3> Heffalump: good point, although i can't think of any situation where it would be useful outside of TH right now
06:33:19 <shapr> hi pesco 
06:33:30 <SyntaxPolice> mornin'
06:33:39 <shapr> g'mornin SyntaxPolice 
06:34:35 <SyntaxPolice> shapr: ! :)
06:34:49 <o3> hi sp
06:34:49 <shapr> hi!
06:35:42 <Igloo> o3: You might be able to do that with the static flags pragma whose name escapes me
06:35:58 <Heffalump> I think but am not certain that you can't.
06:36:01 <Heffalump> otherwise I'd have suggested it
06:36:30 <Igloo> Hmm, it appears not to be in the pragmas section of the docs
06:36:34 <Heffalump> {-# OPTIONS -fglasgow-exts #-}
06:36:37 <o3> Igloo: actually, what i'd like is a TH function to link in a library
06:36:47 <o3> i just cleared up my confusion a bit
06:37:26 <o3> something like $(linkLibrary "foo") to achieve the same thing as -lfoo
06:37:37 <o3> i'll have a think about it a bit more and post to the th mailing list
06:38:07 <Igloo> That will probably be easy if you can put -lfoo in an OPTIONS pragma, I think
06:38:47 <Heffalump> TH can generate pragmas?
06:38:54 <o3> Igloo: except that the library i want to link in is parameterised
06:39:10 <o3> yeah, so TH would have to generate pragmas, like Heffalump said
06:39:37 <Igloo> No, but if the info can be carried by one then that removes what looks like the hardest problem, remembering the info between compile and link times
06:40:47 <o3> Igloo: yeah, that's what i was wondering.  thanks, will email the list soon and see how soon it is before simonpj shoots me down :)
06:41:12 <Igloo> Ah, looks like Heff is right, though
06:42:21 <Heffalump> as always :-)
06:42:30 <o3> so modest :)
06:42:56 <Heffalump> absolutely.
06:43:36 <o3> "i'm always right, although this time I'm even more right than i usually am" -- paraphrasing linus
07:00:46 <SyntaxPolice> heh
07:02:30 * Marvin-- screams in frustration
07:02:40 <Marvin--> I hate working with "strings" in C :-/
07:16:05 <phubuh> i hate working with strings in all languages :-/
07:16:35 <Marvin--> any language that doesn't force me to use realloc all the time is better than C
07:17:43 <ibid> but you can wrap it
07:17:46 <ibid> :-)
07:18:48 <o3> Marvin--: you don't need to use realloc, just malloc(10000000) :)
07:19:53 * SyntaxPolice null-terminates Marvin--
07:20:08 <Igloo> Or just require all input to be "Foo". Then you only ever need 4 byte strings, and you can even optimise them away later!
08:32:03 <hdaume> morning :)
08:33:40 <Igloo> Hiya
08:42:53 --- mode: ChanServ set +o SyntaxPolice
08:42:58 --- mode: SyntaxPolice set -o SyntaxPolice
09:15:13 <saz> 9
09:15:16 <saz> oops
09:30:36 <Igloo> I don't know what is more depressing - that the GLU.NURBS module is empty or that it has "Stability   :  provisional"
09:32:18 <mgoetze> Igloo: it's all pretty much the same if you consider how much more depressing it is that java is still around
09:53:10 <Marvin--> hdaume: that AllInOne thingy seems really nifty, now I won't have to write one myself for my degree project :)
09:54:10 <Marvin--> the first thing I thought when I saw your mail to h@h.o was "hey, I can use this"
09:54:27 <Marvin--> and then just a few minutes after that, I got a mail from Koen, saying "this is probably useful!"
09:57:51 <hdaume> Marvin--: awesome :)
09:58:17 <hdaume> ...as long as you use H98 :)....
09:58:41 * Igloo gets it to try to break it but finds it doesn't have a Makefile and the obvious thing fails to find SyntaxTerm
09:59:09 <hdaume> uhm, 'ghc --make -i. HAllInOne' should work
09:59:33 <Igloo> Where do you expect SyntaxTerm to come from?
09:59:54 <hdaume> hold on a sec...maybe i forgot to bundle that :)
10:00:48 <Igloo> The teeniest of Makefiles would be nice too  :-)
10:00:56 * hdaume doesn't know how to write makefiles :)
10:01:06 <Igloo> I didn't have the -i., but I'm not sure I see why it should be needed either
10:01:10 <hdaume> Igloo: redownload the bundle
10:01:11 <Igloo> all:
10:01:16 <Igloo> <tab>ghc --make -i. HAllInOne
10:01:19 <Igloo> would do
10:01:23 <hdaume> haha
10:01:24 <hdaume> okay
10:02:16 <hdaume> it now has a Makefile :0
10:03:33 <Marvin--> hdaume: heck, my project doesn't even support a *useful* subset of H98 yet :)
10:04:32 <hdaume> Marvin--: hehe
10:04:35 <Marvin--> hdaume: it's my find-bugs-by-translating-to-FOL project, and I've been needing some sort of module support for a long time, and this sounds like it :-)
10:04:39 <Igloo> System.IO doesn't seem to export bracket with GHC 6.1 FYI
10:04:56 <hdaume> Igloo: sigh, I made that change so it would compile with 5.04
10:05:06 <hdaume> (cuz my linux installation is only 5.04 right now)
10:05:11 <Marvin--> hdaume: I haven't looked at it yet, since I'm in Norway at the moment... does it pull in things from the Prelude as well?
10:05:13 * Igloo gets it compiled with ghc --make -i. HAllInOne -package lang -fglasgow-exts -fallow-undecidable-instances
10:05:26 <Igloo> Oh, I misread the direction in which the changes had to be made then, sorry
10:05:31 <Igloo> (in your mail to haskell@)
10:05:45 <hdaume> Igloo: no, i just forgot to change it back to 6.0
10:06:28 <hdaume> Marvin--: pretty much up do you.  obviously you need to source for the Prelude in the path if you want it to pull that in, but you can build "interface" files for any module in which case it won't pull in those definitions
10:07:32 <hdaume> Igloo: you'll probably be successful in breaking it :)
10:07:52 <hdaume> Igloo: most of my programs aren't H98 anyway, so I only tested against the GHC regression suite
10:07:59 <Marvin--> hdaume: all right, I'll have a look at it next week, when I'm back in GÃ¶teborg :)
10:08:00 <hdaume> Igloo: as well as a few hand-concocted programs
10:08:19 <hdaume> Igloo: i updated the Makefile
10:08:31 <Marvin--> "only" tested against the regression suite? :P
10:09:17 <hdaume> Marvin--: well, those programs tend to be very small
10:09:45 <Heffalump> why do people want the AllInOne thing, just to reduce the work when you make a Haskell analyser?
10:10:07 <Marvin--> yes :)
10:10:15 <hdaume> Marvin--: and only against the ones which are supposed to work.  the claim the program makes is only "if it compiles as it is, it should compile all-in-one-ified"; the converse is not true
10:10:15 <hdaume> Heffalump: yeah
10:10:23 <Marvin--> rigth
10:10:51 <Marvin--> hdaume: I wonder if it'll work with the helium prelude... *ponder*
10:11:22 <hdaume> Marvin--: i have no idea :)...if you want to build an interface file, you need the GHC .hi files...so if you can compile the helium prelude with GHC, then yes
10:12:01 <Marvin--> I don't want to build interface files... I want a big .hs file with exactly those symbols pulled in that I need...
10:12:16 <Marvin--> then I can parse that .hs file and convert it all to FOL, and it Should Just Work
10:12:39 * Igloo mails hdaume  :-)
10:12:48 <Igloo> I imagine you need something like GHC's z-encoding
10:13:12 <hdaume> Marvin--: ah, if youjust want to pull it in, you just need the source
10:13:26 <hdaume> Igloo: yay :)
10:14:55 <hdaume> Igloo: well, yeah, if you *try* to break it :)...originally i had a much more complex scheme for naming where it used the full path and replaced '.' with "_dot" and '/' with "_slash" which would fix that bug, but i had to weigh that against being about to sort of read the output...
10:15:47 <hdaume> Igloo: maybe i'll put it back, or provide a flag...
10:15:55 <Igloo> I think _ as separator, z_ as  and zz as z would be reasonable
10:16:05 <Igloo> z_ as _ that is
10:16:15 <hdaume> ah, good idea :)
10:16:25 <hdaume> i'll fix that sometime soon :)
10:19:13 <Marvin--> this sounds great, hey maybe my degree project program will have practical uses after all, if it has a module system and all ;)
10:20:39 <hdaume> Igloo: new source distrib available fixes that bug (i think) :)
11:00:23 <Igloo> Cool
11:00:31 <hdaume> Igloo: what?
11:00:42 <Igloo> You bugfixing
11:00:47 <hdaume> ah :)
11:15:31 <SyntaxPolice> Igloo: out of curiosity, why is ghc4 still around in Debian?
11:16:18 <Igloo> It'll be gone RSN
11:16:41 * Igloo sent a mail checking with MW over the weekend who agreed it should go. I'll be filing the bug tonight at some point
11:19:22 <SyntaxPolice> I see. Cool.
11:19:31 <Heffalump> so there aren't any architectures it works on and ghc5 doesn't?
11:21:07 <Igloo> It's more that I don't think it's worth the effort of fixing unless someone actually wants it
11:21:32 <Heffalump> ah, what's wrong with it?
11:22:09 <Igloo> I'd need to find out how to make it compile with gcc 2 (which is probably easy, but probably also pointless
17:26:20 <steveh> #haskell no longer has "mo' nads than you?"
17:26:22 <steveh> shocking
17:26:23 <steveh> :)
17:26:39 <Pseudonym> The motd looks positively short.
17:27:28 * Pseudonym feels so dirty
17:27:37 <Pseudonym> I blew away debian and am now running RH9.
17:27:42 <Heffalump> :(
17:27:43 <Heffalump> why?
17:27:52 <Pseudonym> This is only on my work machine.
17:28:13 <Pseudonym> Because if we ever port our product to ia32 linux, that's what we'll use.
17:28:19 <Pseudonym> And we want to do some testing.
17:28:48 <Heffalump> ah
17:30:05 <steveh> eh you seen one linux distribution you seen 'em all :)
17:30:34 <Pseudonym> Not true.
17:30:37 <Pseudonym> Well...
17:30:41 <Pseudonym> OK, partly true.
17:31:10 <Pseudonym> deb vs rpm I can take or leave, but I miss my apt.
17:31:28 <steveh> "I want my APT"
17:31:33 <steveh> look at them yoyos
17:31:33 <Pseudonym> Exactly. :-)
17:31:36 <steveh> that's the way you do it
17:31:46 <steveh> money for nothing and the check's for free
17:31:49 <steveh> that ain't workin
17:32:06 <Pseudonym> BTW, it's "chicks" for free.
17:32:13 <Pseudonym> But this is a family channel.
17:32:18 <steveh> is it?
17:32:21 * Pseudonym nods
17:32:26 <steveh> that does make more sense
17:32:35 <steveh> I might have been 12 when I last heard it on the radio ;)
17:32:52 <Pseudonym> Yes, the protagonist of the song is ranting about how rock stars don't really work for a living.
17:32:53 <steveh> I'm 23 now, so...
17:33:03 <steveh> I remember Sting
17:33:13 <steveh> and a goofy video with "computer graphics"
17:33:23 <Heffalump> you can get apt for RH
17:33:32 <Heffalump> it works ok, except that RH packages tend to be more broken
17:33:36 <Pseudonym> Heffalump: Yes, you can, but not enough things are pacakged that way./
17:33:39 <steveh> you can get apt for OS X too ... doesn't mean it should be done ;)
17:33:52 <Pseudonym> apt is only useful when you have the apt repositories to go with it
17:34:13 <Heffalump> haven't people made standard RH repositories?
17:34:19 <Heffalump> It's not hard to make your own, anyway
17:34:40 <Heffalump> Debian GNU/Redhat, here we come...
17:34:40 <Pseudonym> OK, someone here might know the answer to this.
17:35:15 <Pseudonym> If I have a source RPM, is there a simple way to turn this into a binary package?
17:35:23 <Pseudonym> Or at least to fool the system into thinking that I have the appropriate binary package installed.
17:36:44 <Heffalump> rpm --rebuild foo.src.rpm
17:36:50 <Pseudonym> Thanks!
17:36:54 <Heffalump> oh, with RH9 it might be rpmbuild --rebuild or something
17:36:55 <Heffalump> or rpmb
17:37:06 <Pseudonym> OK, the point is I know what keyword to look for.
17:37:13 <Heffalump> they split the manage binary and source package functionality just as I gave up on RH
17:37:21 * Pseudonym nods
17:37:33 <Heffalump> there's no real easy way to fool the system, without making a teeny little skeleton package
17:37:42 <steveh> I have been using BSD for years now
17:38:07 * Heffalump really likes RPM's source packaging mechanism, in comparison to DEB's.
17:38:09 <steveh> started on openBSD, since the hardware I wanted to run didn't have a functional CD drive, and openbsd's net install was the most straightforward
17:38:18 <Heffalump> unfortunately RH sucks in most other ways
17:38:32 <Pseudonym> I like ports.
17:38:35 <steveh> then I built a few of my own machines for freebsd
17:38:40 <Pseudonym> (Both BSD ports and haskell-ports.)
17:43:13 <Pseudonym> Actually, to bring the discussion back to haskell for a moment...
17:44:09 <Pseudonym> Haskell-ports or GHC channels/mvars are a kind of IPC.  It seems to me that you could have something like them but which schedules more like a mutex.
17:44:54 <Pseudonym> Hmmm.
17:44:56 <Pseudonym> Maybe not.
18:38:04 <juhp> yay - "ghci -package gtk2" works now in cvs
18:41:28 * juhp puts a snapshot rpm for ghc6.0 at http://haskell.org/~petersen/rpms/gtk2hs/
18:45:50 --- topic: set to '["We put the Funk in Funktion","See logs @ http://tunes.org/~nef/logs/haskell/","Learning Haskell - http://www.haskell.org/learning.html","http://haskell.org/~petersen/rpms/","arrows preprocessor pre-debs: deb http://urchin.earth.li/~ganesh/apt/ unstable/"]' by juhp
