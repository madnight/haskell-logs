00:30:47 * Marvin-- yawns
00:48:34 <jlouis_> morning
03:40:56 <Marvin--> ooh, cute USB memory sticks with the company name on, me wantee
05:18:21 <shapr> hi
05:19:34 <kosmikus> hi shapr
05:19:40 <shapr> hi kosmikus 
05:19:44 <shapr> how are ya?
05:19:54 <kosmikus> slowly regenerating from the weekend
05:20:12 <shapr> me too :-)
05:21:32 * earthy curses the apple.nl website
05:21:50 <Marvin--> I'm much more awake today :)
05:22:21 <kosmikus> any of you visiting both HW and HIM?
05:22:22 <Marvin--> HIM?
05:22:56 <kosmikus> Haskell Implementor's Meeting
05:24:04 <Marvin--> I may come to HW if I can afford it, have time and somewhere to stay et.c.
05:34:30 <shapr> I'm considering going to both HW and HIM
07:00:53 * shapr boings
07:00:57 <shapr> hi mids 
07:01:02 <shapr> hello dalor 
07:01:28 <mids> hi shapr 
07:01:43 <shapr> are you learning Haskell?
07:01:50 <mids> not yet
07:02:10 <shapr> would you like some urls to help you learn Haskell?
07:02:53 <mids> I have to write some kind of report, so I am showing all kind of evading behaviour
07:03:12 <shapr> evading?
07:03:13 <mids> from darcs I endup up in haskell
07:03:20 <shapr> ah, darcs is cool
07:03:27 <shapr> what do you mean by evading behaviour?
07:04:00 <mids> well, instead of focussing me on the work, browsing the internet & chatting :)
07:04:03 <Igloo> displacement activities
07:04:10 <shapr> oh!
07:04:16 <shapr> what's the report about?
07:04:31 <vegai> have you darcs'ers tried arch? how do you think it compares?
07:04:31 <mids> nothing interesting, some stuff for the university
07:04:45 <mids> I tried arch and ArX
07:05:13 <mids> but I got lost halfway down into obscure bugs, incorrect instructions in the manual, and beeing too familiar with CVS
07:05:17 <shapr> vegai: zooko asked how darcs is better than arch
07:05:28 <shapr> david said the commutation of patches doesn't work in arch
07:05:51 <Marvin--> shapr: commutation? As in applying patches in different orders?
07:06:43 <shapr> yup
07:07:05 <shapr> unless patches directly depend on each other, they're commutative in darcs.
07:07:20 <mids> http://www.abridgegame.org/pipermail/darcs-users/2003/000146.html
07:08:12 <vegai> shapr: I'm probably interested in simplicity of use
07:08:35 <shapr> I'm used to cvs, does it count as hard or easy?
07:08:50 <vegai> I find it harder than it should be
07:08:55 <shapr> darcs? or cvs?
07:08:58 <vegai> cvs
07:09:11 <shapr> no arguments there
07:09:20 <vegai> well, not harder, but tedious
07:09:39 <vegai> gotta try darcs out then
07:09:53 <vegai> I guess it's pretty slow, being written in haskell? 
07:09:55 * vegai runs.
07:10:25 <mids> when I did run it the first time I did expect the VM to take a couple of minutes to load
07:10:38 <mids> guess I have been using too much java recently :)
07:13:32 <earthy> hmmm. anyone compared darcs to subversion or bitkeeper yet?
07:13:38 <shapr> http://zooko.com/revision_control_quick_ref.html
07:13:40 <mids> http://www.zooko.com/revision_control_quick_ref.html
07:13:46 <mids> darn, 1 second late
07:15:03 <earthy> ah, *good*
07:16:55 <earthy> looks like a good hacking project
07:27:07 <Heffalump> does anyone know of any academic research on revision control?
07:57:10 <jlouis_> www.opencm.org
07:57:51 <jlouis_> Jonathan Shapiro at least has a couple of interesting papers
07:57:51 <jlouis_> I havent read them though
07:58:21 * tmoertel is reading the DARCS manual
07:59:49 * earthy is reading appendix A to the DARCS manual ;)
08:00:33 <jlouis_> DARCS surely is interesting :)
08:01:44 <Heffalump> yes, kosmikus and I had some comments about that we want to write up and discuss with the author
08:01:57 <earthy> owh, *do*
08:02:13 <earthy> DARCS might be a tractor app to get Haskell more accepted as a programming language
08:02:42 <Heffalump> POPL deadline in 16 days time takes precedence for me, though :-)
08:02:57 <earthy> ghe ;)
08:06:29 <earthy> interesting though how it relies on having insert/delete patches rather than copy/add patches
08:08:23 <earthy> where most research seems to have veered in the direction of the latter due to more favorable space properties and a better ability to deal with binary files
08:12:07 <hdaume> morning folks
08:13:23 <mids> hi
08:15:12 <kosmikus> Heffalump: good luck with POPL!
08:16:52 <kosmikus> apropos darcs: I still plan on writing the comments
08:17:08 <kosmikus> so far I have at least subscribed the mailing list and written a Gentoo ebuild
08:20:47 <mids> when compiling I got pretty scared when my screen was flooded with assembler code :)
08:21:23 <mids> but it turned out that this was some kind of debian unstable flaq
08:21:23 <mids> flaw
08:22:24 <mids> first it got me wondered if haskell was that low level :)
08:22:41 <mids> anybody familiar with Miranda?
08:23:30 <Igloo> It's a GHC/gcc mismatch really
08:23:53 <Marvin--> I usually use -pgmc gcc-2.95
08:24:34 <Marvin--> it was annoying having to edit the toplevel Makefile when compiling a new kernel though
08:27:58 <Marvin--> beeeer
08:32:05 <Heffalump> mids: I know something about it, but I didn't know people really use it nowadays
08:33:03 <mids> they did make me learn it!
08:33:06 <mids> pitty pitty :)
08:35:44 <kosmikus> well, I guess it's not a bad thing to know Miranda ... Haskell is quite similar, isn't it?
08:35:56 <Heffalump> yeah.
08:36:24 <Heffalump> it just seems an anachronism to be teaching anything other than Haskell these days
08:37:20 <mids> welcome to the amazing world of dutch academy
08:40:49 <kosmikus> they teach Miranda in Twente?
08:41:59 <mids> did that till 2 years ago
08:42:22 <mids> was the first programming language you learned for freshmanship computer science
08:42:29 <mids> now everything is java
08:46:43 <kosmikus> that's not an improvement ;)
08:48:00 <mids> not really :)
08:48:09 <mids> is there some haskell for frustrated ex-miranda coders guide?
08:48:11 <Heffalump> oh, ugh
08:48:14 <Heffalump> (re Java)
08:48:35 <Heffalump> google finds http://www.cs.mu.oz.au/tr_submit/test/cover_db/mu_TR_1999_14.html
08:48:58 <hdaume> mids: yes, there's something with almost that exact title :)
08:49:05 <mids> amazing!
08:49:15 <mids> this google thing must be nice
08:49:24 <mids> I hear all kind of good words about it
08:49:25 <hdaume> http://www.cs.mu.oz.au/~bjpop/papers/mira2hask.ps.gz haskell for miranda programmers
08:49:49 <Heffalump> I imagine that's what's linked from what I pasted :-)
08:49:55 <mids> yes
08:51:04 <mids> oh, not really actually
09:40:40 <h> hello
10:11:54 <shapr> hi
10:20:24 <mids> ArgumentDefaults.lhs: can't locate import `System.Console.GetOpt'
10:20:29 <mids> shouldnt that be part of standard ghc5 ?
10:23:38 <Igloo> In 5.04.3 yes
10:24:05 <Igloo> 5.02.2 no
10:24:08 <mids> then why doesnt it work on my debian box with 5.02.2-1
10:24:21 <mids> but does it work on my other debian box with 5.02.2-1
10:24:26 <Igloo> Use -package util and GetOpt
10:24:48 <Igloo> Are you saying it does work or what?
10:24:55 <mids> oh wait
10:25:07 <mids> I was typing ghc --version in the wrong shell
10:25:09 <mids> ic
10:29:12 <mids> thanks
10:51:43 <elmex> is it a good way to sync some co-threads with a MVar (containing the state) in a Reader Monad?
10:52:52 <Heffalump> why a Reader monad?
10:53:49 <elmex> because the MVar won't be replaced
10:54:07 <Heffalump> but aren't you already in some other monad for the threading?
10:54:18 <elmex> IO monad?
10:54:46 <Heffalump> is the Reader monad just because you don't want to have to pass the MVar around everywhere?
10:54:52 <elmex> yes
10:55:02 <Heffalump> so you'll actually need a monad transformer, right?
10:55:18 <elmex> of course i'm using ReaderT
10:55:42 <Heffalump> I'd investigate implicit parameters as an alternative, but it sounds like a reasonably sane idea.
10:55:55 <elmex> ?
10:56:43 <elmex> i thought about my own state-sync-monad, which uses the MVar implicit to get the state
10:56:45 <Heffalump> implicit parameters, essentially you put something in the type as an alternative to explicitly passing a parameter
10:58:15 <elmex> are implicit parameters better style or just an alternative?
11:02:31 <elmex> i'm asking because i want to know, if i'm doing something terribly wrong ;) or if it is just some style-issue
11:05:20 <Igloo> Implicit parameters make the code quite a bit simpler if you don't have to be in a monad anyway, and a bit simpler if you do
11:18:33 <elmex> ?
11:18:34 <elmex> do?
11:18:47 <Igloo> If you have to be in a monad
11:19:00 <elmex> hm
11:19:00 <Igloo> They remove the need to lift monadic functions, basically
11:21:29 <elmex> and where are they documented?
11:21:40 <Igloo> In the GHC docs
11:22:08 <Igloo> http://www.haskell.org/ghc/docs/latest/html/users_guide/type-extensions.html#IMPLICIT-PARAMETERS
11:22:10 <elmex> well.. i'm using ghc indeed. what about nhc or hugs?
11:23:31 <Igloo> They are an extension - I have no idea about portability
11:25:08 <elmex> ;)
11:25:26 <elmex> well... using concurrent threads and all that ... i guess thats ok ;)
11:25:52 <elmex> (but it's another step into the un-portability direction)
11:27:15 <elmex> Igloo: well, ok, thanks!
11:27:20 <elmex> Heffalump: you too ;)
11:37:44 <Heffalump> it's just a style issue, anyway
11:38:09 <elmex> well, but it's another technique i'm knowing now, and i can choose from
11:38:30 <elmex> so it expands my freedom and free room for thinking and expressing my thoughts ;)
12:04:46 <SyntaxPolice> anyone have a handy way to get a function call tree in Haskell?  I want to pick a function and recursively get the list of functions which called that function.
12:06:28 <Igloo> Do tags files help with that?
12:06:40 <SyntaxPolice> I was thinking they might, but haven't tried.
12:06:54 <SyntaxPolice> I think cscope has such a feature
12:07:08 <Igloo> I'm not sure if they do or not, but there are a couple of things around that claim to produce tags files for Haskell
12:08:12 <SyntaxPolice> thanks. I might look into those
12:25:21 * SyntaxPolice notes some bit-rot in the hstags script distributed w/ ghc
12:27:08 <jlouis> Anyone with some good examples on what arrows can be used for?
12:27:21 <Riastradh> Parser combinators!
12:27:22 <Riastradh> Fudgets!
12:27:37 <jlouis> parser combinators
12:27:44 <jlouis> intereting
12:27:50 <jlouis> Fudgets I do not know
12:30:59 <Heffalump> AFRP, obviously.
12:33:24 <jlouis> AFRP?
12:33:42 <Heffalump> I wrote a little arrow that does some static analysis to minimise the waste of names when you use a namesupply by forking it
12:34:11 <Heffalump> oh, it's called Yampa now
12:34:13 <Heffalump> (AFRP, that is)
12:35:14 <Igloo> Syn: I think there's an fptags too
12:35:19 <jlouis> Heffalump: namesupply by arrows... hmm, I had the thought that it could be usid for that 
12:36:20 <Heffalump> essentially, you can use a monad for namesupply, where the >>= operator forks the supply - but then you waste lots and lots of names
12:36:47 <Heffalump> if you use an arrow instead, then in some cases where you can statically determine how many names a computation needs, you can limit the number
12:38:53 <Riastradh> Show us the code!  Show us the code!
12:39:22 <SyntaxPolice> Igloo: hasktags seems to basically work, and the web site claims that fptags is unmaintained
12:58:41 * SyntaxPolice eyes unsafePerformIO
12:58:54 * Riastradh slaps the naughty Smerdyakov.
12:59:01 <SyntaxPolice> I just want a random number smack dab in the middle of my program
12:59:03 <SyntaxPolice> thanks Riastradh
12:59:58 <Marvin--> SyntaxPolice: eew
13:00:47 <Heffalump> I think that's a reasonable use of it, actually.
13:01:08 <Marvin--> "the first one is free" you know
13:01:11 <Heffalump> but you should be careful.
13:01:32 * SyntaxPolice pulls out hair
13:01:33 <Heffalump> if stuff gets inlined and you get two different random numbers when you only expected one, say
13:02:18 <Marvin--> then it serves you right, mwhahaha!
13:02:34 <Heffalump> well yes
13:02:49 <Heffalump> but in general using unsafePerformIO to get a random number that you don't care about the value of seems reasonable
13:02:56 * Marvin-- is being very constructive as you can see ;)
13:03:20 <SyntaxPolice> I don't _want_ to do it, but this is an ugly case; threading the IO monad or passing around a generator seems like overkill
13:03:35 <SyntaxPolice> we'll see...
13:04:02 <Heffalump> what do you do with the random number ?
13:07:16 <Igloo> Also if you ask for 2 random numbers you might always get the same one both times
13:07:45 <Marvin--> I was just going to say that, what if, in a week, you need two random numbers :)
13:08:02 * Marvin-- has been drinking beer and isn't at his best right now :-P
13:09:23 <SyntaxPolice> Igloo: I don't understand how I would get the same one both times?
13:09:45 <SyntaxPolice> how does this look:
13:09:47 <SyntaxPolice> unsafeGetRandom :: (Random a) => a
13:09:47 <SyntaxPolice> unsafeGetRandom = unsafePerformIO $
13:09:47 <SyntaxPolice> 		  do g <- getStdGen
13:09:47 <SyntaxPolice> 		     let (num, newG) = random g
13:09:48 <SyntaxPolice> 		     setStdGen newG
13:09:50 <SyntaxPolice> 		     return num
13:10:08 <Igloo> unsafeGetRandom is a pure function
13:10:17 <Igloo> Therefore if you call it twice you get the same answer
13:10:24 <Heffalump> s/get/can get/
13:10:44 <Heffalump> oh, would get, in this case, with most implementations
13:10:45 <SyntaxPolice> oh, because the compiler decides that it should always evaluate to the same thing
13:10:58 <SyntaxPolice> and so only evaluates it once
13:11:05 <Marvin--> http://yro.slashdot.org/article.pl?sid=03/07/02/1453254&mode=nested&tid=111&tid=126  good god
13:11:25 <Heffalump> if you make it Random a => () -> a and give it a NOINLINE pragma you'll probably get away with it, IIRC
13:11:29 <Heffalump> but I wouldn't bet on it
13:26:53 <Marvin--> hmm, does anybody know anything about usb memory sticks on linux?
13:27:17 <andersca> aren't they just normal usb-storage thingys
13:27:30 <Marvin--> well, I guess, but what should I do to use it?
13:27:35 <Marvin--> plug it in and...what?
13:28:08 <Marvin--> Strakt are getting a bunch for marketing :-) putting the company logo on the stick and some advertising in the memory, sounds really nifty to me, I want one :-)
13:29:19 <andersca> mount it or something
13:29:41 <Marvin--> yeaaaah, but from what source? :)
13:29:47 <Marvin--> what's the device, you know
13:30:01 <Marvin--> my /dev/usb has loads of stuff
13:30:12 <andersca> hmm, I think it's as /dev/sda or something
13:30:35 <Marvin--> isn't that scsi?
13:30:44 <Heffalump> lots of things work via SCSI emulation, though
13:30:52 <Marvin--> oh
13:38:25 <elmex> is there a function for getting the element n of a list?
13:38:34 <elmex> (can't find it in prelude or List)
13:38:36 <ddarius> @prelude (!!)
13:38:38 <lambdabot> *** "(!!)" prelude "Haskell Standard Prelude Dictionary": text follows
13:38:38 <lambdabot> (!!)
13:38:38 <lambdabot>   infixl 9 !!
13:38:38 <lambdabot>   (!!) ::  [a] -> Int -> a
13:38:39 <lambdabot>   (x:_)  !! 0       = x
13:38:41 <lambdabot>   (_:xs) !! n | n>0 = xs !! (n-1)
13:38:43 <lambdabot>   (_:_)  !! _       = error "Prelude.!!: negative index"
13:38:43 <elmex> oh
13:38:44 <elmex> ok
13:38:45 <lambdabot>   []     !! _       = error "Prelude.!!: index too large"
13:38:47 <lambdabot> [there's @more]
13:38:47 <elmex> beat me ;)
13:38:58 <elmex> thanks lot
14:01:38 <jlouis> Parsec seems nice
14:03:06 <ddarius> It is pretty nice
14:03:16 <ddarius> esap should've had, Y not.
14:52:13 <Heffalump> 'lo
14:53:56 <kosmikus> good evening
15:24:02 * Heffalump finally gets round to starting work on the FoP website
15:27:51 <hdaume> Heffalump: what's (supposed to be) on it?
15:28:47 <Heffalump> mainly a collection of software from the book
15:29:01 <Heffalump> and I'm going to put all the source code that can be made to run in too
15:29:07 <hdaume> ah
16:34:12 <kenikov> Does anyone here own a DPA?
16:35:24 <kenikov> *PDA
16:36:09 <Heffalump> yes
16:36:15 <kosmikus> me too
16:36:38 <kenikov> Do you mind sitting in the channel #PDA?
16:36:51 <Heffalump> why?
16:36:56 <kenikov> We need more PDA users in there.  It is about Developing for PDA and PDA entuasists.
16:37:04 <Heffalump> I'm not an enthusiast
16:37:08 <kenikov> Heffalump: Just so there is more users and more appealing to newbies.
16:37:14 <kenikov> You can still give help or just sit there :)
16:37:20 <Heffalump> that'd be giving an unfair impression :-)
16:37:29 <Igloo> If you give me a PDA I'll sit in the channel
16:37:37 <kosmikus> not an enthusiast either, but ..
16:37:40 <Heffalump> I don't have any spare windows on my client, and I don't really want the hassle of more activity flags to watch
16:38:13 <Heffalump> I wish there was an easy way of turning LaTeXed Haskell into working code.
16:38:27 <kosmikus> Heffalump: use lhs2TeX
16:38:38 <kosmikus> or Igloo's tool
16:38:48 <Heffalump> nono. I meant what I said.
16:39:02 <kenikov> Just join.  Stop being so American :P
16:39:03 <kosmikus> aah
16:39:40 <kosmikus> ps2ascii or similar things?
16:39:44 <Igloo> Do you mean detex-a-like or from dvi/ps files?
16:40:14 <Heffalump> no, I mean "grab the Haskell code that someone has carefully marked up for nice presentation and turn it back into a .hs/.lhs file"
16:42:45 <kosmikus> so, including symbolic operators and everything?
16:44:19 <Heffalump> yeah :-)
16:44:29 <Heffalump> it's a silly desire really, it'd be much better just to have the source
16:44:38 <Heffalump> but in practice typing it in is much less hassle in this instance
16:45:31 <kosmikus> yes, I'm afraid that you should either ask the author for the source code, or type it in yourself ...
16:48:01 * Pseudonym mmms... first coffee of day...
16:56:37 * kenikov shudders
16:56:39 <kenikov> Coffee.
16:56:53 <Pseudonym> Long macchiato, to be precise.
16:57:00 <kenikov> Tea is better :P
16:57:14 <Pseudonym> Admit it!  You're an evil KDE developer, right?
16:57:57 * Riastradh likes tea and dislikes KDE.
16:58:15 <Pseudonym> Actually, there's nothing wrong with preferring tea, so long as you prefer obscure teas in an attempt to be interesting.
16:58:17 * kosmikus likes both coffee and tea
16:58:18 <kenikov> Pseudonym: No.  I am a Mac and PalmOS developer.
16:58:24 <kenikov> Do you own a PDA Pseudonym?
16:58:26 <kenikov> or Mac?
16:58:30 <Pseudonym> No, and no.
16:58:33 <Pseudonym> Used to have a Palm.
16:58:41 <Pseudonym> Then I changed jobs.
16:58:46 <kenikov> :(
16:58:55 <Pseudonym> Now I have a dead tree diary.
16:59:00 * Pseudonym feels so retro
16:59:20 <keverets> I find PDAs too fragile, but it's nice to be able to grep and backup/replicate
16:59:25 <kenikov> Macs aren't used enough in businesses.
16:59:34 <Pseudonym> kenikov: Depends on the business.
16:59:49 <Pseudonym> In publishing and graphic design, for example, there's nothing better.
16:59:50 <kenikov> Small businesses should.  As well as dental offices and stuff.
16:59:59 <Pseudonym> Small businesses use what's cheap.
17:00:48 <Pseudonym> I know what you mean, though.  Macs don't break down as much and are much easier to use.
17:00:53 <Pseudonym> It's a pity they cost so much.
17:00:59 <Riastradh> You get what you pay for.
17:01:05 <Pseudonym> Indeed.
17:01:12 * Riastradh is very happy with what he got.
17:02:17 <Pseudonym> I wish I could justify the cost of a decent Max.
17:02:19 <Pseudonym> Mac
17:02:35 <Pseudonym> The new G5 jobs look really nice.
17:03:08 <Riastradh> What's great is that this iMac has served me perfectly well for the past about five years now -- I've added RAM, and put in a new HD (the old one was 6 GB), and nothing more.  It cost less than $1000, I think.  Though some Dell would undoubtedly cost less, I dare not think what myriad of terrible misfortunes would befall it, forcing me to continually maintain it terribly.
17:03:23 <Riastradh> s/maintain it terribly/maintain it terribly often/1
17:03:31 * Riastradh pfheeds upon pfhood.
17:07:46 <Pseudonym> I want a PDA that I can run haskell on.
17:07:58 <Pseudonym> I don't use bc any more.  I just get into ghci or hugs.
17:08:07 <Igloo> I find fans and HDs are the things that tend to break, and AFAIK the same brands are used by both
17:49:11 <keverets> Pseudonym: hugs runs on the Sharp Zaurus
17:49:19 <keverets> (perhaps ghc as well...)
17:49:30 <Pseudonym> Probably not ghc.
17:49:36 <Pseudonym> Still, that sounds good.
17:49:55 * Heffalump has been vaguely tempted by the Zaurus, but I'm quite happy with my palm
17:50:09 * Pseudonym likes his fingertips
17:50:28 <keverets> come on... haskell in your palm!  If I had the money, I'd go for it.
17:50:55 <Pseudonym> Yes, I want haskell embedded in my anatomy.
17:51:04 <Heffalump> I suppose I could use it with a keyboard.
17:51:13 <Heffalump> but it's hardly worth the hassle, I have a nice laptop
18:00:32 <seth_> Next best thing, you can put lisp in your palm pilot
18:01:17 <Riastradh> Scheme with LispMe!
18:38:20 <Igloo> Hmm, building ghc5 on an up-to-date Debian machine is getting complicated
18:39:36 <Heffalump> oh?
18:40:09 <Igloo> I think   --with-gcc=/usr/bin/gcc-2.95 --with-ghc="$(firstword $(wildcard /usr/lib/ghc-5.*/bin/ghc) $(wildcard /usr/lib/ghc-4.*/bin/ghc)) -pgmc/usr/bin/gcc-2.95 -pgmP\"/usr/bin/gcc-2.95 -E -undef -traditional\""   may finally be working
18:40:59 <Heffalump> oh, those options are obvious, I'm surprised you didn't try them to begin with
18:41:11 <Igloo> :-P
18:41:12 <Heffalump> there was me thinking you actually had a difficult problem
20:19:48 * tmoertel wanders in 
21:22:20 * Pseudonym twiddles his thumbs
23:54:52 <Marvin--> morning
23:56:01 <Pseudonym> G'day.
