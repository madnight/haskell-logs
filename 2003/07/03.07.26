02:30:15 <elmex> how do i convert a Int to it's hexadecimal representation in a String ?
02:32:57 <ddarius> showHex
02:33:21 <elmex> Darius: where is it documented?
02:33:36 <elmex> and defined
02:33:56 <Darius> Module Numeric
02:35:35 <elmex> how to use it proper? showHex 255 "" ?
02:36:21 <reffie> sigh. ghc 6 doesnt compile on freebsd
02:36:24 <reffie> [the port, that is]
02:36:34 <reffie> it gets stuck.
02:39:02 <Darius> elemx: Yes, it returns a ShowS. type ShowS = String -> String.  So you could do showHex 10 . (':':) . showHex 63 . (':':) . showHex 235 $ "".
02:39:15 <elmex> okok
05:08:45 <AndrewM2> wow
05:08:54 <AndrewM2> A whole channel full of Haskell programmers....
05:08:57 <AndrewM2> Is it actually possible?
05:10:11 <Heffalump> yep.
05:18:03 * AndrewM2 faints
05:19:47 <dark> Well... a whole channel full of Haskell programmers and one spectator :)  I haven't done any actual Haskell programming in a while.
05:44:11 <phubuh> i just experienced the bad side of referential transparency :-(
05:45:01 <phubuh> allocating memory for about 500 new objects every 10 milliseconds does not make the garbage collector happy
05:48:39 <dark> Sounds like a quality of implementation issue :-)
05:48:49 <phubuh> well, yeah :-)
05:49:37 <phubuh> and to be honest, this was in ocaml
05:59:42 <AndrewM2> lol
06:44:48 <reffie> aaaaaaaaaaah
06:44:54 <reffie> ghc takes forever to compile
06:44:56 <AndrewM2> aaaaaahhhhhhhhhh
06:45:11 <reffie> _forever_
06:45:27 <reffie> and, apparently, it needs a lot of memory too
06:50:03 <Darius> compiling the compiler? yeah
06:50:26 <reffie> yeah
06:53:05 <reffie> it's been building for hours
07:06:24 * shapr boings cheerfully
07:06:47 <shapr> AndrewM2: are you in charleston?
07:08:12 <shapr> good morning #haskell!
07:08:25 <shapr> @yow
07:08:29 <shapr> uh oh
07:09:22 <elmex> why is the haskell wiki written in python?
07:09:34 <shapr> because no one has written a Haskell wiki
07:09:38 <shapr> it would be pretty easy though
07:09:50 <elmex> ???
07:10:10 <elmex> well, i don't know how to write wikis...
07:10:10 <shapr> @yow
07:10:11 <lambdabot> I've got an IDEA!!  Why don't I STARE at you so HARD,
07:10:11 <lambdabot>  you forget your SOCIAL SECURITY NUMBER!!
07:10:20 <shapr> mmm, zippy is my friend
07:10:24 <elmex> ?
07:10:54 <shapr> the @yow command spits out quotes from the Zippy The Pinhead comic strip
07:12:26 <shapr> elmex: can you read Perl?
07:13:07 <shapr> the original wiki was written in a very small amount of Per/l
07:13:19 <elmex> shapr: no, i'm programming Perl for around 4 years now
07:13:35 <shapr> then it should be easy to translate the original wiki into Haskell :-)
07:13:38 <AndrewM2>  shapr  - I am indeed in Charleston
07:13:41 <elmex> indeed
07:13:51 <shapr> AndrewM2: I've been through there a few times, nice town
07:13:56 <AndrewM2> Indeed
07:13:59 <AndrewM2> Where from?
07:14:06 <Heffalump> moinmoin is a nicer wiki than the original wiki
07:14:25 <shapr> yes, moinmoin is very nice, but Igloo said he'd use a wiki written in Haskell :-)
07:14:36 <elmex> shapr: maybe i once come by that ;) at the moment i'm having another .hs project ;)
07:14:39 <shapr> ok
07:14:58 <shapr> AndrewM2: born in Selma, Alabama; now living near the arctic circle in Sweden
07:16:15 <shapr> AndrewM2: are you a CS student?
07:17:09 <AndrewM2> Just graduated Colleg of Charleston with a CS degree
07:17:15 <shapr> spiffy
07:17:21 <AndrewM2> Indeed
07:17:31 <AndrewM2> I'd like to live in Sweden
07:17:35 <shapr> it's a nice place
07:17:48 <shapr> bit colder than Charleston
07:17:52 <AndrewM2> lol
07:17:56 <AndrewM2> I can imagine'
07:19:53 <elmex> haskell is cool
07:20:26 <shapr> yes it is
07:20:38 <shapr> I have the urge to write a lambdabot plugin today
07:20:49 <shapr> maybe I should finish the HaddockModule I played around with
07:21:02 <shapr> it would improve upon the TypeModule
07:23:32 <elmex> hm
07:24:08 <elmex> why not write an in haskell imeplemented interpreter? (not that i know anthing about implementing haskell ;)
07:24:18 <shapr> there's Helium
07:25:26 <elmex> Helium does not support type classes yet.
07:25:30 <shapr> that's true
07:25:32 <elmex> ;)
07:25:43 <shapr> GHCi is sort of an interpreter
07:25:46 <shapr> Hugs really is
07:25:51 <shapr> but written in C
07:25:55 <AndrewM2> So being entirely new to this network I can't help but ask one question.....
07:25:55 <elmex> i know
07:25:57 <elmex> i know
07:26:01 <shapr> AndrewM2: just one?
07:26:07 <phubuh> AndrewM2: why are there no ops? :-)
07:26:09 <AndrewM2> With no ops what happens when someone floods channels?
07:26:10 <shapr> AndrewM2: I have lots of questions
07:26:11 <AndrewM2> lol
07:26:20 <AndrewM2> One for right now shapr ;)
07:26:22 <elmex> AndrewM2: operserv
07:26:23 --- mode: ChanServ set +o Heffalump
07:26:27 <elmex> AndrewM2: chanserv
07:26:28 <AndrewM2> ah
07:26:29 <shapr> see, Heffalump is an op
07:26:33 <AndrewM2> Gotcha
07:26:40 * shapr grins
07:26:58 <AndrewM2> It all makes sense again
07:27:21 <phubuh> if the situation calls for it, people can op themselves, but noone ever seems to need to
07:27:26 <AndrewM2> Yea
07:27:29 <AndrewM2> Good
07:27:34 <shapr> yes, people are mostly nice on #haskell
07:27:45 <shapr> there have been some difficult people, but they were banned
07:27:57 <shapr> after days of tolerance though
07:27:57 <pesco> Oh, there were?
07:27:58 <elmex> shapr: really?
07:28:02 <shapr> sure
07:28:06 <elmex> shapr: who?
07:28:13 <shapr> Thaddeus L. Olczyk
07:28:13 <pesco> Hi again everyone.
07:28:17 <shapr> hi pesco!
07:28:54 <shapr> Thaddeus was recently banned from the Pragmatic Programmers mailing list also
07:29:20 <elmex> why?
07:29:24 <pesco> Wow, he must have a mission.
07:29:30 <shapr> pesco: that's a funny way to say it :-)
07:29:56 * pesco grins
07:30:18 <elmex> shapr: tell the story :) pleeaasssseee dad
07:30:26 <shapr> He was banned because he's trying to apply good and bad to programming languages, rather than learning and seeing what fits
07:30:28 <shapr> heh
07:30:56 <elmex> haskell good,elisp bad ;)
07:31:07 <reffie> heh
07:31:54 <shapr> near the bottom of this url: http://www.haskell.org/hawiki/QuotesPage there's a quote from Andrew Cooke
07:32:37 <pesco> Hm, speaking of LISP. I'm going to get another chance to see some LISP machines soon. How much would an implementation of Haskell profit from such an architecture?
07:32:39 <Heffalump> did Thaddeus actually get banned? I hadn't realised.
07:32:47 <shapr>  the meat of that quote is : "if you're not interested in choosing the right tool, but only in proving that something is "better" or "worse" than something else, then why waste time reading books? "
07:32:54 <shapr> Heffalump: sure, I banned him.
07:33:02 <dark> Heh... reminds me of my favourite Father & Son comic.
07:33:11 <shapr> and I explained to him exactly why I banned him as well
07:33:28 <shapr> but he didn't want to listen :-(
07:33:45 <dark> "Son, you're still young... uncertain.  That's why you have an opinion about everything.  As you grow older, you'll find that the world is too complicated for opinions.  Then, you're just uncertain."
07:33:53 * shapr grins
07:34:01 <reffie> Pragmatic Programmers mailing list?
07:34:04 <pesco> lol, Ashley Yakely is great.
07:34:09 <shapr> reffie: you know the book?
07:34:10 <pesco> ley
07:34:26 <reffie> shapr i just know that ruby people like it
07:34:40 <shapr> yup, the pragprog guys also wrote a Ruby book
07:34:46 <shapr> reffie: http://www.pragmaticprogrammer.com/
07:35:03 <shapr> "The Pragmatic Programmer" is a wonderful book
07:36:05 <shapr> pesco: have you seen the T-Shirts?
07:36:52 <pesco> Yes, lovely. :)
07:37:18 <reffie> ok.
07:37:24 <reffie> i'm getting it, then.
07:38:08 <elmex> haha
07:43:16 <elmex> wf
07:43:20 <shapr> ?
07:43:24 <elmex> what is that ST-thingie for?
07:44:06 <shapr> holding state?
07:44:38 <elmex> so i don't have to use StateT for managing simple states?
07:45:42 <shapr> nope
07:45:47 <shapr> StateT is a state monad transformer
07:46:12 <elmex> so.... ST is something like generalisation for State?
07:46:35 <pesco> lol "Nuclear Weapons"
07:47:18 <shapr> hi Arnia
07:48:18 <Arnia> Heya
07:48:24 <Darius> ST is when you want true mutable state and you want to dynamically allocate references/cells.
07:49:28 <elmex> mutable>
07:49:28 <elmex> ?
07:49:35 <shapr> hi Darius!
07:49:38 <elmex> btw. what is a MArray>
07:49:47 <Darius> A mutable array.
07:50:04 <elmex> and mutable means?
07:50:07 <Darius> Mutable means changeable.  Destructively assignable.  I.e. like assignment in most languages.
07:50:25 <elmex> oh,cool
07:52:15 <Darius> elemx: have you used IORefs?
07:52:31 <elmex> Darius: no
07:52:41 <elmex> i were doing everything with StateT ;)
07:56:07 <Darius> Well, as long as you aren't simulating a heap (via say a FiniteMap) then StateT is a a perfectly fine solution.
07:56:25 <elmex> hm
07:56:31 <elmex> why simulating?
07:56:56 <elmex> i'm usinf finitemap for user-lists for example (string -> structure mapping)
07:59:32 <Darius> That's fine, but if you were (like I actually am in EvalModule) making a "newRef/readRef/writeRef" function in terms of FiniteMaps, then you'd very probably would want to use ST.
07:59:50 <elmex> hm
08:00:03 <elmex> ?!
08:01:09 <Darius> I'm unsure how ST will react with the continuation monad.  I think it won't work out, but I haven't actually sat down and done it.
08:01:25 <elmex> hm
08:01:42 <elmex> what about concurrency?
08:01:47 <Heffalump> DYM with ContT on top of ST?
08:02:33 <Darius> No.
08:02:41 <Darius> That would be fine.
08:03:01 <Heffalump> I don't see how else you can use a continuation monad with ST
08:06:17 <Darius> elemx: What about concurrency?
08:07:13 <elmex> oh, nothing
08:09:20 <shapr> Darius: hey, whatever happened to the SDL tiled game thingy you were playing with?
08:10:24 <elmex> is there SDL binding for hs? ;)
08:10:26 <shapr> I had the urge to investigate a SimCity clone
08:12:13 <Darius> I haven't really worked on it.  The largest part that would need to be done that would get it into a reasonably usable state has to do with the SDL; I was going to wait and see what Igloo got and use that.
08:12:25 <shapr> ok
08:12:30 <dark> Is this when I start feeling guilty about not publishing my sdl wrapper? :)
08:12:33 <shapr> heh
08:12:43 <elmex> Darius: ??????
08:12:45 <shapr> dark: do you have the latest SDL wrapper online?
08:12:46 <elmex> Darius: ?????
08:12:50 <elmex> dark: ??????
08:12:59 <shapr> elmex: you sound confused :-)
08:13:33 <dark> I'm not sure what the latest version is.
08:13:34 <elmex> but butbutu btu SDL wrapper for haskell? there is ?
08:13:44 <dark> I seem to have Added joystick support, UNTESTED. in the changelog.
08:13:51 <shapr> dark: I tested it, remember?
08:14:03 <shapr> I nearly shipped you my joystick 
08:14:06 <dark> Oh, cool :)  No, I don't remember.  Maybe I missed your response?  Or didyou email me?
08:14:26 <shapr> the only weirdness was that my hat switch counted as two more joystick axes
08:14:35 <shapr> but I've since noticed that *every* SDL program has that confusion
08:14:45 <dark> Oh!  Yeah now I remember.
08:14:58 <dark> Then I started trying to make it an actual ghc package, and got lost there.
08:15:18 <shapr> I want to be able to control the bouncing penguins with my joystick ;-)
08:15:25 <dark> At least I got dancing penguins, and the first version of Penguin Warrior where you can only fly around.
08:15:36 <shapr> oh, I didn't see Penguin Warrior
08:15:38 * shapr looks
08:15:48 <dark> elmex: There's more than one, apparently :)  But none are complete.
08:15:58 <elmex> which are?
08:16:05 <shapr> I have hasdl-0.1-pre10
08:16:17 <shapr> no, that's harc
08:16:24 <dark> Might be pw/Main or something.
08:16:38 <dark> hasdl--0.1--patch-7--dark@xs4all.nl--dark
08:16:49 <shapr> dark: you should keep your various codes in a public CVS, since they're very cool
08:16:59 <shapr> I'm sure people would enjoy playing with them, even in an uncomplete state.
08:17:19 <elmex> but i want it to be complete ;)
08:17:44 <shapr> oh, I've unplugged my joystick
08:17:48 <dark> Hmm, SDL.Mouse seems to be missing from that version.
08:18:12 <dark> Oh, maybe pw/ is also missing from it :)
08:18:21 <shapr> yes, it is missing
08:18:36 <shapr> I still haven't turned your ftp code into a lib
08:18:50 <shapr> nor have I checked in the Jan Skibinski's code
08:18:56 <shapr> that's a useful thing to do today
08:19:15 * elmex crys: sdl
08:20:05 <shapr> dark: want to put hasdl into haskell-libs ?
08:20:23 <shapr> I could set up a darcs repo for haskell-libs today, since cvs.sf.net sucks so bad
08:20:44 <dark> Is darcs robust enough for that?  I had some problems with it.
08:21:01 <dark> shapr: I'd like to, but I don't want to maintain it right now :)  I'm into another project...
08:22:27 <shapr> dark: you don't have to maintain it at all
08:22:33 <shapr> you could just throw it in and see what happens
08:22:35 <shapr> look at lambdabot :-)
08:22:51 <dark> Heh :)  If I throw it in it's going to break...
08:22:54 <dark> But yeah.
08:22:59 <shapr> the AUTHORS file for lambdabot keeps growing
08:23:22 <shapr> Heffalump and Igloo are in it now.
08:23:41 <elmex> dark: well. so you would like to have a incomplete sdl-wrapper, rather than a complete (slightly broken) sql wrapper?
08:23:45 <Darius> I haven't CVS up'd in forever.
08:24:08 <shapr> Darius: the plugin API has changed drastically
08:24:13 <shapr> for the better I hope
08:25:08 <shapr> polli had the same idea as Riastradh and whee, let a module connect to each irc signal via a typeclass
08:25:40 <Darius> I have actually changed EvalModule in something that's supposed to be an optimization.  I haven't checked it in because I'm not sure if it is or is worth it.
08:26:11 <shapr> go for it
08:26:14 <Darius> I have, though, been thinking about making an interpreter for the LVM or perhaps seeing if I can rip out Heliums.
08:26:36 <elmex> waht is LVM ?
08:26:38 <shapr> that would be cool
08:26:48 <Darius> Lazy Virtual Machine.
08:26:49 <shapr> LVM is on my list of things to play with, then I could ask you if I got stuck ;-)
08:27:07 <dark> Ok I misremembered, the penguin warrior stuff doesn't compile yet, not even after hammering it a bit.
08:27:08 <Darius> I want to have it as a kind of portable run-time loading thingy.
08:27:35 <shapr> Darius: how so?
08:28:01 <elmex> what is LVM?
08:28:08 <shapr> @fact lvm
08:28:09 <lambdabot> Nothing
08:28:12 <shapr> @fact lvm Lazy Virtual Machine
08:28:12 <lambdabot> set lvm to Lazy Virtual Machine
08:28:51 <elmex> and what does a lazy vm do?
08:29:14 <shapr> I'm looking for the URL
08:29:37 <shapr> @fact lvm http://www.cs.uu.nl/~daan/papers/lvm.pdf
08:29:38 <lambdabot> set lvm to http://www.cs.uu.nl/~daan/papers/lvm.pdf
08:29:47 <Darius> It's a virtual machine like the JVM.
08:30:02 <shapr> it's Daan Leijen's thesis, for masters or PhD, I forget which
08:30:13 <shapr> I suspect PhD, since Daan has done so much cool stuff
08:30:34 <shapr> I still wish I could get him to license HaskellDB 
08:30:41 <dark> license?
08:30:58 <elmex> uh
08:31:00 <shapr> imho, HaskellDB would be a good standard for a Haskell database API
08:31:12 <shapr> but it's not licensed, and it requires Hugs at the moment
08:31:22 <elmex> i don't understand that paper.. too much mathematic symbols i simply don't undersand ;(((
08:31:42 <shapr> speaking of standards, I'm going to the Haskell Implementors Meeting sometime soon, any input for what Haskell needs?
08:31:54 <Darius> shapr: By accessing a function through a level of indirection or using continuation passing you would have run-time loading and updating.
08:31:56 <shapr> I'm soliciting any input from Haskell users
08:32:31 <o3_> shapr: i've got plenty of input, although i'm fairly sure most of it will be rejected outright ;)
08:32:38 <shapr> o3_: well, tell me
08:32:46 <Heffalump> HaskellDB uses TReX, doesn't it?
08:32:51 <o3_> i'm going to HIM too.  trust me, i'm making a list ... *scribbles*
08:32:55 <shapr> heh, ok
08:32:59 <shapr> Heffalump: yup
08:33:11 <Heffalump> o3_: do you have a version of the runtime stuff that works with GHC6, btw? I hacked the configure script, but some of the plugins still refuse to work
08:33:17 <shapr> though I almost understand the nested tuples thing that could replace TReX
08:33:25 <Heffalump> shapr: something like TReX might be going into GHC soon
08:33:38 <shapr> yes, you sent me the GHC6 runtime loader, but I can't find it :-(
08:34:16 <shapr> Darius: I'm very interested in that, do you have any more details?
08:34:22 <o3_> Heffalump: hang a second
08:34:26 <shapr> dark: what sort of problems did you have with darcs?
08:35:07 <dark> shapr: Hmm I forgot.  I just avoided those features :)  I'll try to keep notes when I use it more.
08:35:10 <shapr> elmex: if you want to learn more about LVM, read about Helium: http://www.cs.uu.nl/helium/index.html
08:35:13 <dark> But now I have to go help someone move house.
08:35:21 <shapr> ok, have fun
08:35:53 <o3_> Heffalump: check dcc
08:36:09 <shapr> o3_: can I get another copy of the ghc6 version also?
08:36:13 <shapr> I seem to have misplaced mine
08:36:14 <Heffalump> thanks.
08:36:30 <elmex> uh... i guess i will quit asking questions about too hard topics... i will try to go on on my haskell project
08:36:45 <shapr> @fact helium
08:36:45 <lambdabot> Nothing
08:37:18 <o3_> Heffalump: i haven't tested it outside of my own system (which is mac os x), so let me know if it works or not
08:37:56 <shapr> @fact helium http://www.cs.uu.nl/helium/index.html
08:37:56 <lambdabot> set helium to http://www.cs.uu.nl/helium/index.html
08:38:32 * Heffalump builds
08:38:57 <shapr> is there a simple way to dump a table from postgresq psql client?
08:39:05 <shapr> I have access to the old @fact database
08:39:09 <shapr> trying to get it out
08:39:16 <elmex> uh
08:39:18 <elmex> i like mysql ;)
08:39:24 <elmex> mysqldump is easy
08:39:35 <shapr> I like postgresql, it's trustworthy
08:40:15 <dark> I like postgres too... but it's hard to write free code for it because people will always want to port it to mysql anyway :)  So I can never take full advantage of its features.  Unless I become an ogre about it.  But anyway, I was going :)
08:40:28 <shapr> aha, I got it
08:40:41 <shapr> I use pg specific stuff anyway
08:41:07 <shapr> I am an ogre.
08:41:42 <Heffalump> o3_: works beautifully, thanks
08:42:48 <o3_> Heffalump: cool.  now i just really need to spend some time on it to get it distributed with GHC proper :/
08:43:14 <shapr> yes, we will love you for it.
08:44:12 <elmex> what are you talking 'bout?
08:44:36 <shapr> ability to load Haskell plugins at runtime
08:45:28 <shapr> @fact runtimeloader
08:45:28 <elmex> Haskell plugins? does that really work?
08:45:28 <lambdabot> Nothing
08:45:57 <shapr> yup
08:46:08 <elmex> like dlopen() ?
08:46:15 <o3_> elmex: that's the idea
08:46:33 <shapr> http://www.algorithm.com.au/wiki/hacking/haskell.ghc_runtime_loading
08:47:06 <elmex> o3_: i don't think dlopen() will be that portable
08:47:11 <elmex> o3_: what about DOS 2 ?
08:47:22 <pesco> elmex: Yeah, what about it?
08:47:26 <o3_> i wonder if you could extend that to support polymorphically-typed functions
08:47:39 <elmex> ?!
08:47:40 <o3_> elmex: well, GHC doesn't run on DOS 2 (this is for GHC only)
08:47:57 <elmex> ok
08:48:02 <elmex> but dlopen() not too
08:48:19 <o3_> elmex: i don't understand you
08:49:11 * elmex doesn't unterstand elmex too
08:49:36 <elmex> i'm human, where would the world be, if i would understand myself?
08:49:50 <o3_> the runtime loader uses dlopen(), if that's what you're asking
08:49:56 <o3_> at least on linux, anyway
08:50:03 <o3_> wait, no it doesn't
08:50:19 <elmex> and on .. hm... say.... windows?
08:50:30 <o3_> anyway.  no, it doesn't use dlopen(), it uses ghci's object-loading code
08:51:02 <o3_> elmex: it loads .o files, not .so's or .dll's
08:51:13 <elmex> o3_: oh, thats cool
08:51:15 <elmex> o3_: how?
08:51:24 <elmex> well:   plugin <- loadObject "MyPlugin.so"
08:51:58 <o3_> hmm, ok, that example is wrong :)
08:52:58 <o3_> elmex: it uses the code built into GHCI
08:53:12 <elmex> o3_: so it wont work with hugs?
08:53:25 <o3_> no, it's for GHC only
08:53:38 <pesco> o3_: Do you know why GHCi doesn't use dlopen?
08:53:57 <pesco> (Was that a dumb question?)
08:54:01 <elmex> hm.... okok... i don't like unportable stuff... but linux-elf binarys don't port to dos too ;)
08:54:35 <o3_> pesco: presumably because it has its own bytecode format which gets compiled to raw object code (not shared library code), but i'm not much of a ghc internals guy
08:54:56 <o3_> elmex: well, wherever ghc runs, the runtimeloader works, so it's fairly portable in that sense
08:55:25 <elmex> ;)
08:55:47 <o3_> (including windows, by the way)
08:55:59 <shapr> bah humbug, I'd rather code but I've promised to be social.
08:56:11 <Heffalump> careless of you
08:56:26 <o3_> go be social, you can code anytime ;)
08:56:36 <shapr> it feels like it's the other way around ;-)
08:56:49 * shapr runs off to be social
08:58:04 <pesco> o3_: I thought GHC used plain ELF (of course not on Windows)
08:58:51 <pesco> o3_: But maybe they store stuff in the file that's not found by the regular ELF symbols or something.
09:00:03 <o3_> pesco: maybe.  keep in mind it works on mac os x too, and that's mach-o, not ELF
09:00:12 * Heffalump wonders how efficient exception handlers are
09:00:58 <pesco> o3_: Oh, GHCi works on MacOS X?
09:01:37 <pesco> o3_: Well, I suspect they'd just have implemented their own runtime-loader for mach-o, just as they've done for ELF and whatever that Windows-format is called.
09:01:39 <o3_> pesco: works perfectly, thanks to the incredible efforts of wolfgang thaller
09:02:03 <Darius> Heffalump:  Should it matter?  Wouldn't exceptions be... well exceptional?
09:02:18 <Heffalump> darius: I mean the overhead of having the exception handler in place
09:02:34 <Heffalump> I've build a monad on top of IO that has an exception handler on every primitive, return and >>= operation
09:02:42 <pesco> o3_: a large portion of "incredible efforts" probably consist of just that, implementing the runtime loader.
09:02:43 <o3_> Darius: but it'd be fun to simulate TCP on two boxes using distributed shared memory + exceptions
10:20:04 <Heffalump> wooo
10:28:25 <reffie> mm
11:12:01 <shapr> w00
11:12:16 * shapr boings happily
11:17:41 <shapr> Heffalump: wake up! want dynload code!
11:24:13 <shapr> re pesco 
11:24:17 <pesco> re
11:26:27 * shapr watches vegai bounc
11:55:59 <shapr> hi hal
11:56:03 <hdaume> hi shae
11:56:10 <shapr> howzit goin?
11:56:13 <hdaume> not bad
11:56:17 <vegai> my internet is rikki
11:58:20 <shapr> it's very frustrating to build HToolkit and gtk2hs everytime I upgrade ghc
12:06:57 <hdaume> :)
12:07:06 <hdaume> gtk2hs takes a ridiculous amount of memory to build 
12:16:32 <jlouis> bad memory citizen?
12:17:42 <shapr> hdaume: it builds fine with 512mb here
12:18:09 <hdaume> shapr: yeah, i know.  it didn't work so well on my laptop when i only had 128m there :)
12:18:16 <shapr> oh
12:18:49 <hdaume> even 256 wsa iffy
12:27:02 <hdaume> perhaps stupid question...given number 1 through n (for *huge* n), i want to look at these numbers as a (somewhat) balanced binary tree.  the thing is, i don't want to actually build the tree.  given that you're node i, i want to be able to calculate in constant time whether i'm a leaf or not and, if i'm not, who my children are...
12:27:24 <hdaume> what's the best way to go about this
12:29:56 <hdaume> am i best just padding n to a power of two = m, then considering m/2 to be the root and m/4 and 3m/4 to be it's children, etc.?
12:33:48 * shapr has no clue
12:34:02 <vegai> I'd go about that by simulating for not so huge n
12:35:03 <vegai> unless you _really really_ don't want to build the tree =)
12:35:31 <hdaume> i probably could, but would rather not
12:36:45 <jlouis> seems somewhat like a binary heap implementation to me
12:36:58 <jlouis> where the heap resides in an array
12:37:03 <hdaume> i agree :)
12:37:18 <jlouis> parent is then n (intdiv) 2
12:37:28 <hdaume> if the tree is 2^k, it's easy
12:37:37 <hdaume> or rather, if n is 2^k...
12:37:43 <jlouis> yup
12:37:55 <hdaume> but powers of two are few and far between :)
12:38:15 <jlouis> if (n*2) > tree_size then ... else ...
12:38:27 <jlouis> one of the cases is a leaf node
12:38:53 <jlouis> if n*2+1 > tree_size then ... else ...
12:38:59 <jlouis> something along the lines of that I'd think
12:40:02 <hdaume> okay, one additional constraint: you can't "touch" nodes greater than n.  i.e., if you have 1..40, you choose 64 as your base.  you start at 32, build a subtree at 16 and 48.  but 48>40 so you can't touch it :)
12:40:26 <hdaume> maybe it's best taking the power of two *less* than the total size, doing that, and then handing the rest recursively...hrm...
12:40:28 * hdaume thinks
12:41:21 <hdaume> (the basic idea is that i have a whole lot of nodes running a program and i need to very quickly get information to all of them.  if i do it linearly it takes forever because one node has to send everything, so i'm trying to make a "call tree" where you only send the data to your two children)
12:41:24 <jlouis> ah, yes, that is a possibility, but it will grow too
12:41:24 <vegai> may I ask what you are doing on a larger scale?
12:41:38 <vegai> ah, you answered before I asked
12:41:41 <hdaume> :)
12:42:13 <vegai> I guess the nodes can't be in a binary tree to begin with?
12:42:18 <hdaume> usually, i guess i only have about 256-350 of these guys so i probably could build the tree
12:42:25 <hdaume> but that's so inelegant :)
12:43:05 <jlouis> 1 sends to 2 and 3, 2 sends to 4 and 5, 3 sends to 6 and 7... I cannot see your problem I am afraid
12:43:26 <jlouis> with the constraint from above, so nodes beyond tree_size aint touched
12:43:28 <hdaume> oh.  duh, so i just sends to 2i and 2i+1?
12:43:35 <hdaume> i was trying to start in the middle :)
12:43:36 <jlouis> yes
12:43:37 * hdaume is stupid
12:43:38 <hdaume> :)
12:43:42 <jlouis> haha
12:43:51 <hdaume> thank you :)
12:43:56 <jlouis> ;)
12:44:02 <jlouis> no problem at all
12:44:03 * hdaume slaps himself silly
12:44:34 <dark> Hah!  I can do that without any slapping at all.
12:44:39 <shapr> be silly?
12:46:08 <dark> Yeah.
12:46:41 <dark> Hmm.  Does anyone have suggestions where I could host a server for a free game I'm developing?  It's not ready yet, but I'd like to find a place to run it once it is.
12:47:02 <shapr> how much bandwidth?
12:47:51 <dark> I'm not sure.  It'll be web based, with few graphics (because I suck at graphics), and I'm designing it so that fast clicking won't give you an advantage.  Not that that will stop people from scripting it, I bet.
12:48:47 <dark> Normally I'd get a machine at xs4all.nl to host it but I'm temporarily out of money :)
12:49:24 <vegai> it has to be free?
12:49:52 <Smerdyakov> This is not the sort of thing people generally give away for free. :P
12:50:01 <dark> vegai: With free I mean the code is free.  I don't object in principle to getting people to pay or donate for playing, but that won't work very well until the code is actually stable and worth anything :)
12:50:08 <Smerdyakov> Obviously a place that offered this kind of service for free to the general public would be doomed.
12:50:16 <shapr> dark: I might be able to host it, I'm not sure yet.
12:50:31 <dark> Smerdyakov: My experience with MUDs was different :)  They always managed to scrounge free hosting somewhere.
12:50:42 <vegai> dark: I mean, does the server have to be free-of-charge?
12:50:44 <Smerdyakov> I'm part of a hosting cooperative. Are you saying you would not want to have to pay anything at all for this?
12:51:36 <dark> Smerdyakov: Yes.  I'm hoping to find an enthousiastic player who can also host it.
12:51:43 <dark> This is a bit of a chicken-and-egg problem of course :)
12:51:43 * shapr installs ghc6-threaded
12:51:50 <dark> But it works for MUDs.
12:52:13 * shapr gets tired of gnome
12:52:14 <shapr> brb
12:52:34 <Smerdyakov> dark, from my point of view, paying US$5/mo. to be part of a hosting coop is worth it, just to be able to set up something like you are discussing without needing to make special arrangements.
12:52:49 <dark> What's a hosting coop?
12:53:06 <vegai> co-op = "osuuskunta"
12:53:08 <Smerdyakov> A group of people who share the costs of "professional" hosting.
12:53:58 <dark> You mean people who pool money to get one server?
12:54:29 <Smerdyakov> One or more servers, yes.
12:55:15 <dark> Paying US$5/month would cost me about $15 per month, but maybe I can find a similar arrangement in EUR :-)
12:55:18 <vegai> dark: you may try to beg for space from a local study faculty
12:55:36 <Smerdyakov> dark, you mean because of exchange rates?
12:55:56 <dark> Smerdyakov: Mostly banking fees.  Finnish banks are a bit backward.
12:55:57 <Smerdyakov> dark, I mean, because of extra charges to exchange money between currencies, I guess.
12:56:00 <Smerdyakov> Oh
12:56:12 <dark> So with "EUR" I mean more an account in europe, than any actual currency.
12:56:13 <vegai> dark: also, you may try to half-beg (negotiate) something with a local webhotel-provider
12:56:14 <Smerdyakov> dark, what if you pay in large blocks at a time?
12:56:27 <dark> Smerdyakov: That would work.
12:57:01 <Smerdyakov> dark, I and some others are working on setting up a large scale, public hosting co-op now. Let me know if you think you'd want to join. We have a small 11-person private one now.
12:57:23 <hdaume> shapr: why do you have to restart to switch between ion and gnome?
12:58:04 <shapr> hdaume: well, I could run xemacs + gnuserv in tty mode and the reattach, but I haven't gotten around to figuring that out
12:58:10 <dark> Smerdyakov: I think I do :)  But... how can you keep it cheaper than current hosting services?  I assumed it's the "large scale, public" part that drives the costs up.
12:59:04 <Smerdyakov> dark, we're looking into a place that asks for a $50/mo. donation per server.
12:59:06 <dark> vegai: Hmm... I might be able to find a Helsinki-based one where I can trade some sysadmin services for hosting.  I know some of the people who run iki.fi.
12:59:13 <Smerdyakov> dark, figure 20 users per server and it's a good price. :)
12:59:31 <shapr> hdaume: are there better ways?
12:59:37 <Smerdyakov> dark, the place I'm talking about is communitycolo.net, which only allows nonprofit users.
12:59:56 <dark> vegai: (not that iki.fi does hosting :)  But they tend to be well connected.
13:00:43 <hdaume> shapr: i dunno...i assumed there would be :)
13:01:06 <shapr> I have gnome-session or ion in my ~/.xsession
13:01:26 <shapr> so when I run startx, the wm of my choice shows up
13:01:39 <shapr> how would you do it?
13:02:49 <hdaume> shapr: got me, but it seemed that there should have been a better way :)
13:02:49 <shapr> I'd be running ion-devel if I could figure out how to turn all my current keybindings into Lua code
13:03:07 <shapr> I wonder if I could just kill my wm and start the other one?
13:03:13 <shapr> that could be exciting to try
13:03:19 <hdaume> :)
13:03:21 <hdaume> sounds scary
13:03:23 * shapr tries
13:06:11 <shapr> hdaume: I think that's a no
13:06:28 <reffie> what the f0ck.
13:06:28 <hdaume> shapr: i gathered
13:06:37 <elmex> cool, parsec comes in handy, when parsing something
13:06:42 <reffie> ghc6 has been building since this morning.
13:06:50 <shapr> reffie: you could use Debian
13:06:58 <reffie> no thanks.
13:07:03 <shapr> reffie: I've never heard of a build that long, what machine are you building on?
13:07:04 <elmex> reffie: i suffer with you. my build only took 2-4 hours
13:07:09 <reffie> i can use binary packages on freebsd too
13:07:50 <shapr> I've heard plans for Debian/BSD
13:08:30 <jlouis> reffie: ghc is in the ports collection
13:08:33 <dark> shapr: I've heard plans for Debian/BSD for ages :)
13:08:45 <jlouis> and I think there are packages as well at ftp.freebsd.org
13:09:51 <shapr> hi syntax-laptop
13:09:57 * shapr sproings
13:12:51 * elmex happyly boings around the channel, because he has much fun with parsec! *FUN* *PARSE* *FUN* *HAPPY* *PARSEC*
13:12:57 <dark> Smerdyakov: Hmm, CCCP mentions $10/month :)
13:13:07 <elmex> i once remember the pain of yacc
13:13:27 <Smerdyakov> dark, looking at the rates, it seems that this is for 1/5 of a server, no?
13:13:52 <syntax-laptop> hi shapr :)
13:14:17 <dark> Smerdyakov: I guess.  They don't say explicitly.
13:14:57 <Smerdyakov> dark, we plan to offer services for less than that amount, with more assumed sharing of resources, and a shared infrastructure for things like backup and intra-group support.
13:15:32 <shapr> haddock needs refactoring
13:16:03 <shapr> is hasktags **/*.hs the best way to get a TAGS file for this dir and all subdirs?
13:23:20 <shapr> hi AndrewM2 
13:23:27 <AndrewM2> howdy
13:23:33 <shapr> how's code?
13:23:52 <AndrewM2> Same as always
13:24:05 <AndrewM2> Nothing to complain about ;)
13:24:29 <AndrewM2> And yourself?
13:24:42 <reffie> so..
13:24:44 <shapr> playing around with Haddock at the moment, seeing if I can make a lambdabot module
13:25:41 <AndrewM2> Sounds remarkably more productive than what I'm doing...
13:25:47 <shapr> where do I find GlaExts?
13:25:50 <shapr> AndrewM2: what are you doing?
13:25:58 <AndrewM2> Which is limisted to playing the old Nintendo and typing on IRC at the moment
13:26:29 <shapr> aha, -package lang
13:27:42 <shapr> AndrewM2: if you're looking for fun code, you could write a lambdabot plugin too
13:28:07 <shapr> @uptime would be a useful and easy plugin
13:28:10 <lambdabot> Sorry, I don't know the command "uptime", try "lambdabot: @listcommands"
13:28:27 <AndrewM2> I'm happy keeping the NES company for the time being, being in the throws of a somewhat nasty hangover
13:28:30 <shapr> heh, ok
13:30:09 <shapr> where does thenP, returnP, failP, etc come from?
13:31:05 * syntax-laptop tries to explain to internet that he only speaks english
13:31:14 <shapr> ?
13:31:48 <syntax-laptop> looking at train travel to boden
13:31:53 <shapr> oh
13:32:21 <shapr> I could ask Bea tomorrow
13:38:52 <shapr> ahem, any swedes willing to translate a train scheduling page for us?
13:43:24 <dark> shapr: I usually manage to deal with that kind of page, and I think your swedish is better than mine :)  Is it particularly difficult?
13:44:17 <shapr> dark: I just want to be sure
13:47:15 <dark> shapr: Yeah I tend to have that with my bank :)  I can probably navigate it in finnish but I'm not going to try...
13:48:27 <syntax-laptop> if anyone can figure out the cost of train 7804 for august 14 on the http://www.connex.se/sweden web site, that would help a lot :)
13:48:53 <shapr> I think it's 7083
13:48:58 <shapr> er, 7084
13:49:00 <shapr> sheez, I can't type
13:49:02 <shapr> hi whee 
13:49:08 <whee> hola
13:49:17 <shapr> wassup?
13:49:24 <whee> job hunting :|
13:49:38 <shapr> how's it going?
13:50:00 <whee> I haven't gotten anything rolling yet
13:50:06 <syntax-laptop> whee: good luck :)
13:50:35 <Smerdyakov> whee, what are you looking for?
13:50:47 <syntax-laptop> yeah, you're rihgt, 7084
13:50:52 <whee> Smerdyakov: still something for co-op
13:51:10 <Smerdyakov> whee, oh, you're the EE/CE student, right?
13:51:15 <whee> I've been trying to get a programming job for now, as I haven't taken enough electronics courses to do things more related to my CE major
13:51:30 <Smerdyakov> The old conversation comes back to me now. :)_
13:59:23 * shapr boings
14:28:57 <shapr> hm, I can't get Haddock to build
14:36:58 * shapr bangs head
14:37:07 <dark> shapr: musically?
14:37:13 <shapr> sadly no
14:38:59 <shapr> I get the same error whether I try Haddock from cvs, or from the 0.4 source release
14:39:33 * shapr tries apt-get source haddock
14:41:35 * shapr questions haddock's ancestry
14:41:42 <dark> It's a fish, right?
14:41:58 <shapr> I was questioning its parentage in an uncomplimentary
14:42:00 <shapr> manner
14:44:18 <dark> "... and comments about Chenelska's mother, whom Mudge had never met but thousands of others undoubtedly had"...
14:44:41 * shapr snickers
14:44:47 <shapr> yes, something like that
14:45:41 <shapr> Jerzy Karczmarczuk entertains me greatly
14:46:16 <dark> I'd be entertained for hours just trying to spell that name.
14:46:58 <shapr> emacs is my irc client, so I have hippie-expand
14:47:14 <shapr> means I only type kar and then hit caps_lock
14:49:14 <dark> Cool, you found a use for caps lock :)
14:50:03 <shapr> sure
14:50:11 <shapr> my keyboard is heavily remapped
14:50:55 <shapr> Shift_L is delete, Shift_R is iswitchb_buffer, Home and PgUp are Super, End and PgDn are Hyper
14:51:09 <shapr> DEL is Shift_L
14:51:42 * Strike prays that he never has to use shapr's keyboard
14:51:44 <shapr> in short, I've moved all modifier keys to my thumbs, allowing much improved chording
14:52:06 <reffie> hey
14:52:11 <reffie> pragmatic programmers
14:52:12 <shapr> Strike: it looks like a Kinesis swedish qwerty 
14:52:13 <reffie> is pretty good
14:52:17 <shapr> reffie: yes, it is.
14:52:19 <reffie> programmer.
14:52:42 <reffie> i've read a bit more than 100 pages, so far
14:52:47 <shapr> great :-)
14:52:50 <shapr> did you get it from the library?
14:52:58 <reffie> err
14:53:08 <shapr> bookstore?
14:53:13 <reffie> lets talk about something else
14:53:21 <shapr> you stole it from someone?
14:53:23 * shapr grins
14:53:55 <shapr> Strike: have you tried a kinesis contoured keyboard?
14:54:03 <Strike> shapr: is that like "ergonomic"?
14:54:22 <shapr> yup, but not like ms unnatural
14:54:35 <shapr> http://www.kinesis-ergo.com/images/elan.jpg
14:54:38 <Strike> no, I like my keyboards in the traditional format :)
14:54:56 <Strike> seen them, never used them
14:55:02 <shapr> I suspect I'm not a traditionalist
14:55:31 <Strike> well, I've never even had the slightest problems with RSI or CTS, so I tend to let my "cheap bastard" take over when buying keyboards
14:56:00 <shapr> fair enough :)
14:56:26 <Strike> yeah, and since I've been typing for the better part of two decades, I don't anticipate any problems, but one never knows - I have a lot of typing to go I imagine :)
14:56:35 <shapr> moving all of my modifier keys to my thumbs has improved my typing speed
14:56:40 <reffie> GHC Interactive, version 6.0, for Haskell 98.
14:56:42 <reffie> finally.
14:56:43 <dark> Strike: I've found mousing to be more harmful than typing.
14:56:48 <shapr> yah, mousing sucks
14:56:53 <Strike> dark: I avoid mousing as much as possible
14:57:00 <shapr> do you use ion or ratpoison?
14:57:11 <dark> I had a bad time once after using triple-click (xterm line select) too much.
14:57:12 <Strike> nope
14:57:20 <shapr> tried 'em?
14:57:27 <Strike> briefly, a long time ago
14:57:30 <dark> I deal with the mouse by moving it to the other side of my computer every few months :)
14:58:00 <shapr> I have a left handed optical trackball
14:58:07 <Strike> about the only mousing I do is on webpages now and even some of that is compensated for by look-ahead-find in moz/galeon
14:58:13 <Strike> er, type-ahead-find
14:58:16 <shapr> yah, I like that feature
14:58:30 <reffie> i like it a lot too
14:58:52 <shapr> I'm tempted to stick my mouse in a drawer for a few days and see if I can make it
14:58:54 <Strike> I don't switch desktops with the mouse, I don't switch xchat tabs with the mouse, I don't switch terminal tabs with the mouse ... etc.
14:59:10 <reffie> use a better irc client
14:59:11 <Strike> but mousing on webpages is often just faster and less cumbersome, so I indulge
14:59:16 <reffie> :P
14:59:18 <Strike> reffie: what's wrong with the one I use now?
14:59:41 <Strike> irssi is good, I use it when I ssh back into my box from elsewhere
14:59:48 <Strike> but I like xchat better
14:59:49 <shapr> I like ERC
14:59:55 <reffie> ERC?
14:59:58 <Strike> shapr: we already covered that you are weird
14:59:59 <shapr> I'm using ERC Version 4.0 $Revision: 1.534 $ with XEmacs 21.4 (patch 12) "Portable Code" XEmacs Lucid!
15:00:00 <Strike> :)
15:00:09 <shapr> Strike: or just way ahead of the curve
15:00:12 <reffie> heh xemacs.
15:00:14 <Strike> heh, keep thinking that
15:00:25 <shapr> I will :-)
15:00:33 <Strike> my P3-450 likely couldn't handle it ;)
15:00:54 <shapr> have you tried hircules?
15:00:57 <Strike> and I only have 256MB of RAM, so I'd rather not use half of it for emacs
15:01:12 * shapr checks how much ram xemacs is using
15:01:19 <reffie> emacs doesnt use that much
15:02:03 <shapr> 36mb of ram right now, probably because I have several hundred buffers, eshell, gnus, ghci, ERC, calendar, calculator, and some other stuff open in xemacs
15:02:13 <Strike> ha, that's funny
15:02:29 <reffie> heh
15:02:46 <shapr> I have the record for highest number of loaded elisp libraries on #emacs
15:02:48 <Smerdyakov> Several hundred buffesrs?!
15:02:50 <reffie> several hundrd buffers :)
15:03:01 <Smerdyakov> You keep emacs running all the time and never close files, etc.?
15:03:01 <shapr> Smerdyakov: sure, why not?
15:03:05 <shapr> no, I use desktop
15:03:22 <shapr> admittedly, I do keep emacs running all the time
15:03:31 <shapr> but I clean out my desktop regularly
15:03:36 <shapr> otherwise the number would be *much* larger
15:04:08 <reffie> i tried using xemacs for a few weeks
15:04:23 <shapr> what do you usually use?
15:04:25 <shapr> gnumacs or vi?
15:04:29 <reffie> vim.
15:04:30 <shapr> ah
15:04:35 <reffie> but it's so ugly.
15:04:37 <shapr> heh
15:04:40 <reffie> [xemacs]
15:04:54 <Strike> reffie: nice threaded conversation there :)
15:04:57 <shapr> you can use TTF fonts, background pictures, color themes
15:05:10 <reffie> shapr the toolkit it uses is ugly.
15:05:12 <Strike> line about xemacs, line about vim, line about xemacs
15:05:14 <Strike> :)
15:05:21 <reffie> heh
15:05:27 <shapr> reffie: tried xemacs-gnome ?
15:05:33 <reffie> shapr no
15:05:35 <shapr> it uses gtk
15:05:38 <reffie> gtk2?
15:05:47 <Strike> if not, it should
15:05:50 <shapr> I think it's gtk1
15:05:54 <Strike> gtk1 is horrid
15:06:33 <reffie> anyway, i've deceided to stop using gvim, and use vim in an aterm.
15:06:49 <reffie> i need to use the mouse less.
15:06:55 <Strike> amen
15:07:04 * Strike never got into gvim, found it just took longer to do stuff
15:07:18 <reffie> the gtk2 gvim is pretty nice
15:07:31 <hdaume> does anyone have any SQL bindings for haskell?  i don't care how elegant they are...i just need to issue a query and iterate (lazily) over the result set
15:07:32 <Strike> s/is/looks/  ;)
15:07:43 <reffie> yeah.
15:08:19 <Strike> I want a gnome-vim bonobo component (I've seen the one on opensky.ca but it's not quite there yet)
15:08:31 <reffie> i don't.
15:08:41 <reffie> i don't use nautilus, anyway
15:08:49 <Strike> oh, not just for nautilus, grasshopper
15:08:50 <Strike> :)
15:08:51 <shapr> hdaume: what do you mean?
15:08:53 <Strike> for everything
15:08:58 <reffie> like what?
15:09:09 <hdaume> shapr: i need only very basic functionality...
15:09:11 <Strike> evolution, pan, galeon, you name it
15:09:16 <shapr> hdaume: HToolkit has mysql/odbc/postgresql bindings, lambdabot uses them
15:09:18 <Strike> like kate is for KDE
15:09:35 <hdaume> shapr: i just discovered that the implementation of setPosIn in SML.NET is: fun setPosIn _ = raise General.Fail "TextIO.setPosIn", which means i can't use sml
15:09:36 <reffie> *shrug*
15:09:50 <shapr> hdaume: I don't know what that means.
15:09:57 <Strike> reffie: basically any text editing in gnome apps
15:10:04 <hdaume> shapr: it's saying "setPosIn _ = error "TextIO.setPosIn""
15:10:14 <hdaume> i.e., it's not implemented
15:10:21 <shapr> what's setPosIn ?
15:10:32 <hdaume> fseek
15:10:32 <reffie> oh, Strike. i see. yeah, that'd be pretty cool.
15:10:51 <shapr> oh, you can't seek on a file?
15:10:55 <shapr> yuck
15:10:56 <hdaume> right
15:11:07 <hdaume> doing linear search on a 400mb file isn't fun :)
15:11:12 <reffie> heh
15:11:49 <shapr> hdaume: fastest and most elegant would probably be Hugs + ODBC + HaskellDB
15:12:01 <hdaume> needs to be ghc :)
15:12:04 <shapr> oh
15:12:29 <shapr> I think HToolkit is your best option
15:12:35 <hdaume> url?
15:12:40 <shapr> I've never tried to build that on win32 though
15:12:43 <shapr> @fact htoolkit
15:12:45 <lambdabot> http://htoolkit.sourceforge.net/
15:12:48 <hdaume> tnx
15:13:18 <shapr> http://www.cs.indiana.edu/elisp/gui-xemacs/images/embedded-xemacs.jpg
15:13:28 <shapr> that's cute, xemacs as an embeddable gtk widget
15:14:00 <shapr> hdaume: the database stuff is only in CVS I think, and it's not straightforward to build
15:14:08 <shapr> but I can probably help you build it
15:14:20 <Strike> http://www.opensky.ca/gnome-vim/  the gnome-vim component I spoke of
15:14:51 <shapr> cute
15:15:45 <hdaume> shapr: ah okay
15:17:47 <shapr> anyone familiar with haddock here?
15:18:00 <shapr> when I try to build it, Main.hs can't find the parse function
15:19:33 <reffie> i want a laptop :(
15:28:06 <hdaume> shapr: which DB binding do you use?
15:28:07 <hdaume> mysql?
15:35:45 <shapr> nah, postgresql
15:39:07 <jlouis> shapr: postgresql is a real database, so why bother with mysql? :)
15:39:32 <shapr> I do use postgresql
15:40:19 <jlouis> exactly :)
15:55:54 <reffie> i go to bed now
15:55:55 <reffie> byebeybey
15:55:59 <shapr> bye bye
15:56:07 <reffie> 140 pages of PP read :)
15:56:10 <shapr> yay!
15:56:14 <reffie> i hope to finish it tomorrow
15:56:25 <shapr> it's a good book
15:56:34 <reffie> it's pretty easy to read
15:56:36 <Smerdyakov> PP?
15:56:46 <shapr> Pragmatic Programmer
15:56:50 <shapr> I usually call it tPP
15:57:00 <shapr> reffie: you still have to tell me where you got it
15:57:10 <shapr> do you have the spiffy tearout card in the back of the book?
15:57:15 <reffie> i got a pdf.
15:57:18 <shapr> oh
15:57:23 <reffie> :(
15:57:39 <shapr> the card in the back of the book is nice, it lists all the points covered in the book
15:57:46 <reffie> ah?
15:58:03 <reffie> but i might buy it, if it proves very nice
15:58:08 <reffie> and useful.
15:58:08 <shapr> yah, it's cardstock, so it's worth keeping next to your computer in the quick reference section
15:58:57 <shapr> I have a very small stack of books I keep always handy
16:12:46 * shapr bounces happily
16:12:53 <shapr> haddock is now loaded into ghci
16:12:53 <shapr> yay
16:29:56 * shapr grumbles at Haddock
16:30:09 <shapr> it has parse errors on CVS $Id strings
16:33:24 * shapr finds a bazillion Haddock bugs
16:56:16 <shapr> Igloo: awake?
16:58:12 <shapr> I'm trying to fit --dump-interface into the GHC Haddock building process...
17:05:56 <shapr> hi kunphuzil 
17:06:23 <kunphuzil> yo
17:06:30 <shapr> what's up?
17:06:47 <kunphuzil> just got back from LA
17:07:52 <shapr> I've heard it's warm there.
17:08:05 <kunphuzil> Not like here
17:08:11 <kunphuzil> (AZ)
17:08:21 <kunphuzil> BRB
17:08:25 <shapr> I could ship you some Swedish snow.
17:08:53 <Riastradh> Oooh, I want some!
17:09:20 <shapr> actually, I'll have to wait till it gets cold again.
17:11:10 <shapr> hrm
17:11:17 <shapr> haddock doesn't like me.
20:58:01 * Heffalump appears
21:00:30 * Riastradh explorbs.
21:01:53 <Heffalump> that sounds painful
23:08:37 * Arnia boings thrice
