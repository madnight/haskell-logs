03:56:45 <elmex> ?
03:57:02 <Heffalump> ??
03:57:54 <elmex> hey yo, whatsup?
03:58:01 <kosmikus> :!;?,
04:07:56 <earthy> up? well, the ceiling.
04:08:25 <elmex> earthy: proove it!
04:09:50 <earthy> elmex: I am in a building. Buildings are defined by having roofs. The undersides of roofs are ceilings. Roofs are above anything in a building. The underside of a roof is therefore also above anything in a building. Therefore, the ceiling is above me. Ergo, the ceiling is up. QED.
04:10:32 <elmex> m
04:10:34 <Igloo> Euch
04:10:40 <elmex> QED?
04:10:59 <elmex> earthy: are you sure you are in a building?
04:11:08 <earthy> yes
04:11:18 <elmex> earthy: can you proove that?
04:11:29 <earthy> not to you.
04:11:44 <elmex> :)
04:11:45 <elmex> ok
04:12:15 <earthy> topologically it doesn't matter...
04:13:04 <elmex> ok
04:23:06 * shapr yawns
04:25:01 <shapr> good morning #haskell!
04:27:23 <phubuh> i'm just about to go to bed :-/
04:27:34 <Heffalump> morning.
04:31:59 * Heffalump prepares a lambdabot checkin
04:33:42 <phubuh> i made my first debian packages today, i really dig dpkg now
04:39:53 <Igloo> phubuh: To fix your earlier error delete the empty Depends line
04:41:38 <phubuh> wouldn't the repository maintainer have to do that?
04:44:24 <Igloo> You can do it to /var/lib/apt/lists/www.syntaxpolice.org_haskell-experimental_unstable_Packages until the repository is fixed
04:46:31 <phubuh> ah!
04:47:51 <phubuh> yay!
05:56:57 <dark> This channel is getting bigger :)
06:01:55 <Igloo> We're slowly taking over the world
06:17:28 <earthy> the pinky, the pinky, the pinky and the brain...
06:18:37 <dark> just the brain, please.
06:21:43 <earthy> `what are we going to do tonight brain?'
06:23:56 <dark> the same thing we do EVERY night, pinky!
06:49:46 <adept> shapr: ayt?
07:29:54 <Heffalump> is http://www.algorithm.com.au/wiki/hacking/haskell.ghc_runtime_loading the latest runtime loading stuff, or did it get into GHC or anything?
07:31:09 <shapr> Heffalump: I got a ghc6 version in email from o3
07:31:22 <Heffalump> oh, can I have it?
07:31:22 <shapr> since I haven't gotten around to trying it out, I don't know if he posted it or not
07:31:26 <shapr> sure
07:31:32 <Heffalump> what version number is it?
07:31:44 <Heffalump> shapr: btw, new lambdabot stuff checked in
07:31:50 <Heffalump> are you still building lambdabot with GHC 5?
07:32:15 <Heffalump> cos I have no idea whether my checkin will work with that :-) (I have local changes to make the stuff that doesn't work with GHC 6 work or be removed, but I didn't check those in)
07:33:05 <reffie> does ghc compile into machine code?
07:33:19 <reffie> or some kind of bytecode?
07:33:26 <reffie> or does it just interpret?
07:33:33 <adept> shapr: have you had a chance to take a look at my code?
07:33:57 <Heffalump> machine code
07:34:15 <reffie> does it do a good job?
07:34:32 <reffie> like: is the resulting executable fast?
07:34:36 <Heffalump> well, better than any other Haskell compiler
07:34:45 <reffie> heh
07:34:49 <reffie> that's not much
07:34:52 <Heffalump> but a lot worse than most other compiled languages, in general
07:34:56 <reffie> :(
07:35:06 <Heffalump> laziness hurts performance badly
07:35:17 <reffie> why?
07:36:18 <Heffalump> well, if you execute laziness naively, everything you build has to be a thunk rather than a value
07:36:30 <Heffalump> which takes up space and wastes time if you then execute it immediately anyway
07:36:45 <reffie> thunk?
07:37:28 <Heffalump> suppose you want to make a value of type Int
07:37:37 <Heffalump> laziness means you can't actually make that value until it's needed
07:37:45 <reffie> right
07:37:52 <Heffalump> so what you do is make a wrapper that says "when you run me, I will produce an Int"
07:38:19 <Heffalump> now, you also want (in any sensible implementation) to make sure that if someone else wants the same value, the wrapper doesn't get run twice
07:38:30 <Heffalump> so the first time it runs, it overwrites itself with the value it calculated
07:38:42 <dark> I hope that even an extremely lazy implementation would be smart enough to know when making the wrapper would be more work than making the Int :)
07:39:07 <Heffalump> that's hard to decide
07:39:15 <reffie> heh
07:39:18 <Heffalump> suppose the computation that generated the Int actually didn't terminate, or returned an error
07:39:28 <shapr> Heffalump: nah, lambdabot is ghc6 now
07:39:51 <Heffalump> oh. But the checked in code won't compile with ghc6..
07:40:12 <shapr> ?
07:40:25 <shapr> hm, where did I put the new runtime loader...
07:40:27 <Heffalump> well, it uses GHC.Posix, and that seems to have mostly gone walkies
07:40:40 <Heffalump> and I couldn't make FortuneModule build at all, IIRC (but I didn't try very hard)
07:40:49 <Heffalump> or chessModule
07:41:21 <shapr> right, I switched those to System.Posix and -package posix
07:41:31 <Heffalump> oh, but didn't checkin?
07:41:36 <reffie> so lambdabot plays chess?
07:41:46 <shapr> FortuneModule and YowModule have been refactored into QuoteModule
07:41:55 <shapr> I thought I removed FortuneModule and YowModule from the cvs tree
07:41:59 <shapr> reffie: sort of
07:42:03 <shapr> @ply e2 e3
07:42:04 <lambdabot> ../chess/Move.hs:72: Non-exhaustive patterns in function conv
07:42:07 <shapr> :-)
07:42:09 <reffie> heh.
07:42:10 <Heffalump> sorry, I meant the Fortune bit of QuoteModule.
07:42:20 <shapr> hm
07:43:15 <shapr> locally I have System.Posix imported
07:43:22 <shapr> GHC.Posix was for ghc5
07:43:26 <shapr> @board
07:43:29 <shapr> oops
07:43:32 <Heffalump> what happened?
07:43:33 <shapr> that's a new one
07:43:37 <Heffalump> did you see anything on the console?
07:43:44 <shapr> it segfaulted, wow
07:43:48 <reffie> wow
07:43:52 <Heffalump> ouch :(
07:43:54 <shapr> that's never happened before 
07:43:55 <Heffalump> that must be a compiler bug
07:44:02 <Heffalump> it occasionally segfaults for me when I hit ^C
07:44:10 <reffie> i thought haskell prevented segfaults?
07:44:17 <shapr> it always has prevented them for me
07:44:21 <Heffalump> reffie: sure, if the compiler is perfect
07:44:28 <Heffalump> you can't write Haskell code that has bugs that cause segfaults
07:44:37 <reffie> ah
07:44:42 <shapr> did you check in ghc6 compatible code?
07:44:42 <Heffalump> but a bug in the compiler could do anything, as usual
07:45:01 <Heffalump> shapr: I didn't check in any of the changes that I have locally to make it compile with GHC6
07:45:22 <dark> Heffalump: Actually... that's only true if you abstain from FFI.
07:45:25 <Heffalump> if you could checkin the GHC6 stuff that'd be good.
07:45:30 <Heffalump> dark: oh, yes, sorry
07:45:34 <shapr> Heffalump: it was checked in before, I promise :-)
07:45:37 <Heffalump> and unsafePerformIO
07:45:42 <dark> And the standard libraries are full of foreign hooks :)
07:45:54 <Heffalump> ok, so we also have to assume the libraries are bug free.
07:46:06 <Heffalump> shapr: there's no sign of GHC6 fixes when I do an update
07:46:22 <shapr> hm
07:46:38 <shapr> I dunno, maybe I missed something
07:46:39 * shapr checks
07:47:37 <Heffalump> my local patch currently changes Fortune.hs and Yow.hs to use System.Posix from GHC.Posix, disables FactModule and ChessModule in Main, and stops QuoteModule importing or using Fortune
07:47:58 <shapr> I thought I checked in those same changes two weeks ago
07:48:01 <Heffalump> with those changes, the checked in code compiles with GHC6
07:48:05 <Heffalump> oh :_)
07:48:08 <Heffalump> s/_/-/
07:48:11 <shapr> that's why I'm confused
07:49:03 * SyntaxPolice dances around
07:49:21 * shapr almost boings
07:49:55 <reffie> so is lambdabot ever coming back?
07:49:59 <shapr> sure
07:50:19 <shapr> I'll restart the current binary while I'm checking the diffs tween cvs and me
07:50:32 <dark> And then we can all do @board again!
07:52:48 * SyntaxPolice sips coffee and rocks out w/ headphones
07:58:38 <Heffalump> shapr: any sign of that runtime loader?
08:12:22 <shapr> Heffalump: sorry, paying work is distracting me
08:17:19 <Igloo> You need a client in need of an IRC bot
08:17:45 <shapr> heheh
08:19:33 <shapr> most of my clients want Java and Active Server Pages, they only accepted Python/Zope because Bea and I can do websites in a fraction of the time that their multiperson Java/ASP team takes
08:20:28 <shapr> that's one reason to expand into 3D programming I think, I hope to write more paying Haskell.
08:20:38 <Riastradh> Bah, Python!
08:21:02 <shapr> pays the bills
08:25:10 <shapr> Heffalump: I don't know what I did with the ghc6 runtime loader, I'll search more after work
08:28:18 * shapr begins to boing
08:43:29 * lilith grins
08:43:36 <shapr> hi lilith!
08:43:39 <lilith> hi shapr 
08:43:44 <shapr> wassup?
08:43:46 * lilith is doing the reverse :p
08:43:53 <shapr> you're calming down?
08:44:03 <shapr> I haven't unicycled in days, I'm going into withdrawals
08:44:04 <lilith> i'm writing an equivalent nofib test suite in java
08:44:09 <shapr> oh, nifty
08:44:15 <lilith> for benchmarking etc
08:44:21 <shapr> can't you use QuickCheckM ?
08:44:30 <lilith> quickcheckM?
08:44:34 * lilith blinks
08:44:36 <shapr> are you able to use code from Ashley Yakeley's JVM-Bridge?
08:44:37 <lilith> how does that help me?
08:44:58 <lilith> not that i can see
08:45:29 <shapr> I think the correctness part of the nofib suite could use QuickCheckM and compare GHC to external utilities
08:46:19 <shapr> for example, the math could be checked by calling one of the external gnu calculators
08:46:30 <lilith> hmm
08:46:32 <lilith> the thing is
08:47:14 <lilith> i want to see if the java source spitted out by my compiler is any worse than say "natively" written java
08:47:20 <shapr> oh
08:47:39 <lilith> so i need to compare running times of both
08:48:55 <lilith> hmm
08:49:00 <lilith> the mailman channel seems pretty dead
08:49:10 <shapr> gnu mailman?
08:49:16 <shapr> are you running a list?
08:50:05 <lilith> yeah
08:50:10 <shapr> cool
08:50:13 <lilith> more than one list in fact
08:50:19 <shapr> oh hey, I have a colocated box now, yay!
08:50:27 <shapr> but I haven't had time to do anything with it, boo
08:50:27 <lilith> *grimace* for multiple domains
08:50:34 <shapr> oh, that sounds like fun
08:50:39 <shapr> hej norpan 
08:50:42 <lilith> colocated box?
08:50:58 <shapr> my own hardware plugged into the wall at an ISP
08:51:14 <shapr> so it has full 10Mb/s
08:59:10 <shapr> mmm, 133MHz laptop with 1gb drive.. my thin client for ICFP
08:59:26 <shapr> I sure hope they have ethernet internet connections somewhere
09:01:03 * lilith decides that she has found Hell on earth
09:03:37 <shapr> lilith: http://c2.com/cgi-bin/wiki?DecisionRoutinesWhenStuck
09:04:11 <SyntaxPolice> shapr: having a colocated box is useful :)
09:04:21 <shapr> you have one too?
09:04:33 <shapr> I have yet to redirect my domain name over there though
09:04:40 <SyntaxPolice> yeah, the HE repository is on a colcated box
09:04:43 <shapr> spiffy
09:04:58 <shapr> speaking of which, did it get fixed?
09:05:01 <SyntaxPolice> its a rack-mounted SELinux / Debian machine
09:05:09 <SyntaxPolice> yeah, its got a new motherboard, a new harddrive and a new OS :)
09:05:25 <shapr> I mean the apt-get problem
09:05:33 <shapr> ah, so it did
09:05:34 <SyntaxPolice> apt-get problem?
09:05:59 <SyntaxPolice> I still can't decide what to do w/ my computer, I think I"m going to take it
09:06:23 <shapr> I think that's a good idea
09:06:35 <shapr> I would have bad DTs without hardware.
09:08:30 <SyntaxPolice> so does sweden have the same power plugs as england?
09:09:09 <shapr> I dunno, what does england have?
09:11:23 <Igloo> I uploaded new packages without an empty depends line
09:11:43 <Igloo> England has 3 prongs in a triangle
09:12:22 <Igloo> Quite well spaced out
09:12:56 <shapr> Bea says they're different
09:13:15 <opet> does anywhere use the same plugs as britain?
09:13:19 <adept> yeah, they are different
09:13:27 <adept> opet: ireland
09:13:28 <opet> (and ireland)
09:13:31 <opet> bah :)
09:13:32 <Igloo> http://www.sharperimagebest.com/plugs.html thinks Sweden are 2 pronged
09:14:21 * Igloo searches the webpage for "type: G" before noticing it's all image
09:15:10 <Igloo> Ireland, Hong Kong, China (maybe) have UK style plugs apparently
09:16:34 <SyntaxPolice> Igloo: thats a cool page
09:17:03 * Igloo just googled for 'Sweden plugs' or something
09:17:28 <SyntaxPolice> so it shows sweden & uk both have type C; but maybe england only really uses that bottom one?
09:19:16 <Igloo> You only find G normally. My lawn mower extensino might use A, I think C might have been used millions of years ago
09:20:14 <Igloo> Oh, a German friend can use UK type G sockets by putting a screwdriver in the top hole when putting the plug in, and that is apparently F which Sweden has
09:20:46 <Igloo> (The top one is Earth and most modern sockets don't open the live+neutral holes unless there is something in the Earth hole)
09:21:35 <Igloo> People may not take kindly to you sticking scrwedrivers in their power sockets, though  :-)
09:21:52 <adept> Igloo: even toothpick is enough (often)
09:27:14 * shapr smacks lambdabot
09:27:41 <Igloo> What happened?
09:28:02 <shapr> it's this same stupid error
09:28:10 <shapr> Exception: Prelude.head: empty list
09:28:13 <shapr> doesn't tell me anything
09:28:19 * shapr make clean && make
09:28:28 <shapr> where's ErrorUtils?
09:29:59 <Igloo> Looks like lots of heads on msgParams output
09:30:14 <shapr> oh
09:30:18 <shapr> hm
09:30:36 <Igloo> Ah, that's an accessor
09:31:12 <shapr> I'll try it with Heffalump's latest changes
09:31:21 <Igloo> Run it with something that prints out everything it reads from the server connection and you'll see what line is causing it
09:31:40 <Igloo> I suspect it's something with no params where you expect at least one or something
09:32:54 <Igloo> liftIO (putStrLn $ "Got " ++ show (length line) ++ " bytes: " ++ line") after line <- hGetLine h in readerLoop or something
09:33:21 <Igloo> Actually, reading up it's probably you looking at the text of a quit message when there isn't any
09:33:37 <shapr> huh
09:33:41 <shapr> I bet you're right
09:34:00 * SyntaxPolice buys adapter kit
09:34:08 <shapr> @board
09:34:08 <lambdabot> Sorry, I don't know the command "board", try "lambdabot: @listcommands"
09:34:13 <shapr> oh, chess is turned off
09:34:18 <shapr> @fact
09:34:18 <lambdabot> empty factoid, BZZZT, thank you for playing!
09:34:30 <shapr> @lojban cilre
09:34:30 <lambdabot> ERROR: does not exist
09:34:30 <lambdabot> Action: connect
09:34:30 <lambdabot> Reason: Connection refused
09:34:38 <shapr> @fact blizzy
09:34:39 <lambdabot> Nothing
09:34:45 <shapr> @fact foo
09:34:45 <lambdabot> bar
09:35:26 <shapr> hm
09:35:27 <Igloo> Bah
09:35:35 <shapr> maybe Heffalump's changes fixed it.
09:36:01 <shapr> you are giving a quite message :-)
09:36:05 <shapr> steveh did not
09:36:05 <Igloo> The server is putting it in
09:36:13 <shapr> I wonder how steveh got out of it
09:36:55 <Igloo> OK, "quit", "quit :" and "quit : " don't work
09:37:25 <Igloo> Oh, maybe it's the server
09:37:32 <shapr> ?
09:37:57 <Igloo> Bah, whowas just tells me he was using irc.freenode.net
09:39:12 <Igloo> Did you make the change I suggested?
09:39:26 <shapr> no, but it's on my afterwork list :-)
09:39:29 <Igloo> It's also strange the exception wasn't caught, actually
09:39:48 <Igloo> Oh, it will have been but then thrown back to the main thread I think
09:41:27 <Igloo> Right, that is the problem, it kills Heff's lambdabot on OxIRC
09:42:12 <shapr> ?
09:42:18 <shapr> oh
09:42:32 <shapr> do you spell that OxIRC or 0xIRC ?
09:42:37 <Igloo> I'll leave it to someone who shouldn't be packing to work out what goes wrong next  :-)
09:42:49 <Igloo> Ox(ford)
09:43:06 <shapr> what are you packing for?
09:43:29 <shapr> thanks for the diagnosis, I'll fix the code afterwork
09:43:34 <Igloo> gf's relative's wedding
09:43:42 <shapr> oh, nifty
09:43:58 <Igloo> Logging functionality would be cunning too
09:44:26 <shapr> I was going to mention clog, but then I realize it'd be a feature for other networks
09:44:48 <Igloo> clog?
09:44:59 <shapr> the 'bot here on #haskell that logs all traffic
09:45:26 <Igloo> Oh, I meant LB should log everything it receives and sends when running in a debug mode (which it would normally do here)
09:45:47 <Igloo> And maybe other stuff too
09:45:50 <shapr> there's verbose in BotConfig
09:45:58 <Igloo> Ah, OK
09:46:00 <shapr> you could direct that to a file
09:46:20 <shapr> is there such a thing as a logging monad?
09:46:56 <dark> ... there _could_ be :-)
09:47:09 <Igloo> For LB you'd just want a log function in IRC
09:47:16 <shapr> what about an Eiffel-style contract monad?
09:47:38 <Igloo> In theory you could transform IRC to have IRC_Logged, but if you follow that path you end up having to lift functinos up through 10 layers of monad transformer which wouldn't be pretty
09:47:39 <shapr> Igloo: what about LogT? :-)
09:48:02 <shapr> beat me to it :-)
09:48:31 <Igloo> I guess with appropriate liftFoo functions and classes like MonadIO it wouldn't be *that* bad
10:09:00 * shapr bounces ecstatically
10:17:49 <shapr> hi Philippa 
10:17:55 <Philippa> afternoon
10:18:01 <shapr> learning Haskell?
10:18:16 <shapr> or maybe looking for other users?
10:18:27 <Philippa> vaguely. Actually cm dragged me in here - I'm hacking away at my dissertation atm
10:18:35 <shapr> what's your dissertation about?
10:18:46 <cm> oh, hey Philippa
10:18:47 <Philippa> it's a simple compiler for a C-like language sans expressions
10:18:54 <Philippa> d'oh, sans statements even
10:19:05 <shapr> so, more functional?
10:19:09 <Philippa> one of the two's useful, and I don't code in asm any more ;-)
10:19:15 <Philippa> potentially, yeah
10:19:21 <shapr> I've just been reading about C--
10:19:33 <Philippa> which one? :-)
10:19:43 <shapr> @fact c--
10:19:44 <lambdabot> Nothing
10:19:51 <shapr> @fact c-- http://www.cminusminus.org/
10:19:52 <lambdabot> set c-- to http://www.cminusminus.org/
10:19:55 * Philippa knows one of the researchers at her uni was doing some stuff on one of 'em
10:20:05 <shapr> I didn't know there were multiples.
10:20:21 <Philippa> one or two people knocked up HLAs by that name
10:20:35 <shapr> the pragprog mailing list has decided to write a new language for this years Language of the Year, it's fun to watch
10:20:38 <Philippa> there was one for x86 knocking about at one point, for example
10:21:06 <shapr> C-- claims to formalize the idea of cross-platform asm
10:21:19 <shapr> seems like a good idea to me
10:21:37 <shapr> which uni do you go to?
10:22:03 <Philippa> yeah. Though as ever you run the risk of being too succesful and people assuming that the range of platforms you cover really /is/ everything
10:22:06 <Philippa> Nottingham
10:23:04 <shapr> other than the famous stories, I know nothing about it.
10:23:05 <shapr> nice place?
10:23:19 <Philippa> not too bad. The compsci degree has its problems atm though
10:25:55 <adept> bb all
10:26:34 <shapr> speaking of compsci, have you used Haskell before?
10:27:32 <Philippa> our functional programming course in the first year uses it, though we don't write enough code to not forget a lot over a couple of years. I bashed up a desk calculator a month or so back using parsec for the parsing
10:27:46 <shapr> oh, you bash desk calculators too?
10:28:15 <Philippa> it's a pretty traditional exercise, isn't it?
10:28:40 <Philippa> gives as good an abstraction workout as you're gonna get in a hundred lines or so
10:28:56 * shapr laughs
10:29:06 <shapr> sorry, we've been speaking at cross-purposes
10:29:18 <shapr> for me, bashing a desk calculator is a frustration workout
10:29:22 * Philippa tries to avoid slamming them into the table too hard :-)
10:30:07 <shapr> in our house, we replace desk calculators on a regular basis.
10:30:41 <shapr> I've used parsec some, I really enjoyed it.
10:31:05 <shapr> I wish I knew how to apply it to binary file formats though
10:32:03 <shapr> with what language are you implementing your dissertation language?
10:32:46 <Philippa> Haskell. It was going to be that, ocaml (if I learnt it faster than I relearnt Haskell, which I didn't) or C++. Decided I couldn't be arsed with all the boilerplate in C++
10:33:00 <shapr> yes, scrap your boilerplate
10:33:27 <shapr> I've been wanting to try out Stratego for language implementation
10:35:10 * Philippa takes a look briefly
10:35:45 <shapr> playing with Stratego is on my list of things to do in my copious free time
10:36:21 * Philippa nods
10:36:38 <Philippa> a bout of hacking and reading up on stuff is in order soon, I've bugger all else to be doing for most of the next two months
10:36:52 <shapr> that must be nice
10:37:02 <shapr> I'd like to have two months of free time
10:42:09 <Philippa> not with the strings that come attached here you wouldn't
10:42:55 <shapr> like what?
10:44:06 <shapr> Igloo: psst, have you released your zsh prompt?
10:44:07 <Philippa> broke, 6 miles from anything worth doing, can't drive
10:44:37 <shapr> but you have internet
10:44:48 <shapr> I haven't driven in some years myself
10:44:53 <Philippa> yeah. The cam whore thing doesn't appeal to me though
10:45:00 <shapr> cam whore?
10:45:07 <shapr> I'm not familiar with the term
10:45:20 <shapr> oh, as in webcam?
10:45:22 <Philippa> yeah
10:45:25 <shapr> or as in campus?
10:45:27 <shapr> ah
10:45:33 <shapr> I can understand that.
10:45:53 * Philippa would be quite happy to be back in Nottingham atm, believe me
10:46:17 <shapr> I have the sick habit of learning stuff for fun in my spare time
10:46:41 <Philippa> I do that sometimes. I've been stuck in one place too long though, can't concentrate enough half the time
10:46:42 <shapr> I probably spend too much time learning stuff on the 'net
10:47:06 <shapr> when that happens to me, I try to change my environment some
10:47:18 <Philippa> see "broke"...
10:47:18 <shapr> either switch to learning something else, or move stuff around in my room
10:47:25 <shapr> change my computer settings, that sort of thing
10:47:39 <Philippa> got too much in here to get away with moving stuff around. That and the shape doesn't help it much either
10:48:09 <shapr> you could write a packing program that would try different reorganizations of your room :-)
10:48:25 <shapr> or buy some posters, that works for me sometimes
10:48:29 <shapr> oh, right, broke
10:48:47 <shapr> can you get big sheets of colored paper for free as a student?
10:48:55 <Philippa> not during the summer hols
10:49:01 <shapr> hm
10:49:17 <shapr> if you have a bunch of thumbtacks you could use leaves, they have nice colors
10:49:41 <shapr> or check the trashcan behind the local uni printing shop, there's lots of random paper goodies there
10:50:18 <Philippa> or I could hack away at my dissertation a little and idle on IRC a lot :-)
10:50:22 <shapr> that too
10:50:47 <shapr> I suspect that's the most persuasive option.
10:51:05 <shapr> I've been learning unicycling lately, that's my recent passion.
10:51:13 <Philippa> heh
10:51:26 <Philippa> I'd be doing kung fu, but there aren't any clubs for the forms I've been studying around here
10:51:27 <shapr> see see: http://kungens.kemi.fi/~shae/foto/unicycle.jpeg
10:51:36 <shapr> my unicycle is very cool :-)
10:51:41 <Philippa> and I haven't done it long enough to be able to train effectively on my own yet
10:52:17 <shapr> you could still work on training your flexibility, strength, and coordination on your own
10:52:36 <shapr> bruce tegner's books have a range of free training setups
10:53:09 <shapr> for example, run a string through one of the hard rubber bouncy balls, and kick/punch at it as it swings
10:54:15 * Philippa nods
10:54:15 <shapr> you can teach yourself many holds and throws by looking at a book and having a partner who doesn't mind some air time.
10:54:45 <Philippa> lack of equipment. And I've not been training long enough to trust myself doing that on someone else yet
10:55:23 <Philippa> not unless they're good enough to instruct anyway. I'm at risk of being given a crash course in martial sabre by such an individual next weekend though...
10:55:38 <shapr> oh, nifty, I've never gotten my hands on one of those
10:55:41 <shapr> which sort of sabre is it?
10:55:57 <shapr> the straight sword? butterfly swords?
10:56:04 <shapr> kendo?
10:56:20 <Philippa> straight AFAIK. There'll be a number of fencers there
10:56:41 <shapr> I've wanted to try that, it looks like a great way to release tension and frustration.
10:57:25 <Philippa> I think it sorta depends. Some stuff finesse just won't release
10:58:02 <shapr> unicycling is a good way to balance out heavy duty thinking
10:58:12 <shapr> since it requires the opposite behaviour
10:58:17 <shapr> you have to let go and trust your cerebellum
10:59:26 <Philippa> yeah, that's always what I liked about playing various action games on comp/consoles too. That, and the psychology when you're playing against someone else
10:59:50 <shapr> yes, I enjoy the high-speed chess part of arcade games
11:00:03 <shapr> sadly, I haven't been able to play against anyone for years
11:00:10 <shapr> since I moved continents
11:00:21 <Philippa> yeah. I've completely lost the timing I used to have in Street Fighter
11:00:22 <shapr> er, moved myself to a different continent :-)
11:00:48 <shapr> my favorite was tekken 3, that game was worthy of a combinator library
11:01:06 <Philippa> never did get into the namco stuff
11:01:30 <Philippa> mostly because it doesn't make sense unless you pay attention to stuff like which leg's forward, and I never did find myself doing that properly in third person
11:02:14 <shapr> I liked the added complexity of different moves on different sides, it gave a much more flexible combo ability
11:02:29 <shapr> you could string together all sorts of strange moves
11:02:40 <Philippa> I'd love it if I had a little more feedback as to which side I'm on - it just never felt right
11:03:25 <shapr> you might be more comfortable with the guy with multiple styles, I've forgotten his name.. the cop with the ponytail
11:03:54 <Philippa> possibly, but it'd still take sitting down and bashing out an entire paradigm of play
11:04:13 <shapr> rather than having different moves on different sides, he had three or four different moves that could only be used in one of seven different modes, about half the moves would take you to a different mode
11:04:32 <shapr> yah, it's not much like street fighter
11:04:40 <Philippa> which is the same problem only worse :-)
11:04:40 <shapr> it is more realistic though, (imho)
11:04:44 <Philippa> well yeah
11:04:50 <Philippa> SF never did try for realism per se
11:05:05 <shapr> well, the modes were a lot more obvious, snake stance, tiger stance, crane stance, lying on his face
11:05:48 <Philippa> true. The bit that tends to catch me is the implicit mode switches behind a lot of the strings though, and you don't get to see it at all there
11:06:31 <shapr> I practiced by doing the moves outside of strings and watching the stance changes
11:07:18 <Philippa> sort of works, but not always - especially if you want to combo rather than just string
11:07:24 <shapr> well, if you have a fast enough PC, you can play street fighter against me
11:07:51 <shapr> though it may negatively affect your dissertation
11:07:54 <Philippa> haven't tried playing online, I can't imagine it working with any degree of latency though
11:07:59 <Philippa> I've got a year to get that done :-)
11:08:22 <shapr> I haven't tried the network multiplayer options in xmame, it might be fun
11:08:52 <Philippa> SF always was extremely sensitive to timing, especially if you played it with a decent speed setting so jabs never take >100ms to connect
11:09:09 <shapr> could try it on slow
11:09:34 <Philippa> yeah. Very different game if you do that though
11:11:40 <Philippa> is there a mame for win32 that's net-compatible with xmame? I'll need the ROM as well
11:13:18 <shapr> I don't know
11:13:29 <shapr> I wonder if I have the rom handy...
11:13:31 * shapr looks
11:14:12 <shapr> looks like I do
11:15:17 <Philippa> which one?
11:15:33 <shapr> sf2 sf2ce sfz2
11:15:37 <shapr> I don't know what those are
11:15:42 <shapr> but they look like sf2 roms
11:16:00 <Philippa> the original Street Fighter 2, Street Fighter 2 Champion Edition and Street Fighter Zero 2 (aka SF Alpha 2 in the west)
11:16:08 <shapr> ah, cool
11:16:15 <Philippa> haven't played SFA2 in ages, but that'd be my choice out of the three
11:16:27 <Philippa> prolly a bit unfair on you if you've not played anything outside the SF2 subseries though
11:16:47 <shapr> competition encourages me to improve
11:16:52 <Philippa> :-)
11:17:02 <Philippa> yeah, but knowing the rules of the game helps too
11:17:13 * shapr shrugs
11:17:25 <Philippa> SFA/Z2 plays a bit differently to SF2*, especially if you didn't play SSF2Turbo
11:17:57 <shapr> I have the sudden urge to unicycle for a little while, but I'll be back in about an hour.
11:18:50 <Igloo> shapr: Euch, no. Maybe I'll finish it this week. Thanks for the reminder.
11:19:13 <shapr> what did I say?
11:19:18 <shapr> ohh
11:19:21 <shapr> zsh problem
11:19:23 <shapr> prompt
11:19:30 <Igloo> zsh prompt, yes
11:20:27 * Igloo afks
11:20:47 * Heffalump reappears
11:22:22 <Heffalump> hmm, lots of scrollback
11:22:28 <Heffalump> are there problems with my lambdabot patches?
11:22:35 <shapr> I don't think so
11:22:53 <shapr> I'm going to uni for a bit, I'll bbbl
11:32:09 <elmex> are there documented haskell bindings for zlib?
11:58:21 <Heffalump> @quit foo
11:58:25 <Heffalump> DOH!
11:58:34 <Heffalump> sorry shapr :-)
11:58:55 * Heffalump looks rather confused, anyway
12:18:15 <Heffalump> how does one issue a correct quit message for freenode, then?
12:19:47 <Philippa> the usual way
12:20:10 <Philippa> QUIT :blah blah blah
12:21:35 <Heffalump> I've tried that.
12:21:51 <Heffalump> see?
12:23:25 * Heffalump decides to apply sniffit
12:26:47 <Heffalump> oh, I can't even make a real client produce a proper quit message...
12:27:57 * Heffalump gives up
12:53:00 <steveh> anyone active?
12:58:51 * Riastradh
12:59:56 <steveh> it's amazing how many people idle here
13:00:04 <steveh> though I suppose I am a culprit as well
13:02:10 <Heffalump> I am ish
13:02:47 <Heffalump> I need someone who knows how to quit :-)
13:03:52 <dark> It's better to log out than to fade away...
13:06:29 <Heffalump> well, I'm bored of "Client Quit" :-)
14:15:31 <elmex> hm,wtf. is STUArray, and how to read a IOUArray and read some I32 or something like that from it?
14:15:54 <elmex> or for example hot to get a Char out an IOUArray?
14:18:37 <Heffalump> STUArray will be the equivalent of IOUArray for the ST monad
14:22:27 <elmex> will?
14:22:37 <elmex> oh,ok
14:25:25 <elmex> how are binary operations normally done? reading bytes from network, converting them to I32, I16, (maybe Double...etc.) and all those stuff?
14:27:03 <hdaume> elmex: readArray?
14:27:23 <elmex> hdaume: really?
14:27:48 <hdaume> yes
14:27:57 <elmex> REALLY???
14:29:56 <elmex> but i mean, converting
14:29:58 <elmex> not reading
14:30:15 <hdaume> be more specific :)
14:30:42 <elmex> having an word8 array, and reading some, for example, Double from that :)
14:30:47 <elmex> or I32
14:31:00 <hdaume> well you could read 4 or 8 word8s from it and pack them together in a double
14:31:05 <hdaume> it's like 5 lines of code or so
14:31:21 <elmex> how to pack them together?
14:31:34 <elmex> doesn't haskell know how to do that conversion?
14:32:02 <hdaume> something like  (w1 `shiftL` 24) .|. (w2 `shiftL` 16) .|. (w3 `shiftL` 8) .|. w4
14:32:06 <elmex> readArray :: (MArray a e m, Ix i) => a i e -> i -> m x
14:32:09 <elmex> ack
14:32:10 <elmex> ok
14:32:13 <elmex> i have to do it manually
14:32:52 <hdaume> no, haskell does not have 'cast'  :)
14:33:00 <elmex> hm,ok
14:33:04 <hdaume> though you could use unsafeCastIOUArray and then read from that :)
14:33:15 <elmex> uh, no
14:33:34 <hdaume> it's not really unsafe if you' know what you're doing :)
14:33:34 <elmex> but, what is readWord8Array for ?
14:33:42 <elmex> hehe
14:33:42 <hdaume> i don't know what that is
14:33:51 <elmex> ok, everything is fine. thanks ;)
14:34:30 <hdaume> (note that in my above code you have to have some conversion functions to get the word8s to integers, etc...)
14:34:47 <elmex> haskell isn't able to do magic without a magician
14:35:08 <elmex> and how to get word8's to integers?
14:35:14 <hdaume> fromIntegral works
14:35:21 <elmex> hm
14:36:09 <elmex> what is about unsigned int?
14:36:18 <hdaume> Word32
14:36:26 <hdaume> the Word types are unsigned
14:36:32 <hdaume> bbiab
14:36:35 <elmex> uh, right
14:36:36 <elmex> thanks
14:37:15 <elmex> how to make Word16 from 2 Word8s?
14:39:26 <hdaume> it's '(fromIntegral w1 `shiftL` 8) .|. fromIntegral w2'
14:39:37 <hdaume> (assuming that's the right order)
14:39:45 <elmex> (shiftL 8 255) .|. (255) :: Word16
14:39:52 <hdaume> that should work
14:40:09 <hdaume> no, it's 255 `shiftL` 8 which is shiftL 255 8
14:40:24 <elmex> uh
14:40:24 <elmex> lo
14:40:49 <elmex> perfekt
14:40:50 <elmex> thanks
14:40:54 <hdaume> cool :)
14:41:00 <elmex> (shiftL 255 8) .|. (255) :: Word16
14:41:06 * shapr boings quietly
14:41:09 <hdaume> Prelude Data.Bits> (255 `shiftL` 8) .|. 255 :: Word.Word16
14:41:09 <hdaume> 65535
14:41:33 <elmex> are Char's utf8 encoded? or what encoding is used?
14:41:56 <hdaume> that, i have no idea ;)
14:42:05 <elmex> hm
14:42:11 <elmex> ok
14:48:04 <dark> This channel is infested with Go players and Debian developers, right?  Does anyone want cgoban?
14:48:15 <elmex> cgoban?
14:48:16 <elmex> uh
14:48:22 <elmex> hehe
14:48:37 <elmex> kgs isn't a very good protocol ;)
14:49:08 <dark> cgoban is for IGS and NNGS.
14:49:14 <dark> You're thinking of cgoban2 :)
14:49:34 <elmex> oh, indeed
14:49:40 <elmex> cgoban1 really is cool
14:49:52 <elmex> cgoban2 ... uhm... well. some story of it's own
14:49:54 <dark> I get Go fever maybe two weeks per year.  It's just not enough motivation to maintain it properly :)
14:50:03 <elmex> indeed
14:50:22 <elmex> i were around 14-15 kyu... but then i got a girlfriend and school, and no time ;)
14:51:34 * Philippa has played mebbe 3 games. Housemates and a couple of afpers get me to play occasionally, but cba to play online generally
14:51:40 <dark> Hmm I also stuck at 15kyu :)  I doubt I'm still that strong, though.
14:51:54 <elmex> indeed
14:51:58 <dark> Philippa: With cgoban it's really easy!
14:52:00 <elmex> i guess, i'm around 20 or 23
14:52:09 <Philippa> dark: not the point :-)
14:52:33 <Philippa> I mean, I cba to play /anything/ online atm, I used to be a heavy UT player for example...
14:52:39 <dark> I like teaching it to new people.
14:52:48 <dark> They generally go on to become much better than I in a matter of months :-)
14:52:57 <Philippa> hmm... OK, I'm bored enough, let's see how long it takes me
14:52:59 <Philippa> URL?
14:53:39 <dark> Well it's more like... apt-get install cgoban
14:53:49 <dark> It has the server addresses built in.  I don't actually remember them :)
14:54:52 <dark> Actually you can play with telnet if you like, telnet igs.joyjoy.net 6969
14:54:58 <dark> That's how I got started :)
14:54:58 <Philippa> 'mnot running deviant atm, or anything *nix
14:55:13 <Philippa> is the raw protocol sufficiently readable?
14:55:32 <Heffalump> afp = the newsgroup?
14:55:44 <dark> Yeah, it's actually designed for telnet, the machine parsable protocol got bolted on later.
14:56:18 <Philippa> Heffalump: yep
14:56:27 <Heffalump> they're everywhere!
14:56:40 <Philippa> yep :-)
14:57:39 <Heffalump> and you're doing CS at Nottingham?
14:57:49 <Philippa> yeah, I am
14:57:57 * Heffalump thinks the world is too full of similar people :-)
14:58:34 <Heffalump> though I guess seeing someone doing CS at Nottingham on #haskell isn't all that surprising really
14:59:28 <Philippa> given that it's their functional language of choice, not really
14:59:43 <Philippa> arguably a little more given that #nott migrated when #brits got juped
15:00:01 <Heffalump> oh, true
15:00:24 <Heffalump> there is a #haskell on OFTC, but it tends to be a bit empty
15:00:55 <Philippa> so how many other cs.nott.ac.uk types are there here?
15:01:12 <Philippa> I recognise opet from #nott, though I've rarely seen 'em speak...
15:01:17 <Heffalump> hmm. Can't actually remember seeing any here. It's more that I know quite a few (mostly ex-)
15:01:45 <Heffalump> ah, ok
15:04:07 <Philippa> AFAIK I'm presently the only afper actually studying at Nottingham right now, FCVO studying
15:04:11 <Philippa> (I took the year out)
15:04:39 <Heffalump> I know one who I think might be planning on going there.
15:04:47 <Heffalump> (James Green)
15:05:12 <Philippa> yeah, he was talking about that on lspace IRC earlier
15:07:01 <Heffalump> did you say you're doing a project on compilation? who's your supervisor?
15:09:58 <Philippa> gmh
15:10:09 <Philippa> uh, Graham Hutton, even
15:10:27 <Heffalump> cool
15:12:08 <Philippa> if I get as far as doing anything researchish in my project, compilation won't be the point of it, it'll just be necessary for checking stuff works
15:12:37 <Heffalump> what's the idea then? I know he's got a PhD student working on stuff with exceptions
15:13:31 * Heffalump gets told you also know Jon Masters. The world really is too small.
15:13:47 <Philippa> It's hard not to know jcm
15:13:51 <Heffalump> that's true
15:13:58 <Philippa> the fact he was my housemate didn't help either :-)
15:14:13 <Heffalump> did you know him before he became your housemate? :-)
15:15:27 <Philippa> yeah, I was aware what a nutter he is beforehand
15:16:06 <Heffalump> I get the impression he's better now than he used to be (I first met him through OxLUG about 4 years ago and he was fairly insufferable)
15:16:28 <Philippa> yeah. He's improved a lot in the time I've known him, for that matter
15:16:46 <Heffalump> I also don't hear as much from him, which helps :-)
15:16:56 <Philippa> dunno if he's any less infamous though. I went to an afpmeet in london and met a non-afper in the pub who'd worked with him FFS
15:17:11 <Heffalump> please tell me the non-afper wasn't Dan Kolb.
15:17:12 <Philippa> (it didn't help that there was also a LUG meet in the same pub ;-)
15:18:05 <Philippa> didn't catch his name
15:18:22 <Philippa> it'd been a few years back he'd worked with Jon, anyway
15:20:15 <Heffalump> 2nd bloke from the left at the back in http://urchin.earth.li/photopub/display?photo=/users/ganesh/banana/2313&shrink=1
15:23:41 <Philippa> shit, that could well've been
15:23:56 <Philippa> (don't remember the face too well, didn't talk to him for long, but it looks familiar)
15:24:00 <Heffalump> he worked with JCM at Causeway Technologies in High Wycombe a few years ago.
16:16:06 <shapr> neat: http://www.eff.org/IP/P2P/riaasubpoenas/
16:19:20 * shapr bounces cheerfully
16:22:28 <hdaume> anyone have a short decimal -> hex converter?
16:22:57 <hdaume> actually, isn't there a show that takes base?
16:23:08 <shapr> yup
16:23:15 <shapr> showHex in NumExts
16:23:31 <hdaume> thanks
16:23:33 <shapr> showBin showOct are also there I think
16:26:45 <Heffalump> argh, dark knows how to quit
16:35:19 <hdaume> Heffalump: are you now schizophrenic?
16:35:33 <Heffalump> I'm trying to learn how to quit.
16:36:31 <shae> neat, ERC does it
16:37:28 <Heffalump> how do I work that?
16:38:04 <shae> http://erc.sf.net/
16:38:08 <shae> it's an elisp irc client
16:38:15 <Heffalump> I just apt-got it, I just want basic operation instructions
16:38:30 <shae> oh, restart emacs, M-x erc-select
16:38:40 <Heffalump> will it work in xemacs?
16:38:47 <shae> it should
16:38:49 <shae> that's what I use
16:39:40 <shapr> mmmm, xemacs
16:39:51 <shapr> hi seth_
16:42:45 <opet> Philippa: hi :)
16:44:12 <Philippa> evenin'
16:44:19 <shapr> hi Philippa 
16:44:27 <shapr> hello opet 
16:44:34 <opet> sorry.. was out earlier. I missed the cs.nott discussion
16:44:36 <opet> hey shapr 
16:44:48 <Philippa> hey, it happens
16:45:48 <Heffalump> I think it was more of a "small world" discussion :-)
16:46:04 <opet> :)
16:46:36 <opet> I almost did postgrad stuff at cs.nott, but decided not to in the end
16:46:56 <phubuh> interesting how i just managed to screw up my productivity by finding a font that's totally awesome, but doesn't work in emacs, since it doesn't have a gtk2 text widget :~(
16:46:59 <Philippa> any particular reason?
16:47:17 * Philippa is considering it atm if her dissertation goes well
16:47:27 <opet> another three years is a long time :/
16:47:38 <opet> my really enjoyed my dissertation
16:47:45 <Philippa> there is that, yeah
16:48:41 <shapr> phubuh: I'm using TTF fonts in xemacs
16:48:50 <shapr> there's xemacs-gnome
16:49:36 <phubuh> ooh!
16:50:31 <phubuh> i wonder if it'd look good without the xft antialiasing, though.  god, i can't stand having everything look absolutely *amazing*, except for the tool i use the most :(
16:51:23 <shapr> emacs looks pretty amazing at 132x60 in console
16:51:28 <shapr> I rather like it that way.
16:51:51 <hdaume> shapr: is there a webpage for that?
16:52:04 <shapr> for what?
16:52:09 <hdaume> xemacs-gnome
16:52:15 <shapr> it's a debian package
16:52:18 <hdaume> ah
16:52:25 * hdaume grumbles at the debian people
16:52:38 <Heffalump> what've they done?
16:52:52 * hdaume isn't sure
16:53:23 <shapr> I can make some screenshots if you want
16:53:47 <hdaume> that would be cool :)
16:54:57 <Heffalump> get a copy of VMWare and install Debian :-)
16:55:31 <hdaume> haha...no, i just got a new computer at home and so i need to decide what to put on it...i used to have redhat...
16:55:47 <phubuh> debian! debian! *chants*
16:55:55 <hdaume> :)
16:56:51 <opet> freebsd! :)
16:56:51 <shapr> debian is a bit harder to install, but you can upgrade through major versions with little trouble
16:58:33 <shapr> ok, I'll restart with gnome instead of ion... ion sucks for screenshots
16:58:39 <hdaume> :)
16:58:47 * Heffalump finally gets to the bottom of the quit messages problem
16:58:52 <shapr> yay Heffalump!
16:58:54 * shapr cheers
16:58:57 <phubuh> ion is really, really cool
16:59:01 <Heffalump> so I can stop boring you all by going on about it now :-)
16:59:09 <shapr> phubuh: it is wonderful, but it doesn't look pretty
17:05:15 <hdaume> ion looks awesome
17:10:38 * shapr entertains himself with silly fonts
17:13:28 <phubuh> http://www.phubuh.org/gnome3.png see that vim? i loathe using it, but that's how i wish my emacs could look :-(
17:15:13 <reffie> phuck emacs
17:15:31 <shapr> phubuh: do you have a pic of your emacs?
17:16:47 <reffie> emacs is butt ungly.
17:16:49 <reffie> ugly.
17:17:09 <shapr> looks pretty to me
17:17:19 <shapr> phubuh: do you use color-theme ?
17:17:19 <Riastradh> Looks prettier than vi to me.
17:17:32 <shapr> I'm fond of sandalwood, a misty-day derivative
17:17:35 <phubuh> yep, i do
17:18:15 <phubuh> Riastradh: i think so too, with the exception of the fonts: vim from cvs has a gtk2 text widget which has awesome anti-aliasing and all that
17:20:40 <shapr> phubuh: (set-face-font 'default "-*-lucidatypewriter-medium-r-normal-*-*-140-75-75-m-*-iso8859-1")
17:21:46 <phubuh> yuck :-P
17:22:42 <shapr> well, I like it :-)
17:22:51 <shapr> but I have strange taste in fonts and colors
17:23:03 <Strike> and editors
17:23:05 * Strike ducks
17:23:13 <phubuh> infidel!
17:23:33 <shapr> http://kungens.kemi.fi/~shae/xemacs-gnome.png
17:24:08 <shapr> my standard xemacs settings remove scrollbar, toolbar, tabs, and menubar; so there wasn't much to see
17:25:56 <hdaume> yuk
17:26:15 <hdaume> that needs to be antialiased :)
17:26:35 <hdaume> i like that system monitor stuff though :)
17:26:41 <shapr> this is what my screen usually looks like: http://kungens.kemi.fi/~shae/erc.png
17:27:02 <Strike> eek, nasty
17:27:28 <phubuh> what the hell, you should see a psychiatrist or something
17:27:30 <phubuh> :-P
17:27:30 <Strike> man your home dir is cluttered
17:27:50 <shapr> phubuh: already have ;-)
17:27:57 <phubuh> Strike: you should see mine
17:28:19 <Strike> bin   dcc  docs       misc  ogg     src          themes  wav
17:28:19 <Strike> code  deb  evolution  mp3   school  stuff-to-do  tmp
17:28:21 <Strike> that's mine
17:28:30 <Strike> the only non-directory file is "stuff-to-do"
17:28:45 <phubuh> mine is 24x4
17:28:52 <shapr> I have a 60gb drive, why should I worry?
17:29:02 <Strike> shapr: I wasn't saying it was too full
17:29:04 <Strike> I was saying it was cluttered
17:29:19 <Strike> I have 120GB just for /home
17:29:24 <Strike> but it's still organized :)
17:29:26 <phubuh> http://www.phubuh.org/ugh.png
17:29:32 <shapr> I have locate
17:29:58 <shapr> your terminal colors would make me crazy
17:30:09 <Strike> I think you're already there
17:30:11 <Strike> :)
17:30:11 <shapr> hdaume: the system monitor is called gkrellm
17:30:36 <shapr> notice mine has two CPUs in the screenshot :-)
17:30:52 <hdaume> shapr: do you really, or is that hyperthreading?
17:31:08 <shapr> I really have two
17:31:14 <shapr> dual Athlon MP 1800+
17:31:37 <Strike> no wonder you can use emacs
17:31:39 * Strike ducks again
17:31:47 * shapr grins
17:32:09 <phubuh> haha
17:32:25 <hdaume> http://www.isi.edu/~hdaume/hal.PNG  :)
17:32:29 <hdaume> four processors baby!
17:32:51 <shapr> wow spiffy!
17:33:02 <phubuh> :O
17:33:08 <Strike> man, Windows' single desktop drives me nuts...
17:33:13 <hdaume> of course, the fact that it's *windows*....
17:33:39 <shapr> yah, win32 is a downside
17:34:17 <phubuh> six cygwins and two emacsen slightly makes up for it :-)
17:34:39 <hdaume> yes, but only having "cygwin" as the window title makes things a pain
17:35:09 <shapr> can't you fix that with xterm title thingies?
17:35:16 <hdaume> i don't think so
17:35:18 <hdaume> i tried for a while
17:35:22 <shapr> oh
17:35:37 <shapr> yah, that does suck
17:36:01 <hdaume> massively :)
17:36:29 <shapr> I have multiple gnome-terminal tabs open often, my xterm title is set to the name of the command if it's running, or the name of the command surrounded by parens if it's finished
17:36:45 <shapr> I think I'll add exit status
17:37:06 <hdaume> shapr: that's more or less how my system at uni is set up
17:37:13 <shapr> so, when do we get a Haskell window manager?
17:37:14 <hdaume> ...of course there i don't have to use this shitty os
17:37:29 <shapr> hdaume: shhh, you're working for MICROSOFT
17:38:07 <shapr> watch out, Bill will get you
17:38:56 <hdaume> :)
17:41:22 <shapr> oy
17:41:27 <shapr> there it goes again
17:45:20 <shapr> hi juhp 
17:45:30 <juhp> hi shapr
17:45:34 <shapr> what's up?
17:46:12 <juhp> not much, tired and bad stomach :-\
17:46:17 <juhp> how's it going?
17:46:25 <shapr> it's friday, yay
17:46:33 <shapr> I'm getting better at unicycling, yay
17:46:50 <juhp> yeah, saturday morning here :)
17:47:02 <shapr> now you have time for fun code?
17:47:27 <juhp> cool
17:49:48 <juhp> yea, and maybe some work too ;)
18:19:06 <phubuh> SyntaxPolice's apt repository appears to be down
19:24:25 <juhp> with identd now
19:24:30 <juhp> that's better :)
20:01:07 <Leimy> hello?
20:01:08 <Leimy> :)
20:02:23 <Riastradh> Hi.
20:02:29 <Leimy> question...
20:02:33 <Leimy> I have a function... "factorial"
20:02:36 <Riastradh> Ask away!
20:02:42 <Leimy> and I want to do 
20:02:45 <Leimy> main = factorial 6
20:02:48 <Leimy> what's wrong with that?
20:03:01 <Leimy> the error messages are still too cryptic for me :)
20:03:10 <Riastradh> How long are the errors?
20:03:22 <Leimy> test.hs:12:
20:03:22 <Leimy>     No instance for (Num (IO a))
20:03:22 <Leimy>     arising from the literal `6' at test.hs:12
20:03:22 <Leimy>     In the first argument of `factorial', namely `6'
20:03:22 <Leimy>     In the definition of `main': factorial 6
20:03:46 <Leimy> No instance for (Num (IO a)) ???
20:03:47 <Leimy> what's that mean
20:03:58 <Riastradh> main has type IO a.  factorial has type forall a. Num a => a -> a, I think.
20:04:22 <Leimy> so I have to do output as the final piece of that function?
20:04:25 <Riastradh> What you need to do is:  main = putStrLn (show (factorial 6))
20:04:27 <Leimy> or main is illegal?
20:04:30 <Leimy> ugh
20:04:32 <Leimy> ok :)
20:04:43 <Riastradh> You'll understand this when you understand monads
20:05:21 <Leimy> is main a monad?
20:06:02 <Riastradh> Don't worry about that until you understand monads.
20:06:07 <Leimy> ok
20:06:48 <Leimy> I like that Haskell lets me define the function many times for different input variables
20:06:53 <Leimy> C++ templates let you do that too
20:07:03 <Leimy> but its not "input" per se
20:07:25 <Riastradh> Are you referring to pattern matching?
20:07:34 <Leimy> you could call it that  sure.
20:07:49 <Riastradh> i.e. doing:  f (X y) = z; f (A b) = c; f (P q) = r
20:08:00 <Leimy> factorial 1 = 1
20:08:08 <Leimy> factorial n = n * factorial (n - 1)
20:08:11 <Leimy> that :)
20:08:17 <Leimy> its "overloaded for 1"
20:08:19 <Leimy> sorta :)
20:08:22 <Riastradh> Not really.
20:08:26 <Riastradh> That's just syntactic sugar for:
20:08:27 <Riastradh> factorial n =
20:08:29 <Riastradh>     case n of
20:08:33 <Riastradh>         1 -> 1
20:08:39 <Riastradh>         n -> n * factorial (n - 1)
20:08:51 <Leimy> sure
20:08:56 <Leimy> just like
20:09:05 <Darius> print is probably more convenient than putStrLn (show ...).  (Actually I think it's more like, putStr . show, but close enough).
20:09:57 <Darius> Are you using GHC, Hugs, NHC, or Helium?
20:10:11 <Darius> Well, not Helium obviously.
20:10:19 <Leimy> ghc
20:10:23 <Darius> Probably GHC from the error message.
20:11:33 <Darius> With GHC, you can use GHCi and you can use the system interactively.  Unfortunately, data types and classes/instances still need to be put in a file.
20:11:59 <Leimy> if I do 
20:12:04 <Leimy> my_length [] = 0
20:12:16 <Leimy> my_length (x:xs) = 1 + my_length xs
20:12:22 <Leimy> does x become the head
20:12:29 <phubuh> yup
20:12:30 <Leimy> and xs become the tail?
20:12:35 <phubuh> yup again.
20:12:45 <Leimy> is there a name for that type of list decomposition?
20:12:58 <Leimy> or is that just more sugar :)
20:13:01 <Darius> Pattern matching and it's not limited to lists.
20:13:17 <Leimy> I would have naively written something like 
20:13:27 <Leimy> if null /= x
20:13:32 <Darius> It is syntactic sugar for cases, but that just moves where the patterns are.
20:13:40 <Leimy>     1 + my_length (tail x)
20:15:54 <Leimy> well.. with the correct syntx
20:17:09 <Darius> I'm not sure which you were going for, but to test for an empty list you should use null (or pattern matching) rather than == or /=.
20:17:25 <Leimy> oh 
20:17:31 <Leimy> null x /= False
20:17:34 <Leimy> or True
20:17:36 <Leimy> or something :)
20:17:47 <Leimy> "don't drink beer then haskell"
20:18:35 <Leimy> my_length x =
20:18:35 <Leimy>         if null x == False
20:18:35 <Leimy>           then
20:18:35 <Leimy>                 1 + (my_length (tail x))
20:18:35 <Leimy>           else
20:18:36 <Leimy>                 0
20:18:42 <Leimy> that's the implementation that comes to mind
20:18:47 <Leimy> since I don't know pattern matching :)
20:18:58 <Darius> As in 'if null l then 0 else 1 + length (tail l)' as opposed to 'if l == [] then 0 else 1 + length (tail l)'.  Of course, most of the time you should try to use pattern matching and/or guards rather than if/case.
20:19:16 <Leimy> yeah... that's better :)
20:20:35 <Darius> It usually doesn't make much sense to compare Booleans.  It would probably be clearer to write 'not (null x)' or use the other order.
20:20:47 <Leimy> k
20:24:00 <Darius> By the way, if is also syntactic sugar for a case statement.
20:24:11 <Leimy> of course
20:24:25 <Leimy> everything can be seen that way... :P
20:24:34 <Leimy> I am just learning the friggin lang
20:24:43 <Smerdyakov> And a case statement is syntactic sugar for an application, if you encode things correctly. :D
20:24:45 <Leimy> its all syntactic sugar for assembly and bits
20:25:01 <Leimy> and electrons
20:25:05 <Leimy> and chemical reactions
20:25:19 <Leimy> I would prefer to think in a higher level right now :)
20:25:26 <Leimy> I will catch up with you guys in a year or so
20:25:55 <Smerdyakov> Rewriting 'if' with 'case' doesn't really take you to "a lower level."
20:26:19 <Leimy> no but its a level of understanding Haskell I don't care to think about when I am just scratching the surface
20:26:22 <Smerdyakov> It's just "if e then e1 else 2" ---> "case e of true => e1 | false => e2"
20:26:31 * Leimy goes back to the tutorial
20:26:50 <Smerdyakov> This is so trivial that you'd better not have problems understanding it. :P
20:27:00 <Leimy> wonderful
20:27:06 <Darius> or using Haskell syntax case e of True -> e1 | False -> e2.
20:29:37 <Smerdyakov> Pointless differences in syntax among languages with Hindley-Milner based type systems are annoying.
20:30:24 <Darius> Yeah, what's wrong with the MLs they should all use Haskell syntax ;)
20:33:27 * Leimy is just trying to enjoy the language at a really really high-level/beginner stage.
20:40:38 <Leimy> is Expected type: a -> a1 meaning a list?
20:40:47 <Leimy> or is that [a]
20:41:40 <Darius> a -> b is a function type, [a] is a list type.
20:42:19 <Leimy> heh
20:42:20 <Leimy> cool
20:42:27 * Leimy just wrote his own "map" function
20:43:25 <Leimy> my_map op [ ] = [ ]
20:43:25 <Leimy> my_map op (x:xs) =
20:43:25 <Leimy>         op x : my_map op xs
20:49:03 <Smerdyakov> It's a work of art and crafstmanship!
20:49:37 <Leimy> uhm...no :)
20:49:42 <Leimy> its a beginner struggling :)
20:50:14 <Leimy> though correct functions in Haskell seem to be easier to write... and more gratifying
20:50:19 <Leimy> than say... C :)
20:50:39 <Leimy> reminds me of the same satisfaction I used to get from LISP
20:50:50 <Leimy> yet more expressive dare I say?
20:51:00 <Smerdyakov> In what sense?
20:51:14 <Leimy> well... the act of being able to write out a function
20:51:29 <Smerdyakov> That doesn't answer my question.
20:51:32 <Leimy> like defining a function like multiplication in terms of addition
20:51:46 <Leimy> my_mult x 0 = 0
20:51:46 <Leimy> my_mult 0 y = 0
20:51:46 <Leimy> my_mult x 1 = x
20:51:46 <Leimy> my_mult x y = x + (my_mult x (y-1))
20:52:08 <Leimy> That is more or less how I might write it out on paper in f(x,y) = { terms
20:52:14 <Leimy> mathematicaly
20:52:23 <Leimy> seems to translate well
20:52:53 <Leimy> You can't really get away with that syntax in C
20:52:54 <Leimy> :)
21:29:34 <Leimy> template <int x, int y>
21:29:35 <Leimy> struct Multiply
21:29:35 <Leimy> {
21:29:35 <Leimy>         enum {result = (x +  Multiply<x, y-1>::result)};
21:29:35 <Leimy> };
21:29:37 <Leimy> template <int x>
21:29:39 <Leimy> struct Multiply <x, 1>
21:29:41 <Leimy> {
21:29:43 <Leimy>         enum {result = x};
21:29:47 <Leimy> };
21:29:49 <Leimy> heh :
21:29:51 <Leimy> oops :)
21:29:53 <Leimy> wrong channel
21:29:55 <Leimy> but somewhat relevant :)
21:30:09 * Leimy just wrote "Multiply" in compile time C++ templates
22:12:15 <Leimy> thanks for the help again guys
22:12:30 <Leimy> I am going to bed... more tomorrow... Haskell is really cool so far! :)
22:17:07 <phubuh> i don't suppose any of you are familiar with o'caml? #ocaml is astoundingly dead :-(
22:17:29 <phubuh> the type system is giving me trouble with http://www.phubuh.org/vector.ml
22:22:34 <phubuh> never mind, i think i got it :-)
