01:09:44 * clausen wonders how to prove (-r).(-s) = r.s for fields
03:58:24 <shapr> good morning
03:58:36 <shapr> hey o3, what's up?
03:59:35 <liiwi> gooooooooooooooooood morning
03:59:43 <Janni> hello
04:01:28 <shapr> hiya Janni 
04:01:32 <shapr> goooood moorning liiwi 
04:02:44 <shapr> what's up guys?
04:03:22 <Janni> sleep -> food -> IRC
04:03:52 <shapr> heheh
04:03:58 <shapr> cute
04:04:13 <shapr> sleep -> coffee -> code
04:05:10 <buggs> hoi shapr
04:05:32 --- topic: set to '["mo' nads than you", "We put the Funk in Funktion","See logs @ http://tunes.org/~nef/logs/haskell/", "New nhc98-1.16 - http://www.haskell.org/nhc98", "New Learning Haskell page - http://www.haskell/learning.html", "GUI Demos - http://repetae.net/john/computer/haskell/gui/", "Order Haskell 98 Report in Hardcopy - http://titles.cambridge.org/catalogue.asp?isbn=0521826144", "Gtk+HS 0.15.2 released"]' by shapr
04:06:00 <shapr> New release of NHC, version 1.16 new  @ http://www.haskell.org/nhc98
04:09:00 <shapr> neat stuff with NHC
04:09:37 <shapr> I haven't tried the interactive NHC setup
04:11:25 <shapr> hi buggs, what's up?
04:13:09 <buggs> have you gotten the swedish morphological programm to work ?
04:23:03 <shapr> no, I haven't
04:23:37 <shapr> mostly because I got distracted into coding
04:32:39 <shapr> buggs: have you tried the morph stuff?
04:33:12 <buggs> i didn't get how to call it
05:40:18 <andersca> hey shapr-san
08:59:11 <Janni> back again...
09:14:59 <Janni> i'm doing a hGetLine on a telnet server and what I get is a single '.' in a line. but
09:15:26 <Janni> line /= ".", so I tried following (sorry, I pushed Return)
09:16:04 <Janni> "xxx" ++ hGetLine server ++ "xxx" gives me "xxx.", so what could follow after the '.'?
09:18:30 <dennisb> Janni: how can that even be type correct? hGetLine server should be a IO String and not a String
09:18:58 <Janni> eerr, yeah, my mistake. in my code it's correct like this:
09:19:07 <Janni> line <- hGetLine server
09:19:24 <Janni> return $ "xxx" ++ line ++ "xxx"
09:19:46 <dennisb> Ok. I don't know why it's not working though
09:20:16 <Janni> I thought of an EOF (end of file) character or s.th. like this after the '.'
09:21:05 <Marvin--> Are Haskell strings 0-terminated?
09:21:22 <dennisb> Marvin--: why should they?
09:21:29 <dennisb> they are linked lists
09:22:08 <Janni> Marvin--: type String = [Char]
09:22:28 <Marvin--> well, yes
09:24:00 <dennisb> do a telnet server send more then a . ? I guess so, but I don't know what they do
09:27:27 <Marvin--> They usually send a 'login: ' string, but without line terminator, so I'm guessing that would be a problem
09:27:39 <Marvin--> there's not really any reason for it to skip the second "xxx" in the append though
09:29:24 <dennisb> Marvin--: there is no hidden communication going on before the login: that is not viewed. I seem to rememeber that there is some negotiation first about the protocol to be used
09:29:50 <Janni> It doesn't matter anyway, because the specification says, that a line _starting_ with a '.' terminates the output. I was just wondering
09:31:11 <dennisb> so there is nothing more sent after the '.', so readLine still waits for a \n or something
09:32:13 <Janni> no, that's not the case, because hGetLine terminates and does not wait for a few seconds for the \n
09:32:27 <Janni> so, there is an \n
09:33:11 <dennisb> There is no strange laziness going on with hReadLine?
09:34:31 <Marvin--> yes, there's some negotiation, but they should all start with IAC (0x255 iirc)
09:34:36 <dennisb> not readLine, getLine of course
09:35:19 <dennisb> what's wrong with google, when I search I just get Server error..
09:35:52 <whee> google's db is down
09:38:18 <opet> lol
09:41:41 <dennisb> Janni: you can always try to turn of buffering and use hGetChar and see what happens
09:42:31 <dennisb> hSetBuffering handle NoBuffering
09:44:03 <Janni> OK, but I'm just going to eat. *yum* (away, now)
09:54:48 * shapr boings
09:59:27 <Marvin--> dark is very silly
10:00:00 <Janni> have eaten now, but I decided to make some music. (really away, now)
10:00:09 <shapr> Marvin--: what did dark do?
10:00:39 <Marvin--> http://lists.debian.org/debian-vote/2003/debian-vote-200303/msg00047.html
10:04:55 * shapr laughs
10:05:09 <buggs> lol
10:06:02 <buggs> a friend of mine who uses slackware calls debian "The Bueraucrats Linux" 
10:10:13 <Marvin--> it is beuraucratic, but it's also democratic, and it's a big organization, so... *shrug*
10:11:31 <buggs> well once linux was seen as chaotic, that is why i konda found his comment funny
10:30:38 <shapr> yow
10:30:44 <shapr> , yow
10:30:44 <shapr> hmm
10:44:52 <jlouis> hrmf, I dont get derived induction variables according to Appel
10:55:02 <Janni> and back once more...
11:10:08 <shapr> jlouis: where is one?
12:00:37 <jlouis> shapr: huh?
12:01:18 <jlouis> He has some special cases he uses to make it a conservative approximation. Yet I cannot see the problem which nags me
12:16:04 <kawfee> hello
12:19:18 <jlouis> hi kawfee 
12:52:01 <Marvin--> Ozzy is so cool that he has to wear shades on his "second wedding"
12:53:23 <flippo> or his eyes frighten people
13:00:19 <dennisb> He didn't want to show that he was crying
13:04:52 <jlouis> heh, I got through the Appel thing
13:05:04 <jlouis> he does not show counter-examples, which is very confusing
13:05:10 <jlouis> you have to cook them up yourself
13:09:52 <andersca> what's the syntax for having more than one class constraint in a function declaration?
13:11:01 <Marvin--> enclose the constraints in parentheses?
13:11:11 <Marvin--> comma-separated
13:11:26 <andersca> ah, thanks
14:30:20 <shapr> w00
14:40:30 <shapr> flippo: hey, have you started on Hudak?
14:40:48 <flippo> shapr: not yet, I got two books at once, and the other got my attention first
14:41:06 <flippo> shapr: I'm still annoyed about the graphics emphasis
14:41:06 <shapr> cool, what's the other book?
14:41:28 <flippo> shapr: "Linux Server Hacks" lightweight stuff.  (Hacks in a positive sense.)
14:41:38 <shapr> sounds interesting
14:41:54 <flippo> shapr: little timesaving admin tricks
14:42:10 <flippo> shapr: I'm not an admin, but it looked useful
14:42:33 <flippo> and I may finish rereading the Algorithms book again first
14:42:48 <flippo> Hudak was not what I was hoping for
14:43:05 <flippo> My order for Thompson should be in by the end of the month
14:43:45 <shapr> is the LSH book worthwhile? nifty tricks?
14:44:26 <flippo> shapr: nothing big.  Just lots of little tricks
14:44:49 <flippo> Gives me a sense of how a guru admin might work
14:45:32 <flippo> http://www.oreilly.com/catalog/linuxsvrhack/?CMP=IL7015
14:54:54 <shapr> nice cover pic
14:57:15 <shapr> this does look very nifty
14:58:45 <shapr> I'd say I already know between one-third to one-half of this stuff
15:02:31 * shapr adds that book to his wishlist
15:02:37 <shapr> I want to know the rest :-)
15:17:46 * shapr bounces happily
15:52:24 <shapr> hi Chilli 
15:54:26 <Chilli> Hi shapr
15:54:42 <shapr> what's up?
15:55:42 <Chilli> Preparing a lecture for tonight
15:56:08 <shapr> class lecture?
15:57:23 <Chilli> yeah
15:59:10 <Chilli> teaching Distributed Systems this session
16:12:26 <shapr> cooool
16:12:31 <shapr> sounds like a fun class
16:13:05 <Chilli> yep, is interesting, but also a lot of work
16:14:32 <Chilli> So far, it has always been taught in C.  In addition, I am going to use Erlang this session
16:15:31 <shapr> nifty
16:15:51 <shapr> I've been considering switching my efforts to erlang, but I really want to be fluent in arrows first...
16:16:06 * whee hugs erlang
16:18:20 <Chilli> Well, I won't switch from Haskell to Erlang anytime soon, but for distributed systems Erlang just has the much better infrastructure
16:18:46 <Chilli> so, it is going to be much more convincing for use in this lecture
16:18:52 <shapr> I like the purity of Haskell
16:18:56 <shapr> it's beautiful
16:19:27 <flippo> shapr: it is.  All the control statements are defined in one or two lines
16:20:05 <Chilli> one intersting thing is that there is a intermeditae language called Core Erlang now
16:20:11 <shapr> hm
16:20:26 <Chilli> I wish Erlang's surface syntax would have been more oriented in that direction
16:20:31 <shapr> so, we write a Haskell to ECore compiler? :-)
16:20:52 <Chilli> Core Erlang is more like your normal functional language
16:21:13 <Chilli> and apparently the Erlang compiler translates a Erlang program first into that core language before it does anything else
16:21:57 <buggs> it got a VM
16:22:35 <bubba1034> Anyone using the CGI stuff?
16:23:07 <shapr> which CGI stuff?
16:23:29 <Chilli> buggs: Core Erlang is before the VM (it's still block structureed etc)
16:24:07 <bubba1034> The stuff that comes with ghc ( latest version ).
16:25:18 <bubba1034> The documentation has me all confused.
16:25:21 <buggs> Chilli, i c, did you find out how they do the threading (select ?) ?
16:26:48 <Chilli> buggs: do you mean how the Erlang receive statement is implemented?
16:26:52 <shapr> bubba1034: do you understand IO monads?
16:27:06 <bubba1034> More or less.
16:27:40 <bubba1034> The real question I have is what the signature of the function I have to write?
16:28:17 <bubba1034> mycgi = (what function I thnk wrapper ) main_fun
16:28:28 <bubba1034> main_fun:: ??? -> ???
16:28:34 <buggs> Chilli, more like how the VM schedules the threads (and guarantees response times)
16:29:15 <Chilli> buggs: no, I haven't looked into that; but it is an interesting question
16:30:03 <bubba1034> In a paper it's described as Request-> IO Response and is called wrapper.
16:33:23 <shapr> bubba1034: have you read the sources to Meijer/Panne/Gill's CGI library?
16:34:27 <bubba1034> shapr: The principle thing I've read is "Server Side Web Scripting in Haskell" by Meijer
16:34:59 <bubba1034> I've also read some of the ghc lib docs ( not much there ). Not sure which library to read.
16:35:30 <bubba1034> I'm not even sure whether the library is now a part of the ghc distro. ( Something is there. )
16:36:39 <shapr> the docs for that library imply that it started as Meijer's lib
16:38:11 <shapr> you could also try WASH-CGI - http://www.informatik.uni-freiburg.de/~thiemann/haskell/WASH/
16:38:40 <shapr> WASH-CGI includes examples
16:38:43 <shapr> http://www.informatik.uni-freiburg.de/~thiemann/haskell/WASH/WASH-CGI-gallery.html
16:41:43 <bubba1034> shapr: Why isn't this site reffered to on haskell.org?
16:43:34 <shapr> I'm not the maintainer of haskell.org I can't answert that question.
16:43:50 <shapr> using google to search for haskell and cgi should also find that
16:57:51 <shapr> bubba1034: there are some examples for Panne's version of the CGI library here:
16:57:53 <shapr> http://www.janweb.net/laitenbe/haskell/CGI/
17:30:26 <shapr> Here at Macquarie University we have done some work on this.  Matthew
17:30:27 <shapr> Tarnawsky  ported the nhc98 runtime to the Palm as part of his 2002
17:30:27 <shapr> honours project working with myself and Dom Verity.  With this port
17:30:28 <shapr> w00
17:31:22 <shapr> We hope to have something for others to play with in a few months.
17:31:22 <shapr> Stay tuned to this list for an announcement.
17:31:28 <shapr> extreme spiffiness
17:33:25 * shapr goes to sleep
