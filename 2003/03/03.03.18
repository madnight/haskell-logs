00:43:27 <inkedmn> is it not possible to cons 2 items to a list at once?
00:43:56 <inkedmn> like:
00:44:06 <inkedmn> 1 2 : [3,4]
00:44:16 <inkedmn> and getting [1,2,3,4]
00:44:16 <inkedmn> ?
00:44:20 <andersca> 1:2:[3,4] should work
00:44:26 <andersca> : is right associative
00:44:36 <inkedmn> ah
00:44:37 * inkedmn tries
00:45:02 <inkedmn> nice, worked :)
00:52:59 <inkedmn> man, who would've thought that something as simple as sorting a list could be so damn complicated...
04:35:28 * shapr boings
04:41:04 <Igloo> Hi shapr!
05:10:08 <buggs> hoi
06:45:20 <andersca> buggsv6
07:00:28 <buggs> ya we will give the students a full /64 for home usage :)
07:09:21 <shapr> y0 y0
07:09:28 <shapr> hi Igloo 
07:13:17 <SyntaxPolice> good morning all.
07:14:02 <shapr> hiya SyntaxPolice 
07:14:04 <shapr> wassup?
07:14:19 <shapr> SyntaxPolice: btw, in case I forgot to tell you, I think those examples are great
07:14:23 <SyntaxPolice> shapr: not much.  been debugging, documenting, etc.
07:14:29 <SyntaxPolice> shapr: the monad stuff? Cool :)
07:14:30 <shapr> I wish more of the standard libs had that sort of examples
07:14:33 <shapr> in fact
07:14:40 <shapr> I don't really understand scanl
07:16:11 <SyntaxPolice> shapr: scanl is not one I've looked at.  I figured that whenever I have trouble understanding a library I'll try to write some haddock for it :)
07:16:27 <SyntaxPolice> especially since State has been very useful for me.
07:17:17 <shapr> good idea
07:17:37 <shapr> scanl/scanr  is some sort of foldl/foldr derivative.. I think
07:19:32 <SyntaxPolice> does it output the list of intermediate values also?
07:19:43 <SyntaxPolice> there's something in the craft of functional programming about scanl1
07:20:26 <opet> it returns the list of intermediate and final results
07:20:45 <opet> iirc
07:23:15 <shapr> oh I see!
07:23:17 <shapr> nifty
07:39:29 <shapr> yow
07:40:49 <inkedmn> good day amigo 
07:44:31 <shapr> hola, como est as?
07:44:41 <shapr> hej, hur är det med dig?
07:44:47 <shapr> hoi, hoe gaat het met je?
07:45:02 <shapr> hei, mittä kuuluu?
07:45:22 <inkedmn> well, you're asking me a bunch of questions, i know that much...
07:45:23 <inkedmn> :)
07:45:26 * shapr grins
07:45:31 <shapr> they all say the same thing.
07:45:41 <inkedmn> sweet!
07:45:41 <shapr> y0, w4ssup?
07:45:46 <inkedmn> heh, not much
07:46:01 <shapr> just in spanish, swedish, dutch, and finnish
07:46:10 <inkedmn> my wife just went to jury duty, so i'm going to try writing the solitaire encryption algorithm
07:46:19 <shapr> neat!
07:47:54 <inkedmn> yeah, should be fun
07:59:57 <shapr> wh?
08:00:17 <dbg_wh> went home
08:09:08 <shapr> oh
08:12:30 <Arnia> Oh?
08:21:15 <shapr> oh!
08:21:33 <opet> ah
08:21:48 <shapr> hm
08:24:16 <SyntaxPolice> hey shapr: you've used the wiki a lot, right?  I have avoided it because of comments on the mailing lists.  Are there problems with our wiki? Is it useful?
08:37:25 <shapr> SyntaxPolice: it is useful
08:37:39 <shapr> SyntaxPolice: it used to be unstable
08:37:48 <shapr> it's been fine lately
08:39:18 <shapr> SyntaxPolice: I've been thinking of writing down all the libraries I find on the wiki
08:48:08 <Janni> piece!
08:49:00 <shapr> whole!
08:49:03 <Janni> of cake, btw, I'm eating!
08:49:07 <shapr> oh
08:49:08 <shapr> nice
08:49:13 <shapr> hm, I'm hundry
08:49:14 <shapr> hungry
08:49:18 * shapr goes for food
08:49:22 <SyntaxPolice> shapr: OK good to know.
09:40:33 <shapr> heechul: hi
09:55:18 <shapr> hi systems
09:55:33 <systems> hi shapr
09:55:42 <shapr> what's up?
10:00:31 <shapr> systems: are you learning Haskell?
10:21:18 <sloptaco> hmmm, not a very active place...
10:25:27 <buggs> lol
10:25:59 <sloptaco> why Lol?  there's so many damn users in this place, but no-one's chatting...
13:17:45 <shapr> yay, time for swedish homework
13:17:49 <shapr> demoncrat!!
13:18:04 <demoncrat> hey shapr
13:18:07 <shapr> demoncrat: hi hi hi!
13:18:10 <shapr> long time no see
13:18:29 <demoncrat> i've been sick and busy
13:18:48 <shapr> how's the book sale?
13:19:12 <Marvin--> heh, man, this got complicated
13:19:21 <shapr> Marvin--: whatcha doin?
13:19:23 <Marvin--> --equal(not(eqBool(Xs, data_Nil)), data_True)
13:19:26 <Marvin--> master project
13:19:28 <shapr> oh
13:19:30 <demoncrat> shapr - lousy - for some reason the typical buyer is very slow to pay
13:19:37 <shapr> demoncrat: that sucks
13:20:29 <demoncrat> (http://accesscom.com/~darius/personal/sale.html if anyone's after some books here)
13:20:29 <Marvin--> "it is not the case that Xs /= Nil is True"
13:20:31 <shapr> demoncrat: writing any code lately?
13:20:32 <Marvin--> eew
13:20:47 <demoncrat> shapr - not worth mentioning
13:21:52 <shapr> demoncrat: btw, is that you in the last picture?
13:21:59 <shapr> er, next to last
13:21:59 <demoncrat> yep
13:22:01 <shapr> wow
13:22:09 <shapr> you look different from the last time I saw you :-)
13:22:17 <shapr> of course, same can be said for me
13:22:26 <shapr> me --> http://kungens.kemi.fi/~shae/foto/
13:22:27 <demoncrat> we must keep up hackerly appearances
13:22:41 <shapr> yes, I keep meaning to buy sandals.
13:22:58 <shapr> at least I have some hair now.
13:23:05 * Marvin-- is having a hard time remembering the differences between equality and equality
13:23:23 <shapr> Marvin--: there should be some sort of equality of those two :-)
13:23:46 <Marvin--> shapr: well, there's the equality in the haskell sense of ==
13:23:47 <shapr> jag måsta skriva min läxa
13:24:01 <shapr> in english, "I must write my homework"
13:24:05 <Marvin--> but since that's just a function that returns a Bool it's a bit tricky
13:24:09 <Marvin--> shapr: "måste"
13:24:16 <shapr> tack :-)
13:24:21 <Marvin--> 'equal' however, denotes the theorem prover equality
13:24:31 <shapr> it's so nice to have native swedish speakers on my favorite irc channel ;-)
13:24:36 <Marvin--> so that's why I end up with absurdities like above
13:24:49 <Marvin-->   [--equal(X, Y),
13:24:49 <Marvin-->    ++equal(boolEq(X, Y), data_False)]
13:25:03 <Marvin--> but that's horribly wrong too btw
13:25:06 <Marvin--> ("/¤#"/"¤
13:25:08 <shapr> I'll be back after my swedish homework...
13:25:14 <Marvin--> have fun
13:26:01 <hdaume> can someone tell me under what circumstances 'ps1 == ps2' is not equiv to 'unpackPS ps1 == unpackPS ps2'?
21:37:58 <kawfee> hi
21:48:57 * Pseudonym returns with his shiny new printed out copy of the Z39.50 spec
