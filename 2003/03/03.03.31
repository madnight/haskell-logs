00:55:14 * Marvin-- monadifies some code
01:12:28 <Marvin--> aiiih, monad hell
01:13:02 <Marvin--> gott sei dank for liftM and liftM2
01:14:06 <mgoetze> Marvin--: i'll see your god and raise you allah
01:15:08 <Marvin--> dang
01:15:12 <Marvin--> I foldM
01:15:48 <mgoetze> :)
01:16:05 <Marvin--> that was a horribly bad pun actually
01:16:09 * Marvin-- bonks himself
01:17:00 <Marvin--> lambdabot: @fortune
01:17:02 <Marvin--> lambdabot: @fortune
01:17:03 <lambdabot> Raffiniert ist der Herrgott aber boshaft ist er nicht.
01:17:03 <lambdabot> 		-- Albert Einstein
01:17:13 <Marvin--> just my luck, a german quote
01:18:15 <mgoetze> lol
01:18:30 <Marvin--> shapr: how do I communicate with lambdabot over /msg so I don't spam the entire channel?
01:19:41 <Marvin--> hmm, wonder what I should put on alioth.d.o, I already have pyopenssl in cvs, and d-i is in the debian-boot cvs...
01:27:05 <Marvin--> yay, sort example works
01:31:25 <mgoetze> you don't *have* to use it, you know :)
01:33:40 <Marvin--> but I wanna be a resource hog
03:10:48 <shapr> lambdabot: @fortune
03:10:49 <lambdabot> Virtue is not left to stand alone.  He who practices it will have neighbors.
03:10:49 <lambdabot> 		-- Confucius
03:15:32 <Marvin--> shapr: hey, how do I get lambdabot to understand private mssages?
03:15:43 <shapr> I'm workin on it
03:15:55 <shapr> tonite :-)
03:16:01 <Marvin--> okay
03:16:15 <Marvin--> 'cause it ignores '@fortune' and says it doesn't understand 'fortune'
03:16:22 <shapr> yah, I know :-/
03:19:47 <Igloo> It shouldn't be any different
03:30:22 <o3> lambdabot: who's your daddy?
03:30:22 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
03:30:27 <o3> dang
03:31:03 <Marvin--> heh
03:31:23 <Marvin--> well, I'm off
03:47:17 <Janni> peace
03:48:00 <opet> where?
03:48:14 <Janni> Right here in my room
03:48:15 <shapr> Connecticut
03:48:19 <shapr> lambdabot: @fortune
03:48:19 <lambdabot> Is uniformity attainable?  Millions of innocent men, women, and
03:48:19 <lambdabot> children, since the introduction of Christianity, have been burnt,
03:48:19 <lambdabot> tortured, fined, imprisoned; yet we have not advanced one inch towards
03:48:19 <lambdabot> uniformity.  What has been the effect of coercion?  To make one half
03:48:19 <lambdabot> of the world fools, and the other half hypocrites.
03:48:20 <lambdabot> 		-- Thomas Jefferson
03:48:33 <shapr> nice quote
03:51:56 <shapr> hey pes
03:51:58 <shapr> er pesco 
03:52:00 <pesco> hey shapr!
03:52:07 <shapr> my keyboard is broken
03:52:09 <shapr> I need a new one.
03:52:17 <pesco> Get a HHKB!
03:52:30 <shapr> nah, I'm going for another kinesis
03:52:38 <pesco> oic
03:52:42 <shapr> then I'll get this one repaired 
03:52:50 <pesco> ah
03:53:26 <shapr> http://kinesis-ergo.com/images/500-blk.jpg
03:53:26 <shapr> mmmm
03:53:29 <pesco> I've just gotten hold of an old IBM PC keyboard. Sturdy!
03:53:52 <pesco> That the one you have?
03:53:58 <shapr> my backup keyboard is from march '88 :-)
03:54:06 <pesco> Goody
03:54:12 <shapr> one of the IBM clicky keyboards
03:54:17 <pesco> Exactly.
03:54:45 <pesco> Steel base. The +3 steel keyboard of sturdyness.
03:55:26 <shapr> yeh!
03:55:41 <pesco> Inflicts 3D10 damage per hit, IIRC.
03:55:54 <shapr> hey, I took your multiple commands per plugin idea really far :-)
03:55:58 <shapr> lambdabot: @listmodules
03:55:58 <lambdabot> I have the following modules installed: ["fact","fortune","hello","state","system","topic"]
03:56:02 <shapr> lambdabot: @listcommands
03:56:02 <lambdabot> I react to the following commands: ["echo","fact","fortune","goodbye","hello","join","leave","listchans","listcommands","listmodules","msg","part","quit","state","topic"]
03:56:13 <pesco> Yeah!
03:56:23 <pesco> lambdabot: @goodbye
03:56:23 <lambdabot> Hello world. 
03:56:27 <pesco> Haha
03:56:37 <shapr> that's just a demo of multiple commands per plugin
03:56:43 <pesco> I guessd.
03:57:03 <pesco> So there are no hardcoded commands at all anymore?
03:57:09 <shapr> nope, none
03:57:17 <pesco> Wonderful.
03:57:21 <shapr> yah, I agree :-)
03:57:41 <shapr> oh, the quit, join, etc commands have access restrictions
03:58:12 <pesco> Cool, password-protected?
03:58:15 <shapr> right now it only checks per nick, but I'll add full hostmask checking soon
03:58:18 <Janni> shapr: Oh, there's someone with a Kinesis. I thought about buying one, but you know how expensive they are. But I don't really know how good they are...
03:58:33 <shapr> Janni: I've had my kinesis for two years or so, I love it
03:58:40 <shapr> I bought the cheapest one they had to start with
03:58:46 <shapr> now I'm buying the best one they have =)
03:58:53 <shapr> and I'm getting this one repaired
03:59:26 <pesco> which ones are those (cheapest + best)
03:59:30 <pesco> ?
03:59:31 <shapr> I'm getting tired of having to open it every coupla hours and play with the connectors :-/
03:59:41 <pesco> Hihi
04:00:21 <shapr> pesco: cheapest is the contoured essential, for $239
04:01:04 <shapr> pesco: best is the Advantage Pro for $359
04:01:26 <pesco> I see.
04:01:49 <shapr> the only extra feature I really need/want is the hardware switching for dvorak/qwerty
04:01:57 <shapr> the shape of the keyboard is what's really important
04:02:08 <pesco> Yes.
04:02:41 <Janni> shapr: What do you need switching for? Other people using the keyboard?
04:02:56 <shapr> I've done quite a bit of remapping with xkeycaps, I've moved all of my modifier keys under my thumbs
04:03:12 <shapr> my theory is that chording should only be done with the thumbs
04:03:28 <Janni> I agree
04:03:39 <shapr> Janni: no, more for configuring the BIOS on random computer, and LILO, that sort of thing
04:03:45 <Janni> You all know my vision of the perfect keyboard don't you?
04:03:52 <shapr> tell me
04:04:07 <Janni> shapr: What's the problem with hard-wired dvorak?
04:04:21 <shapr> there isn't one
04:04:28 <shapr> standard kinesis is qwerty
04:04:41 <Janni> Ah. OK. I'll tell you about it. Gimme some time...
04:05:10 <shapr> so you have to buy the hardware switchable keyboard and then you can switch it to dvorak
04:05:23 <shapr> it really sucks that so many programs assume qwerty keyboards
04:06:53 <pesco> Yes that's really stupid.
04:07:24 <Janni> The central idea is, that it consists of two parts only connected by a cable. One for each hand. So you can place your arms parallel on the table. The clue is that one part could be used as a mouse, so you wouldn't have to change from the keyboard to the mouse and back all the time.
04:07:47 <Janni> Of course it is very ergonomic and all modifiers are used by the thumbs
04:08:07 <shapr> Janni: like this? http://kinesis-ergo.com/images/evol_chair2.jpg
04:08:20 <Janni> It has one (or two) more modifier(s)...
04:08:41 <Janni> shapr: no! one part is the mouse! you'd move it around on the table for pointing
04:08:51 <shapr> huh?
04:08:59 <shapr> oh
04:09:07 <shapr> one half of the keyboard can roll?
04:09:10 <Janni> The halfs would be formed like hmm... half eggs or so, fitting in the hand
04:09:12 <Janni> yep
04:09:26 <Janni> maybe even both, but I don't know what to control with the other half
04:09:30 <shapr> wouldn't an IBM laptop stub mouse work better?
04:09:37 <shapr> you could put that between keys in the keyboard
04:10:03 <Janni> I think my idea would be... I don't know... perfect :)
04:10:17 <shapr> or maybe with a trackball in the center: http://www.maltron.com/images/trackb1s.jpg
04:10:56 <Janni> And one important point is the space you get between the halfs. It can be used for paper-stuff or... food! (yay :)
04:11:13 <shapr> the DataHand has a mouse-mode
04:12:13 <Janni> The additional modifier could be used to map the function keys on the numeric keys and so on, just like the HHKB does
04:13:02 <Janni> Though, what I don't like about the HHKB is, _how_ the arrow keys are mapped. I'd like it more to push them with three different fingers than with _one_!
04:13:19 <shapr> remap your keyboard
04:14:10 <Janni> thought about it, but then I'd have to use ALT as a modifier because the function-key is hardwired and invisible for the computer
04:15:12 <Janni> I wondering about the fact that nobody is so enthusiastic about my mouse-keyboard idea as I am. I'd _really_ like to have that thing
04:15:47 <shapr> I don't like mice
04:15:49 <shapr> I prefer trackballs
04:15:55 <pesco> I prefer trackballs. No bumping into obstacles.
04:15:58 <pesco> *g*
04:16:05 <shapr> I like the idea of a split keyboard, but not where one part moves
04:16:36 <Janni> ... because you like trackballs ...
04:17:08 <shapr> I don't really like mice at all though, they make me move my hand off of my keyboard
04:17:09 <shapr> hi Heffalump 
04:17:13 <Heffalump> hiya
04:17:16 <Heffalump> I'm not really here
04:17:22 <shapr> ok :-)
04:17:39 <Janni> shapr: Yeah, but that keyboard would save you from this movement
04:18:04 <shapr> that's true
04:18:08 <shapr> but then I'd have to move the keyboard
04:18:38 <shapr> the advantage of keyboard/trackball is that I can always relax my arm when I put it down on them, I don't have to suspend my arm to move anything
04:18:46 <Janni> You are not an athletic, are you? ;)
04:19:09 <shapr> it's not that, just that I want my shoulders to last thirty more years at least :-)
04:19:35 <Janni> AFAIS the Contoured doesn't have a trackball...
04:19:43 <shapr> I started using mice with windows 2.0
04:19:49 <shapr> that's true, it doesn't
04:19:55 <shapr> I use a logitech marble man
04:20:09 <shapr> closest thing to a decent left-handed trackball there is :-/
04:20:25 <Janni> Are you left handed?
04:20:28 <shapr> yup
04:21:45 <Janni> What I don't like about the Contoured is, that it seems kind of _big_, isn't it?
04:21:58 <shapr> it's smaller than an IBM clicky
04:22:02 <shapr> smaller than MS Natural
04:22:21 <Janni> Really? But it's bigger than HHKB :)
04:22:33 <shapr> yes, it is
04:22:37 * Janni is really thinking about buying a Kinesis
04:22:46 <shapr> I think it's worth it to buy a Kinesis.
04:22:51 <Janni> If I only could try it somewhere...
04:23:04 <shapr> you get one month money back guarantee
04:23:12 <shapr> so if you can't stand it, you send it back.
04:23:49 <pesco> Getting one of those Maltron keyboards with a built-in trackball seems like a good idea... Shapr: is there a specific reason why you chose a Kinesis?
04:24:19 <Janni> Because it's ergonomic, I think
04:24:30 <shapr> I think Kinesis is more ergonomic than Maltron.
04:24:42 <shapr> but I would like a built-in trackball
04:26:01 <pesco> Have you sent a feature-request to Kinesis?
04:26:46 <shapr> no, but that's a good idea
04:28:08 * pesco feels his wrists...
04:28:25 <pesco> Maybe I should think about getting an ergonomic keyboard too.
04:28:40 <shapr> I was having some problems before I got my kinesis
04:28:41 <pesco> shapr: You should have Kinesis pay you.
04:28:45 <shapr> :-)
04:28:55 <shapr> I advertise what I think is good.
04:29:12 <shapr> lambdabot: @quit
04:29:38 <pesco> Of course, word of mouth is the only sensible way of advertisement.
04:29:53 <shapr> yay, @fortune works from the beginning now
04:29:59 <shapr> but it's a hackish solution :-(
04:30:14 <shapr> pesco: Riastradh suggested adding init to the methods of Module class 
04:30:25 <shapr> and he suggested a doBlah hook for every doBlah
04:30:34 <shapr> init is definitely happening
04:30:44 <shapr> I have to think about the hook setup for a bit.
04:31:08 <pesco> shapr: Yes, same here.
04:32:29 <pesco> But it probably makes sense for a module to be able to determine through what kind of message it was called.
04:32:41 <shapr> which command called it?
04:32:44 <shapr> I've already added that.
04:32:56 <shapr> look at the SystemModule
04:33:19 <Igloo> What's the problem, shapr?
04:33:38 <Igloo> (with @fortune)
04:33:55 <shapr> just that I haven't implemented the init method for lambdabot plugins yet
04:34:14 <shapr> and that's the right way fix the problem with @fortune being blank the first time
04:34:34 <shapr> lambdabot: @quit
04:35:18 <shapr> ok, now commands work the same in private messages
04:35:51 <Igloo> I don't see why the first time shouldn't just work the same as all the others, though - are you sending a stored fortune and then generating a new one to be stored?
04:36:17 <shapr> no, generating a new Int from/for the PRNG
04:36:36 <shapr> when @fortune is first called, the IORef is empty, no Int there
04:36:40 <shapr> so it sticks one in there
04:36:48 <shapr> the next time through it gets the Just case
04:37:05 <Igloo> Ah, so you could just put in a recursive call in the Nothing case
04:37:18 <Igloo> Or you could uses randomIO if you're in the IO monad anyway
04:37:27 <shapr> yes, or just make the first Int in the init method of the module
04:37:43 <Igloo> Well, you could do, but that seems ugly to me
04:38:08 <Igloo> randomIO seems the cleanest if I understand correctly
04:38:32 <pesco> Igloo: But that's just moving the state out of the module.
04:39:10 <pesco> What about other modules which have a different kind of state?
04:39:38 <pesco> It has to be initialised somewhere, so an init routine appears natural, no?
04:39:43 <Igloo> They could either use a recursive call in teh Nothing case or initialisation as appropriate
04:40:24 <pesco> Hm, oh, the state accessor returns a Maybe anyway?
04:48:10 <pesco> shapr: Why isn't type ModuleState = Dynamic?
04:57:10 <Riastradh> shapr, last night I went and wrote a karma module, too, but didn't test it because I couldn't get GHC to want to compile lambdabot -- what commandline options did you use?
04:58:37 <Riastradh> Ack, oops, I must go.
05:03:01 <Janni> shapr: What do you need the additional features of the Professional that the Classic doesn't have for? (Speaking of Kinesis keyboards, of course)
05:03:03 <pesco> shapr: Damn, I wish you would have reminded me of these cool keyboards earlier, then I would have had my parents give me one for my birthday...
05:12:53 <shapr> Riastradh: -package data -package net -fglasgow-exts
05:13:00 <shapr> gotta go, bbl
05:13:04 <shapr> lambdabot: @quit
07:58:59 <pesco> shapr: I assume you can rearrange the keycaps of the kinesis to match the dvorak layout?
08:05:19 <pesco> Is there anybody here who's somewhat familiar with GHC's internals, especially the mangler?
08:07:16 <Marvin--> the Zz stuff?
08:07:36 <pesco> Zz?
08:07:38 <Marvin--> there were some mails about it on g-h-u a while ago iirc
08:07:43 <Marvin--> oh, not the name mangling?
08:07:51 <pesco> No, the ASM mangling...
08:07:56 <Marvin--> never mind then
08:09:00 <pesco> I'm trying to compile it on my PowerBook but the mangler thinks I'm was a powerpc-ibm-aix and spews out strange assembler code which my GNU as understandably chokes on.
08:09:26 <Marvin--> heh
08:09:55 <pesco> I'd be happy if there was some switch to turn the mangler off entirely because I don't particularly feel like sifting through this "vicous" (quoting a GHC developer) perl script right now.
08:10:50 <pesco> Especially because in numerous places it only tests whether $TargetPlatform is powerpc which is of course true for both IBM and Apple...
08:11:30 <pesco> Oh, but wait....
08:13:03 <pesco> Maybe I could really get away with s/powerpc/powerpc-ibm-aix/ ...
08:14:29 <pesco> Or maybe I'll just replace the mangler with a really small shell script...
08:18:55 <pesco> damn, this isn't a stdin->stdout filter?!
08:20:42 <pesco> oh, now I see...
08:22:27 <pesco> Oh, there we go -fno-asm-mangling.
08:24:37 <Marvin--> heh, if there's something there ought to be a flag for, ghc has it :)
09:45:19 <pesco> Marvin: Too bad it doesn't work.
09:46:10 <pesco> Well, it bypasses the mangler, but the actual compiler still litters the code with lines like "--- BEGIN ---" to mark function bodies.
09:46:19 <pesco> Now how do I turn that off??
09:47:12 <pesco> There is a C header responsible for that, but I have no idea where the corresponding #symbol is supposed to go.
09:47:51 <pesco> And it would appear to me that this thing should be implicit with -fno-asm-mangling...
09:48:36 <pesco> This is really annoying.
09:54:47 <Marvin--> -fno-code would work ;)
10:01:51 <pesco> *g*
10:02:20 <pesco> Ah, now I know it, I have to tell it to build in the _u way, but I have never understood ways.
11:17:33 * Riastradh pokes someone who knows stuff about lamdabot.
11:45:13 * andersca bounces
12:14:20 * Riastradh hrms, summons shapr.
14:08:02 <opet> did somebody from here have some documentation for the state monad?
15:02:59 * Riastradh hrmphs, summons shapr again.
16:50:06 <Riastradh> Pseudonym - How can I store a finite map in a module's state?
16:50:41 <Riastradh> lambdabot module, that is.
16:51:45 <Pseudonym> Er...
16:52:02 <Pseudonym> Hang on, have to check what shapr has done first.
16:53:12 <Pseudonym> Before that I have to check something else in.
16:54:53 <Igloo> Errr, you're checking things in without seeing what's changed?  :-)
16:55:05 <Pseudonym> I'm not checking into lambdabot. :-)
16:55:20 <Igloo> Ah  :-)
16:55:43 <Riastradh> If this helps:   data ModuleState = forall a. (Typeable a) => ModuleState a
16:55:50 <Riastradh> ...and I need to store stuff in a ModuleState.
16:58:45 <Pseudonym> Right.
16:58:55 <Pseudonym> So what you need is to make something which is an instance of Typeable.
16:59:03 <Riastradh> ...and how do I do that?
16:59:05 <Pseudonym> So, for example:
16:59:11 <Pseudonym> Oh.
16:59:13 * Pseudonym hmms
16:59:17 <Pseudonym> Good question.
16:59:24 <Riastradh> I'm assuming it's a type class.
16:59:28 * Pseudonym nods
16:59:35 <Riastradh> Is it a GHC extension or a standard Haskell type class?
17:00:06 <Pseudonym> It's a GHC extension.
17:00:10 <Pseudonym> And it's not derivable.
17:00:14 <Riastradh> Curses.
17:00:43 <Pseudonym> It's not so easy, I think, though.
17:00:49 <Pseudonym> Sorry, it's not so HARD.
17:00:59 * Pseudonym always gets those two confused
17:01:13 <Pseudonym> http://haskell.org/ghc/docs/latest/html/base/Data.Dynamic.html
17:01:24 <Riastradh> I know, 'hard' and 'easy' are so confusing, aren't they?
17:01:31 <Pseudonym> instance Typeable MyModuleState where
17:01:48 <Pseudonym>     typeOf _ = mkTyCon "MyModuleState"
17:01:53 <Pseudonym> That should be sufficient, I think.
17:02:09 <Pseudonym> Just make sure the string is fairly unique.
17:02:17 <Pseudonym> Perhaps "lambdabot.MyModuleState"
17:02:41 <Pseudonym> That should do the trick.
17:02:42 <Riastradh> 'MyModuleState?'  What's that about?
17:02:50 <Riastradh> Or do you mean just 'ModuleState?'
17:03:00 <Pseudonym> I mean make a new type for your module's state.
17:03:16 <Pseudonym> A newtype might be appropriate.
17:03:32 <Riastradh> Oh.  But I have to store the stuff in a ModuleState, I believe.
17:03:42 <Pseudonym> Yes.
17:03:50 <Riastradh> ircModuleState :: FiniteMap String (IORef ModuleState)
17:03:51 <Pseudonym> But a ModuleState is just a wrapper around any Typeable type.
17:04:08 <Riastradh> Oh, I see.
17:04:12 <Pseudonym> Effectively you need two layers here.
17:04:17 <Pseudonym> One for ModuleState and one for Typeable.
17:04:31 <Pseudonym> OTOH, making a fresh type for your module's state is a good idea anyway.
17:04:39 <Pseudonym> In case you need to add more kinds of state.
17:05:04 <Riastradh> What's the difference between 'Int' and 'Integer?'
17:05:13 <Pseudonym> Int is the machine word size.
17:05:18 <Pseudonym> Integer is infinite precision.
17:08:01 <Pseudonym> There is no equivalent of Float or Double for obvious reasons.
17:08:02 <Pseudonym> Though I just checked in an infinite precision real library.
17:08:02 <Igloo> In GHC, maybe. In Haskell Int is at least (about 29 bit) and Integer is what you said
17:08:02 <Pseudonym> Right.
17:08:02 <Igloo> (Except isn't it infinite range rather than precision?)
17:08:02 <Pseudonym> Erm...
17:08:03 <Pseudonym> For integers, I think that's the same thing.
17:08:03 <Pseudonym> For floats it's different.
17:08:03 <Igloo> Oh, I thought they were orthogonal
17:08:03 <Pseudonym> I dunno.  You know what I mean, though.
17:08:03 <Igloo> Yeah
17:08:18 <Pseudonym> Don't confuse me.  There's no challenge in it.
17:08:23 <Igloo> :-)
17:08:48 <Riastradh> If he likes to cheat at games, though, he should feel right at home.
17:09:25 <Igloo> You what?
17:09:51 <Riastradh> Huh?
17:18:18 <Riastradh> GHC complains that mkTyCon doesn't return a TypeRep, which apparently typeOf wants.
17:21:21 * Riastradh pokes Pseudonym.
17:36:51 * Pseudonym hmms
17:37:36 <Pseudonym> Oh.
17:37:38 <Pseudonym> Duh.
17:37:54 <Pseudonym> mkAppTy (mkTyCon "whatever") []
17:37:56 <Pseudonym> That's what you want.
17:39:01 <Pseudonym> Been a while since I used this.
17:39:02 <Riastradh> Ah, ok.
22:27:48 <kawfee> :128 - Undefined constructor function "Expr"
22:27:59 <kawfee> Expr is defined as a type
23:36:32 * pesco stretches
23:36:40 <pesco> Good morning lambda hackers!
23:39:56 <pesco> Pseudonym: Are you still here? I have a question about lambdabot. Which is cool by the way.
23:59:59 <Marvin--> mapM (tryIO . map readFile . modToFilename) imps
