00:39:17 <dnm> hey all
01:56:37 <Marvin--> hello clausen
01:57:22 <clausen> gday Marvin--
01:57:38 <Marvin--> I gotta thank you for the amazing API documentation of libparted :)
01:57:56 <clausen> thanks for the thanks :)
01:58:01 <clausen> (and praise :)
01:58:54 <Marvin--> I did some /proc hackery to find info on LVM, EVMS and RAID volumes instead *cough*
01:59:30 <clausen> aha
01:59:47 <Marvin--> but I still use libparted to find out as much as I can about disks
02:05:33 <liiwi> yes, parted rocks. Has saved my butt few times.
02:35:12 <bas> i don't understand the english names for school's etc... is the bachelor phase of a study the undergraduate part? and the master fase the graduate part? or is the graduate part after one's master phase?
02:35:43 <clausen> bas: bachelor == undergraduate
02:35:50 <clausen> bas: everything else is postgraduate
02:35:55 <clausen> (masters, doctorate)
02:56:08 <bas> clausen: ah ok, so bachelor is the first 2/3 years of ones study and after that the graduate is a master and and phd.. correct?
02:56:29 <clausen> bachelor is usually 3 or 4 years
02:56:40 <clausen> (I am talking about australia here...
02:56:42 <clausen> which is probably the same)
02:57:08 <bas> i am talking about the netherlands where we just recently switched to a ba/ma structure...
02:57:25 <Marvin--> I hope Sweden switches soon too
02:57:31 <Marvin--> we get our "master" way too cheap
02:59:21 <Marvin--> daaaamnn
02:59:35 <Marvin--> that's what I get for enthusiastically working
03:11:38 * clausen sleep
05:11:51 <andersca> hey Marvin--
05:11:58 <Marvin--> afternoon
05:34:13 <Segora> re
06:45:12 <SyntaxPolice> good morning
08:31:14 <hdaume> 'morning
10:10:25 * tmoertel pops head into #haskell
10:11:07 * mgoetze pushes tmoertel back onto the stack
10:11:10 <tmoertel> mapM_ (putStrLn . ("hello "++)) (getUsers "#haskell")
10:12:41 <opet> hi
10:13:59 <tmoertel> what's up?
11:02:37 <Marvin--> heh, sucker
11:02:48 <shapr> I have no self-discipline.
11:02:51 <shapr> :-P
11:02:58 * Marvin-- is listening to Apocalyptica
11:03:17 * shapr is listening to Nine Inch Nails 
11:03:18 <ibid> Marvin-- has turned finnish? ;-)
11:03:34 * ibid is listening to roxette ;-)
11:03:44 <shapr> I need some new music.
11:03:59 <ibid> have some agit-prop :-)
11:04:11 <shapr> I'm tempted to write this shell script in Haskell and give it to my clients who requested Java.
11:04:13 <Marvin--> ibid: eeew
11:04:21 <ibid> and now semmarit
11:04:26 <shapr> what's agit-prop?
11:04:28 <Marvin--> ibid: the concept just fascinates me :)
11:04:36 <Marvin--> "Metallica by four cellos"
11:04:45 <ibid> Marvin--: yeah
11:04:45 <shapr> Apocalyptica is just awesome
11:04:54 <ibid> shapr: a finnish 70's communist band
11:05:01 <shapr> ibid: hm, I'll pass.
11:05:10 <shapr> I have a low opinion of communists after my last run-in with them.
11:05:19 <ibid> shapr: they have wonderful music with hilarious lyrics (that were serious at the time)
11:05:35 <Marvin--> ibid: progressive music?
11:05:45 <Marvin--> there's some really great Swedish progg
11:05:53 <Marvin--> but it's all in Swedish :-P
11:05:57 <shapr> I want some music I can grab from the 'net and legally listen to
11:06:02 <ibid> no, socialist realist :-)
11:06:10 <mgoetze> shapr: #wopn
11:06:37 <ibid> Marvin--: semmarit is a male chorus singing pop a cappella (including some techno :-)
11:06:42 <shapr> mgoetze: they're off the air
11:06:55 <Marvin--> ibid: I like neither pop nor techno
11:07:33 <ibid> Marvin--: but the concept is fascinating:-) techno a cappella
11:07:40 <ibid> Marvin--: and it sounds realistic
11:08:04 <ibid> Marvin--: similar to metallica on strings :-)
11:08:46 * esap listens classical music (at the frequency of one song per year or so :-)
11:08:56 <shapr> I like classical
11:10:13 * ibid loves opera
11:30:31 <shapr> I'm trying to write python again after a long time of only writing Haskell and Java
11:30:33 <shapr> it feels very weird
11:30:41 <shapr> things happen in a different order
11:33:12 <shapr> hi Kuril 
11:33:32 <Kuril> hi
11:33:35 <shapr> what's up?
11:36:56 <shapr> foldr1 just doesn't exist in python
11:37:15 <Riastradh> foldr1?  What's the difference between that and foldr?
11:38:30 <Marvin--> shapr: it doesn't?
11:39:03 <Marvin--> shapr: I thought you could simply skip the 'inital' parameter in the reduce call
11:39:38 <Marvin--> Riastradh: it doesn't take a base value, it assumes the list is non-empty
11:41:20 <Riastradh> Is it like:  foldr f (head list) (tail list)  where f is the function that is given an element of the list and the current state value, and list is the list which foldr1 is applied to?
11:41:47 <Riastradh> (that's how 'reduce' is specified in SRFI 1 <http://srfi.schemers.org/srfi-1/srfi-1.html>, and I'm wondering if it's the same)
11:41:54 <Riastradh> (rather, 'reduce-right')
11:43:10 <Marvin--> doesn't that depend on whether the function is associative or not...
11:44:33 <Marvin--> foldr1 (-) [1..5] == 3, foldr (-) 1 [2..5] == -1
11:46:10 <Marvin--> it's true for foldl and foldl1 though, I guess
12:54:08 <shapr> hi dbg
12:54:30 <dbg> hi shapr
12:55:42 <dbg> would you mind answering a newbie question? i'm getting 'Type error in generator' error message from hugs. i cannot find it in the list of hugs error messages. what does it mean?
12:59:21 <dbg> what i'm trying to do. i have a [Int] and i want to apply Int -> IO () in order to print some information about list elements. i try to map printF l, but i'm getting an error message.
12:59:22 <Marvin--> are you using list comprehensions?
13:00:11 <hdaume> you probably want mapM_ instead of map
13:00:23 <Marvin--> yes, for printing, you want mapM_
13:00:26 <hdaume> mapM_ :: (a -> IO b) -> [a] -> IO ()
13:01:26 <dbg> great. thank you very much. but could someone explain me what is going on?
13:01:40 <Marvin--> well, the thing is that when you map a printing function onto a list
13:01:43 <Marvin--> you'll get out a list of IO actions
13:01:47 <Marvin--> the type is [IO ()]
13:01:49 <dbg> yeah.
13:02:07 <Marvin--> and that won't actually "run" the IO actions, since only something on the form IO a "runs" them
13:02:23 <Marvin--> you sort of have to be "inside" IO to run anything I/O related
13:03:21 <Marvin--> if you have such a list, you can use sequence or sequence_ to run all of them, and mapM_ f xs = sequence_ (map f xs)
13:03:55 <dbg> aha. i'm reading mapM and mapM_ source in Prelude.
13:04:57 <dbg> in two words what is difference between sequence and sequence_? apparentry i'm having trouble understaning Prelude code.
13:06:22 <dbg> or point me to some tutorial where it is explained.
13:08:09 <Marvin--> sequence :: [IO a] -> IO [a]  <- i.e. it gives you all the a:s
13:08:21 <Marvin--> sequence_ :: [IO a] -> IO ()  <- for when you only want to run the stuff and don't care about the results
13:08:37 <Marvin--> (sorry, that was more than two words :)
13:08:49 <dbg> :)
13:08:59 <dbg> now i see. thank you again.
13:13:51 * ibid has never understood the point of a list of error messages
13:14:04 <ibid> they are usually self-explanatory
13:15:26 <dbg> probaly they are when you understand what is going on. when learinig the language more detailed explanaion of error message could help.
13:21:08 <ibid> öö
13:21:14 * ibid has never needed such a list...
14:02:02 <shapr> cool, there's two of you
14:02:17 <Marvin_> double the fun, eh
14:02:22 <shapr> yah, spiffy!
14:02:38 <Igloo> Evening
14:02:53 * Marvin_ screams at pbuilder
14:02:59 <shapr> hi Igloo 
14:03:02 <shapr> Marvin_: what's that?
14:03:09 <Igloo> Anything exciting happening?
14:03:19 <Marvin_> shapr: it builds debian packages in a chroot, to test build dependencies
14:03:26 <Marvin--> I'm me again!
14:03:39 <shapr> yay!
14:03:54 <Marvin--> umount: /var/cache/pbuilder/build/29435/proc: enheten är upptagen
14:04:04 <shapr> hm, I should know upptagen
14:04:05 * Marvin-- grumbles
14:04:19 <Marvin--> shapr: you should be able to guess what the english original is :-)
14:04:31 <Marvin--> busy
14:04:33 <shapr> ohh
14:04:35 <shapr> yah
14:04:37 <Marvin--> "device is busy"
14:04:46 <Marvin--> but lsof doesn't reveal anything, so I don't understand what's wrong
14:05:05 <shapr> sounds like you have a prompt somewhere that's cd'ed into that dir
14:05:16 <Igloo> I've had problems with /proc before, but only on remote machines it was inconvenient to experiment with
14:05:37 <Marvin--> ah well, it'll go away when I turn the computer off I guess :-)
14:07:29 <shapr> are there cases where rational numbers take up more space than floating point equivalents?
14:07:34 * shapr guesses so
14:22:56 <hdaume> i would imagine that episilon \in Float | 0 < epsilon and forall y \in Float, 0 < y => y <= epsilon would be such a number
14:42:49 <Pseudonym> shapr: There are many such numbers.
14:43:05 <shapr> hi Pseudonym!
14:43:09 <shapr> you've been reading the logs? :-)
14:43:13 <Pseudonym> Yes. :-)
14:43:20 <Pseudonym> 2^-e springs to mind.
14:43:29 <Pseudonym> say, 2^-50.
14:43:46 <Pseudonym> As a rational, that's 1/2^50
14:43:55 <Pseudonym> So you need 50 odd bits to represent the denominator.
14:44:02 <Pseudonym> Whereas it's representable as a Float, too.
14:44:05 <Pseudonym> 32 bits.
14:45:41 <shapr> hm
14:46:11 <shapr> I wonder if there's a general way to find a shortest representation of any rational or combination thereof
14:46:21 * Pseudonym laughs
14:46:22 <Pseudonym> No.
14:46:24 <shapr> for example, a/b or a/b/c
14:46:33 <Pseudonym> If you mean in bits, no.
14:46:38 <shapr> why not?
14:46:43 <Pseudonym> OK, give me a number.
14:46:48 <shapr> 759
14:46:56 <Pseudonym> OK.  I hereby invent a new representation.
14:47:05 <shapr> hm, this is the same as factoring a number, yes?
14:47:07 <shapr> sort of
14:47:13 <Pseudonym> The bit 0 means 759, all other numbers are represented by using some other representation and prepending a 1 bit.
14:47:17 <buggs> shapr, i think there is, let me look it up
14:47:30 <shapr> Pseudonym: bah, that's huffman compression :-)
14:47:34 <Pseudonym> Yup.
14:47:39 <Pseudonym> Isn't that what you wanted?
14:47:48 <Pseudonym> The shortest representation of some number?
14:47:53 <shapr> well...
14:48:01 <shapr> not exactly
14:48:12 <Pseudonym> You need to define the problem more precisely.
14:48:15 <shapr> truly
14:48:26 <Pseudonym> See, there are an infinite number of non-negative integers.
14:48:30 <Pseudonym> Let alone rationals.
14:48:36 <shapr> yah
14:48:41 <Pseudonym> There is no representation which expresses them all equally.
14:48:46 <shapr> so
14:48:54 <shapr> what about having multiple representations available
14:49:06 <Pseudonym> Then you can always do better by adding another representation.
14:49:12 <shapr> and having something that finds a decently short way of representing the current number?
14:49:15 <Pseudonym> It just pushes the problem one step back.
14:49:49 <Pseudonym> The best you can do is to decide how important each number is to you and devise a representation based on that.
14:49:55 <Pseudonym> Machine words are based on this principle.
14:50:15 <Pseudonym> The idea is that integers in the range 2^-32 to 2^32-1 are important, the others are not.
14:50:27 <Pseudonym> If we need them, we can invent another representation for them.
14:50:55 <shapr> hm
15:00:14 <buggs> i thought you meant stuff like 2 / 6 -> 1 / 3
15:01:56 <buggs> maybe you like to read Knuth: An Imaginary Number System
15:02:58 <shapr> maybe so
15:03:06 <shapr> I haven't heard of it before, I'll look it up.
15:03:21 <Pseudonym> I haven't read it, but I can guess.
15:03:31 <Pseudonym> Is it an extension to negabinary?
15:03:51 <Pseudonym> Negabinary is a very cool number system.
15:03:59 <Pseudonym> Not hard to implement in silicon, either.
15:20:41 <buggs> ya the one in TAOCP, very interesting and related to the other paper
15:23:45 <Pseudonym> OK, sounds interesting.
15:46:34 * shapr swears at Java
18:10:14 * shapr wants Haskell on PalmOS
18:10:16 <shapr> *NOW*
18:10:30 <shapr> patience has never been my strong point.
18:11:14 <Igloo> Pah, get a Zaurus  :-)
18:32:36 <shapr> Igloo: If only I had the budget for that
18:33:51 <Igloo> Me too  :-/
18:34:27 <shapr> I already have a Palm IIIc
19:14:54 <shapr> yay
19:15:01 <shapr> fixed version of WASH/CGI
