02:08:57 <mgoetze> Marvin--: are you going to tell us how you voted now? :)
02:09:12 <Marvin--> heh, actually I said last night that I voted for OF
02:09:30 <mgoetze> oh, well, good :)
02:09:36 <Marvin--> not that it helped
02:09:39 <mgoetze> (not good enough, since he didn't win, but good)
02:10:17 <mgoetze> Marvin--: are you up for a game of go?
02:10:52 <Marvin--> no, I have a nasty headache
02:10:57 <mgoetze> oh, ok
02:11:31 <Marvin--> wonder if OF will run next year too, that'd be...what, the fifth time? :)
02:11:42 <mgoetze> fourth
02:12:23 <Marvin--> the results were really close between tbm, bdale and OF though
02:12:46 * mgoetze really ought to hurry up and become a dd so he can vote for OF if he runs next year
02:12:50 <Janni> g'morning!
02:12:52 <mgoetze> moin Janni 
02:15:29 <opet> hiya Janni 
03:26:09 * shapr bounces
03:28:11 <mgoetze> hi shpar!
03:28:15 <mgoetze> er, shapr
03:28:29 * mgoetze is compiling 2.5.66
03:28:36 <shapr> hi mgoetze 
03:28:41 <shapr> 2.5.66 of what?
03:28:47 <mgoetze> linux :)
03:29:12 <shapr> oh
03:29:13 <shapr> cool
03:29:54 * mgoetze hopes his computer doesn't blow up
03:31:35 * mgoetze plays some bach on the piano, meanwhile.
03:32:48 * shapr bounces
03:32:50 <shapr> http://www.inorr.se/nsd/index.php?artikel=79155
03:33:01 <shapr> our opening on friday got into the newspaper!
03:33:17 <mgoetze> is there a picture of you eating a cookie or something? :)
03:33:26 <shapr> there's a picture of me sitting at a table.
03:33:55 * mgoetze looks
03:34:53 <shapr> Vad gör en amerikansk man i ett företag med bara kvinnor, och som dessutom heter Webhäxorna?
03:34:56 * shapr snickers
03:35:11 <mgoetze> hm, it's not a very big picture
03:35:14 <shapr> no, it's not
03:35:26 <shapr> our company is Webhäxorna
03:35:29 * shapr snickers
03:35:45 <mgoetze> does that translate to "web h4x0rs"? :)
03:35:46 <Marvin--> shapr: :)
03:35:51 <Marvin--> mgoetze: no, web witches
03:35:57 <shapr> sure is close though
03:36:02 <Marvin--> heh
03:36:05 <mgoetze> ah, like hexen (in german)
03:36:08 <shapr> right
03:36:09 <Marvin--> yes
03:36:28 * Marvin-- is getting a mind warp from these transformations
03:36:46 <shapr> Marvin--: have you transformed into something else?
03:37:08 * Janni doesn't understand why "ck" is transformed to "x" in 1337 language...
03:37:11 * mgoetze gets several hundred compile errors from matroxfb
03:37:40 <mgoetze> Janni: note: 1337 is *not* based on logic
03:37:46 <shapr> Janni: in english, cks is the same sound as x
03:37:51 <shapr> hacks = hax
03:37:55 <Marvin--> shapr: no, I'm trying to propagate all let expressions to top level while keeping the nesting correct by adding lots of parameters to the functions
03:38:22 <shapr> Marvin--: oh, have you asked the FP-refactor guys if they've written anything yet?
03:38:35 <Marvin--> shapr: who?
03:38:42 <shapr> claus reinke and co
03:38:49 <shapr> paul hudak is part of that project too
03:39:17 <shapr> if they have minimally working code, it might make your life easier
03:39:23 * Janni hates the let-statement
03:39:35 <Marvin--> what do they do?
03:39:45 <shapr> they're writing a refactoring browser for Haskell
03:40:30 <Marvin--> stratego-language.org sounds interesting
03:40:36 <shapr> yat, stratego-language is very cool
03:40:48 <shapr> imho, it should be used instead of xslt
03:40:53 <Janni> lambdabot: @fact let embodiment of the 3V1L
03:40:53 <lambdabot> set let to embodiment of the 3V1L
03:41:02 * shapr grins
03:41:30 <shapr> oh, lambdabot plugins can have multiple commands per plugin now
03:41:41 <shapr> pesco figured out how to do that
03:41:53 <shapr> lambdabot: @listcommands
03:41:53 <lambdabot> I react to the following commands: ["fact","fortune","goodbye","hello","state","topic"]
03:42:03 <shapr> goodbye is the same as hello
03:42:15 <mgoetze> lambdabot: @goodbye Make your time.
03:42:15 <lambdabot> Hello world. Make your time.
03:42:26 <Janni> lambdabot: @hello
03:42:26 <lambdabot> Hello world. 
03:42:40 <Marvin--> lambdabot: @fortune
03:42:41 <lambdabot> <knghtbrd> *sigh*  My todo list is like the fucking energizer bunny
03:42:41 <lambdabot> <knghtbrd> It keeps growing and growing and growing and ...
03:42:48 <mgoetze> the default @hello text should be changed to "How are you gentlemen !!!"
03:42:49 <Marvin--> yay, the knghtbrd fortune file :-)
03:43:53 <shapr> is there a standard haskell idiom for getting a random seed to start the PRNG?
03:43:55 <mgoetze> ok, i'm off for a reboot. wish me luck.
03:43:59 <shapr> good luck!
03:44:53 <Marvin--> shapr: I use the picoseconds part of the calendar time record
03:48:15 <Marvin--> damn it, I will need another intermediate language for this
04:04:21 <shapr> oh, picoseconds is a good idea
04:06:44 <Marvin--> heh, I wrote some dice-rolling code yesterday and imported QuickCheck just to get the nice monadic Gen stuff :-)
04:06:50 <Heffalump> :-)
04:07:01 <Heffalump> you can't rely on that being uniformly distributed though
04:07:50 <Marvin--> no, but I was too lazy to go look for my d10:s that it felt like a reasonable limitation
04:08:00 <Marvin--> "the correctness <-> laziness tradeoff"
04:09:09 <mgoetze> back
04:09:23 <shapr> mgoetze: it works?
04:10:03 <mgoetze> shapr: no, it breaks the ability of several daemons to bind to various sockets, including my x font server :)
04:10:06 <shapr> has anyone here used haddock?
04:10:13 <shapr> mgoetze: that sucks :-(
04:10:17 <mgoetze> also, the soundcard wouldn't compile
04:10:21 <shapr> using alsa?
04:10:26 <mgoetze> yeah
04:10:38 <shapr> I'm tempted to try it myself
04:10:44 <mgoetze> and i didn't feel like fixing up the FontPaths manually, so i reverted to 2.4.20-xfs
04:10:57 <shapr> there's a deb for 2.5.x sources?
04:11:36 <mgoetze> don't think so
04:11:56 <Janni> mgoetze: just get lost of your problems by changing to a BSD ;)
04:12:20 <mgoetze> Janni: send me some more ethernet cards, and i will install debian/netbsd on one of my computers.
04:12:40 <mgoetze> Janni: btw, s/lost/rid/
04:13:07 <Janni> ehh, yeah...
04:13:57 <Janni> Hmm. I don't get the coherence between BSD and ethernet-cards...
04:14:50 <mgoetze> Janni: simple. to install debian/netbsd i need an internet connection. the computer i intend to install debian/netbsd on could get an internet connection if i had enough ethernet cards.
04:19:58 <mgoetze> Janni: so, are you sending me some?
04:21:22 <Janni> I have a 3com 10 Mbit one left, but you could look at ebay. I got two 3com 100 Mit/s cards for about 8 euros each...
04:24:08 <mgoetze> pci?
04:32:58 <Heffalump> shapr is a ghost?
04:33:24 <shapr> it's a nickserv command to kill off a dead connection
04:34:53 <Heffalump> I guessed :-)
04:37:32 * Marvin-- idly wonders if "ghost in a shell" refers to zombie processes
04:37:53 <shapr> have you read the comic or seen the anime?
04:37:58 <Marvin--> no
04:38:02 <Marvin--> but I know it exists
04:38:05 <shapr> it's more about the spirit inside the body
04:38:14 <shapr> it's entertaining
04:38:15 <Marvin--> I was trying to make a joke, all right? :)
04:38:19 <shapr> heh, ok :-)
04:38:30 <Marvin--> I saw Akira a few weeks ago though
04:38:33 <Marvin--> can't say I understood a lot of it
04:38:42 <shapr> nice art though, eh?
04:39:01 <shapr> pretty bizarre plotline, but gorgeous animation
04:39:27 <mgoetze> well fsck. i just worked my ass off to get this alpha open, now i find there's another layer
04:39:35 <Marvin--> I've seen worse, but I wasn't extremely impressed
04:39:54 <shapr> Marvin--: when it first hit the states it was the best thing we'd ever seen.
04:40:03 <shapr> late to mid 80s
04:40:53 * Marvin-- looks at his die collection and wonders who the fuck was stupid enough to make a transparent yellow die with *white* numbers
04:41:33 <mgoetze> all my dice are transparent.
04:41:47 <Marvin--> many of mine too, but the yellow/white combo seems extremely stupid
04:43:42 <shapr> bonjour cinema 
04:43:58 <cinema> hello everyone
04:44:08 <shapr> hi, wassup?
04:44:46 <cinema> well, I went to "Fun of programming" and it was super
04:46:16 <shapr> anyone with a pwnz username worries me
04:46:39 <mgoetze> pwnz?
04:46:55 <shapr> it's a script kiddie/h4x0r misspelling of ownz
04:47:08 <shapr> notice that o and p are next to each other on a qwerty
04:47:31 <shapr> ownz means either killing someone in an online game or cracking into a box
04:47:48 <shapr> I pwnz u n00b
04:47:53 <shapr> that sort of thing
04:47:54 <mgoetze> hm
04:48:48 <shapr> I used to play a lot of counterstrike :-)
04:53:51 <shapr> hiya esap 
04:53:53 <shapr> wassup?
04:54:25 <esap> Hi shapr. Hmm.. I'm wondering about complete and cocompleteness of category theory.
04:55:04 <shapr> I'm not sure what that is ...
04:56:23 <esap> Well neither am I, I don't fully understand them. I've got the impression they are related to unification [completeness] and its dual.
04:58:05 <shapr> I still don't understand all the secrets of boring monads :-)
04:59:02 * shapr watches lambdabot explode yet again.
04:59:16 <shapr> hm
05:00:48 <esap> Well monads are actually interesting [from category theory point of view], because they are essentially the same as adjunctions (inverses)
05:02:43 <esap> So I wouldn't say they're that boring :-)
05:02:47 <Igloo> Aren't monads the same as category theory monads?
05:02:52 <esap> yes.
05:03:03 <esap> close.
05:03:14 <Igloo> Oh, I think I misparsed what you said befor
05:03:16 <Igloo> e
05:03:27 <shapr> yay, the PRNG seed thingy works
05:03:31 <shapr> though it mighty ugly
05:05:41 <esap> Haskell monads are just a variation of category theory monads fitted for use with lambda abstraction. You would not want to write monadic code using join and return.
05:06:03 <shapr> I have been wondering about join lately
05:06:08 <shapr> I end up using it a lot
05:06:16 <shapr> which I suspect means I don't really understand what I'm doing
05:06:46 <esap> shapr: hmm.. interesting. Give me an example.
05:07:08 <shapr> join (liftM putStrLn $ liftM show $ liftM ctPicosec $ join (liftM toCalendarTime getClockTime))
05:07:38 <shapr> I realize that join can go from IO ( IO Int ) to IO Int
05:07:48 <shapr> but I don't really know why or how
05:08:25 <Heffalump> it'd be clearer if you just used do notation
05:08:40 <shapr> I was investigating Marvin--'s suggestion of getting PRNG seeds from picoseconds
05:08:45 <shapr> and I can't use do notation in ghci
05:08:54 <shapr> I could let though
05:08:56 <Heffalump> actually you can
05:09:00 <shapr> I can?
05:09:01 <Heffalump> you just leave out the "do "
05:09:16 <shapr> oh tell me more :-)
05:09:21 <shapr> can you show me an example?
05:09:58 <Igloo> With explicit layout you can do it with do
05:10:07 <shapr> in ghci?
05:10:12 <Igloo> yup
05:10:16 <shapr> hm
05:10:35 <Igloo> do putStrLn "foo"; x <- readFile "Foo"; putStrLn x
05:10:46 <shapr> hm, neat
05:10:52 <shapr> I'll try that, thanks
05:12:28 * Marvin-- goes "ARGH" at galeon-snapshot
05:12:36 <shapr> is it still crashing?
05:12:47 <Marvin--> no
05:12:56 <Marvin--> but it's not offering abiword for viewing .rtf files
05:13:03 <shapr> oh
05:13:06 <Marvin--> though I added it in gnome-control-center
05:13:36 <Marvin--> so either galeon-snapshot is not using gnome-vfs or something else is broken
05:35:32 * shapr hacks on lambdabot 
05:35:43 <shapr> hi Smerdyakov
05:35:45 <shapr> wassup?
05:36:02 <Smerdyakov> Nothing
05:36:22 <shapr> lambdabot: @fact wassup
05:36:22 <lambdabot> Nothing
05:36:46 <shapr> it's unanimous.
05:37:07 <Marvin--> Just Nothing :)
05:37:10 * shapr grins
05:37:16 <shapr> Maybe Something
05:38:01 <Darius> cannot find data constructor Something
05:38:22 <shapr> data Something = Int | Integer | Char | ...
05:38:29 <shapr> maybe that should be data Everything
05:38:35 <Heffalump> YM Int Int | Integer Integer | ...
05:38:36 <shapr> data Everything = World
05:38:44 <shapr> Heffalump: right, exactly
05:38:49 <Marvin--> let Just cause = ...
05:38:55 * shapr grins
05:39:02 <shapr> let dogs = out
05:39:39 <shapr> our humor is so bad it killed his connection
05:39:56 <Marvin--> yup
05:40:54 <Marvin--> argh, this is so broken
05:41:08 <shapr> what?
05:41:21 <Marvin--> I wrote a 20-line C program that figures out which gnome programs are registered handlers for text/rtf, but galeon-snapshot fails to do it
05:41:29 <shapr> yay
05:41:35 <shapr> quick, file a patch
05:41:57 <Marvin--> I don't know *where* in galeon it would be
05:42:02 <shapr> oh
05:42:27 <Marvin--> I just know that when I click on an .rtf file I get a list of choices that doesn't match what's in gnome-vfs
05:43:46 <Marvin--> for some reason they don't seem to use gnome-vfs-application-registry
05:43:47 <Marvin--> "/¤#&¤
05:46:17 <shapr> Darius: you have recovered from our humor.
05:46:45 <Darius> Yah, that was interesting timing by my ISP.
05:47:37 <Darius> I just noticed that it's snowing like crazy
05:48:01 <Marvin--> gnome_vfs_mime_get_short_list_applications works too, and galeon-snapshot *should be using that one*
05:48:24 <shapr> Darius: what's lnhva? 
05:48:30 <shapr> someplace in maryland I assume?
05:48:55 <Darius> I think.  I live in Northern Virginia
06:01:47 <Marvin--> GAH, why does gnome_vfs_mime_get_short_list_applications return a *longer* list than gnome_vfs_mime_get_all_applications?!
06:02:24 <mgoetze> Marvin--: i think #debian-devel is the better channel for this :)
06:03:00 <Marvin--> mgoetze: I'm just generally bursting out things anywhere
06:03:12 <mgoetze> Marvin--: i noticed. :)
06:04:51 <shapr> time change
06:12:35 <mgoetze> shapr: just now?
06:19:28 <esap> Hmm.. why is it that you need an extra set of parenthesis around a context with more than one class assertion.
06:23:27 <shapr> mgoetze: this morning I think
06:23:41 <shapr> esap: you do?
06:23:51 <mgoetze> shapr: jumped from 2 am to 3 am here :)
06:24:14 <shapr>  (Foo a) => Bar a or (Foo a, Bar a) => Baz a
06:24:14 <esap> shapr: hmm.. well I get syntax error if I leave out the parenthesis.
06:24:32 <shapr> I think the parens are optional only when you have a single class 
06:24:54 <esap> shapr: yes, I'm wondering why they are necessary at all.
06:25:18 <shapr> I don't know
06:26:14 <esap> shapr: but actually, I guess always writing the parenthesis solves the immediate problem (having to add them if you add a new constraint :-)
06:26:21 <shapr> yup
06:26:38 <shapr> the case where that's not true is list items
06:26:46 <shapr> which irritates me greatly
06:26:53 <shapr> I'd like to be able to write:
06:26:57 <shapr> [foo,
06:27:00 <shapr>  bar,
06:27:01 <shapr> ]
06:27:27 <shapr> that way I can add new items without having to add/remove commas
06:27:35 <shapr> dark said he uses:
06:27:37 <shapr> [
06:27:40 <shapr> ,foo
06:27:42 <shapr> ,bar
06:27:42 <shapr> ]
06:27:47 <shapr> but I find that ugly
06:27:56 <shapr> any thoughts on that?
06:28:00 <shapr> er wait
06:28:02 <shapr> you can do that either
06:28:03 <esap> I normally do not use that kind of layout, so lists usually do not become that kind of problem.
06:28:13 <shapr> the first item can't have a comma
06:28:27 <shapr> s/can/can't
06:28:28 <esap> I usually try to pack the whole list into one line.
06:28:43 <shapr> I have a single list that spans a hundred lines or so :-)
06:28:46 <shapr> it's a list of unit tests
06:29:10 * esap doesn't do unit tests, at least not yet.
06:29:17 <shapr> they're handy
06:29:53 <esap> Well I'm already having problems updating the code when doing changes. Would not like to get another source of updates.
06:30:21 <shapr> in my experience, unit tests increase your speed of change
06:30:25 <shapr> because you know everything works
06:30:38 <shapr> you can 'wildly code'
06:30:50 <esap> I haven't been able to run the compiler outside of ghci for half a year because it does not compile.
06:30:53 <shapr> and you'll immediately know if you broke something in distant parts of the system
06:30:59 <shapr> yow
06:31:35 <esap> I changed the parse tree of the thing, and everything broke :-)
06:32:14 <shapr> I like the XP idea of 'refactor towards what you're about to write, write a unit test for what you're about to write, code wildly running your unit test suite every minute or so, then refactor what you wrote'
06:32:25 <shapr> the test, code cycle can happen lots of times in that center bit
06:32:57 <shapr> lambdabot really needs some unit tests.
06:33:45 <esap> I think the problem is you cannot do any large changes incrementally that way.
06:33:54 <shapr> I think you can
06:33:57 <shapr> I've done it.
06:34:00 <esap> How?
06:34:11 <shapr> in the zero step
06:34:23 <shapr> refactoring is where you change the structure of the code, without changing its functionality
06:34:46 <esap> yes, I've been refactoring for half a year now.
06:34:59 <shapr> so when you know what you want to do
06:35:22 <shapr> you can see ways of refactoring the code that will make this goal easier to get to
06:35:43 <shapr> maybe you turn your parse tree handler into a per-node dispatcher
06:36:29 <shapr> you can do those refactorings without changing any unit tests
06:37:10 <shapr> what do you think? does it sound workable to you?
06:37:28 <esap> Well, the dispatcher thing might be, but I'm not sure how to actually do that.
06:37:59 <shapr> would you have to change your current unit tests to switch to a per-node dispatcher?
06:38:39 <esap> I don't have "current unit tests", so no :-)
06:38:45 <shapr> well, that's good ;-)
06:39:05 <shapr> can you write unit tests that will test your code in the same way whether it's using per-node dispatching or whatever you're doing now?
06:39:06 <esap> But the actually code is not organized like that.
06:39:47 <shapr> what do you mean?
06:40:47 <esap> I mean, I'm using algebraic data types to describe the parse tree. I have a set of data types recursively referring to each other. Then I have a set of interfaces like " primUnify :: ctx -> v -> v -> m (ctx,v)" that provide operations for the tree.
06:41:57 <esap> The problem is, when I change the algebraic data types, I have to change huge number of instances, and it takes lots of time to do that.
06:42:27 <esap> For example, by moving one constructor from one type to another.
06:42:47 <shapr> hm
06:44:05 <shapr> what makes your instances bound to each other like that?
06:44:27 <esap> They're not. They're just bound to the data types.
06:45:11 <shapr> sounds like it would be a fun challenge to refactor that
06:45:37 <shapr> have you looked at GHC and other Haskell compiler systems to see how they're doing it?
06:45:52 <shapr> are their instances also bound to the data types like that?
06:46:05 <esap> Well I've looked, I didn't see much instances at all :-)
06:46:41 <shapr> are these instances that could be automatically derived with Template Haskell or DrIFT?
06:47:18 <shapr> for example, could you associate a bit of code with each separate constructor, and sew the instance together from those bits of code?
06:47:32 <shapr> that way you could just point the code for the constructor to a different instance
06:47:51 <esap> Hmm.. I guess you could generate some of the instances automatically.
06:48:27 <esap> The original idea was that these instances would be that kind of "bit of code" :-)
06:48:29 <shapr> for the ones you can't generate automatically, you still might be able to sew bits together to make them.
06:48:40 <shapr> that makes sense
06:49:19 <shapr> can you use default code in the typeclass declaration to make things easier?
06:49:31 <shapr> maybe some of the instances have the same method implementation?
06:50:08 <esap> shapr: no, defaults are hard to write. For example, how would you write a default for that unification algorithm?
06:50:15 <shapr> I don't know :-)
06:50:24 <shapr> just trying to provide some ideas
06:51:02 <esap> Another problematic instance is I have a type class for "PpShow" which provides pretty printing.
06:51:38 <esap> and for checking for free variables, defined variables etc.
06:51:59 <esap> Maybe the problem is, I have too many of such interfaces that need to be implemented directly based on the constructors.
06:52:45 <Darius> Pretty printing could be made as a fold over the AST, as could checking for free variable, and defined variables.
06:53:35 <Darius> "Dealing with Large Bananas" has some good ideas for extensible folds, but it still a lot of work to generate the base algebras
06:54:21 <Darius> Also, have you thought about Strafunski?
06:54:31 <esap> darius: yes, I actually have that approach already for the free variables. 
06:54:48 <esap> darius: strafunski?
06:54:55 <shapr> strategy combinators
06:55:08 <shapr> http://www.cs.vu.nl/Strafunski/
06:55:13 <shapr> lambdabot: @fact strafunski http://www.cs.vu.nl/Strafunski/
06:55:13 <lambdabot> set strafunski to http://www.cs.vu.nl/Strafunski/
06:55:47 <esap> Hmm.. I need to look into strafunski.
06:55:56 <shapr> iirc, they have a circuitry strategy
06:56:23 <Darius> Strafunski has a modified DrIFT to automatically generate the necessary code from data declarations.  With that you could change it to your hearts content with little effort.
06:57:47 <Darius> And the way it setup, you'd wouldn't, for example, have to change anything about your free variable checker unless it was directly affected.
06:58:29 <esap> Hmm.. I think I definitely need to look into this thing. It seems it could solve a whole lot of my current problems.
06:59:01 <shapr> yay
06:59:32 <shapr> Darius: do you know if Strafunski could be used to design AI for real-time strategy games?
07:01:51 <Darius> I have no idea.  It doesn't seem like the same domain it targets, but that'd depend on how the "AI" was organized.
07:02:18 <shapr> I've often wanted to script unit behaviour in RTS games.
07:02:37 <shapr> since they're mostly way stupid
07:25:58 <shapr> todays new lambdabot features: plugins can have multiple commands, several system commands have been moved to plugin modules
07:26:00 <shapr> lambdabot: @listcommands
07:26:01 <lambdabot> I react to the following commands: ["fact","fortune","goodbye","hello","listchans","listcommands","listmodules","state","topic"]
07:27:24 <kunphuzil> --Welcome to #haskell, the channel for Python fans! Eh?
07:27:34 <shapr> lament added that
07:27:39 <shapr> seems there are many Python fans here
07:27:58 <mgoetze> python sux0rs
07:28:04 <mgoetze> perl forever!
07:30:45 <Marvin--> lambdabot: @topic
07:30:46 <lambdabot> don't know that channel
07:30:54 <Marvin--> lambdabot: @topic #haskell
07:30:57 <shapr> :-/
07:30:59 <shapr> some sort of bug there
07:31:04 <Marvin--> eh
07:31:19 <Marvin--> lambdabot: @topic
07:31:19 <lambdabot> don't know that channel
07:31:20 <shapr> lambdabot: @topic #haskell
07:31:20 <lambdabot> ["mo' nads than you", "We put the Funk in Funktion","See logs @ http://tunes.org/~nef/logs/haskell/", "New Hat 2.02 http://www.haskell.org/hat/", "New Learning Haskell page - http://www.haskell.org/learning.html", "GUI Demos - http://repetae.net/john/computer/haskell/gui/", "Order Haskell 98 Report in Hardcopy - http://titles.cambridge.org/catalogue.asp?isbn=0521826144","GHC 5.04.3 released!"]--Welcome to #haskell, the channel for Python f
07:31:25 <shapr> weird
07:31:29 <Marvin--> heh
07:31:33 <Marvin--> truncated
07:31:48 <shapr> I wish I could figure out why it sometimes doesn't give any topic.
07:31:57 * Marvin-- ponders making a chocolate cake
07:32:03 <psy> shapr: server desynch?
07:32:18 <shapr> bug in the code probably
07:32:56 <psy> i get it a lot on efnet, where people on certain servers can see a topic but others can't. doesn't seem to happen here
07:35:01 --- topic: set to '["mo' nads than you", "We put the Funk in Funktion","See logs @ http://tunes.org/~nef/logs/haskell/", "New Hat 2.02 http://www.haskell.org/hat/", "New Learning Haskell page - http://www.haskell.org/learning.html", "GUI Demos - http://repetae.net/john/computer/haskell/gui/", "Order Haskell 98 Report in Hardcopy - http://titles.cambridge.org/catalogue.asp?isbn=0521826144","GHC 5.04.3 released!"]' by mgoetze
07:35:52 <Marvin--> anyone feeling like promoting haskell in the #python topic? ;)
07:35:54 --- topic: set to '#python' by Marvin--
07:35:57 <Marvin--> er
07:36:02 <Marvin--> wtf
07:36:08 --- topic: set to '["mo' nads than you", "We put the Funk in Funktion","See logs @ http://tunes.org/~nef/logs/haskell/", "New Hat 2.02 http://www.haskell.org/hat/", "New Learning Haskell page - http://www.haskell.org/learning.html", "GUI Demos - http://repetae.net/john/computer/haskell/gui/", "Order Haskell 98 Report in Hardcopy - http://titles.cambridge.org/catalogue.asp?isbn=0521826144","GHC 5.04.3 released!"]' by mgoetze
07:36:11 <Marvin--> thanks
07:36:16 <Marvin--> wrong window :/
07:36:51 * Marvin-- blushes and heads for the kitchen
07:37:20 <shapr> lambdabot: @listmodules
07:37:20 <lambdabot> I have the following modules installed: ["fact","fortune","hello","state","system","topic"]
07:37:31 <shapr> lambdabot: @listcommands
07:37:31 <lambdabot> I react to the following commands: ["fact","fortune","goodbye","hello","listchans","listcommands","listmodules","state","topic"]
07:37:38 * shapr bounces happily
07:38:06 <psy> he's no pyn!
07:38:07 <psy> ;)
07:38:33 <shapr> yah, lambdabot can't yet google
07:38:55 <shapr> I've been looking into doing SOAP from Haskell, but the results have been inconclusive.
07:39:16 <psy> how does pyn's google work..i assume it just screenscrapes?
07:39:22 <shapr> I dunno
07:41:00 <shapr> lambdabot executable is 1.4MB, yow
07:41:07 * tmoertel enjoys coffee while his brain slowly begins to function again
07:41:11 <shapr> hi tmoertel!
07:41:46 <tmoertel> shapr: hello!
07:41:59 <shapr> hey, what should I do to make the factoid module safer?
07:42:03 <shapr> what sort of input checking?
07:42:17 <tmoertel> just change the escpaing routing a bit
07:42:24 * tmoertel pulls up emacs
07:43:18 <tmoertel> in particular, you must all delimiters and escape characters
07:43:32 <tmoertel> right now, you can end an input string w/ backslash
07:43:40 <tmoertel> which causes the quoting to break
07:43:43 <shapr> oh, I see
07:44:05 <tmoertel> it would probably be better, however, to use SQL lib calls that use placeholders
07:44:26 <shapr> as in, check to see if postgresql has sanitizing code of its own?
07:44:53 <tmoertel> INSERT INTO table fact (fact, value) VALUES (?, ?)
07:45:01 <shapr> oh
07:45:33 <tmoertel> I wonder if HSQL supports preparing . . .
07:45:39 * shapr looks
07:46:26 <tmoertel> untick x | x `elem` specials = ['\\', x]
07:46:27 <tmoertel>          | otherwise         = [x]
07:46:29 <tmoertel>     where
07:46:30 <tmoertel>     specials = "\\\'"
07:49:04 <shapr> I don't see placeholders or prepared statements in HSQL
07:49:50 <tmoertel> then maybe the best we can do is to use a more robust escaping routine
07:49:55 <shapr> yah, looks like it.
07:50:02 <shapr> or extend the HSQL binding :-)
07:50:07 <shapr> maybe not today though
07:50:08 <tmoertel> I'm not sure if "\\\'" is an exhaustive list of specials
07:51:13 <shapr> I also don't know
07:53:46 <shapr> lambdabot: @fact foo\ bar
07:53:47 <lambdabot> set foo\\ to bar
07:53:57 <shapr> lambdabot: @fact foo\' bar\
07:53:57 <lambdabot> set foo\\\' to bar\\
07:54:01 <shapr> :-)
07:54:14 <shapr> lambdabot: @fact delete foo\'
07:54:14 <lambdabot> deleted foo\\\'
07:54:18 <shapr> lambdabot: @fact delete foo\
07:54:18 <lambdabot> deleted foo\\
07:55:01 <shapr> now that I have multiple commands per plugin, I could make delete a top level command.
07:56:43 <tmoertel> or make it @fact @delete
07:57:36 <shapr> I'd like to change the command syntax to ", <cmd>"
07:57:55 <shapr> the "lambdabot: @<cmd>" syntax seems too verbose
07:58:44 <tmoertel> but the verbose syntax has the advantage of being clear in logs
07:58:54 <Darius> and not accidentally used
07:59:11 <shapr> do people accidentally start sentences with comma?
07:59:24 <psy> ,crazy europeans'
07:59:25 <tmoertel> chat clients might break lines in bad places
07:59:27 * shapr grins
07:59:29 <Darius> Continuing a line and just typos, it would be an accident
08:00:35 <shapr> hm
08:01:46 <shapr> the leading comma syntax has been used for fsbot successfully on #emacs, #scheme, #hurd, and some other channels
08:01:48 <shapr> I think it will work.
08:05:11 <Riastradh> shapr - On #scheme?  When was this?
08:05:29 <shapr> er, I thought fsbot was being used on #scheme
08:05:34 <Riastradh> Nope.
08:05:42 <shapr> ScBot?
08:05:48 <Riastradh> Nope.
08:05:51 <shapr> oh, whoops
08:05:54 <shapr> that's the science bot
08:06:29 <shapr> nm :-)
08:06:30 <Riastradh> 'sarahbot,' a bot written by FoxFire (Scott G. Miller), who also inhabits #sisc, and who uses 'sarahbot: foo', which people seem to be content with.
08:07:03 <shapr> well, I'll try the leading comma syntax, if people think it sucks or causes accidental operations, tell me
08:07:06 <shapr> and then I'll change it back.
08:07:31 <Riastradh> I like the current lambdabot syntax, but oh well.
08:07:47 <shapr> I'll keep for backwards compatibility :-)
08:11:43 <shapr> I want to write a Haddock plugin, but I don't quite understand the Haddock sources
08:15:12 <shapr> Riastradh: ok, I'll leave the syntax alone for the moment.
08:27:21 * shapr reads Haddock sources
08:27:38 * Riastradh yells Captain Haddock curses.
08:27:53 <shapr> Cry Haddock! and let loose the Frogs of War!
08:27:58 * shapr ribbits
08:28:11 <Riastradh> Er, no, that's not what I was referring to.
08:28:22 <shapr> not ShakeSpear?
08:28:28 <shapr> the famous frog hunter?
08:28:35 <Riastradh> 'Billions of billious blue blistering barnicles!' and the like.
08:28:48 <shapr> er
08:28:51 <Riastradh> Or 'thousands of thundering typhoons!'  'Ectoplasmic fresh-water pirate!'  'Salamander!'
08:28:54 <shapr> Captain Haddock in Tin-Tin?
08:28:59 <Riastradh> Of course!
08:29:01 <shapr> aha
08:29:10 <shapr> I've only read one Tin-Tin book, and it was in French.
08:30:21 * Riastradh has every single one that was ever published as a book.
08:30:39 <Riastradh> Including 'Tintin in the Land of the Soviets,' which was only released recently, and which was the first one ever to be written.
08:30:58 <Riastradh> And including 'Tintin in the Congo,' which was never translated to English because it was too racist or something.
08:31:52 <Riastradh> (my copy of 'Tintin in the Congo' is in French, of course)
08:33:28 <shapr> optimized code that crashes ghci is not good.
08:34:16 <Marvin--> shapr: you reckon'?
08:34:46 <shapr> yes, I reckon that's true.
08:35:00 <shapr> I'd prefer a slow Haddock that I could load into ghci and play with interactively
08:37:20 <shapr> I wonder if someone has already filed a bug for this
08:48:31 * andersca bounces
08:48:33 * shapr boings
08:48:37 <shapr> hi andersca, wassup?
08:48:49 <shapr> you're back in the sunny south?
08:48:53 <andersca> yep
08:49:20 <andersca> although it's more like the windy south
08:50:15 * shapr gets lots in the Haddock sources
08:50:19 <shapr> er "lost"
08:54:20 <opet> lol
09:29:09 <shapr> oy
09:29:28 <Janni> re
09:29:32 <shapr> hi Janni 
09:37:59 <shapr> anyone feel like making a haskell-libs logo? :-)
09:41:19 <shapr> I wish I had access to a table
09:41:20 <shapr> tablet
09:42:59 <Darius> Me too, a nice Intuos.  Ever use Procreate Painter 7?
09:43:20 <shapr> last time I used a tablet with commercial software, it was Painter 3.0 on a Mac IIci
09:44:15 <Darius> Painter 7 is a beautiful program
09:45:04 * shapr wonders whether lambdabot is ready for a 1.0 release
09:46:22 <shapr> anyone working on plugins for lambdabot ?
09:47:52 <shapr> I think it is.
09:47:56 <shapr> time for 1.0
09:48:10 <tmoertel> shapr: where are you using Util.hs ?
09:48:26 <shapr> in one or two places in Main.hs
09:48:35 <shapr> splitFirst is used to cut things at colons
09:49:05 <tmoertel> I'm tweaking Util.hs presently
09:49:08 <shapr> yay!
09:49:32 <tmoertel> but the tweaks change the types because I allow split/join on strings not just chars
09:49:39 <shapr> ooh, spiffy =)
09:49:59 <shapr> I would find that useful
09:50:13 <tmoertel> I'll have something shortly
09:50:49 <shapr> how can I make an earlier version of a file the most recent one in cvs?
09:51:05 <shapr> I'd like to make v1.1 of TopicModule.hs the latest and most current
09:51:09 <shapr> since the later versions are broken
09:53:20 <Heffalump> you just have to revert the patches since
09:53:38 <shapr> I'll try that, thanks
09:54:02 <Heffalump> (and then check in a new version)
09:54:08 <Heffalump> there's no way to make 1.1 the latest if 1.2 exists
09:54:14 <shapr> oh
09:55:23 <tmoertel> cvs update -j1.2 -j1.1 module.hs
09:55:57 <tmoertel> then commit as 1.3
10:10:51 <shapr> Message: cvs server: sticky tag `1.1' for file `TopicModule.hs' is not a branch
10:11:17 <Heffalump> do a cvs update -A first
10:11:27 <Heffalump> and replace 1.2 with whatever the latest version is
10:11:34 <Heffalump> in fact, use -jHEAD instead
10:11:37 <shapr> ok
10:29:38 <tmoertel> gotta run, cya
10:29:43 <shapr> cya
10:30:04 <shapr> it seems that I had gotten a sticky tag somehow
10:30:11 <shapr> and needed to use cvs update -A to get rid of that
10:30:18 <Heffalump> well, if you were working with 1.1 you probably did update -r1.1
10:30:22 <shapr> yah, I did
10:30:24 <Heffalump> which will create one
10:30:30 <shapr> news to me...
10:30:32 <shapr> now I know.
10:30:43 <shapr> tmoertel: send in Util.hs updates when you get time!
10:32:17 <shapr> lambdabot 1.0 is happening soon, any contributions/changes/ideas/etc should be mentioned asap.
10:35:23 <tmoertel> shapr: checked in
10:37:07 <shapr> yay!
10:37:09 <shapr> thanks!
10:50:49 <shapr> re Smerdyakov 
11:04:02 <esap> Strafunski has quite strange uses of dynamic type representations. Kind of reminds me of C++'s sizeof() hackery, but dynamically. Very strange.
11:17:04 * shapr bounces
11:22:58 * esap blinks.
11:23:04 * shapr squints
11:24:58 * esap looked at Strafunski.
11:25:24 <shapr> did it look back?
11:25:45 <Vincenz> hmm, odd how haskell channel is always filled with talk and ocaml isn'
11:25:49 <esap> heh. Yea, Dynamic type representations looked back.
11:26:06 <shapr> Vincenz: we have lots to talk about ;-)
11:26:22 <Vincenz> hehe :)
11:26:27 <shapr> Vincenz: actually, I don't know...
11:26:43 <Vincenz> somehow makes me want to learn haskell instead :P
11:26:51 <shapr> that would be okay with me =)
11:27:08 * shapr updates lambdabot for the zillionth time today
11:27:30 <shapr> refactoring can be much fun
11:27:35 <shapr> lambdabot: @listcommands
11:27:35 <lambdabot> I react to the following commands: ["fact","fortune","goodbye","hello","listchans","listcommands","listmodules","state","topic"]
11:28:35 <mgoetze> lambdabot: @fortune
11:28:45 <Vincenz> lambdabot: @fortune
11:28:45 <lambdabot> 	The boss returned from lunch in a good mood and called the whole staff
11:28:45 <lambdabot> in to listen to a couple of jokes he had picked up.  Everybody but one girl
11:28:45 <lambdabot> laughed uproariously.  "What's the matter?" grumbled the boss. "Haven't you
11:28:45 <lambdabot> got a sense of humor?"
11:28:45 <lambdabot> 	"I don't have to laugh," she said.  "I'm leaving Friday anyway.
11:28:49 <shapr> mgoetze: you have to do it twice the first time :-/
11:28:51 <Marvin--> it doesn't like you, mgoetze :P
11:28:57 <Vincenz> lambdabot: @fortune
11:28:57 <lambdabot> The nation that controls magnetism controls the universe.
11:28:57 <lambdabot> 		-- Chester Gould/Dick Tracy
11:29:25 <mgoetze> lambdabot: @listchans
11:29:25 <lambdabot> I am on these channels: ["#haskell","#joy"]
11:29:25 <shapr> I need to fix that
11:29:44 <shapr> right now, everything that requires per-plugin state has to be called the first time to initialize the state
11:29:49 <shapr> then the second time it works right
11:30:33 <shapr> I'm planning on a lambdabot 1.0 release on or near wednesday, so if you want to contribute something, tell me soon.
11:32:28 <shapr> hej dennisb
11:32:35 <shapr> hur är det med dig?
11:33:07 <dennisb> I'm fine. Have been in England most of the week
11:33:12 <Heffalump> ah, it was you.
11:33:12 <shapr> coool!
11:33:18 <dennisb> It was me?
11:33:21 <Heffalump> I should have introduced myself, but I couldn't remember your surname.
11:33:22 <Vincenz> hmm I just looked at all the dox I have on haskell, most of them are on a specific interpreter...
11:33:22 <Heffalump> at APPSEM
11:33:29 <dennisb> Nooooo
11:33:36 <dennisb> You was there. I looked in the list of names
11:33:42 <dennisb> I didn't see you
11:33:56 <Heffalump> oh, I saw you, I just wasn't certain if I remembered your surname right.
11:33:58 <dennisb> Your name is not that hard to find, I thought
11:34:13 <Heffalump> I spent most of Wednesday being ill, which didn't help
11:34:25 <shapr> I would have jumped up and down and yelled about Heffalumps
11:34:30 <Heffalump> sorry, I should have been less shy :-)
11:34:42 <dennisb> This is so stupid, I could have talked to you in person...
11:34:51 <shapr> dennisb: come to HW!
11:35:06 * Heffalump isn't certain he'll make it to PLI this year
11:35:07 <dennisb> Heffalump: was you on the list of participants on the webpage?
11:35:12 <Heffalump> dennisb: yeah
11:35:18 <Heffalump> except spelt slightly wrong
11:35:25 <Heffalump> (they had my name as "Ganeth Sittampalam")
11:35:32 <shapr> Heffalump: not coming to HW?
11:35:38 <dennisb> I thought I looked for you before I left (I guessed that you could have been there)
11:35:53 <Heffalump> shapr: not certain - I hope to make it
11:36:02 <shapr> yes, please show up
11:36:20 <Heffalump> dennisb: I left right after the last session (not the steering committee meeting) on Friday
11:36:21 <dennisb> I had a fun trip home. Took a train yesterday at 6.30 (english time) and it broke down in the middle of nowhere
11:36:27 <Heffalump> oh dear :(
11:36:27 <shapr> if we're really lucky, #haskell will be empty and we can do it in person for once =)
11:36:27 <dennisb> almost missed my flight
11:36:32 <Heffalump> shapr: heh
11:36:58 <mgoetze> shapr: i'll be here :P
11:37:10 <shapr> mgoetze: ok, you hold the fort.
11:37:41 <mgoetze> you can leave lambdabot here for me to play with :)
11:37:44 <shapr> yay!
11:37:47 <shapr> good idea!
11:37:53 <dennisb> We all had to get of the train, almost no houses, just a lot of sheeps. I was supposed to change train later on to get to the airport, luckily the train that came after that picked us up was going directly to the airport
11:38:08 <dennisb> Otherwise I would still have been there..
11:38:29 <Heffalump> which airport?
11:38:34 <dennisb> Manchester
11:39:05 <Heffalump> ah. cheap flight? :-)
11:39:10 <dennisb> But I did get to see the english landside, green hills and lots of sheeps
11:39:17 <dennisb> cheap is good
11:39:17 <Heffalump> sheep is the plural of sheep
11:39:20 <dennisb> aha
11:39:30 <dennisb> I did get to see a lot of sheep then
11:39:39 <Heffalump> exciting, aren't they? :-)
11:39:45 <Marvin--> sounds like when I was in Holland... green hills and lots of sheep
11:39:50 <Marvin--> more windmills though, I bet
11:39:51 <Heffalump> oh, and I'm just waiting for the new language Norell from Chalmers.
11:40:12 <dennisb> He was going together with me on the train that broke down
11:41:16 <dennisb> Heffalump: where can I find an image of you on the web?
11:41:26 <Heffalump> http://www.ox.compsoc.net/~ganesh/
11:41:32 <dennisb> maybe I can remeber if I saw you do something embarrasing or so :)
11:42:08 <Heffalump> if you'd followed me at 9:40 or so on Wednesday morning out of SPJ's talk you'd have seen me puke up :-)
11:42:09 <dennisb> Doesn't ring a bell
11:42:09 <Marvin--> haha
11:42:28 <dennisb> Heffalump: what a sight it would have been
11:42:39 <dennisb> it was the second time I saw SPJ's talk
11:42:51 <Heffalump> he's given the hair shirt one elsewhere?
11:43:13 <dennisb> but the first time it was delivered by John Hughes that had seen it somewhere
11:43:25 <dennisb> I'm pretty sure it's the same talk (or maybe a version of it)
11:43:26 <Heffalump> ah :-)
11:43:32 <Heffalump> John is good at delivering other people's talks
11:43:41 <dennisb> yes
11:43:48 <Heffalump> he did that in Oxford just before my viva
11:44:43 <dennisb> He does that every once in a while when he comes back to chalmers after having been on a trip
11:45:18 <dennisb> Actually, it's not just him, it's pretty common that we do that when we have seen talks
11:45:55 * dennisb is still irritated that he didn't ask before leaving if someone here was going there..
11:46:10 <Heffalump> I was at FoP at the beginning of the week
11:46:24 <Heffalump> otherwise I'd have checked with you, cos I saw the name Dennis Bjorklund on the webpage beforehand
11:46:27 <dennisb> Not me, would also have been fun
11:46:33 <Heffalump> it was just I didn't have time, so I didn't check your surname before I left
11:47:16 <Heffalump> I spotted you and hoped you might recognise me, but I didn't want to embarrass myself by asking if you were from IRC if you weren't, which was silly of me :-)
11:47:35 <shapr> dennisb: are there pictures of you online?
11:47:51 <Marvin--> Heffalump: coward :)
11:48:01 <Heffalump> I know, I know :-)
11:48:53 <dennisb> shapr: I don't know. Probably
11:49:09 <dennisb> I can dig some up and show you all some time
11:49:16 <shapr> yay!
11:49:40 <Marvin--> steal the one from the entrance :)
11:49:53 <dennisb> Heffalump: well, no problem. We probably would not had much to say without a keyboard for typing :-)
11:50:20 <Heffalump> heh :-)
11:50:21 <dennisb> Marvin--: I have actually planned to do that for a time
11:50:45 <dennisb> The same picture is outside the office too, easier to pull down and put into the scanner
11:50:58 <shapr> it is weird how a keyboard makes talking easier sometimes
11:52:44 <dennisb> shapr: it is actually true, but a little alcohol can also help
11:52:49 <shapr> yes, I agree.
11:53:10 <Marvin--> heh, we'll have to pour a beer or two into shapr and watch him get drunk at ICFP
11:53:11 * Heffalump wasn't drinking at all thanks to upset stomach
11:53:14 <Heffalump> :-)
11:53:25 * Heffalump is definitely going to have to find a reason to go to that, methinks.
11:53:33 <Heffalump> pity I'm unlikely to have a paper anywhere
11:53:33 <shapr> yes yes! come to ICFP/HW!
11:54:07 <Marvin--> unless someone's interested in my master project, me neither, but I want to go anyway
11:54:33 <dennisb> The hotell managed to withdraw an extra £180 from my Visa.. Not very fun. Have to try to get them back tomorrow..
11:54:35 <shapr> if you can, bring something to code with/on
11:54:44 * Marvin-- has a laptop
11:54:48 <shapr> I have a weenie 233MHz laptop
11:55:07 <Marvin--> "Submission deadline   18:00 EST 29 March" well, dang :)
11:55:09 <shapr> good enough for coding though
11:55:32 <dennisb> I don't have one, but If I get one and go there, will you make sure there is a wireless lan and a chat server there?
11:55:39 * shapr grins
11:55:41 <shapr> good idea!
11:56:04 <shapr> I don't have a wireless card, just ethernet
11:56:19 <dennisb> laptops are not that expensive any more (well, compared to a year or two ago)
11:56:45 <Marvin--> the HW has May 22 for deadline though
11:56:50 <Marvin--> hurry, everybody :)
11:56:59 * shapr writes a paper on lambdabot 
11:57:26 <shapr> "Interactive Applications of Purely Functional Systems."
11:57:31 * shapr laughs
11:58:29 <shapr> "We first implement our interactive application using monads, and then switch to using arrows [9]. We compare the effort involved and the net results."
11:59:31 <Marvin--> oh yeah, maybe I should think of a new preliminary title now that I know what the heck I'm doing
11:59:35 <shapr> yah, good idea
12:01:24 <Marvin--> right now I'm working on the lets, *sigh*
12:01:45 <Janni> lambdabot: @fact let
12:01:45 <lambdabot> embodiment of the 3V1L
12:02:38 <Marvin--> if I have   f x... = let g y... = e1 in e2[g e...]   I *think* I can transform that to   f x... = e2[g e... x...] ; f_g y... x... = e1   but I don't know if that's general enough
12:04:11 <Janni> Wouldn't "where" be much nicer? :)
12:04:31 <Marvin--> doesn't help
12:04:53 <Marvin--> if I'm parsing haskell, I can't really say "nah, you're not allowed to use let, sorry"
12:05:36 <Janni> Ah, didn't know what you were doing (thus what your problem was)
12:06:07 <Marvin--> yeah I'm just thinking aloud
12:06:16 <Janni> But if you _really_ hated lets as I do or even more, you could only allow a subset of Haskell (as NHC does) and not allow lets :)
12:06:35 <Marvin--> I already have a subset of Haskell, Helium
12:06:48 <Marvin--> and it's handy to transform case and if to let, so :)
12:06:51 <Janni> Fortunately, I'm not thinking loud on IRC, otherwise it'd be very awkward...
12:07:36 <Janni> Marvin: What's that Helium about? Some URL to read?
12:08:30 <Marvin--> lambdabot: @fact helium
12:08:30 <lambdabot> http://www.cs.uu.nl/~afie/helium/
12:09:07 <Janni> lambdabot: thx
12:09:07 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
12:09:18 <Janni> lambdabot: np
12:09:19 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
12:09:36 <Marvin--> Janni: give it up ;)
12:10:07 <Heffalump> dennisb: are you sure they didn't just reserve £180, and then actually debit the £180 as a separate transaction, leaving the reserved £180 reducing your credit limit until it expires?
12:10:12 <Vincenz> lambdabot: you're not a very smart bot
12:10:12 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
12:10:26 <Heffalump> (i.e. are there actually two separate transactions on your account?)
12:11:13 <Janni> Vincenz: no, no. that's the wrong way, you have to provide the right questions
12:11:15 <Janni> lambdabot: what kind of bot are you?
12:11:15 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
12:11:37 <lambdabot> Vincenz: I'm getting smarter!
12:11:46 <Vincenz> lol
12:22:25 <Marvin--> arhg
12:22:36 <Marvin--> I find myself needing a zillion helper functions, and can't think of good names for them
12:23:47 * Heffalump never can either
12:25:09 * shapr wonders what to code on next
12:25:37 <Marvin--> so now I have a recursive function trLet, with a help function trLetExp that uses trLet, fixCall and foo
12:25:52 <shapr> haddock is a pin
12:25:54 <shapr> pain
12:26:17 <Janni> shapr: How about a vector graphics program? There isn't one for unix...
12:27:15 * Janni is just expressing the pain he suffers from that fact
12:29:01 <shapr> what about sodipodi?
12:29:02 <Marvin--> are nested where:s nasty? :/
12:29:17 <Janni> shapr: GNOME
12:29:24 <shapr> ?
12:29:26 <shapr> huh?
12:29:41 <Janni> shapr: It needs Gnome-libraries. I don't want to install them
12:29:43 <shapr> oh
12:29:49 <shapr> well then :-)
12:29:54 <Marvin--> Janni: what does "for unix" mean to you then?
12:29:57 <shapr> yah, really
12:30:09 <Marvin--> I think the concept of a desktop environment is great, I love gnome-vfs for example
12:30:18 <Janni> I'm using FreeBSD.
12:30:24 <shapr> I think I'll try to do the Oleg thing on HWS-WP
12:30:32 <Janni> Marvin: ah, I know what you mean
12:30:48 <Marvin--> what gnome needs is a new open dialog that *uses* gnome-vfs :-)
12:31:14 <shapr> Marvin--: I'd like to turn HWS-WP into something like J2EE with a lot of built-in services, any suggestions for how to do that?
12:31:23 <Marvin--> shapr: no
12:31:26 <shapr> ok :-)
12:31:31 <Marvin--> shapr: well, maybe "run"?
12:31:35 * shapr laughs
12:31:41 <Marvin--> ruuuunnnn toooo the hiiiiills
12:31:50 <Janni> Marvin: I prefer minimalistic solutions like FLWM (fast light window manager)
12:32:30 <Marvin--> Janni: I have a 1.4GHz athlon, I have 256M memory, I have 100G hard disk space. I prefer cooperating programs
12:33:10 <Janni> Marvin: I'd stick to FLWM even with a 58.2 GHz processor
12:33:19 <Marvin--> Janni: if you want minimalistic solutions, why are you using X at all?
12:33:45 <Janni> Marvin: If I want minimalistic solutions, why am I using a computer at all?
12:34:19 <Marvin--> I'm sorry, I really really don't understand the "minimalistic" position
12:34:49 <Janni> Marvin: That littel piece of software just provides everything I need.
12:35:21 <Marvin--> Janni: good for you, I'm not talking about window manager, I'm talking about desktop environment
12:35:38 <Marvin--> i.e. common ground for applications so they can cooperate to make life easier for the user
12:36:11 <Marvin--> I'm not using gnome as window manager myself, I use windowmaker, but I use a lot of gnome applications
12:37:25 <Janni> If there were a lot of gnome applications I wanted to use I'd install all that libraries
12:39:40 <Marvin--> like I said, space is not a concern for me, even one interesting gnome application would make me install the libraries
12:40:03 <Marvin--> which is exactly why I have kde libs installed as well, I don't generally like kde but there are kde programs that I can imagine using
12:40:33 * Marvin-- thinks kde is really ugly :)
12:44:50 <Igloo> Anyone know how to make nhc use heirarchial libs?
12:45:03 <shapr> use the version released last week?
12:45:09 <Igloo> I am
12:45:11 <shapr> oh
12:45:29 <shapr> that's the extend of my knowledge
12:45:34 <shapr> er "extent"
12:45:48 <shapr> I've started typing mych and then correcting myself %-)
12:45:52 <shapr> I'm learning swedish all too well.
12:49:52 <Marvin--> this function is hideous
12:50:00 <shapr> dysfunctional
12:51:07 * Igloo sighs - hardcoded paths in /usr/local too
12:51:15 <shapr> yow
12:51:28 * Igloo gives up on hmake, nhc and hat again
12:51:31 <shapr> :-(
12:51:39 <shapr> I like hmake
12:51:58 <Igloo> Static config is a PITA
12:52:03 <shapr> I'll start using nhc98 lots when they release the nhc98 runtime system that's been ported to PalmOS
12:52:17 <shapr> I can barely contain my impatience for that 8-O
12:53:47 * Marvin-- is watching The Thomas Crown Affair
12:53:51 <Marvin--> the new one
12:53:53 <shapr> fun movie
12:53:57 <shapr> very much fun
12:54:09 <Marvin--> I love the part with all the guys with bowling hats :)
12:54:13 <shapr> me too
12:54:22 <shapr> have you seen Entrapment?
12:54:34 <shapr> it's along the same lines as TCA, but better
12:55:17 <Marvin--> no, haven't seen it
12:55:38 <shapr> it has Zeta-Jones and Sean Connery in it
12:55:45 <Marvin--> I think the new TCA is better than the old one :)
12:55:48 <Marvin--> oh wait, I think I have seen it
12:55:52 <shapr> I haven't seen the old one
12:56:01 <shapr> have you seen the Hudsucker Proxy?
12:56:20 <shapr> Hudsucker Proxy is a great movie, but it's a movie with a punchline...
12:56:32 <shapr> spoiled by huge pictures on the outside of the box :-(
12:56:53 <shapr> so if you haven't seen it, rent it but don't look at the cover till after the movie
12:57:08 <Marvin--> heh
12:57:14 <Marvin--> I saw Hudson Hawk, very amusing :)
12:57:18 <shapr> I haven't seen it
12:57:41 <Marvin--> underestimated, in my opinion, some people don't understand that it's a parody
12:58:51 <shapr> do you think the lambdabot StateT + Record trick would be good for HWS-WP?
12:59:04 <dennisb> Heffalump: I don't think so. It usually says "reserved xxx" or something then. But it could be something like that
12:59:05 <Marvin--> I mean, you got these master thieves, sneaking silently silently into the walve, which is heavily guarded
12:59:11 <shapr> walve?
12:59:13 <Marvin--> and all the while singing loudly ;)
12:59:38 <Marvin--> er, sorry, vault
12:59:45 <shapr> oh hey... Beatrice said HWS-WP should be named Hopi 
12:59:51 <shapr> you know the Hopi indians?
13:00:00 <Marvin--> no
13:00:21 <shapr> they were a few hundred kilometers from the Apache, but you get the idea :-)
13:00:27 <Marvin--> siiiigh :)
13:00:38 <shapr> Haskell O-something Plug-In = HOPI =)
13:00:48 <shapr> what do you think?
13:01:00 <shapr> I was very amused to hear such a geeky joke from my woman 
13:01:15 <Marvin--> I bet ;)
13:01:39 <shapr> I haven't figured out what the O stands for yet
13:03:39 <lament> Oh-my-god
13:03:45 <Marvin--> *HeliumFrontend> let Program [decl] = parseString "f x = let g y = [x,y] in g x"
13:03:45 <Marvin--> *HeliumFrontend> decl
13:03:45 <Marvin--> DFun (TyVar "a") "f" [PVar "x"] (ELet [DFun (TyVar "a") "g" [PVar "y"] (ECon "Cons" [EVar "x",ECon "Cons" [EVar "y",ECon "Nil" []]])] (EFun "g" [EVar "x"]))
13:03:45 <Marvin--> *HeliumFrontend> trLet decl
13:03:45 <Marvin--> [DFun (TyVar "a") "f" [PVar "x"] (EFun "f_g" [EVar "x",EVar "x"]),DFun (TyVar "a") "f_g" [PVar "y",PVar "x"] (ECon "Cons" [EVar "x",ECon "Cons" [EVar "y",ECon "Nil" []]])]
13:03:48 <Marvin--> coolies, seems to work
13:04:05 <shapr> yay working code!
13:08:17 <Marvin--> hmm, no, not really :)
13:08:19 <Marvin--> dng
13:08:29 <Marvin--> let f x = g y = h z = g z in ...
13:08:43 <Marvin--> f x = let g y = let h z = g z in ... that is
13:08:57 <Marvin--> it misses that g changes name
13:12:27 <Marvin--> eek, less than two weeks to my interview, should I start getting spooked?
13:13:07 <shapr> till your Ph.D. interview?
13:13:28 <shapr> wow, lambdabot is much faster when he doesn't have to write to stdout
13:13:29 <mgoetze> "eyes wide shut" is such a bloody good movie
13:13:35 <shapr> haven't seen it
13:13:55 <mgoetze> shapr: do.
13:14:16 <shapr> I probably won't
13:14:26 <shapr> I boycott movies with scientologists in them.
13:14:29 <mgoetze> (especially seeing as you want to get married, har har ;) )
13:14:29 <Marvin--> shapr: yes, that's the one
13:14:43 <mgoetze> shapr: who's the scientologist, tom cruise?
13:14:46 <shapr> yup
13:16:00 <Marvin--> Tom Cruise is a scientologist?
13:16:02 <mgoetze> shapr: you know, the average movie nowadays has several hundred people working on it. do you check everyone of them? :)
13:16:34 <dennisb> Marvin--: He is
13:16:53 <Marvin--> wonder if he'd take a role playing a scientologist
13:17:05 <Marvin--> dennisb: scary
13:17:05 <shapr> mgoetze: from what I've heard, scientology is about finding stupid people with money, and taking their money.
13:17:17 <dennisb> and so is John Travolta
13:17:26 <Heffalump> apparently they don't take much from the really rich people with money, though
13:17:29 <Heffalump> just use them for publicity
13:17:44 <shapr> whether or not that's true, they're the only non-profit church I've seen who's successfully sued people into not disclosing information about that church
13:18:08 <Marvin--> Heffalump: I thought Tom Cruise and John Travolta *were* rich
13:18:30 <dennisb> shapr: the movie is good though, I even have it on DVD
13:18:38 <shapr> so I put the church of scientology several notches below the RIAA and the MPAA on my list.
13:18:41 <Marvin--> wonder what happened to that bible here in Sweden
13:19:07 <shapr> I vaguely recall that the church of scientology had some trouble in sweden and germany
13:19:19 <mgoetze> shapr: well, i chose the film because it's from stanley kubrick, who's a fscking genius, and not because i happen to agree with scientology :)
13:19:20 <Marvin--> yes, someone turned it in as evidence or something, so it's public material
13:20:00 <shapr> mgoetze: yah, kubrick is good.
13:20:08 <Marvin--> mgoetze: Kubrick has done good and bad, I love 2001 and Clockwork Orange, but I wasn't at all impressed by Full Metal Jacket
13:21:30 <mgoetze> Marvin--: well, hm, i'm not quite sure what to think of full metal jacket. i'd at least say it was interesting in some way
13:21:32 <dennisb> Marvin--: and in some strange way it was stolen, but before that the scientolog people turned up every day to borrow it and sat there reading it so no one else could do it
13:22:01 <Marvin--> dennisb: yes I knew about the borrowing, but I didn't know it was stolen
13:22:12 <Marvin--> don't they make archival copies of evidence?
13:22:29 <dennisb> I'm like 94% sure about it being stolen
13:22:40 <Marvin--> well I wouldn't be surprised :)
13:22:56 <mgoetze> shapr: besides, you get to see nicole kidman naked... lol
13:23:45 <dennisb> or maybe it was just decided that it shouldn't be there and removed, it's a fun story though
13:23:58 * shapr grins
13:24:38 <mgoetze> shapr: in fact, if you watch just the very beginning, you get to see nk naked, but you don't have to see tc! how's that! though, of course, you'd be missing out on the wonderful movie...
13:25:14 <Marvin--> mgoetze the diplomat
13:30:49 <dennisb> I'm sure google also would work if he doesn't want to watch the movie
13:30:59 <Marvin--> heh
13:31:13 * Marvin-- wonders how to piece together his D&D character
13:31:52 <mgoetze> Marvin--: hm, anything particular i could give you advice on? :)
13:32:16 <Marvin--> mgoetze: how the hell do I afford both a magical sword, a heavy warhorse and a decent piece of armor?
13:32:32 <Marvin--> (the DM has given us 2700gp for eq, which is a HINT HINT GET A MAGICAL WEAPON)
13:32:37 <mgoetze> lol
13:32:49 <mgoetze> what class(es)?
13:33:07 <Marvin--> I'll probably go with a fighter this time, my gnome rogue was unpopular :P
13:33:15 <Marvin--> which is why I want armor and warhorse
13:33:21 <mgoetze> fighters are expensive, lol
13:33:27 <shapr> I had a human psionicist once...
13:33:35 <shapr> no arms, no legs, but he had telekinesis.
13:33:43 <Marvin--> I'm thinking a hedge knight, working as sellsword
13:33:48 <shapr> so he floated everywhere... his name was Bob, of course.
13:33:48 <Marvin--> shapr: heh
13:33:58 <Marvin--> shapr: I think the naming rules say "NO BOBS!"
13:34:01 <Marvin--> in D&D
13:34:14 <shapr> well, he lost his powers for a bit and everyone called him matt
13:34:21 <shapr> doormatt
13:34:45 <mgoetze> Marvin--: well, personally, i'd just go for a masterwork weapon. if you run into something with damage reduction, it'll be crap, but you'll be able to afford all the other stuff at least :)
13:35:33 <Marvin--> mgoetze: we're starting out at level 3, and I'm pretty sure that with that much money, we're meant to get magical weapons
13:36:11 <mgoetze> actually, i think that value is just what happens to be listed in the DMG as reasonable for 3rd level... ;)
13:36:45 <Marvin--> put it this way, a level 1 fighter normally starts 6d4 x 10 gp, so I wouldn't be having anything fancy at all
13:37:06 <Marvin--> mgoetze: probably, but I think it's also very likely that you find a magical piece of equipment somewhere between level 1 and 3
13:37:33 <mgoetze> well, a masterwork weapon will put you back at least 2300
13:37:52 <Marvin--> shapr: yup, the three don'ts :) "Don't #1: No Bobs."
13:38:06 <shapr> what're the other two?
13:38:19 <dennisb> #2: Don't follow #1
13:38:19 <Marvin--> "No Merlins" and "No Joke Names"
13:38:34 <mgoetze> i mean, sure, you're a fighter, but i don't think that 70% of your money is worth the 1 extra damage you'll normally be getting
13:39:04 <Marvin--> it's not a question of the extra damage, I think, but that you can hit much meaner things with magical weapons than with mundane :)
13:39:21 <Marvin--> or so I think, I haven't played a lot of D&D, I just got told that I'd better get a magical weapon
13:39:28 <mgoetze> that's a special case, though :)
13:39:41 <mgoetze> i guess at level 3 you might run into some damage reduction +1/5 things
13:40:08 <mgoetze> which means that 5 of your damage from each hit doesn't get through unless you have at least a +1 weapon
13:40:28 <mgoetze> but they should still be beatable, especially if you have a sorcerer or something like that in your group
13:40:41 <Marvin--> wouldn't count on many magic users
13:40:56 <mgoetze> well, count on someone else getting a magic weapon, then :)
13:41:00 <mgoetze> really, it's not worth it
13:41:03 <Marvin--> I think I'll stick with the magical sword idea, I'm supposed to be poor anyway
13:41:24 <Marvin--> I was already having second thoughts about my poor guy having a full plate armor and lots of other fancy things
13:41:35 <mgoetze> one day, you'll find a *good* weapon, and then you'll think, geez, what'd i chuck all that money away for this puny sword for?
13:41:52 <Marvin--> "because the DM told me"? :)
13:42:13 <mgoetze> that's a bad reason :)
13:42:23 <tic> 2nd reality on nectarine
13:42:29 <tic> (mix of it, at least)
13:43:00 <mgoetze> just think of all the other cool stuff you can get with the 2000gp you'll be saving by not buying a magic weapon
13:43:03 <Marvin--> look, I'm not playing to have a power character, I'm playing because I think it's fun roleplaying, and the character idea I have *is* a poor fellow, and if someone else in the gang says "you better have a +1 sword, just a hint" I say "fine"
13:43:26 <mgoetze> no decent suit of armor for you, then :P
13:44:16 <Marvin--> *shrug* the difference isn't *all that* big
13:44:31 <mgoetze> btw, swords are the pinnacle of powergaming, lol
13:44:45 <Marvin--> with a non-plate armor I can have a higher dex bonus
13:45:07 <mgoetze> (they pretty much do the most damage of weapons in a given size category)
13:45:33 <Marvin--> well, that's what swords were invented to do
13:45:40 <Marvin--> axes are pretty good too
13:45:49 <Marvin--> another idea I had was to make a court dandy bard with a rapier :P
13:46:41 <mgoetze> rogues with rapiers, tumble and bluff are *evil*
13:47:39 <Marvin--> oh yes, weapon finesse *shiver*
13:48:11 <Marvin--> I wonder what kind of a magical weapon a monk would have
13:48:21 <Marvin--> a blessed quarterstaff of denaughtification?
13:48:22 <shapr> fingernails of doom
13:48:44 <mgoetze> well, the nasty part is, with bluff you can make your opponent lose his dex bonus to ac, and that means you can apply sneak attack damage
13:49:07 <Marvin--> feint?
13:49:18 <Marvin--> that's nasty
13:49:43 <mgoetze> yes, very much so... and my dm is enamoured of it :(
13:49:54 <Marvin--> ?
13:50:10 <mgoetze> i mean, i get a lot of opponents who do that
13:50:16 <Marvin--> heh
13:50:27 <Marvin--> "oops, feinted you again, sorry another 2d6 extra damage"
13:51:42 <Marvin--> can't find anything in the rules about sneak attack and feinting... just because they lose the dex bonus doesn't mean they're flat-footed does it?
13:52:26 <mgoetze> hm, well, that's how my dm interpretes it, at least
13:58:50 <Marvin--> I'm off to bed
13:58:54 <shapr> g'nite
13:58:56 <mgoetze> gnight
14:56:04 * shapr cackles happily
14:56:16 <shapr> lambdabot: @listcommands
14:56:17 <lambdabot> I react to the following commands: ["echo","fact","fortune","goodbye","hello","join","leave","listchans","listcommands","listmodules","msg","part","quit","state","topic"]
14:56:29 <Riastradh> lambdabot: @echo Hi there, world!
14:56:29 <lambdabot> echo; msg:IRCMessage {msgPrefix = "Riastradh!~riastradh@141.154.246.105", msgCommand = "PRIVMSG", msgParams = ["#haskell",":lambdabot: @echo Hi there, world!"]} rest:"Hi there, world!"
14:56:38 <Riastradh> Whoa.
14:56:43 <Riastradh> Uh, is that what's supposed to happen?
14:56:46 <shapr> yes
14:56:49 <shapr> it's a debugging tool
14:56:50 <Riastradh> Oh...
14:56:56 <shapr> maybe I should renamed it
14:56:59 <Riastradh> lambdabot: @fortune
14:57:04 <shapr> try @join #foo ;-)
14:57:11 <Riastradh> lambdabot: @join #foo
14:57:11 <lambdabot> not enough privileges
14:57:15 * shapr grins evilly
14:57:40 <shapr> right now the access privs check ircnick only, so it's really cheesy
14:57:43 <shapr> but it works!
14:58:09 <Riastradh> lambdabot: @msg Riastradh Foo.
14:58:10 <lambdabot> not enough privileges
14:58:12 <Riastradh> Bah.
14:58:21 <shapr> now to check in all the changes
14:58:31 <Aether> lambdabot: @help
14:58:32 <lambdabot> Sorry, I don't know that command, try "lambdabot: @listcommands"
14:58:45 <Aether> lambdabot: @pooponyoufornothavingahelpcommand
14:58:46 <lambdabot> Sorry, I don't know that command, try "lambdabot: @listcommands"
14:59:09 <shapr> I want to add a @help command to return a help string that can be added for each command
14:59:10 <Aether> lambdabot: @listcommands
14:59:10 <lambdabot> I react to the following commands: ["echo","fact","fortune","goodbye","hello","join","leave","listchans","listcommands","listmodules","msg","part","quit","state","topic"]
14:59:48 <Aether> lambdabot: @echo Blah
14:59:48 <lambdabot> echo; msg:IRCMessage {msgPrefix = "Aether!~aether@bgp01354031bgs.albqrq01.nm.comcast.net", msgCommand = "PRIVMSG", msgParams = ["#haskell",":lambdabot: @echo Blah"]} rest:"Blah"
14:59:59 <Aether> whoa
15:00:07 <shapr> it's a debugging tool...
15:00:14 <Riastradh> Haha, exactly what I did, Aether.
15:00:27 <shapr> shows what an irc message looks like internally
15:00:42 <Riastradh> How about a @seen function?
15:00:48 <Riastradh> s/function/command/1
15:00:59 <shapr> Riastradh: you want to write that one? :-)
15:01:04 <shapr> it'd be pretty easy.
15:01:09 <Riastradh> Well, I don't know how.
15:01:22 <Heffalump> does it already keep a record of nicks then?
15:01:34 <shapr> no, but it can very easily
15:02:34 <Aether> i wagering a guess...
15:02:43 <Aether> but it lambdabot written in haskell ?
15:02:46 <Aether> s/it/is/
15:02:51 <shapr> yes, of course!
15:02:53 <Riastradh> Of course it is.
15:02:55 <shapr> lambdabot: @fact source
15:02:56 <lambdabot>  http://sf.net/projects/haskell-libs/, http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/haskell-libs/libs/lambdabot/
15:03:01 <Aether> why did i even ask
15:03:05 * shapr grins
15:03:08 <Riastradh> Silly Aether!
15:03:30 <shapr> I'm going for a 1.0 release in the next few days.
15:03:55 <shapr> a simple @seen plugin would keep track of users seen only since lambdabot was started.
15:04:14 <shapr> a spiffier one would use the PostgreSQL code in @fact
15:04:48 <Aether> someone teach me haskell and i'll write it
15:04:59 <shapr> lambdabot: @fact learninghaskell
15:04:59 <lambdabot> Nothing
15:05:03 <shapr> lambdabot: @fact learning
15:05:03 <lambdabot> http://www.haskell.org/learning.html
15:05:05 <shapr> aha
15:05:19 <shapr> Aether: there ya go
15:05:26 * Riastradh decides to take on the task of writing a @seen module.
15:05:29 <shapr> yay!
15:05:44 * shapr checks in his changes
15:05:46 <Riastradh> shapr - You're rather predictable...I knew the moment I started typing that that you would say 'yay!'.
15:05:47 <Aether> :(
15:05:58 <Riastradh> lambdabot: @fact haskell-libs
15:05:59 <lambdabot> http://sourceforge.net/projects/haskell-libs/
15:06:12 <Aether> there's nothing wrong with being predictable
15:06:13 <shapr> lambdabot: @fact yay! shapr is so predictable
15:06:13 <lambdabot> set yay! to shapr is so predictable
15:06:32 <shapr> I'm just so enthusiastic.
15:06:35 <Aether> why shouldn't programmers be just like their code ?
15:07:00 * shapr thinks about that one
15:07:21 <Riastradh> Aether - Don't ask that to IOHCC programmers.
15:07:58 <Aether> i have no idea what that is
15:08:42 <Riastradh> International Obfuscated Haskell Code Contest.
15:08:55 <Aether> oh yeah...
15:09:02 <Aether> i remember hearing something about that some time ago
15:09:16 <Aether> lambdabot: @google IOHCC
15:09:16 <lambdabot> Sorry, I don't know that command, try "lambdabot: @listcommands"
15:09:21 <Aether> :(
15:09:28 <Riastradh> That's an idea for another module!
15:10:50 <Aether> lambdabot: @fact pyn is better than you
15:10:50 <lambdabot> set pyn to is better than you
15:11:09 <lambdabot> Aether: I don't think so.
15:11:52 <shapr> a google plugin would be cool
15:14:45 <Riastradh> In the definition of 'factoid,' where length (words rest) == 1, where is 'factKey' bound?
15:14:57 <Riastradh> Oh, whoops.
15:15:03 * Riastradh scrolls his Emacs buffer down a tad.
15:15:32 <Heffalump> right, the week begins here
15:15:38 <shapr> it does?
15:17:39 <Aether> hmmmm
15:17:48 <Aether> this gentle intro haskell isn't so gentle...
15:17:59 <shapr> I found it a bit challenging myself.
15:18:17 <Riastradh> What does the 'clean' function do?
15:18:29 <shapr> I've heard good things about "two dozen Haskell lessons"
15:18:34 <shapr> and there are some tutorials
15:18:40 <shapr> Riastradh: escapes single quotes
15:18:49 <shapr> Riastradh: if you update, it'll escape backslashes too
15:20:30 <Riastradh> Is there any reason that [Char] is used instead of String in places in FactModule.hs?
15:20:45 <shapr> not really
15:20:56 <shapr> if you want to clean that up, please do
15:21:16 <shapr> ok, new code in cvs
15:22:21 <Riastradh> Where's there documentation about the database API?
15:22:39 <shapr> there isn't any that I know of
15:22:51 <shapr> lambdabot: @source htoolkit
15:22:51 <lambdabot> Sorry, I don't know that command, try "lambdabot: @listcommands"
15:22:53 <shapr> er
15:22:54 <Riastradh> Er...so how am I supposed to learn how it works?
15:22:56 <shapr> lambdabot: @fact htoolkit
15:22:56 <lambdabot>  http://sf.net/projects/htoolkit,  postgresql mysql and odbc bindings
15:23:10 <shapr> I got the code from HToolkit
15:23:20 <shapr> it's a very thin wrapping of libpg
15:23:34 <shapr> so libpg docs should tell you everything you need to know
15:24:13 <shapr> HToolkit doesn't wrap everything, so you may want to look at the HSQL.hsc sources as well
15:24:47 <shapr> Riastradh: I would suggest looking at the StateModule
15:25:10 <shapr> that way you could write a @seen plugin that doesn't use postgresql, and only keeps records until lambdabot exits
15:25:14 <shapr> it would be a good start
15:28:07 <Riastradh> What does 'gets' do?
15:28:24 <shapr> it grabs the state out of the monad
15:28:47 <Riastradh> What does 'readIORef' do?
15:28:48 <shapr> short for getState I think
15:29:02 <shapr> IORef is the leper of Haskell, it's a mutable reference
15:29:31 <shapr> readIORef gets the content of that IORef
15:30:22 <Riastradh> liftIO foo removes the IO-ness of foo and returns the real value of foo, right?
15:30:46 <shapr> actually the other way around
15:30:52 <shapr> it adds IO-ness
15:30:56 <Riastradh> Oh.
15:31:03 <Riastradh> Why's it called 'lift' IO, then?
15:31:15 <shapr> because you're being lifted to a 'higher plane'
15:31:19 <shapr> the IO plane
15:31:28 <Darius> it lift's "a" to "IO a"
15:31:40 <shapr> you're becoming part of that category
15:31:51 <Darius> There are no safe function with type IO a -> a
15:32:04 <shapr> if you were a normal citizen, and you wanted to become a Democrat, you'd use liftDemocrat ;-)
15:32:18 <shapr> like all monads, you can't ever come back to being a normal citizen ;-)
15:32:26 * Riastradh thinks it would be better to call it 'liftToIO,' but whatever.
15:32:36 <shapr> yah, probably so
15:32:41 <shapr> I thought the same thing at first
15:32:43 <Riastradh> OK, now what do 'fromJust,' 'fromDynamic,' and 'stripMS' do?
15:32:50 <Darius> hehe
15:32:53 * shapr grins
15:33:00 <shapr> that's code that Darius came with :-)
15:33:13 <shapr> stripMS is "strip module state"
15:33:48 <shapr> each module can have a single entry to save state in the monad
15:33:56 <shapr> so they all have to have the same type
15:34:08 <shapr> even though they'll obviously be saving different things
15:34:45 <Riastradh> What about 'fromJust' and 'fromDynamic?'
15:34:50 <shapr> so the IRCRWState record has a FiniteMap (dictionary in Python) ircModuleState     :: FiniteMap String (IORef ModuleState)
15:34:59 <Darius> You could probably stick fromDynamic (and even fromJust if you don't mind not being able to check) into stripMS
15:35:06 <shapr> and ModuleState is: data ModuleState = forall a. (Typeable a) => ModuleState a
15:35:39 <Riastradh> Are you suggesting that I'm a Python programmer?
15:35:47 <Darius> Dynamic has only two methods to get the data back to good 'ole static Haskell typing, fromDyn and fromDynamic
15:35:51 <shapr> Riastradh: no, I am :-)
15:36:02 <Riastradh> Oh...but why'd you say (dictionary in Python) then?
15:36:09 <Darius> fromDynamic :: Dynamic -> Maybe a (actually a bit more complicated)
15:36:11 <shapr> because FiniteMap sounds weird to me.
15:38:03 <shapr> yah, the StateModule could probably use some cleaning up
15:38:07 <shapr> then it would be a better demo module
15:38:43 <shapr> Riastradh: is the code understandable?
15:38:49 <shapr> or is it totally opaque?
15:39:03 <shapr> do you know about the Maybe type?
15:39:25 <Riastradh> Fairly understandable, but I'd prefer it to take up fewer columns.
15:39:30 <Riastradh> Of course I know about the Maybe type.
15:40:04 <shapr> good point, 102 columns
15:40:24 * Riastradh puts all his code in 72 columns, but wouldn't mind other code in 80.
15:40:26 <shapr> my emacs is about 120 columns wide, so...
15:40:38 <shapr> yah, I should clean it all up to 79
15:49:55 <Darius> (\f. (\x.f (x x)) (\x.f (x x))) (\f n.if n == 0 then 1 else n*f (n-1)) 5
15:50:08 <shapr> eh?
15:50:24 <Riastradh> shapr, how would you suggest I go about printing and storing and recording time?
15:50:42 <shapr> I'd probably use CalendarTime
15:50:43 <Darius> My (extended) LC interpreter is coming along.
15:50:47 <shapr> Darius: cool
15:51:21 <shapr> Riastradh: I'd suggest a FiniteMap of ircnick CalendarTime
15:51:50 <shapr> I haven't tried that, so it might have some problem I haven't thought of :-)
15:52:12 <Riastradh> OK, how do I turn them into strings?
15:53:48 <Riastradh> Oh, -duh-.
15:53:53 <Riastradh> calendarTimeToString
15:54:17 <shapr> or just show
15:58:58 <shapr> though often (read . show) == id, by no means always
16:01:29 <shapr> lambdabot: @quit
16:06:03 <Riastradh> OK, now how do I add a hook or something into whenever someone says something?
16:06:45 <shapr> hook into doPRIVMSG
16:06:56 <shapr> it gets called everytime someone says something
16:07:09 <Riastradh> How do I 'hook into doPRIVMSG?'
16:07:36 <shapr> if you have GHC, you can just comment out the PostgreSQL stuff and you can run your own lambdabot
16:08:07 <shapr> Riastradh: line 210 of Main.hs
16:08:31 <shapr> it's the otherwise case of doPRIVMSG
16:08:57 <Riastradh> I can't add a hook in SeenModule.hs?
16:09:12 <shapr> sadly, no
16:09:18 <Riastradh> And I also want to do it for any message.
16:09:34 <shapr> modules can only react to "lambdabot: @<cmd>" at the moment
16:10:00 <shapr> I think up some sort of generic hook setup
16:10:20 * andersca bounces
16:10:23 * shapr has the sudden urge to port the whole thing to using Arrows
16:10:25 * shapr boings
16:10:26 <shapr> hi andersca 
16:10:29 <andersca> yo shae
16:10:31 <Riastradh> I think that there should be a 'blahHook' instance for each module that would be called from 'doBlah'.
16:10:36 <shapr> wassup anders?
16:10:39 <Riastradh> s/instance/method/1
16:10:47 * Riastradh will be right back.
16:10:49 <andersca> shapr: feeling weird sleep-wise, just woke up
16:10:55 <shapr> that is a bit weird
16:10:59 <shapr> I'm about to go to sleep
16:11:06 <shapr> swedish class is happening all too soon.
16:11:24 <shapr> vi har dator på klockan nio
16:11:43 <andersca> dator på klockan nio?
16:11:56 <shapr> yah, SFI dator
16:12:01 <shapr> swedish for invaders
16:12:04 <andersca> oh :)
16:12:08 <shapr> :)
16:13:29 <shapr> the best SFI dator programs were written for DOS
16:13:38 <shapr> the worst ones use Java Swing
16:14:12 <shapr> I think there's a lesson there, not quite sure what it is.
16:14:39 <shapr> andersca: you gonna be at ICFP or HW?
16:15:14 <andersca> shapr: I'd like to
16:15:31 <shapr> we should organize a #haskell meeting right around that time for those who are in the area, but can't come to ICFP/HW
16:15:40 <shapr> I guess we means me.
16:15:46 * Riastradh wishes he could go to the ICFP.
16:16:16 <shapr> well, show up
16:16:28 <Riastradh> Er, yes, I wish I could do that.
16:16:32 <shapr> why not?
16:16:49 * Riastradh hasn't money to buy a plane ticket.
16:16:59 <shapr> oh
16:17:06 <shapr> plane tickets are a lot cheaper nowadays
16:17:24 <shapr> down to half for in europe flights
16:17:40 <Riastradh> Nevertheless I doubt I could buy one for about $100.
16:18:05 <shapr> Riastradh: see if you can get funding!
16:18:21 <shapr> ask your department, school, etc
16:19:11 <Riastradh> Hmm.
16:19:20 <shapr> Riastradh: they might not fund a trip to Ibiza, but they just might fund a trip to PLI/ICFP/HW
16:19:29 <shapr> http://www.it.uu.se/pli03/
16:20:59 <Riastradh> What a name -- 'Bjorn Lisper,' especially since lots of Lisp hackers will certainly be there.
16:21:31 <shapr> he teaches at chalmers.se
16:21:40 <shapr> I've often wondered whether he changed his name or not =)
16:21:47 <shapr> björn means bear
16:21:55 <shapr> it's not a terribly unusual swedish name
16:23:34 * Riastradh pfheeds on pfhood.
16:38:09 <Darius> lambdabot: @listcommands
16:38:09 <lambdabot> I react to the following commands: ["echo","fact","fortune","goodbye","hello","join","leave","listchans","listcommands","listmodules","msg","part","quit","state","topic"]
16:38:22 <shapr> Darius: hoping that @seen was already there? :-)
16:38:31 <shapr> I think modules need an init hook
16:38:32 <Darius> lambdabot: @topic
16:38:32 <lambdabot> don't know that channel
16:38:37 <Darius> lambdabot: @topic #haskell
16:38:53 <shapr> no, I don't know why it sometimes doesn't work :-/
16:38:57 <shapr> lambdabot: @part #haskell
16:39:06 <Darius> It never seems to the first time
16:39:08 <Darius> lambdabot: @topic #haskell
16:39:08 <lambdabot> ["mo' nads than you", "We put the Funk in Funktion","See logs @ http://tunes.org/~nef/logs/haskell/", "New Hat 2.02 http://www.haskell.org/hat/", "New Learning Haskell page - http://www.haskell.org/learning.html", "GUI Demos - http://repetae.net/john/computer/haskell/gui/", "Order Haskell 98 Report in Hardcopy - http://titles.cambridge.org/catalogue.asp?isbn=0521826144","GHC 5.04.3 released!"]
16:39:25 <shapr> probably the same thing with @fortune 
16:39:29 <shapr> lambdabot: @fortune
16:39:32 <shapr> never works the first time
16:39:38 <shapr> lambdabot: @fortune
16:39:38 <lambdabot> They also surf who only stand on waves.
16:40:39 <whee> nifty bug :P
16:42:07 <Riastradh> Hi.
16:42:13 <shapr> .iH
16:42:25 <Riastradh> I think there need to be more hooks in general in lambdabot.
16:42:30 <shapr> yah, I agree.
16:42:49 <shapr> probably won't happen tonite though.
16:43:02 <Riastradh> A 'doBlah' hook for every blah, a generic 'message' hook (for things like the @seen module), and an 'init' hook.
16:43:57 * shapr writes that into the TODO file
16:43:57 <Riastradh> Well, why not?  Just add them as methods to the Module class and call them on each module when they occur.
16:44:17 <Riastradh> The 'init' hook would be even easier -- just write it into 'ircInstallModule.'
16:44:27 <shapr> that's true
16:44:49 <Riastradh> Or ircLoadModule.
16:45:18 <Riastradh> ircLoadModule would probably be better.
16:45:29 <whee> I vote for some sort of event handling module that allows other modules to register to receive some set of events, then just have hooks everywhere to notify the event module when things happen, and the event module distributess
16:45:31 <Riastradh> And then you could also have a 'deInit' method, too, called by ircUnloadModule.
16:45:46 <shapr> finalize?
16:45:50 <whee> if that's not already what you're doing D:
16:46:21 <Riastradh> shapr, sure, whatever.
16:48:19 <shapr> hm
16:49:04 <Riastradh> With the 'init' method you wouldn't need to do things like:
16:49:22 <Riastradh> do maybeBlahRef <- gets (\s -> lookupFM (ircModuleState s) "blah")
16:49:27 <Riastradh>    case maybeBlahRef of
16:49:35 <Riastradh>        Just blahRef -> ...
16:49:41 <Riastradh>        Nothing -> initialisation code here
16:49:46 <shapr> yah, I agree
16:50:04 <Riastradh> And the 'init' method could be very easily added on -- just about two more lines of code, I think.
16:50:57 <Riastradh> Three, rather -- one for its declaration in the Module class, one for its default value in the Module class, and one to call it in ircLoadModule.
16:51:08 <Riastradh> What do you think?
16:51:36 <shapr> I agree
16:51:51 <shapr> do you have write privs in CVS?
16:51:59 <Riastradh> Not that I know of.
16:52:04 <shapr> do you want them?
16:52:14 <Riastradh> Sure.
16:52:21 <shapr> same sf.net userid?
16:52:45 <Riastradh> Argh, die, SourceForge!
16:52:51 <shapr> yah, it's down for maintenance
16:52:58 <shapr> hopefully that won't be permanent.
16:53:00 <Riastradh> But yes, I'm 'riastradh' on SourceForge.
16:53:05 <shapr> ok
16:53:11 <Riastradh> (it's so convenient to have a nick that no one else uses so you can use it everywhere!)
16:53:17 <shapr> yah, same for shapr
16:55:02 <shapr> Riastradh: I'm afraid if I do that now I'll screw it up... it's 3am
16:55:05 <shapr> I'll do it tomorrow.
16:55:08 <Riastradh> Heh, ok.
17:25:24 <Riastradh> Damn, shapr left.
17:25:40 * Riastradh has a question about lambdabot...
17:39:12 <Darius> lambdabot: @fact Y
17:39:12 <lambdabot> Nothing
17:39:50 <Riastradh> lambdabot: @fact Y is the Y combinator from the Lambda-Calculus for using recursion.  It is defined as: lambda f . f f
17:39:51 <lambdabot> set Y to is the Y combinator from the Lambda-Calculus for using recursion.  It is defined as: lambda f . f f
17:39:55 <Riastradh> Whoops.
17:40:17 <Riastradh> lambdabot: @fact Y The 'Y combinator' from the Lambda-Calculus for using recursion.  It is defined as: lambda f . f f
17:40:18 <lambdabot> set Y to The \'Y combinator\' from the Lambda-Calculus for using recursion.  It is defined as: lambda f . f f
17:44:14 <Darius> Hmm, my interpreter doesn't seem to like the normal order Y combinator... it's not an applicative order interpreter...
17:44:23 <Darius> applicative order Y works
17:56:26 <Darius> nm
17:58:06 <Riastradh> Where's the Socket module in GHC?
17:58:28 <Darius> Network package. import Network and add -package network to the commandline
17:58:48 <Darius> lambdabot: @fact GHC
17:58:49 <lambdabot> Nothing
17:59:11 <Darius> lambdabot: @fact GHC http://www.haskell.org/ghc
17:59:11 <lambdabot> set GHC to http://www.haskell.org/ghc
17:59:26 <Darius> Are you using Windows by the way?
17:59:34 <Riastradh> Certainly not.
18:00:16 <Darius> Actually, it's not a bad idea anyways; Windows needs withSocketsDo at the beginning of the program, for portability (if you care) you should have it in all network code.
18:00:38 <Riastradh> I care not if it doesn't work on Windoze.
18:00:57 <Riastradh> GHC is complaining that 'forall' isn't a constructor.
18:01:21 <Darius> Turn off glasgow-exts.  With glasgow-exts it's a keyword
18:01:48 <Riastradh> How do I do that?
18:01:59 <Darius> Just don't have -fglasgow-exts on the commandline.
18:02:08 <Riastradh> I didn't anyways.
18:03:08 <Riastradh> Er, wait, putting -fglasgow-exts makes it not complain.
18:03:14 <Darius> well, forall isn't a constructor anyways, constructors start with uppercase.
18:34:45 <Riastradh> Can a pattern contain two underscores?
18:44:53 <Riastradh> Never mind.
20:21:36 <kunphuzil> Hah, lament is discordian!
