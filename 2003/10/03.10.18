01:12:48 <Heffalump> 'lo
01:12:56 <phubuh> yarr!
01:13:00 <Heffalump> BOO!
04:10:41 <shapr> unicycling in 5Â°C is challenging
04:10:55 <shapr> I wonder if they make snow tires for unicycles
04:12:55 <shapr> I've gotten a stupendous amount of spam lately
04:13:08 <shapr> more than a hundred spams a day, and steadily climbing
04:14:01 <shapr> has anyone heard of Haskell sources for "Types and Programming Languages" ? I don't really want to use OCaml
04:15:19 <phubuh> i want that book!
04:15:24 <prologic> 19     -rw-------  1 prologic prologic 37495964 Oct 18 20:22 swen-virus
04:15:31 <prologic> that's what I get every 5-10 minutes :(
04:15:58 * Heffalump gets to close to 200 spams a day
04:16:06 * phubuh doesn't get any spam at all
04:16:09 <Heffalump> shapr: try translating the examples yourself, it'll help you learn
04:16:18 * phubuh doesn't get any *email* at all
04:16:20 * esap has 382 spams in my spam folder right now.
04:16:57 <shapr> Heffalump: good idea
04:17:09 <shapr> I have 7467 spams in my folder
04:17:34 * shapr never throws anything away ;-)
04:17:47 <phubuh> do you use your spam for research? :-)
04:17:55 <shapr> yes I do
04:18:04 <phubuh> that's what I thought
04:18:26 * esap doesn't think spam helps much with programming-language research.
04:18:27 * Heffalump never throws any of his spam away either
04:18:37 <shapr> esap: I'm looking for spam combinators ;-)
04:18:40 * shapr laughs
04:18:41 <Heffalump> I keep having vague plans to graph it and stuff
04:19:07 <shapr> Heffalump: now that WASH has a MIME decoder, and Peti's rfc2822 stuff works, you could do it in Haskell
04:19:17 <shapr> what other functionality would you need?
04:19:26 <shapr> gnuplot output?
04:19:30 <Heffalump> several round tuits
04:19:33 <shapr> hehe
04:20:35 <clausen> actually, there is a guy at monash university who thinks haskell is very elegant for machine learning
04:20:41 <clausen> (lloyd allison)
04:20:45 <phubuh> machine learning?
04:21:15 <esap> Does machine learning try to teach machines or people?
04:22:40 <clausen> teach machines
04:23:52 <shapr> is there a quark xpress clone for Linux?
04:23:59 <shapr> something that does newspaper layouts?
04:24:08 <clausen> http://www.csse.monash.edu.au/~lloyd/tildeFP/2003ACSC/2003ACSC.ps
04:24:29 <phubuh> try http://web2.altmuehlnet.de/fschmid/index.html
04:25:00 <shapr> oh, nifty
04:25:36 <phubuh> http://home.comcast.net/~scribusdocs/scriscreen.html :-)
04:25:58 <shapr> written in Python?
04:26:07 <phubuh> i think so
04:26:22 <shapr> looks nice
04:31:38 * shapr bounces cheerfully
05:06:26 <harsha123> saloxin ok 
05:07:49 <harsha123> peterS :) are you irriated by me asking only you? 
05:26:18 <harsha123> shapr hi
05:27:12 <harsha123> Igloo can i install a debian package if i dont have  dpkg installed?
05:28:02 <prologic> no
05:28:17 <prologic> not that I'm aware of, be pretty hard anyway
05:28:27 <prologic> dpkg has to follow set rules in the .deb archive
05:28:42 <prologic> even if you managed to extract it, you'd have to follow those rules yourself
05:31:26 <Igloo> Yeah, technically you could but you wouldn't want to
05:31:36 <harsha123> prologic hmmm.. there was person in #debian who has got into a situation wherein he has problems with a bad corrupt dpkg
05:31:40 <Igloo> If you just want to get the files out of it, ar -x *.deb; tar -zxvf data.tar.gz
05:32:08 <prologic> there ya go :)
05:32:20 <prologic> I'll have to write that down, cause I didn't know how to extract it
05:32:34 <prologic> harsha123, then get him to replace his dpkg with one that isn't corrupt
05:32:42 <prologic> someone will have to have the same system as he
05:33:04 <harsha123> prologic how do yo go about that? :)
05:33:18 <prologic> *shrugs* :)
05:33:25 <harsha123> :))
05:33:27 <prologic> find someone with the same system first
05:33:48 <prologic> and replace: /usr/bin/dpkg
05:33:50 <harsha123> hehehe.. do i have to do a broadcast on freenode.net  ? 
05:34:02 <prologic> I doubt it, why what system does he have ?
05:34:50 <prologic> neway you could (As Igloo said) download the dpkg .deb file and extract the binary from it and place it in /usr/bin/
05:35:11 <harsha123> hmmm.. Ok.. :)
05:36:31 <harsha123> MikeH .. you can do a dpkg -x to extract the /usr/bin/dpkg and replace yours with that one.. 
05:36:52 <prologic> depends how badly dpkg is corrupted :)
05:36:58 <prologic> I'd use Igloo's suggestion
05:37:17 <harsha123> prologic  right.. i guess Igloo was rationale enough
05:37:25 <prologic> yup
05:46:32 * shapr boings
05:48:55 * Riastradh hacks.
05:49:21 <shapr> I'm trying to find a decent flashcard program for my palm so I Can study swedish away from my books or computers
05:51:01 <Riastradh> Hack one!
05:51:17 --- mode: clarke.freenode.net set +b *!23kjhkjf@*
05:51:34 --- mode: clarke.freenode.net set +b *!23kjhkjf@*
05:51:47 <shapr> @yow
05:51:48 <lambdabot> YOW!  I can see 1987!!  PRESIDENT FORD is doing the REMAKE of "PAGAN
05:51:48 <lambdabot>  LOVE SONG"...he's playing ESTHER WILLIAMS!!
05:53:15 --- mode: brunner.freenode.net set +b *!23kjhkjf@*
05:54:48 --- mode: jordan.freenode.net set +b *!23kjhkjf@*
05:55:30 --- mode: brin.freenode.net set +b *!23kjhkjf@*
06:48:43 <phubuh> what are the differences, if any, between "monad" and "kleisli triple"?
06:58:09 <shapr> heck if I know
06:58:23 <shapr> if you read the Arrows paper, John Hughes talks about it some
06:58:49 <phubuh> oh I've been meaning to read that
07:04:58 <Heffalump> I think the Kleisli triple is just the triple of (type,return,something of type m (m a) -> m a whose name I forget) operations
07:05:19 <Heffalump> so essentially the same thing as a monad, with a slightly different but equivalent operation
07:05:31 <Heffalump> and more appropriate for when talking about the category theoretic aspects
07:07:16 <phubuh> monadic bind is of type m a -> (a -> m b) -> m b, right?
07:07:46 <Heffalump> yes
07:07:55 <Heffalump> you can define m (m a) -> m a from that, and vice versa
07:07:59 <phubuh> ooh!
07:08:21 <Heffalump> (>>=) :: m a -> (a -> m b) -> m b
07:08:37 <Heffalump> then foo x = x >>= id
07:08:58 * Heffalump tries to work out the reverse bit
07:31:51 <Riastradh> Heffalump, the name of 'm (m a) -> m a' is 'join,' if I remember correctly.
07:33:29 <Heffalump> yep, that's it
07:33:38 <Heffalump> still can't work out/remember how to make >>= from it, though :-)
07:34:16 <Heffalump> oh, unless you also need the fact that monads are functors to do it
07:34:19 <Heffalump> in which case it's easy
09:45:05 <Cale> join is actually part of the mathematical definition of "monad", iirc.
09:45:19 <Heffalump> yes, I said that
09:45:21 <Heffalump> (didn't I?)
09:45:47 <Cale> maybe? :)
10:15:03 <harsha123> hello haskell
10:15:13 <norpan> hello
10:20:04 <harsha123> shapr: U there?
12:41:51 <lostben> any article anywhere explaining the good things haskell has over other popular functional languages such as lisp and scheme
12:41:53 <lostben> ?
12:42:58 <esap> Already looked from www.haskell.org?
12:44:40 <lostben> still looking around there :-)
12:45:00 <lostben> thought i saw one somewhere there, but couldn't quite find it
12:47:17 <esap> I'm not sure, but maybe http://www.haskell.org/complex/why_does_haskell_matter.html does something like that [I didn't actually read that :-) ]
12:49:05 <esap> Or also Hughes's "Why functional programming matters" paper might be close.
12:49:22 <Riastradh> esap, er, that would apply to Scheme, too, wouldn't it?
12:50:02 <esap> riastradh: yes, I guess.
12:50:04 <ibid> iirc it does not regard scheme as functional :)
12:50:14 <Riastradh> ibid, that would be kind of silly.
12:50:21 <ibid> Riastradh: not really
12:50:35 <ibid> it's a matter of perspective
12:50:51 <Riastradh> ?
12:50:52 <ibid> (or definition:)
12:51:00 <lostben> thanks, your helpful pointers are most appreciated :-)
12:51:17 <Riastradh> I never knew pointers were helpful.
12:51:39 <ibid> Riastradh: "In this paper we show that two features of functional languages in particular, higher-order functions and lazy evaluation, can contribute greatly to modularity."
12:51:40 <Riastradh> In general they cause weird memory problems and confusion.
12:51:55 <Riastradh> ibid, and...Scheme supports both.
12:52:18 <ibid> actually, haskell uses pointers quite a lot, they're just under the hood :
12:52:22 <ibid> Riastradh: quite true
12:52:49 <Riastradh> ibid, so...what's your point?
12:53:07 <esap> I actually started again thinking about the (non)distinction between locations and values.
12:53:51 <ibid> Riastradh: supports is not quite enough :) (for hof's, scheme is quite enough, but if you want to program lazily in scheme, you have to rewrite the whole library)
12:54:52 <ibid> Riastradh: read the paper, especially the conclusions section
13:06:45 <lostben> in that paper, he says "please excuse the fact that the examples are not in haskell", does that imply that, in his opinion, haskell is better than lisp/scheme, i wonder? :-)
13:07:42 <ibid> i think it implies more that haskell is better than miranda, which is what he does use in the examples
13:54:10 <Tomasso> is there any function to sort a list in the prelude?
13:55:07 <ibid> List module might have one
13:55:21 <Tomasso> mhm is it sort?
13:56:25 <Tomasso> the problem is that i have a list [ ((Int,Int), Int) ] and i would like to sort the list in terms of the second Int of ther outer tuple
13:57:54 <Igloo> See sortBy
13:58:01 <Igloo> And compare
13:58:18 <Tomasso> let me see, but how do i tell the function how i want to sort the list
13:59:26 <Tomasso> mmh
14:00:27 <Riastradh> We need local typeclasses!
14:00:47 <Riastradh> Er, local typeclass instances.
14:01:23 <Riastradh> I.e. in 'where's: 'where instance Eq ((Int, Int), Int) where { compare foo bar = ... }'.
14:03:07 <Igloo> Well, there are always newtypes, although that can often seem like overkill
14:58:36 * esap just realized I need to use mutually recursive modules. :-(
15:18:58 <Tomasso> guys can anyone tell me the error 
15:19:01 <Tomasso> data Memory = Turno Int | Turno Int PlayerPos Memory | Casilla Memory
15:21:21 <esap> can't have to constructors with the same name.
15:21:24 <esap> two
17:37:38 <blackdog> g'day everyone... is there a standard monad combinator with the type "Monad m => m a -> Int -> m [a]" which executes the given action a set number of times and returns a list of results?
17:38:02 <Riastradh> Not that I know of, but it's probably pretty easy to write.
17:38:09 <blackdog> well, yeah. I've written it. :)
17:38:20 <blackdog> I'm just trying to standardify my code to make it easier to read.
17:39:26 <Riastradh> Well, you could just compose sequence and replicate.
17:39:41 <Riastradh> @prelude replicate
17:39:43 <lambdabot> *** "replicate" prelude "Haskell Standard Prelude Dictionary": text follows
17:39:43 <lambdabot> replicate
17:39:43 <lambdabot>   replicate ::  Int -> a -> [a]
17:39:43 <lambdabot>   replicate n x     = take n (repeat x)
17:39:50 <Riastradh> @prelude sequence
17:39:52 <lambdabot> *** "sequence" prelude "Haskell Standard Prelude Dictionary": text follows
17:39:52 <lambdabot> sequence
17:39:54 <lambdabot>   sequence ::  Monad m => [m a] -> m [a]
17:39:56 <lambdabot>   sequence []     = return []
17:39:58 <lambdabot>   sequence (c:cs) = do x  <- c
17:40:00 <lambdabot>   		     xs <- sequence cs
17:40:02 <lambdabot>   		     return (x:xs)
17:40:15 <blackdog> That's a good idea. Cheers.
17:40:19 <Riastradh> @type sequence . replicate
17:40:35 <Riastradh> ...er.
17:40:59 <Darius> @type (sequence .) . replicate
17:40:59 <lambdabot> (sequence .) . replicate :: Monad a => Int -> a b -> a [b]
17:41:31 <phubuh> @type (sequence .) . flip replicate
17:41:32 <lambdabot> (sequence .) . flip replicate :: Monad a => a b -> Int -> a [b]
17:42:12 <blackdog> You don't get special Functional Programmer Points for point-free style, you know.:)
17:42:28 <phubuh> i do in my mind and that's good enough for me!
17:42:33 <Darius> Of course, if deforestation doesn't kick in you are building up a list pointlessly.
17:43:18 <blackdog> performance isn't really an issue.
19:13:48 <syntax-laptop> new haskell-experimental debian web page: http://www.syntaxpolice.org/haskell-experimental/haskell-experimental.html
19:17:23 <syntax-laptop> shapr: alive?
19:17:37 <syntax-laptop> I saw a changelog in HaWiki saying someone tried to crack it. what's up w/ that?
19:22:29 <Riastradh> 'Cracking' wikis is not exactly rocket science.  It's quite mindlessly dumb.
19:22:47 <syntax-laptop> I would guess so!
19:23:01 <Riastradh> -- as long as the wiki software has a good revision system.
19:23:01 <clausen> Riastradh: why is that?
19:23:41 <Riastradh> clausen, the mindlessness of it is obvious; the dumbness of it is in both the dumbness of vandalism in general and also the fact that _any_ other user can revert it to _any_ other version with the slighest amount of effort.
19:24:21 <clausen> Riastradh: depends what you mean by 'crack'
19:24:34 <Darius> syntax-laptop, diff the FrontPage.
19:24:44 <clausen> Riastradh: if you have login accounts, wiki is secure?
19:24:59 <syntax-laptop> Darius: I hit the "Update" thing which looks like it shows a diff, but I don't see anything interesting.
19:25:25 <Darius> http://www.haskell.org/hawiki/FrontPage?action=diff
19:25:29 <Riastradh> clausen, I mean 'deface' or something -- cracking into the _server_ is entirely different --.
19:25:39 <clausen> Riastradh: ah, ok :)
19:25:43 <Riastradh> The diff shows that that is what I am talking about.
19:26:21 <syntax-laptop> hahahaha!
19:26:34 <syntax-laptop> I'm so impressed
19:26:51 <Riastradh> To deface a wiki is to show complete incompetence and stupidity.
19:27:38 <syntax-laptop> Riastradh: give up, you're check mated
19:27:49 <prologic> hi :)
19:27:53 <syntax-laptop> hi prologic
19:28:02 <prologic> hey Syntax :)
19:28:11 <prologic> any of you use a cd burner with your linux ?
19:28:27 * syntax-laptop does
19:28:32 <prologic> oh goody :)
19:28:37 <prologic> you use Debian by any chance ?
19:28:54 <syntax-laptop> prologic: yup
19:29:04 <prologic> oh even better
19:29:12 <prologic> ok well I bought 3 blank cds to test my burner out
19:29:17 <prologic> I've never used one with linux yet
19:29:29 <prologic> not even sure if I have all the right software installed :)
19:30:07 <syntax-laptop> hm. well, I would apt-get install x-cd-roast
19:30:19 <syntax-laptop> the interface isn't awesome, but it pretty much hides all of the hardware details
19:30:37 <syntax-laptop> i mean xcdroast
19:31:02 <prologic> yeh I have that installed
19:31:16 <prologic> yup I do
19:31:24 <prologic> what else do I need to do ?
19:31:29 <prologic> don't wanna waste too many cds :) only got 3
19:31:30 <prologic> lol
19:32:24 <syntax-laptop> well... pick something to burn that wouldn't be a waste of a CD :) I recommend knoppix
19:32:36 <prologic> lol
19:32:42 <prologic> it would take me a week to download that
19:32:55 <prologic> I'll burn my mail backups
19:33:15 <syntax-laptop> run xcdroast and hit "setup", and configure the drive. 
19:33:18 <prologic> hrmm no root configuration
19:33:37 <syntax-laptop> yeah, you can run it as root the first time and fix that
19:33:39 <prologic> dont' tell me I have to run X as root :)
19:34:09 <syntax-laptop> erum. no.  just run an xterm, su, then run xcdroast as root
19:34:11 <syntax-laptop> or sudo xcdroast
19:34:21 <syntax-laptop> but idono, you might have to xhost + local:
19:34:36 <syntax-laptop> i mean xhost local:
19:34:39 <prologic> ahh there we go
19:34:53 <prologic> Starting to scan for devices...
19:34:54 <prologic> [ATAPI:0,0,0] JLMS     XJ-HD166S        DS18
19:34:54 <prologic> [ATAPI:0,1,0] AOPEN    CD-RW CRW4852    1.00
19:34:54 <prologic> Scan finished.
19:34:59 <prologic> I hope that's a good thing :)
19:35:22 <syntax-laptop> does one of those look like your CD burner? I suspect the 2nd one!
19:35:31 <prologic> yerp
19:35:35 <prologic> 1st one is my dvd drive
19:35:41 <prologic> which works very nicely :)
19:35:58 <syntax-laptop> click on HD settings and make an images directory
19:37:47 <prologic> to store raw cd images ?
19:38:05 <syntax-laptop> yeah
19:38:13 <prologic> hrmm
19:38:20 <prologic> it's gonna have to be on /misc
19:38:25 <prologic> /var haven't got enough space :)
19:39:37 <prologic> what the hell
19:40:00 <syntax-laptop> I think somewhere in there, you can tell it to be able to run as non-root
19:40:13 <prologic> "You have selected an ATAP device as your CD-Writer. THis is not a recommended setup - you will expericence long delays ....."
19:40:28 <syntax-laptop> yeah, I don't really know much about that, but it still works :)
19:40:36 <prologic> hrmm ok
19:40:39 <syntax-laptop> you have to set up SCSI emulation,w hich I'm too lazy to do.
19:40:41 <prologic> I take it you have an ATAP burner as well ?
19:40:50 <prologic> ATAPI
19:40:56 <syntax-laptop> ja
19:41:02 <prologic> k
19:41:03 <prologic> good
19:41:08 <prologic> and it works ok without scsi emulation ?
19:41:39 <syntax-laptop> yeah, no complaints.
19:41:49 <prologic> good ;)
19:41:52 <prologic> lemme test now hehe
19:41:56 * prologic fingers crossed
19:43:14 <syntax-laptop> oh, you might have to set up the images direcory agian if you're running it as nother user.
19:43:59 <prologic> yer
19:44:00 <prologic> damn it :)
19:44:12 <prologic> what are the permissions on your images dir ?
19:44:45 <syntax-laptop> I'm sure they're rwx by the user running xcdroast
19:45:02 <prologic> hrmm
19:45:23 <prologic> I guess I could create an images group
19:45:33 <syntax-laptop> if there are .isos in there, they'll show up in the list.
19:48:22 <prologic> I'll have to re-login to X now :)
19:48:23 <prologic> bbs
19:51:08 <prologic> time to test :)
19:51:25 <syntax-laptop> I gotta go, good luck :)
19:52:00 <prologic> damn it :)
19:52:19 <prologic> how do I create images now lol
20:31:48 <blackdog> mkisofs
20:32:42 <prologic> yeh ta
20:32:52 <prologic> done and already tested :)
20:33:16 <blackdog> Excellent. :)
20:33:22 <prologic> does xcdroast have the ability to create images as well without using the command-line util mkisofs ?
20:34:08 <prologic> yeh it was actually
20:34:13 <prologic> very flam'n fast too :)
20:34:28 <prologic> more I use linux the more impressed I am :)
20:34:34 <prologic> too bad about it's lack of games though
20:34:36 <blackdog> no clue... i use the command-line not because I'm l33t, but because i'm scared of complex guis.:)
20:34:52 <blackdog> It's a hidden productivity booster.
20:35:10 <prologic> yeh I don't like complex guis either I'll probably end up using mkisofs
20:35:16 <prologic> though when I looked at it's man page, I fainted :)
20:35:29 <blackdog> You can play some games through Wine, but I've always found it such a hassle that I give up and go outside instead.:)
20:35:58 <prologic> hehe
20:36:18 <blackdog> the thing is, you generally want to do the same thing each time when you make an image, so you spend a bit of time working out all your flags, then you're sweet.
20:36:39 <blackdog> I generally just do
20:36:50 <blackdog> mkisofs -J -R  -max-iso9660-filenames /dir/to/burn/ |  cdrecord speed=8 dev=0,0,0 -data -
20:37:23 <prologic> hmm fair enough
20:37:34 <blackdog> which is bad and wrong in many ways, not least being that it doesn't check that the dir can actually fit on the disk.
20:37:39 <prologic> I'll have to try playing around with the command-line utils
20:37:52 <prologic> I'm sure you can write a script for it :)
20:38:01 <blackdog> and everyone and his dog already has.
20:38:12 <prologic> yer
21:15:13 <prologic> hey syntax wb :)
21:15:18 <prologic> it worked wonderfully :)
21:16:39 <prologic> neway gotta get to uni
21:16:43 <prologic> bbs
21:18:38 <syntax-laptop> prologic: cool :)
