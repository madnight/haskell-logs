00:53:12 <Sucht`on|Hase> hi to all !
03:02:13 <Sucht`on|Hase> cu all ! I have to go
03:16:52 * shapr yawns
03:25:21 <shapr> goood morning #haskell!/
04:15:34 <mgoetze> good morning, shapr
04:21:10 * mgoetze reads logs to see what became of IOHC
04:49:58 <Janni> peace!
04:52:20 <mgoetze> so! iohc-jury list should work now!
05:53:33 * shapr boings
05:54:15 <shapr> hiya
05:54:36 <mgoetze> hi!
05:54:45 <mgoetze> shapr: www.mgoetze.net/mailman/listinfo/iohc-jury
05:55:56 <shapr> ok, as soon as I get my confirmation email
05:56:36 <shapr> we have three confirmed jurors, one who has expressed interest but hasn't been confirmed
05:56:40 <shapr> and one I haven't heard from
05:57:37 <shapr> any thoughts on rules or conditions?
06:03:52 <dark> shapr: I forgot that we have a party today :)  I'm afraid I won't have time for the IOHC rules.
06:09:45 <mgoetze> dark: you can subscribe now
06:11:49 <shapr> dark: think you'll have time tomorrow?
06:13:52 <Igloo> Feel free to subscribe igloo@earth.li
06:16:43 <mgoetze> Igloo: done
06:16:59 <Marvin--> iohc? eek
06:17:14 <mgoetze> Marvin--: we're assuming that you will submit an entry :)
06:17:24 <shapr> yes we are assuming that.
06:17:40 <Marvin--> pray tell, if all you guys are on the jury, how are you expecting to get enough people to *submit*?
06:17:49 * mgoetze isn't on the jury
06:17:56 <shapr> we're going to announce on haskell@haskell.org and comp.lang.functional
06:18:12 <Marvin--> can I submit hws-wp? :P
06:18:16 <Smerdyakov> Hm. Why not have a "make the best wrapper to a popular non-Haskell library" contest instead?
06:18:20 <shapr> is it under 5k? ;-)
06:18:30 <Marvin--> shapr: no:)
06:18:34 <Marvin--> under 5k lines perhaps
06:18:37 <mgoetze> Smerdyakov: uhm... maybe next time :)
06:18:38 <shapr> Smerdyakov: sure, we'll try that in a coupla months.
06:19:05 <Igloo> Ta
06:19:55 <Marvin--> yeah, 3499k lines
06:19:56 <Igloo> Smerdyakov: I'd rather have a "best reimplementation of a non-Haskell library in Haskell"
06:20:03 <Marvin--> dunno how many of those are mine and how many are simonmar's though
06:20:09 <buggs> hoi
06:20:11 <shapr> Igloo: oh, good idea!
06:20:14 <shapr> hey buggs!
06:20:25 <buggs> hey shapr :)
06:20:31 <shapr> yow, 3500 lines is over the limit.
06:20:33 <Smerdyakov> Igloo, that doesn't work so well for things like RDMS interface libraries....
06:20:52 <Smerdyakov> Igloo, as long as they keep the same API, you don't need to re-implement the Haskell version when the protocol changes.
06:20:53 <Marvin--> shapr: it's pretty damn unreadable though ;)
06:21:04 <shapr> Smerdyakov: so, you're going to write an ML emulator for GHC in less than 5k of obfuscated source, right?
06:21:25 <Smerdyakov> No, I'm going to do my homework and work on other projects that I'm actually using =)
06:21:30 <shapr> bah humbug
06:21:34 <Marvin--> 5k files...hmm...can't waste time with long variable names then
06:21:40 <shapr> you want productivity and usefulness or something?
06:21:48 <shapr> sheez, young people these days
06:21:49 * shapr grins
06:22:54 <shapr> Marvin--: if you have ideas for the rules/conditions, I'd like to hear what you think.
06:23:00 <shapr> http://haskell.org/wiki/wiki?ObfuscatedHaskellContest
06:23:13 <Marvin--> there has to be a one-liner category!
06:23:20 <shapr> hm, good point!
06:23:28 <shapr> less than 80 characters?
06:23:45 <Marvin--> I don't know
06:24:34 <shapr> any other ideas?
06:25:23 <Marvin--> do they have to print something in order to be useful? that might be tricky to do on a one-liner
06:25:46 <shapr> I think useful and interesting gets decided by the jury.
06:27:38 <Marvin--> time to see how small I can make a mandelbrot program
06:27:43 <shapr> some of the one-liners that I've seen on haskell@ are pretty good.
06:28:48 <shapr> ok, let's finalize the rules tomorrow and then announce tomorrow or monday.
06:29:18 <shapr> mgoetze: hey, I haven't gotten a confirmation email...
06:29:24 <mgoetze> hm...
06:29:43 <mgoetze> no pending administrative requests
06:29:48 <mgoetze> are you sure you tried to subscribe? lol
06:29:54 <shapr> I think so...
06:29:56 <shapr> lemme try again
06:30:01 <mgoetze> ok
06:30:44 * shapr waits patiently
06:31:46 <mgoetze> shapr: heck, just gimme your address
06:31:52 <mgoetze> and those of any other jury members
06:32:01 <shapr> shae at ScannedInAvian dot com
06:32:46 * shapr looks for dark's address
06:34:04 <mgoetze> dark at xs4all dot nl?
06:34:19 <shapr> I think so
06:34:42 <shapr> I hope he doesn't mind us saying that on a logged channel...
06:42:06 <Igloo> Best sig-sized might be easier
06:42:22 <shapr> hmm, good idea
06:42:29 <shapr> excellent idea
06:42:42 <Igloo> And he says it on logged mailing lists
06:42:54 <mgoetze> Igloo: apt-cache show cgoban
06:43:13 <mgoetze> his email address is available on thousands of CD-ROMs :)
06:43:30 <Igloo> :-)
06:43:32 * Igloo disappears
06:43:34 <Marvin--> Igloo: sig-sized being three lines?
06:43:46 <Igloo> 4x80 or 4x76 or whatever
06:44:10 <Marvin--> I need to invent a scary data structure
06:44:11 <Igloo> And hey, "-- " is a comment - clearly sigs were designed to be valid Haskell
06:44:14 * Igloo really goes
06:44:16 * shapr laughs
06:44:33 <dark> shapr: Yes, I'll have time tomorrow.
06:44:49 <shapr> yay!
06:44:50 <dark> And my email address is no secret, it's already plastered all over thousands of Debian webpages :-)
06:45:17 <shapr> ok then, let's finalize and announce tomorrow
06:47:31 <dark> Note that IOCCC makes up categories to fit the winning entries, not the other way around :)
06:47:40 <dark> Though there are some traditional ones, like "best one-liner".
06:48:08 <Marvin--> yeah
06:49:15 <Marvin--> maybe I should write an obfuscator
06:49:32 <mgoetze> lol
06:49:38 <Marvin--> does that count as "doing something useful"?
06:50:02 <mgoetze> uhm
06:50:05 <Marvin--> I think we should have an obfuscator contest instead :P
06:50:08 <mgoetze> lol
06:50:25 <dark> Marvin: We already have ghc -fext-core, can you beat that?
06:50:31 <Marvin--> dark: I guess not
06:51:35 <dark> From IOCCC: "We suggest that you avoid trying for the 'smallest self-replicating' source.  The smallest, a zero byte entry, won in 1994."
06:51:44 * shapr laughs
06:52:00 <mgoetze> lol
06:52:07 <Marvin--> hahaha
06:52:17 <Marvin--> cute
06:52:28 <Smerdyakov> Are there any Internet resources teaching Haskell as a first programming language?
06:53:25 <Heffalump> is -fno-implicit-prelude allowed for this IOHC thing?
06:53:40 <shapr> Smerdyakov: yes there are
06:53:54 <Heffalump> and/or other GHC extensions
06:53:58 <shapr> I guess so...
06:54:05 <shapr> wanna be a juror and make those kind of decisions? :-)
06:54:16 <Heffalump> how many jurors are there?
06:54:23 <shapr> there will be five jurors
06:54:29 <Heffalump> how many do you have?
06:54:47 <mgoetze> 3 are subscribed
06:55:06 <shapr> I've contacted six people, (dark, shapr, igloo, heffalump, wli, pseudonym)
06:55:15 <shapr> I suspect at least one of those people won't be interested/have time
06:55:41 <shapr> if all of them are interested and have time, I'll drop out of the jury and just do the advertising ;-)
06:55:56 <Heffalump> hmm
06:56:03 <Heffalump> I'll think about it :-)
06:56:25 <shapr> I want to finalize the rules and jury by tomorrow afternoon if possible... think you'll know by then?
06:56:45 <shapr> I realize this is sudden, but it's such a great idea, I want it to start asap :-)
06:56:56 <shapr> http://haskell.org/wiki/wiki?ObfuscatedHaskellContest
06:57:22 <shapr> I'm putting info there as I get it together
06:58:01 <Marvin--> hrrm, so ghc can spit out Core in a text file for me, but is there an available API that turns it into a data structure I can use from a Haskell program?
06:59:08 <shapr> well, if GHC is written in Haskell, and it exports/imports Core
06:59:13 <shapr> you'd think so
07:00:31 <shapr> Smerdyakov: I think Chilli has written a short book that accompanies Haskell as a first programming language.
07:00:36 <Marvin--> yeah, but is it exposed in a module I can reach without hacking the source code for ghc? :/
07:00:49 <shapr> I dunno, would be nice though :-)
07:01:33 <shapr> hdaume and binkley have worked with ext-core, but neither of them are online atm
07:02:55 <Marvin--> I mean, I need a Haskell parser for my master project... The question is which is easiest to work with, full Haskell or Core
07:03:12 <Marvin--> or if I should just pick out a decent subset of Haskell and do my own transformations on it
07:03:28 * shapr doesn't know
07:03:59 <shapr> I would think Core would be easier
07:04:19 <shapr> do you have a title for your master project?
07:04:58 <Marvin--> only a general, preliminary title
07:05:10 <shapr> I wanna hear :-)
07:05:27 <Marvin--> "Proving and Testing Functional Correctness"
07:05:38 <Marvin--> I tried to think of something general enough that I'd be free to change direction later :P
07:05:49 <shapr> sounds good to me.
07:15:30 * Janni has gotta make fire
07:18:49 <mgoetze> anyone for go?
07:22:27 <shapr> I wish HUnit were a ghc-pkg or something
07:22:48 <shapr> I can never come up with a good place to stick randomly useful libraries like that.
07:23:26 <Sucht`on|Hase> cu all !
07:23:31 <shapr> cya
07:24:42 <shapr> is there a good way to define a standard 'libraries' dir?
07:25:09 <Heffalump> hmm.
07:25:23 <Heffalump> I would be inclined to discuss this on the list before actually starting the contest
07:25:46 <Heffalump> I can't actually think of that many tricks to make really obfuscated code in Haskell
07:25:59 <Heffalump> beyond the obvious (ab)use of lambda expressions
07:25:59 <mgoetze> nah, let people abuse things first, then close the holes next time :)
07:26:11 <shapr> named patterns could be scary
07:26:51 <Heffalump> abusing things is the way to go for a OCC, my point is that I don't think there's that many ways to do it
07:26:53 <shapr> yah, you could go with the spirit of lazy evaluation and have very few rules the first time
07:27:19 <Heffalump> i.e. I'm not sure if there's actually any point to this, and would like to see it suggested on the list before going ahead.
07:27:50 <mgoetze> Heffalump: is there a point to IOCCC?
07:28:06 <Heffalump> beyond writing sillily obscure code, no
07:28:20 <shapr> one point I see is learning the nooks and crannies of Haskell, or its various implementations
07:28:20 <Heffalump> I'm not sure it is /possible/ to write particularly obfuscated Haskell. Perhaps it is.
07:28:25 <mgoetze> yeah, so, there will be no point to our IOHC :)
07:28:42 <shapr> like when you asked about no-implicit-prelude
07:28:46 <shapr> I hadn't even considered that idea
07:29:26 <Heffalump> ok, so one obvious rule I think is no FFI
07:29:33 <shapr> yah, that sounds good
07:29:39 <shapr> the point is "haskell source"
07:30:16 <shapr> I think having a submission deadline of march 1st would make for a short contest
07:30:38 <shapr> that way we'll quickly know whether it's a fun idea or not
07:31:02 <Heffalump> true.
07:31:10 <shapr> of course, my general attitude towards life is "let's try this and see if it's fun"
07:31:11 <Heffalump> I have to head off shortly, will be back tonight
07:31:15 <shapr> ok, cya
07:31:21 <Heffalump> I'll let you know if I'll do it then
07:31:26 <shapr> yay :-)
07:31:33 * shapr bounces
07:31:46 <shapr> I hope you have time
07:48:00 <shapr> hey andersca 
07:48:05 <andersca> hello
07:48:09 * andersca is at fosdem
07:48:12 <shapr> how is it?
07:48:15 <andersca> it's cool
07:48:52 <shapr> which tracks are you following?
08:03:16 <creature> Hey shapr, Marvin--, dark - just wanted to say "Thanks" for the help last night, I really appreciate it. 
08:03:39 <Marvin--> no problem :)
08:04:07 <mgoetze> hi alex :)
08:04:39 <creature> Hey Mike. 
08:04:40 <creature> Sup?
08:05:11 <mgoetze> mmm, my hawaii pizza just arrived
08:05:28 <creature> Nice. 
08:05:33 * creature has just woken up.
08:05:39 <mgoetze> *munch*
08:05:42 <creature> I slept for about 12 hours. 
08:08:10 <mgoetze> bah, i was going to practice today for my exam on thursday, and what have i done so far? nothing...
08:08:25 <shapr> what's your exam about?
08:11:40 <mgoetze> programming in c :(
08:11:52 <shapr> at least it's simple :-)
08:12:27 <mgoetze> well yeah, but we're not allowed to take any references along
08:12:35 <mgoetze> so i have to know all the library functions, which i don't
08:12:38 <shapr> ah, I see
08:14:31 <mgoetze> mmm, i love pizza
08:14:34 <dark> Programming in C without references?  That's a highly unnatural environment.
08:14:55 <dark> It also leads to abuse of strncat :-)
08:15:52 <dark> The first guests are arriving, I have to go :)  (I prefer not to have an online computer during a party.)
08:20:34 <mgoetze> programming without a computer is, in general, highly unnatural
08:20:47 <creature> We had an assignment like that recently. 
08:20:54 <creature> Our exam papers are meant to be anonymous.
08:21:04 <creature> So we hand them in with the exam number on.
08:21:06 <creature> So far, so good. 
08:21:24 <creature> My friend, however, decided this was a dumb idea and put his real name in the @author field of the javadoc comments. :)
08:21:50 * shapr grins
08:22:36 <creature> shapr - cheers for the help last night, btw, not sure if you saw.
08:23:32 * mgoetze really should ask what the bloody point of the programming exam is, anyway
08:23:41 <creature> Heh.
08:24:39 <Marvin--> meh, I need an old graphics card
08:24:46 <shapr> creature: thanks, though I don't think I contributed anything, it was really the other people who helped you.
08:24:49 <shapr> Marvin--: why?
08:25:02 <mgoetze> i mean, ok, someone will probably ask me to write in c at some point in my carreer. but i *will* have a computer to do it, and there will be a vim and a complete set of manpages at my disposal
08:25:18 * mgoetze has a VGA card with 256kb of memory :)
08:28:05 <creature> I need an old laptop from somewhere. 
08:28:21 <Marvin--> shapr: because my old computer doesn't seem to detect its graphics card
08:28:38 <Marvin--> shapr: and I have no idea how backwards compatible agp is, I'm pretty sure my newer graphics card won't work in the old computer
08:29:17 <shapr> agp only works in agp slots
08:29:38 <shapr> PCI video cards are still manufactured though.
08:29:58 <shapr> Marvin--: what sort of old computer is it?
08:30:44 <shapr> hi giedi 
08:30:52 <giedi> elo
08:30:59 <shapr> were you having toubles with ghc yesterday? anything I can help you with?
08:31:17 * giedi shakes his head.
08:31:31 <Marvin--> shapr: well there are different acceleration levels on agp...
08:31:34 <giedi> I just installed helium..
08:31:43 <Marvin--> shapr: it's four years old or so, a celeron 400
08:32:13 <creature> Helium's the latest redhat, isn't it? 
08:33:23 <Marvin--> shapr: I think I tried the newer graphics card in the old computer last summer when I waited for a new motherboard to see if that would speed up war3, but it didn't work
08:33:27 <giedi> This is supposed to be a 'learning haskell' but, there the only documentation seems to be the prelude reference.. I don't know where to go besides the three examples. And there are differances between helium and haskell so I'm not sure if I should just go out and read more haskell tutorials and get confused trying to apply them with helium.. 
08:33:31 <Marvin--> so preferrably I'd want to try with a pci card
08:34:02 <shapr> creature: nah, helium is in the channel topic
08:34:05 <giedi> or just stick with ghc or hugs or something..
08:34:47 <shapr> I don't know what the best solution is...
08:34:55 <shapr> I got two Haskell books and read those.
08:35:05 <shapr> and asked very many questions here on #haskell while I did so
08:35:45 <shapr> giedi: from the list of differences I saw between helium and 'full' Haskell
08:36:09 <shapr> I don't think those differences will bite you until you get into somewhat complicated code
08:36:10 <creature> shapr - heh, thought I'd seen it somewhere before recently. :)
08:37:08 <shapr> http://www.cs.uu.nl/~afie/helium/documentation.html
08:37:13 <shapr> that has a list of the differences
08:37:30 * giedi nods
08:38:18 <shapr> I think those differences are small enough that you won't have any trouble 
08:39:00 <giedi> cool.. I shall return shortly to ask silly questions :)
08:39:14 <shapr> ok :)
09:58:44 * giedi-lunch waves
10:00:47 * shapr bounces
12:31:07 * whee hopes ghc compiles again
13:37:06 <jlouis> I dont get multi-parameter type classes
13:38:36 <jlouis> I have a: class FiniteMap m k where... definition. Fine. We have m is the map type, and k as the key type
13:38:56 <jlouis> Next, I have: data Trie mk ks a = TRIE (Maybe a) (mk (Trie mk ks a))
13:39:27 <jlouis> and: instance FiniteMap m k => FiniteMap (Trie (m k)) [k] where
13:39:31 <jlouis> ...
13:39:36 <jlouis> Which confuses me
15:31:45 <jadrian> hello
15:32:08 <mgoetze> hi
15:32:14 <jadrian> I mgoetze
15:32:37 <jadrian> "hi" mgoetze
17:59:23 * shapr bounces
17:59:23 <shapr> hiya
18:02:32 <shapr> Heffalump: awake?
18:05:03 <shapr> ok, Pseudonym has confirmed, he's a juror.
18:05:04 <shapr> yay!
18:05:29 <radix> who what where
18:06:16 <Smerdyakov> Are you sure it wasn't "jew... ROAR!!!!"?
18:06:20 <shapr> radix: http://haskell.org/wiki/wiki?ObfuscatedHaskellContest
18:06:30 <radix> ew :P
18:06:42 <shapr> radix: c'mon, you should enter.
18:07:35 <shapr> Smerdyakov: c'mon, you know you want to enter ;-)
18:11:48 <Smerdyakov> No, but I can give you a jew roar.
18:12:11 <radix> shapr: heh
18:12:25 <radix> shapr: but that'd be cheating
18:12:32 <radix> since I'm a newbie and would write horrible code anyway :)
18:31:12 <shapr> yow, it's 3:30am
18:31:14 <shapr> where does the time go??
18:32:45 <radix> INTO THE PAST
18:32:50 <shapr> truly
18:38:35 <shapr> hi lament 
18:38:59 <lament> hi.
18:39:05 <shapr> what's up?
18:39:41 <jlouis> hrm, any members of the church of the least fixed point?
18:40:04 <shapr> ah, pointless programming
18:40:05 <shapr> hi jlouis 
18:40:11 <shapr> have you been here before?
18:40:15 <jlouis> nope
18:40:27 <jlouis> I am from the SML world.
18:40:31 <shapr> welcome to our niche of spiffiness :-)
18:40:40 <lament> not much.
18:40:45 <jlouis> other side of the fog so to speak
18:40:49 <shapr> you may want to check out #sml as well
18:41:06 <jlouis> might be. I ended up liking Haskell a bit more I think
18:41:15 <shapr> I'm fond of Haskell.
18:41:59 <jlouis> SML is half beast, it allows for imperative programming
18:42:12 <jlouis> Haskell and Clean is the true beaty ;)
18:42:16 <jlouis> +u
18:43:32 <jlouis> though most of the SML compilers kicks serious butt due to being strict
18:44:03 <lament> clean is not the true beauty
18:44:06 <shapr> I've read a bit about SML, though I haven't tried it yet.
18:44:06 <lament> since it isn't free :)
18:44:18 <lament> Or maybe it is, but the implementations aren't
18:44:21 <jlouis> lament: ah, hehe
18:44:26 <jlouis> bot = bot
18:44:27 <jlouis> clean = bot
18:44:31 <jlouis> nuff said
18:45:13 <jlouis> Their uniqueness typing stuff for imperative programming is ok. Though my intuition tells me that monads are more general
18:45:50 <jlouis> Anybody which knows how multi-parameter type classes are inferred by the kind system?
18:46:25 <shapr> not me...
18:47:00 <shapr> I think Simon PJ wrote the type classes code originally
18:47:06 <shapr> so you may want to check out his publications list
18:47:13 <jlouis> me neither. It seems quite interesting and I can (ab)use it. Yet I would still like to know it is done
18:47:24 <jlouis> is he still working for MS Research?
18:47:40 <shapr> I think so
18:48:06 <shapr> his homepage was still there in the last two weeks or so :-)
18:48:11 <jlouis> google does too :)
18:55:02 <jlouis> SML is much like haskell, though it misses guards and list comprehensions as the main syntactic sugar
18:55:16 <jlouis> the Haskell Prelude is a bit more abstract too
19:42:34 <shapr> I think it's time for sleep
19:42:40 * shapr falls over
19:48:29 * whee steals shapr's wallet
20:42:45 <Binkley> heya
21:04:13 * Heffalump returns
22:38:16 <kawfee> hello
