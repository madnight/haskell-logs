04:01:54 <neniu> Anyone solved problem 8.1 of SOE?
11:39:00 <dark> Hello.  Does anyone know of non-sequential ways to generate a matrix of pseudorandom numbers?  I'd like to do it so that it's possible to calculate individual matrix elements lazily.
11:49:31 <Heffalump> you'd need to fork the RNG, I guess
11:49:36 <Heffalump> which is possible, isn't it?
11:51:58 <dark> Yeah, there's this split function, though there's a caveat about its randomness properties.
11:52:47 <dark> Hmm.  Are you thinking of something like using it to generate a random binary tree?
11:53:32 <Heffalump> well, or just split it once for each new matrix entry
11:54:02 <Heffalump> if you can't split them safely then you can't have each individual entry be lazy
11:55:18 <dark> The effect I'm looking for is that looking up element (500, 500) should be no more expensive than looking up element (1, 1)
11:55:49 <Heffalump> then it'll need to use some kind of binary tree, yeah
11:55:56 <Heffalump> oh, actually, no
11:56:05 <Heffalump> just build an array
11:56:16 <dark> I was hoping there'd be some research into pseudorandom functions that generate a whole field instead of just one next number :)
11:56:18 <Heffalump> or do you not want to pay any setup cost?
11:56:35 <Heffalump> I don't see how you can expect it to be lazy and have them all generated at the same time
11:56:56 <dark> I'm trying to get away from the model where I have to linearize all my code just to thread a random series through it.
11:57:25 <Heffalump> all you have to do is split a RNG into as many entries as the matrix has
11:57:33 <Heffalump> and you can do that however you like, in a utility function
11:57:48 <dark> How is that different than using the RNG to generate that many entries, though?
12:00:32 <Heffalump> well, if you do it using binary trees then it'll all be fairly lazy, I guess
12:01:30 <Heffalump> if you do it sequentially then the whole lot would have to be generated
12:05:24 <dark> Hmm... I guess there are functions that would do what I'm thinking of, but they might be more expensive than generating the whole matrix in the first place.  For example, I could encode the index and a seed as an octet sequence, and take the md5sum.  Given the cryptographic properties of MD5, that should be random enough.
12:06:24 <Heffalump> true
12:06:41 <dark> Given the cost of calculating an MD5 sum, this is probably not a good way to do it :-)
12:06:53 <Heffalump> :-)
12:07:13 <Heffalump> how many entries are there in total and how many are you ever likely to demand?
12:08:51 <dark> Two 100x100 matrices, so 20000 entries.  How many I'll need depends, um, on how much the player flies around :-)
12:10:05 <Heffalump> but you'd rather have minimum setup cost for it?
12:25:16 <dark> Heffalump: Sorry for being away, dinner was suddenly ready :)
12:25:58 <dark> I'm not really worried about the setup cost, I would just like to be able to define these matrices as arrays of such and such kind of random numbers.
12:26:13 <dark> And then maybe skip the arrays, and just define them as functions.
12:27:04 <dark> In fact, arrays seem to be needed solely to translate from a pseudorandom series to something that can be indexed :)
13:06:49 <Rainer> For you enjoyment, here is a little rittle. What type does p have, what does it do? Without checking it in the interpreter ofcurse.
13:06:53 <Rainer> p x = let p x = 'q':q x; q x = 'p':p x in p x where x = p x
13:07:27 <Rainer> This is no assigment or so, just came up with it while learning:)
13:09:03 <Heffalump> bah
13:09:08 <Heffalump> I'm still thinking about it...
13:12:18 <Heffalump> hmm
13:12:23 <Heffalump> Char -> [[Char]]
13:13:13 <Heffalump> and outputs ["qpqpqpqpqpqpqp.....",...]
13:13:16 * Heffalump --> try it
13:13:29 <Heffalump> oh, a -> [[Char]]
13:13:30 <Heffalump> sorry
13:13:33 * Heffalump --> really try it
13:14:38 <Heffalump> damn :-)
13:14:54 <Heffalump> miles off.
13:23:33 <Rainer> Here an easier version with less obfuscation:
13:23:37 <Rainer> p x = let p x = 'q':q x; q x = 'p':p x in p undefined
13:24:31 <Heffalump> heh :-)
13:24:40 <Heffalump> I got the scopes wrong for the last one
13:24:45 <Heffalump> (I think)
13:25:03 <Rainer> It's fun isn't it:)
13:25:41 <Heffalump> well... :-)
13:25:56 <Heffalump> I wouldn't ever mix let and where like that in real code, thank god :-)
13:26:19 <Rainer> grin
13:26:43 <Igloo> I do quite often, especially when using guards
13:26:49 <Igloo> Although with more sensible layout
13:29:19 <Rainer> This version does the same as the first, but with a different type:
13:29:27 <Rainer> w = let p = 'q':q ; q = 'p':p in p
13:29:34 <Rainer> ok, bye:)
13:30:13 <Heffalump> ok, I guess mixing let and hwere is ok, but shadowing names while doing so is just asking for trouble :-)
13:31:53 <Igloo> Well, yes  :-)  I use -Wall with GHC and fix all shadowing
15:36:08 <kunphuzil> cool, a haskell chan
15:36:31 <mgoetze> kunphuzil: actually, we're just here to talk about playing go :)
15:38:37 <kunphuzil> heh
15:39:34 <SyntaxPolice__> I lost a game of go yesterday :(
15:40:19 <emu> have you ever tied a game?
15:41:24 <kunphuzil> uh.. what is go really?
15:41:31 * mgoetze tied a game against gnu go once
15:41:44 <mgoetze> kunphuzil: the best board game ever :)
15:42:15 <Heffalump> you know, the go conversation is drawing in more participants than Rainer's puzzle...
15:42:39 <mgoetze> Heffalump: i hope you're not surprised :)
15:44:47 <Heffalump> hmm... :-)
15:45:15 <Igloo> I participated in the puzzle, just not on channel  :-)  (unless you count what I said above as participating)
15:46:03 <Igloo> Hmmm, I think GNU go might be my new xkobo
16:10:05 <Igloo> mgoetze: Did you just run gnugo and start playing?
16:16:21 <SyntaxPolice__> emu no.
16:22:11 * Igloo discovers I misunderstood the rules at a vital point
16:35:03 <mgoetze> Igloo: no :)
16:35:26 <mgoetze> Igloo: would hardly have tied it like that, heh
16:35:33 <Igloo> What then?
16:36:05 <mgoetze> was at a local "games fest", people explained it to me there
16:37:38 <Igloo> Oh, sorry, I meant any command line options or anything
16:37:55 <mgoetze> oh, over cgoban
17:02:22 <mgoetze> anyone want to attack imperative programmers? #advocacy :)
17:03:46 <Heffalump> oh, go on then
17:08:57 <mgoetze> come on, the ocaml fans are attacking haskell! :)
17:13:10 <clausen> Pseudonym: what's your position at rmit?
17:13:23 <Pseudonym> Er... not sure what it technically is called.
17:13:28 <Pseudonym> Software Developer, I think.
17:13:37 <clausen> aha
17:13:48 <Pseudonym> Why do you ask?
17:14:36 <Pseudonym> I don't appear to have an entry in the "staff details" section of the web site.
17:14:47 <clausen> I was wondering if you were studying
17:14:51 <Pseudonym> Nup.
17:15:21 <Pseudonym> OK, I'm a Software Engineer.
17:15:26 <Pseudonym> There you go.
17:15:34 <clausen> :)
17:15:44 <clausen> (but, with haskell... could have been a phd...)
17:15:59 <Pseudonym> I think I get paid more than a junior academic.
17:16:44 <Pseudonym> Actually, I far prefer actually writing big programs than theorising about them.
17:16:51 <Pseudonym> Actually.
17:17:20 <clausen> I haven't made up my mind about that yet
17:17:26 <clausen> a mix of both is certainly good
17:17:42 <Pseudonym> The thing with being an academic is the amount of non-academic BS you have to do.
17:18:05 <Pseudonym> Begging for grant money, reports on how wisely you've spent your grant money, marking exams...
17:18:18 <clausen> yeah
17:18:23 <Pseudonym> Actually researching and giving lectures wouldn't be so bad.
17:19:23 <clausen> it might be frustrating proving that "X is useful"
17:19:34 <clausen> but not actually build "X" to make it useful
17:19:36 * Heffalump is scared of all those things
17:19:42 <Heffalump> (the grants/exams stuff)
17:20:01 <clausen> also, other random stuff, like organizing semanars
17:20:10 <clausen> tutors, etc.
17:20:11 <Pseudonym> Organising seminars isn't so bad.
17:20:31 <Pseudonym> Well, managing personnel and timetables is a chore, but you get other people to do that for you.
17:21:19 <clausen> when you're running a subject, you need to make sure the tutors are up to scratch, etc.
17:21:25 <clausen> (and are in sync with lectures, etc.)
17:21:38 <clausen> so, you have to have lots of meetings, etc.
17:21:41 <Pseudonym> Nah.  You pick a head tutor and let him/her do the rest.
17:21:49 <Pseudonym> You meet only with the head tutor.
18:40:19 <|m0rph|> hy
18:40:26 <|m0rph|> anyone ?
18:40:34 <mgoetze> nope
18:41:59 <Pseudonym> None at all.
18:42:14 <mgoetze> _|_
18:44:09 <|m0rph|> :D
18:44:23 <Pseudonym> bottom where bottom = bottom
18:44:27 <|m0rph|> i'm trying to understand the IO in haskell
18:45:17 <|m0rph|> i want to do a program that reads a text from a file , then treats the information , so that i can run other funcions above it ..
18:45:30 <|m0rph|> do you advice me any doc ?
18:45:36 <|m0rph|> or is it any code online ..
18:45:55 <mgoetze> |m0rph|: gentle introduction to haskell98, at www.haskell.org
18:46:22 <Pseudonym> http://haskell.org/tutorial/
18:47:31 <|m0rph|> thx
18:47:54 <Pseudonym> I don't know how good this is:
18:48:20 <Pseudonym> http://www-fp.dcs.st-and.ac.uk/~hk/papers/io-tutorial/io-tutorial.ps.gz
18:48:50 <|m0rph|> HTTP request sent, awaiting response... 404 Not Found
18:48:50 <|m0rph|> 02:48:13 ERROR 404: Not Found.
18:48:52 <|m0rph|> :/
18:48:56 <Pseudonym> Aha.
18:49:02 <Pseudonym> Well, I guess it's no good then. :-)
18:49:59 <Pseudonym> http://citeseer.nj.nec.com/94760.html
18:50:01 <Pseudonym> Try that.
18:51:38 <Pseudonym> Probably you'll need to change LibIO to IO and LibSystem to System.
18:51:42 <Pseudonym> But apart from that...
18:58:10 <|m0rph|> thx a lot
18:58:21 <|m0rph|> happy new year :P
19:35:11 <SyntaxPolice__> will anyone be excited by an upgrade to the haskell-mode debian package?
19:38:19 <Pseudonym> What's an emacs?
19:50:35 <emu> it's an animal
19:50:41 <emu> looks like a gnu
19:50:56 <emu> big shaggy fur, horns
19:51:00 <emu> goatlike
19:52:53 <SyntaxPolice__> i did mean the emacs haskell mode, if that is what your question is :)
19:54:49 <Pseudonym> No, I was engaging in editor bigotryl
20:00:00 <emu> http://www.gnu.org/graphics/gnu-head-sm.jpg
20:00:04 <emu> <-- an Emacs
20:00:26 <emu> they are often found gathered around computer labs
20:01:32 <emu> mooching off cs students' time
20:03:23 <SyntaxPolice__> emu: not to mention being the top 10 processes in a given login server :)
21:56:43 <dark> I haven't seen shapr around in a while, is he ok?
22:07:41 <Pseudonym> He works European hours now.
22:07:57 <Pseudonym> It's also been Christmas + new year, of course.
