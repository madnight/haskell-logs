00:32:04 * d33p is back (gone 04:47:33)
02:12:56 * Marvin-- goes AAAAAAAAAAAAAAAAARGGGGGHH
02:32:30 <Logan> j0!
02:49:11 * shapr bounces
02:49:16 <shapr> hi guys, what's up?
02:50:03 <lament> the most exciting thing to happen was some guy getting k-lined five times.
02:50:37 <shapr> oh
02:50:37 <shapr> well
02:57:07 <Marvin--> yay, or something
02:57:28 <shapr> hi Marvin--
02:58:54 <Marvin--> hullo shapr
02:59:37 <shapr> what's up?
03:01:40 <Marvin--> nothing much, I'm considering attending a master project presentation in an hour
03:01:56 <Marvin--> I have no idea what it's about, but it may be good to see what happens on a presentation before I have one myself ;)
03:03:30 <shapr> good idea
03:08:15 <Marvin--> Coq is pretty cute
03:09:17 <Marvin--> The tactics-based proving feels easier to work with than alfa
03:09:21 <shapr> it looks nifty
03:09:29 <shapr> I haven't even looked at alfa
03:10:24 <Marvin--> Alfa is probably more general
03:10:36 <Marvin--> The basis for Alfa is kind of like Cayenne
03:34:35 <Marvin--> time to go
05:17:39 * shapr bounces happily
05:21:33 <dark> shapr: Do you have a license to bounce?
05:21:38 <shapr> hi dark!
05:21:43 <dark> Hello :)
05:21:48 <shapr> I didn't know that bouncing was a regulated activity.
05:22:01 * shapr fixes bugs in code, yay!
05:22:04 <dark> Bouncing always reminds me of Philémon and the Wild Piano.
05:22:08 <shapr> who's that?
05:22:16 <shapr> sounds familiar somehow
05:22:17 <dark> I don't know, some guy in a french cartoon :)
05:22:42 <shapr> I'll ask my french woman about that sometime.
05:23:31 <dark> He was thrown off a balloon and bounced on the grass, in an area where bouncing was prohibited.  For that, he was sentenced to a duel with the wild piano.
05:23:44 <dark> The whole story was pleasantly weird :)
05:23:48 <shapr> sounds great
07:38:37 * shapr wishes for pattern matching in Python
08:06:19 * shapr rebounds off the ceiling
08:07:33 * shapr dribbles himself around the room
08:10:50 <Igloo> Hey shapr  :-)
08:10:57 <shapr> hiii Igloo!
08:11:10 * shapr sproings happily
08:11:29 <Igloo> What's new?
08:11:39 <shapr> I got lots of good work done today, yay!
08:11:42 <shapr> what's up with you?
08:17:34 <Igloo> Ermmm, not much
08:17:43 <Igloo> Will be thinking about semantics again shortly
08:17:51 * shapr is nearly finished with todays work
08:31:46 * Igloo enters 'write "foo does the obvious thing", realise it's not obvious, delete, think' mode
08:31:53 <shapr> heh
08:31:57 <shapr> that's a good mode.
08:45:23 <Igloo> Hmmm
08:45:29 <shapr> ?
08:45:39 * Arnia attacks shapr's hair here too
08:45:45 <shapr> nooo
08:45:55 <Arnia> Its a two pronged attack
08:45:55 <Igloo> Just realised there is a difference between (\x -> \x -> x) and (\x x -> x)
08:46:04 <Igloo> So \ps isn't simple syntactic sugar
08:50:57 <Heffalump> igloo: oh?
08:51:02 <Heffalump> ohh.
08:51:03 <Heffalump> yes
08:51:08 <shapr> I'm lost
08:51:12 <Heffalump> it's syntactic sugar modulo scoping and name collision rules
08:51:20 <Heffalump> and those are *almost* syntax :-)
08:51:48 <Igloo> shapr: Try applying 5 and 6 to them both in hugs
08:52:06 <shapr> works the same in ghci?
08:52:24 <dark> Is (\x x -> x) even valid Haskell?  I thought you couldn't have the same variable more than once in a pattern.
08:52:42 <Heffalump> I'd have assumed it wasn't
08:53:09 <shapr> it explodes in ghci
08:53:24 <shapr> the other one works though
08:56:24 <Igloo> It's not a pattern, it's a list of 2 patterns
08:56:37 <Igloo> And no, it's not valid
08:57:13 <shapr> Igloo: does it work in Hugs?
08:57:53 <Igloo> It is correctly rejected
09:03:10 <shapr> hi Marvin--
09:03:55 <Marvin--> hullo
09:04:33 <Marvin--> now I've got even more choices
09:05:44 <andersca> master project?
09:06:40 <Marvin--> yeah
09:06:52 <Marvin--> fortunately, I think these ideas are close enough to fit under one somewhat fuzzy description :)
12:56:00 <mrgandalf> I have a question about garbage collection
12:56:28 <mrgandalf> is it possible to automatically trigger the RTS's garbage collector? something like scheme's "(collect)"?
12:57:27 <Janni> hi
12:57:51 <mrgandalf> hi
12:57:52 <Janni> hi, all.
12:58:31 <dark> mrgandalf: yes, GHC has a performGC function in System.Mem
12:58:34 <hdaume> mrgandalf: in ghc, yes
12:58:36 <hdaume> performGC
12:58:37 <hdaume> hehe
12:59:06 <mrgandalf> thanks hdaume
12:59:25 <mrgandalf> somehow in rtfming I missed that
15:38:37 <andersca> time to order some haskell merchandise
15:40:11 <Igloo> :-)
15:40:25 <Igloo> ISTR not being 100% impressed with what was on offer at haskell.org
17:09:23 <Igloo> What do you call e in \x -> e? The right-hand side of the lambda abstraction?
17:12:30 <andersca> the expression?
17:12:50 <Pseudonym> The body?
17:13:03 <Igloo> Ah, body sounds right, ta
17:37:29 * d33p is away: xyxo yp iyeb pemusxq lecsxocc!
