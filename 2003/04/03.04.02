00:00:11 <vardamir> how is writeFile used?
00:00:19 <Marvin--> writeFile :: FilePath -> String -> IO ()   you pass the file name and the string to write to the file
00:00:46 <vardamir> ok, now the type of writeFile makes more sense
00:03:10 <vardamir> btw, what exactly is the 'h' that i'm using?  I read over lambda calculus but I don't really see how that fits in.
00:04:19 <Marvin--> you mean the  \h -> ...?
00:04:31 <Marvin--> the h is the result from openFile, it's a Handle
00:04:31 <vardamir> yeah
00:04:39 <Marvin--> but the general pattern  \x -> e  is a lambda function
00:04:46 <Marvin--> \ is supposed to be a small lambda
00:05:20 <Marvin--> for example,  (\x -> x + 2) 3  is  5, because  (\x -> x + 2)  is the function that given an x, adds 2 to that x
00:05:53 <vardamir> yeah, i think i just was confused because I didn't know that h was a handle
00:06:06 <vardamir> and because it is 3:00 AM here
00:06:26 <Marvin--> heh
00:06:31 <Marvin--> well, bracket is a bit tricky
00:17:56 <Marvin--> all works now?
00:18:06 <vardamir> well, i'm still doing something wrong, if you'd like to take a look on #flood
00:18:19 <vardamir> i'm getting an incorrect indentation error ;)
00:18:29 <vardamir> though i'm not sure if that is it
00:18:52 <Marvin--> sorry, missed the first bit :/
00:18:59 <Marvin--> no wait
00:22:15 <Marvin--> hmm
00:32:19 <vardamir> now the only question is, will there ever be an output file with the input as 13466917 ;)
00:32:27 <vardamir> goodnight, and thanks again
01:01:47 * shapr awakens
02:04:38 * shapr yawns
02:06:16 <mgoetze> hi shapr
02:06:25 <mgoetze> didya sleep well?
02:07:32 <shapr> yah, it was great, did you sleep well? :-)
02:08:13 <mgoetze> hm, dunno, think it was about average
02:10:02 <pesco> good morning!
02:10:06 <shapr> y0 y0
02:10:10 <shapr> good morning pesco 
02:10:59 <pesco> mgoetze: I heard yesterday that you have webspace? Could I put the powerpc-linux GHC distfiles up on it once they're done?
02:11:28 <mgoetze> pesco: how big are they, and how many downloads do you expect?
02:12:01 <pesco> Oh, I just want them to be somewhere so the GHC people can get them and put them on their website.
02:12:38 <pesco> They're going to be relatively big, though. The i386 tarball of GHC4 is 9.2M.
02:12:48 <pesco> GHC should be a bit bigger still.
02:13:39 <mgoetze> pesco: well, ysee, my main limitation is disk space :)
02:13:49 <shapr> I can put stuff on my gateway box
02:14:00 <pesco> Oh, ok. It sounded as though you had your own server.
02:14:02 <shapr> lambdabot: @karma shapr 
02:14:02 <lambdabot> shapr has a karma of 0
02:14:08 <pesco> shapr: Okay!
02:14:10 <shapr> yay! new plugin!
02:14:16 <mgoetze> pesco: i do, it's just virtual and has a virtual 1gb disk :)
02:14:16 <pesco> heh
02:14:19 <shapr> lambdabot: @karma+ lambdabot 
02:14:20 <lambdabot> lambdabot's karma has been incremented.
02:14:26 <shapr> lambdabot: @karma lambdabot 
02:14:26 <lambdabot> lambdabot has a karma of 1
02:14:30 <shapr> w00
02:14:38 <mgoetze> lambdabot: @karma- mgoetze
02:14:39 <lambdabot> mgoetze's karma has been decremented.
02:14:40 <pesco> mgoetze: i see
02:14:45 <mgoetze> lambdabot: @karma mgoetze
02:14:45 <lambdabot> mgoetze has a karma of -1
02:14:57 <shapr> Riastradh wrote the @karma plugin
02:15:00 <pesco> I'll just take shapr's gateway then.
02:15:13 <mgoetze> pesco: if it's just for the ghc people to pick up, i could do that :) anyway, take shapr, he's a nice guy too
02:15:20 <shapr> heh :-)
02:15:20 <mgoetze> lambdabot: @karma+ mgoetze
02:15:21 <lambdabot> mgoetze's karma has been incremented.
02:15:21 <pesco> *g*
02:16:20 <shapr> looks like Darius has a lambda calculator plugin in development
02:17:39 <shapr> any other plugins or changes before 1.0 ?
02:23:37 <shapr> ok then
02:23:51 <shapr> I'll make up a 1.0 release after swedish class
02:24:59 * shapr bounces off to class
02:25:55 <mgoetze> cya
02:33:23 <Janni> hiyeah!
02:34:09 <mgoetze> hi Janni :)
02:34:13 <mgoetze> ferien?
02:35:10 <Janni> no, just got home from school early and wrote a good physics test with learning... umm.. not too much.
02:36:01 <Janni> And the current song is responsible for my good mood, too
02:36:29 <mgoetze> you learn for physics tests? :P
02:38:02 <Janni> Actually, I learn(ed), yes. But it usually happens that I know all the stuff but I didn't _practice_. I don't like calculating. But this time we hadn't calculate very much :)
02:39:30 <mgoetze> i find that the calculations necessary in physics tests are usually ridiculously simple ;)
02:40:26 <Janni> s/hadn't/didn't have to/ <- That was a bad one...
02:40:50 <mgoetze> yeah :)
02:50:24 <Janni> Thinking about it, I guess it's mainly that girl that gives me that look... But that's nothing to elaborate on :)
02:50:47 <Janni> .oO(WTF am I telling them _this_?)
02:56:42 <mgoetze> lol
03:14:49 <rudy_> hi
03:15:07 <rudy_> type Bord = [Int]
03:15:07 <rudy_> type Rij = Int
03:15:07 <rudy_> type Kolom = Int
03:15:07 <rudy_> type Dimension = (Rij,Kolom)
03:15:07 <rudy_> type Plaats  = (Rij,Kolom)
03:15:08 <rudy_> type Position = Int
03:15:14 <rudy_> knightstour :: Dimension -> Position -> IO()
03:15:14 <rudy_> knightstour (rij,kolom) positie 
03:15:14 <rudy_>     = knight (rij,kolom) (floor(positie/kolom), floor(positie/rij))
03:15:23 <rudy_> knight:: Dimension -> Plaats -> IO()
03:15:31 <rudy_> Type checking
03:15:31 <rudy_> ERROR "KnightsTour_RUDY.hs":49 - Instance of RealFrac Int required for definition of knightstour
03:15:48 <rudy_> what does this error mean?
03:16:31 <Janni> Have a look at ":t (/)"
03:17:32 <rudy_> hmm
03:17:42 <rudy_> Fractional a => a -> a -> a
03:17:53 <Janni> Can you interprete this?
03:17:58 <rudy_> no sorry...
03:19:00 <rudy_> floor :: (RealFrac a, Integral b) => a -> b
03:19:03 <Janni> OK. "(/)" takes two arguments of the type "a" and yields a function of the type "a" as a result, where "a" is a Fractional.
03:19:28 <Janni> That means, that the two arguments have to be fractional and not integrals
03:19:53 <Janni> Can you follow?
03:19:55 <rudy_> yes
03:20:42 <Janni> So you have to transform your Ints (positie, kolom) to Fractionals using "fromInt"
03:21:29 <Janni> If you want to learn what the "Fractional a =>" really means, learn about classes.
03:22:01 <rudy_> so that should be:
03:22:23 <rudy_> floor(fromInt(positie)/fromInt(kolom))
03:22:44 <rudy_> right?
03:22:50 <Janni> Yes, but you can save up the brackets.
03:23:40 <Janni> All operands are bound weaker to the operator than arguments to functions
03:24:05 <rudy_> yes it works! :)
03:24:13 <Janni> Oy course it does ;)
03:24:35 <rudy_> i have to implement knightstour in haskell for a course
03:24:56 <Janni> What's it about?
03:25:14 <rudy_> the course is called: non procedural programming languages
03:25:22 <rudy_> (I'm Belgian)
03:25:22 <Janni> Does it have s.th. to do with chess?
03:25:35 <rudy_> pardon?
03:25:45 <rudy_> ah something
03:25:54 <Janni> I mean your program "knightstour"
03:25:58 <rudy_> yes
03:26:31 <rudy_> given a nxm board, give all possible knighttours starting from a given position
03:27:55 <Janni> Found this: "that finds a Hamiltonian cycle for the knight on a chess board". Is a knight the same as a queen in chess? (I'm German)
03:28:27 <Janni> Because IMHO it's not possible to go on every field with that figure that can only go diagonally.
03:28:34 <rudy_> no
03:28:41 <rudy_>  a knight is a horse
03:28:55 <Janni> Ah, OK.
03:29:54 <rudy_> the half of my course is about functional languages and the other half is about logical languages 
03:29:59 <mgoetze> pawn - bauer, knight - springer, bischof - laeufer, rook - turm, queen - dame, king - koenig
03:30:19 <Janni> Yay! :)
03:30:24 <rudy_> and for each part we have a project, first part is haskell, second part prolog
03:30:34 <mgoetze> of course, chess is a crappy game, but i thought i'd tell you anyhow ;)
03:31:07 <Janni> I like chess, but I like crappy stuff :)
03:31:27 <rudy_> I can't even play chess so, I can't really give my opiniion
03:31:28 <rudy_> -i
03:32:32 <Janni> rudy: Wait a minute, mgoetze is going to tell you to learn GO :)
03:32:52 <mgoetze> of course; it's a much better game :)
03:34:30 <rudy_> go, isn't that with to colors ?  And when you inclose a line of the other color with your color the other colors become your colors ?
03:34:39 <rudy_> s/to/two/
03:35:39 <mgoetze> no
03:35:45 <mgoetze> that's reversi, which is crap
03:36:09 <mgoetze> Welcome to #go! | intro to game: http://senseis.xmp.net/?Go | http://goproblems.com |  http://learngo.world-go.org
03:38:09 <rudy_> oh
03:38:15 <rudy_> I didn't know that game
03:38:34 <rudy_> I like to play pente
03:38:41 <rudy_> liked 
03:42:41 <rudy_> well thanks for the help
03:42:59 <rudy_> i'm going now, mayby i'll come back if i'm stuck again :)
03:43:12 <rudy_> if you want' my program just ask
03:44:50 <rudy_> :)
03:44:58 <rudy_> xfree crashed
03:45:17 <andersca> ugh
03:45:48 <rudy_> so if somebody wants my knightstour program just ask :)
05:56:45 <Marvin--> ugh, inlining is tricky
05:58:04 <o3> template haskell is trickier
06:00:19 <Smerdyakov> Exploding rainbow wins
06:14:37 * shapr coughs
06:15:02 <shapr> I asked bea to use her super powers to find me some extra strong cheese.
06:15:23 <shapr> I'm obviously a cheese weenie.
06:15:44 <Smerdyakov> Try extra strong hot sauce instead!
06:15:55 <shapr> I like hot sauce
06:16:03 <Smerdyakov> Then who needs cheese!
06:16:08 <shapr> jalapeños, habañeros
06:16:20 <shapr> cheese is like a whole different axis of spiciness
06:16:52 <Smerdyakov> And DEADLINESS!
06:17:08 <shapr> heheh
06:17:14 <shapr> yes! very true!
06:17:34 <shapr> Bea purchased a Mutton cheese today.
06:17:40 <shapr> I haven't heard of those before.
06:17:56 <shapr> she said it's stronger than the gorgonzola or roqueforte we've tried before.
06:18:20 <shapr> It is truly deadly.
06:18:22 <Janni> Then you won't have to eat it to taste it...
06:18:43 <shapr> yes, we opened the package and I could taste it right away.
06:19:10 <shapr> it smelled terrible
06:19:29 <shapr> I think it's like cigars, they taste great when you're smoking them, but they smell horrible if someone else is smoking them.
06:19:40 <Smerdyakov> Do not eat dairy foods! They are not meant for humans!
06:19:50 <shapr> Save the Cows!
06:20:22 <shapr> it is kind of weird how many products are made from the milk of animals.
06:20:24 <opet> mooooooooo!
06:20:32 <shapr> muu
06:20:38 <Smerdyakov> These products are not safe to eat!
06:20:47 <Smerdyakov> They contain high amounts of cholesterol!
06:20:49 * Janni starts listening to Foo Fighters - For all the Cows
06:21:29 <Janni> I have been drinking milk all my life...
06:21:53 <shapr> http://kungens.kemi.fi/~shae/cow.png
06:22:03 <Smerdyakov> Janni, and when do you plan to die?
06:22:17 <Marvin--> shapr: chevre? (or however it's spelled)
06:22:24 <shapr> Marvin--: tried that before
06:22:28 <shapr> I think
06:22:32 <Marvin--> no wait, that's goat milk
06:22:42 <shapr> yah, this is made from sheep
06:22:51 <shapr> if real sheep smell anything like this, I'm really glad I'm not a farmer.
06:23:12 <Marvin--> sheep cheese isn't all that strange though? I put it in salads and stuff
06:23:16 * andersca badabooms
06:23:20 <Marvin--> or maybe that's some mild version
06:23:23 <Janni> Smerdyakov: What's the problem with milk? The cholesterol?
06:23:23 <shapr> lambdabot: @karma+ andersca 
06:23:23 <lambdabot> andersca's karma has been incremented.
06:23:31 <andersca> haha
06:23:33 <andersca> cool stuff
06:23:37 <Smerdyakov> Janni, yes, and fat in general
06:23:43 <shapr> Riastradh wrote the karma plugin! yay!
06:23:47 <Smerdyakov> Janni, made to make baby cows get BIG in a hurry
06:23:53 <Smerdyakov> Janni, they will make you get so BIG that you DIE!
06:23:59 <Janni> Smerdyakov: What's bad about fat and cholesterol?
06:24:04 * Marvin-- rolls his eyes skyward at the karma plugin
06:24:08 <Smerdyakov> Janni, they clog blood vessels!
06:24:25 <Smerdyakov> Janni, and are harder to digest than plant foods
06:24:31 <shapr> Marvin--: write a more useful plugin :-)
06:24:53 <Janni> Smerdyakov: They shouldn't clog blood vessels as long as it isn't so much that I'm beginning to become fat
06:24:58 <Marvin--> shapr: in my world, not having useful ideas don't warrant implementing useless ideas
06:25:21 <shapr> hm
06:25:22 <Smerdyakov> Janni, how do you know?
06:25:26 <Janni> I'm kind of big, but I don't have a bit of visible fat (I can do what I want, I don't get any)
06:25:37 <shapr> Janni: how big are you?
06:25:43 <Janni> 1,94 m
06:25:52 <shapr> I'm 97.5 kilo, and 1.75 m
06:25:56 <o3> shapr: can you write 'shapr++'?
06:25:58 <opet> Smerdyakov: how is milk harder to digest than the cellulose in plants? :)
06:26:08 <shapr> o3: nope, good idea though
06:26:15 <Smerdyakov> opet, I don't know. Ask a plant scientist!!
06:26:18 <shapr> o3: you could fix the code, or you could ask Riastradh 
06:26:18 * Smerdyakov goes away: shower
06:26:18 <Marvin--> o3: go to #c :P
06:26:33 <Janni> Smerdyakov: If it's hard to digest, milk should need quite a bit of energy to be digested
06:26:47 <o3> Marvin--: oh, so we actually want "(+ shapr)" then
06:26:53 * shapr laughs
06:27:09 <Janni> Smerdyakov: About your question: My father told me (He is physician)
06:27:11 <o3> Marvin--: hey, i reckon you're just complaining because your silly nickname won't work.  I mean, Marvin--++?  Marvin----?
06:27:16 <Marvin--> o3: heh
06:27:20 * shapr laughs
06:27:40 <o3> actually, maybe it should be Marvin---- for decrement, and just "Marvin" for increment
06:27:55 <shapr> o3: hey, if you update runtime loader, I'll try to hack runtime *re* loading into lambdabot 
06:28:14 <o3> okie dokie :)
06:28:14 <shapr> it's not using your loader right now, but I want it to.
06:28:56 <shapr> runtime loader is spiffy
06:29:28 * Janni is very sceptical about Smerdyakov's antipathy towards milk. He's been drinking milk all his life but can say he's very healthy.
06:30:12 <Janni> And my vessels don't feel narrow at all :)
06:31:45 <Janni> lambdabot: @karma Janni
06:31:45 <lambdabot> Janni has a karma of 0
06:31:58 <Janni> Oh shit, is it the milk?
06:32:12 * shapr grins
06:32:15 <Janni> lambdabot: @fact milk bad for the karma
06:32:15 <lambdabot> set milk to bad for the karma
06:32:16 <o3> lambdabot: @karma+ o3
06:32:16 <lambdabot> o3's karma has been incremented.
06:32:21 <o3> lambdabot: @karma o3
06:32:21 <lambdabot> o3 has a karma of 1
06:32:24 <o3> whee
06:32:34 <o3> let's go write an expect script to automate this
06:32:37 <shapr> lambdabot: @karma Janni 
06:32:37 <lambdabot> Janni has a karma of 1
06:32:42 <andersca> lambdabot: @karma andersca
06:32:43 <lambdabot> andersca has a karma of 1
06:32:46 <andersca> lambdabot: @karma Marvin--
06:32:46 <lambdabot> Marvin-- has a karma of 0
06:32:48 <andersca> haw haw
06:33:01 <Janni> shapr: yay! :)
06:33:05 <shapr> w00
06:33:30 <Janni> lambdabot: @fact shapr good for the karma
06:33:30 <lambdabot> set shapr to good for the karma
06:33:44 <Janni> lambdabot: @fact shapr
06:33:45 <lambdabot> Shae Erisson, wrote the factoid plugin for lambdabot, 31 years old, good for the karma
06:33:45 <shapr> lambdabot: @fact yay!
06:33:45 <lambdabot> shapr is so predictable
06:34:16 <andersca> lambdabot: @fact bounces
06:34:16 <lambdabot> Nothing
06:34:26 <Janni> does that make any sense? (the "yay!")
06:34:39 * shapr dunno
06:35:31 <Janni> lambdabot: @fact bounces grave disease known from the patient with ID "shapr"
06:35:31 <lambdabot> set bounces to grave disease known from the patient with ID "shapr"
06:39:20 * shapr snickers
06:39:32 * shapr bounces happily
06:40:11 <shapr> well
06:40:19 <shapr> are we ready for the lambdabot 1.0 release/
06:40:20 <shapr> ?
06:41:16 <Janni> 1
06:41:24 <shapr> 2
06:41:29 <Janni> :)
06:41:41 <shapr> 34.5 !
06:41:58 <Janni> 1337 software never has a version number greater than 1.
06:42:23 <shapr> Janni: you think we should start with neg (maxBound :: Int) ?
06:42:48 <Marvin--> that's overflow
06:43:22 <Marvin--> no wait
06:43:31 <Marvin--> but why not just use minBound?
06:44:12 <shapr> I just got a new CPU cooler, yay!
06:44:24 <Janni> The version number could be approximate limite = x in a logarithmical function
06:44:39 <Janni> -be + a
06:44:41 <Marvin--> Janni: parse error
06:45:12 <Janni> The version number could approximate a limit = x in a logarithmical function
06:45:30 <o3> shapr: 3.11
06:45:54 <Marvin--> version 1.3.37
06:46:23 <o3> ja!
06:46:40 * shapr snickers
06:46:59 <Janni> W3 0wnZ y'4ll! (the language) 1337 is so k3wl :)
06:48:17 <Janni> Actually, it's just that incredibly stupid sentence: "W3 0wnZ y0u" :)
06:48:59 <Janni> lambdabot: @fact 1337 W3 0wnZ y0U!
06:49:00 <lambdabot> set 1337 to W3 0wnZ y0U!
06:50:08 <Janni> Sorry, I'm just having a... phase. Don't worry, it's passing by...
06:50:31 <shapr> lambdabot is going offline while I reinstall my other CPU
06:50:45 <shapr> brb
06:50:46 <shapr> lambdabot: @quit
08:18:54 * shapr bounces happily
08:19:23 <debug> ok
08:20:52 <Janni> shapr: Is your bouncing caused by the strange effect music has on human beings?
08:21:40 <debug> no, he is the one who affects the music
08:23:02 * shapr feels special
08:23:14 <shapr> Janni: today it's slow down blues by Joe Satriani
08:23:34 <debug> satriani is good
08:24:27 <shapr> lambdabot: @karma+ debug 
08:24:27 <lambdabot> debug's karma has been incremented.
08:24:30 <shapr> =)
08:24:32 * shapr grins
08:24:34 * shapr bounces 
08:24:35 <shapr> w00
08:24:47 <shapr> I feel happy now that my other CPU is back.
08:24:50 <Marvin--> debugging, eh?
08:25:01 * shapr snickers
08:25:24 <mgoetze> lambdabot: @karma+ dualcpu
08:25:25 <lambdabot> dualcpu's karma has been incremented.
08:25:33 <shapr> debug: one process running on my gateway machine has 1626 screen hits
08:25:46 <debug> shapr: heh, it will take forever, I tell you
08:25:52 <shapr> we have time :-)
08:25:58 <debug> :)
08:26:07 <shapr> debug: if I restart it, I can just combine the output files, right?
08:26:15 <debug> yes
08:26:17 <shapr> spiffy
08:26:31 <debug> as long as you run it on machines with similar PRNGs
08:26:51 <debug> mixing solaris and linux will probably not work, but linux and bsd seems to work
08:27:03 <shapr> 2.4.19 or 2.4.20 debian linux
08:27:23 <Marvin--> probably close enough
08:27:47 * Marvin-- liked the GNU/OpenBSD april fool's joke
08:27:50 <debug> the scene is generated by using random _before_ the seed is set, hence two processes will create the same random scene
08:27:50 <mgoetze> lambdabot: @fortune
08:27:51 <lambdabot> BOFH excuse #315:
08:27:51 <lambdabot> The recent proliferation of Nuclear Testing
08:28:07 <mgoetze> i deleted fortunes-bofh-excuses, they get boring
08:28:20 <shapr> lambdabot: @fortune
08:28:20 <lambdabot> The time for action is past!  Now is the time for senseless bickering.
08:28:26 <shapr> good quote
08:28:35 <Marvin--> sounds like a debian quote
08:28:44 <shapr> lambdabot: @fortune
08:28:44 <lambdabot> BOFH excuse #339:
08:28:44 <lambdabot> manager in the cable duct
08:28:48 * shapr snickers
08:28:54 <shapr> I haven't heard these before.
08:29:09 <mgoetze> well, i need to have a shower and all
08:29:21 <shapr> Darius: hey, you think @eval will be done in the next day or two?
08:29:23 * Marvin-- is waiting for the ride to the D&D session
08:29:35 <debug> a debug & debug session, cool
08:29:43 <Marvin--> yup
08:29:55 * debug doesn't play though
08:30:08 <Marvin--> well, that's my ride, catch you weirdos later
08:30:13 <shapr> cya!
08:30:17 <debug> have a nice day marvin
08:30:38 <shapr> debug: hey, you'll be in town during ICFP/HW ?
08:31:07 <shapr> I'd like to have a #haskell get-together
08:31:18 <debug> I'll be in gbg
08:31:39 <shapr> what's trip time from uppsala to gbg?
08:31:55 <debug> forever :)
08:32:02 <shapr> ?
08:32:09 <shapr> like, five hours?
08:32:11 <debug> I'm not really into functional stuff anyway
08:32:13 <debug> perhaps
08:32:27 <shapr> hm
08:32:36 <debug> I can't even afford to eat, so traveling is definitely out of the question
08:32:55 <shapr> yes, but if we had a gathering @ gbg, would you show up?
08:33:01 <debug> who knows?
08:33:05 <shapr> you might ;-)
08:33:23 <debug> I'm not a haskellist, but I could show up just to make it seem like there are a lot of people
08:33:28 <shapr> heheh
08:33:31 <Janni> gbg?
08:33:35 <debug> gothenburg
08:33:59 <shapr> debug: well, #haskell /= Haskell
08:34:26 <shapr> you don't have to be a haskellist to show up
08:34:49 <debug> right :)
08:35:23 * debug is listening to russian vodka-songs
08:41:47 * shapr bounces cheerfully
08:43:31 * debug thinks about trying Coherent Unix on his pc
08:44:44 <andersca> woohoo
08:44:47 <andersca> keyboard arrives tomorrow
08:44:51 <shapr> andersca: what keyboard?
08:45:17 <andersca> shapr: kinesis
08:45:20 <shapr> w000
08:45:24 * shapr bounces furiously
08:45:49 <debug> shapr: he uses a screwdriver to shortcircuit the keyboard lines right now, an actual keyboard would speed up his coding significantly
08:46:01 * shapr snickers
08:46:11 <shapr> at the rate andersca produces code, that's a scary thought!
08:47:04 <debug> yes
08:47:06 <debug> he's scary
08:47:14 <debug> the thought, however, is not
08:47:45 <esap> Hmm... is it really true there is no monadic composition operator in the std prelude?
08:51:10 <esap> or the libraries, either, I guess?
09:04:07 <Janni> esap: "#haskell /= Haskell". You're on the wrong channel with your question.
09:04:19 <shapr> Janni: :-P
09:04:26 * shapr quickly writes a lart plugin
09:04:55 <Janni> yeah, that's _really_ important. Then we can play larn together in #haskell. Yay! :)
09:05:03 <shapr> larn?
09:05:13 <Janni> well...
09:05:34 <Janni> I guess... I read s.th. wrong :)
09:05:38 * shapr is confused
09:05:50 <shapr> like always...
09:05:52 <Janni> larn is a text-adventure. maybe you can find it at /usr/games/larn
09:05:54 <shapr> oh
09:06:06 <shapr> hmmm
09:06:12 <shapr> that gives me an idea!
09:07:46 <Janni> Actually, larn is a rogue-like game...
09:08:04 <shapr> now I want to try to figure out per-user state
09:08:24 <shapr> so people could play adventure in privmsg to lambdabot 
09:08:39 <shapr> would also give me an interactive process plugin
09:17:21 * shapr considers a generic event hook mechanism
09:22:23 <shapr> new email parsing libs from Peter Simons in haskell-libs cvs
09:22:40 <shapr> he has an ABNF support module and RFC2822
10:36:59 * opet ponders
10:37:07 * shapr punts
10:37:11 <shapr> actually
10:37:11 <opet> I can't work out what exactly foldl' does
10:37:16 <shapr> my GHC build just punted
10:37:21 <shapr> hrm
10:40:19 * opet gets pen and paper out
10:40:29 <opet> work it out the old fashioned way :)
11:11:57 <Janni> re
11:20:56 <Vincenz> hiya
11:23:06 <Smerdyakov> Hi, Vincenz. Did you find something to code?
11:23:06 <pesco> hey there
11:23:20 <Vincenz> Smerdyakov: yeah
11:31:21 <Smerdyakov> What?
11:38:26 <Vincenz> implement the ICFP thingies on my own from the past years :)
11:38:40 <pesco> Oh, that's a good idea.
11:39:11 <Smerdyakov> Please say "ICFP contest" if that's what you mean....
11:39:58 <Smerdyakov> ICFP is an academic conference, not a game :P
11:45:21 <Vincenz> I know, that's what I meant :)
11:45:24 <Vincenz> I'd like to compete this year
11:45:34 <Vincenz> (preferably in Ocaml...)
11:46:02 <_Codex> icfp contests start to be too popular.
11:47:12 <Igloo> How is it too popular?
11:47:36 <_Codex> Did you count how many teams there were last year?
11:48:01 <Igloo> I don't understand how it can be too popular
11:48:18 <_Codex> It is more fun if there are only a few high quality teams.
12:00:20 <tmoertel> there weren't fewer HQ teams, just extra noise
12:00:26 <tmoertel> which isn't a problem, imho
12:01:06 <_Codex> the noise requires automatic checking of the results.
12:01:51 <tmoertel> but that's almost a requirement anyway
12:02:01 <tmoertel> unless you have lots of student "volunteers"
12:03:01 <_Codex> What I would like is proper analysis of the tools and methods people are using to get good results.
12:03:19 <_Codex> automatic checking is just providing black box behaviour of the programs.
12:03:52 <tmoertel> the trick is defining "proper" ;-)
12:05:32 <_Codex> And at least I would prefer to learn how other people solve problems. I already know most programs would not work correctly.
12:07:28 * tmoertel must restart (grrr)
13:28:42 <andersca> hay Marvin--
13:31:39 <Marvin--> evening
13:31:54 <Marvin--> in this D&D campaign I'll be playing... a tin can
13:32:10 <opet> this week I will be mostly eating hair dye
13:46:20 <Vincenz> I have never actually really played D&D
13:46:28 <Vincenz> I have all the books but never had anyone to play with
13:46:39 <Vincenz> well, some books
13:47:36 <Marvin--> if you have *all* the books, you have a biiiig pile
13:47:55 <Vincenz> just some
13:48:04 <Vincenz> AD&D 2nd DM and PM
13:48:08 <Vincenz> and the D&D guidebook
13:48:20 <Vincenz> (PM, DM and MM in one)
13:49:02 <Vincenz> hmm
13:49:16 <Vincenz> there's a project, a dice roller for lambdabot, invite him to a private chan and we can have a game
13:49:21 <Vincenz> we can even code him to keep stats :P
13:50:09 <Vincenz> oh, yeah, I forgot, no assignments
13:50:58 <Vincenz> lambdabot?
13:50:58 <Marvin--> heh
13:51:12 <Marvin--> I guess shapr took him offline
13:51:19 <Vincenz> for private use
13:51:20 <Vincenz> tsk
13:51:27 <Vincenz> that's just wrong
13:51:31 <Vincenz> poor lambdabot
13:51:51 <Marvin--> I already have die rolling haskell code
13:51:56 <Vincenz> aha!
13:52:11 <Marvin--> randomR (1,6) ;)
13:52:11 <Vincenz> hmm, shouldn't be too hard, is there a random number generator in haskell?
13:52:35 <Marvin--> yeah, but you have to pass around the seed explicitly
13:52:44 <Marvin--> randomR :: (Random a, RandomGen b) => (a,a) -> b -> (a,b)
13:57:27 <Vincenz> what's =>
13:58:42 <Marvin--> the lhs of the => is the "context"
13:58:49 <Marvin--> and the rhs is the standard type
13:58:56 <Vincenz> ah
13:58:57 <Marvin--> the context is a set of constraints on the type
13:59:28 <Marvin--> so you can interpret it as "if Random a and RandomGen b, then the type is (a,a) -> b -> (a,b)"
13:59:48 <Vincenz> ah i see :)
14:01:19 <Vincenz> Random.init somenum
14:01:37 <Vincenz> (Random.int 5) + 1
14:01:38 <Vincenz> :)
14:01:49 * Marvin-- shudders at the side effects
14:02:16 <Marvin--> the QuickCheck module has a neat monadic random generator
14:02:55 <Marvin--> which is what I used in http://193.11.232.159:8080/Roll.hs
14:04:53 <Vincenz> I think side-effects are ok
14:05:37 <Marvin--> repent, sinner
14:05:48 <opet> randomIO, in that case
14:05:55 <Marvin--> don't make me get my level three paladin :P
14:06:08 <Vincenz> hehe
14:06:14 <Vincenz> what do you play?
14:06:16 <Vincenz> D&D?
14:06:21 <Vincenz> AD&D2?
14:06:23 <Vincenz> AD&D3?
14:06:26 <Marvin--> D&D3
14:06:30 <Vincenz> sorry, but I've personally just fell in love with ocaml
14:06:38 <Vincenz> isn't it quite like AD&D2?
14:06:57 <Marvin--> I haven't played AD&D2... it's d20
14:07:17 <Marvin--> this is the second D&D3 campaign I'm playing, only contact with D&D I've had
14:07:53 * Vincenz wants to play
14:07:59 <Marvin--> gawd, look at the time... I'm off to bed
14:12:35 <Janni> OK. Last song now. Going to bed...
14:15:59 <Janni> Shit. I never get to stop listening to music. I'm starting the 4th "last" song now...
14:17:01 <Vincenz> Janni: I have the same with reading tutorials on programming languages (just one more chapter...)
14:18:19 <Vincenz> shapr!
14:18:23 <shapr> Vincenz!
14:18:24 <shapr> wassup?
14:18:42 <Vincenz> nothing much
14:19:06 <Riastradh> lambdabot: @hello
14:19:06 <lambdabot> Hello world. 
14:19:20 <shapr> heya Riastradh 
14:19:27 <Vincenz> lambdabot: @listcommands
14:19:28 <lambdabot> I react to the following commands: ["echo","fact","fortune","goodbye","hello","join","karma","karma+","karma-","leave","listchans","listcommands","listmodules","msg","part","quit","state","topic"]
14:19:35 <Vincenz> lambdabot: karma
14:19:36 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
14:19:40 <Vincenz> lambdabot: karma Vincenz
14:19:42 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
14:19:42 <shapr> lambdabot: @karma+ Riastradh 
14:19:42 <lambdabot> Riastradh's karma has been incremented.
14:19:47 <Vincenz> lambdabot: @karma- Riastradh
14:19:47 <lambdabot> Riastradh's karma has been decremented.
14:19:49 <Vincenz> l
14:20:04 <Vincenz> lambdabot: @msg shapr hello
14:20:04 <lambdabot> not enough privileges
14:20:08 <shapr> hey, he wrote the @karma plugin, I figure that's worth at least one point of positive karma
14:20:08 <Riastradh> lambdabot: @karma Riastradh
14:20:08 <lambdabot> Riastradh has a karma of 0
14:20:09 * Vincenz snaps his fingers
14:20:18 <Vincenz> lambdabot: @karma vardamir
14:20:19 <lambdabot> vardamir has a karma of 0
14:20:20 <Vincenz> lambdabot: @karma Vincenz
14:20:21 <lambdabot> Vincenz has a karma of 0
14:20:25 <Vincenz> lambdabot: @karma+ Vincenz
14:20:25 <lambdabot> Vincenz's karma has been incremented.
14:20:44 <Vincenz> hmm, I think you need an extra rule: you can't alter your own karma:)
14:20:48 <Vincenz> after all...it's karma
14:23:03 * Riastradh is also working on a seen module.
14:23:08 <shapr> Riastradh: yay!
14:23:28 <Riastradh> And I'll add that thing that Vincenz just mentioned to the karma module.
14:23:42 <Vincenz> :)
14:23:56 <shapr> lambdabot: @karma+ Riastradh 
14:23:57 <lambdabot> Riastradh's karma has been incremented.
14:24:01 <Vincenz> oh... Riastradh wrote the karma module, I misread what shapr had said
14:24:08 <Vincenz> lambdabot: @karma- Vincenz
14:24:09 <lambdabot> Vincenz's karma has been decremented.
14:24:12 * shapr snickers
14:24:21 <Vincenz> I use ocaml
14:24:22 <Vincenz> lambdabot: @karma- Vincenz
14:24:22 <lambdabot> Vincenz's karma has been decremented.
14:24:29 <Vincenz> side-effects are good
14:24:29 <Vincenz> lambdabot: @karma- Vincenz
14:24:30 <lambdabot> Vincenz's karma has been decremented.
14:24:31 <Vincenz> damnit
14:24:37 <Riastradh> How do I get the person who sent the message?
14:24:50 <Vincenz> Riastradh: I hope you'reasking shapr
14:24:55 <Riastradh> I am.
14:25:12 <shapr> Riastradh: I hacked up ircnick/ircuser/irchost functions in IRC.hs .. yesterday or the day before.
14:25:21 <Vincenz> I think the silence means he's quietly adding it in
14:25:22 <Vincenz> :P
14:25:33 <Riastradh> How do I get it?  'ircnick msg,' where msg is the second argument to process
14:25:34 <Riastradh> ?
14:25:36 <shapr> I'll write up full irc hostmask matching pretty soon.
14:25:42 <shapr> Riastradh: yes
14:25:54 <Vincenz> shapr: how do you communicate with irc?
14:25:59 <Vincenz> through a direct socket?
14:26:04 <Vincenz> or through an interface like eggdrop
14:26:08 <Vincenz> (or what ever that's called)
14:26:13 <shapr> my irc client? or lambdabot?
14:26:17 <Vincenz> lambdabot
14:26:24 <shapr> it's a direct socket
14:26:27 <shapr> the source is easy to read =)
14:26:30 <shapr> lambdabot: @fact source
14:26:31 <lambdabot>  http://sf.net/projects/haskell-libs/, http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/haskell-libs/libs/lambdabot/
14:26:42 <shapr> look in IRC.hs
14:27:01 <Vincenz> alrightio, besides, I alraedy have those links bookmarked for next weekend :)
14:28:09 * Vincenz just found out that ocaml has a graphics module YAY!
14:28:45 <Vincenz> hmm, I think it's better if I just read the IRC RFC
14:34:18 * shapr yawns
14:35:08 <Vincenz> shapr: what'd you use as reference for writing IRC.hs?
14:35:10 <Vincenz> irc rfc?
14:35:37 <shapr> I didn't write IRC.hs
14:35:42 <shapr> Pseudonym wrote it.
14:35:46 <shapr> lambdabot: @fact author
14:35:46 <lambdabot>  Andrew Bromage aka Pseudonym
14:36:02 <shapr> I just wrote some plugin modules and made a bunch of changes
14:37:21 <Vincenz> ah ok :)
14:37:50 <shapr> I have several more plugins in mind.
14:38:05 <shapr> hi SyntaxPolice!
14:38:56 <mgoetze> yes, hi SyntaxPolice!
14:45:29 * shapr thinks about a @help module
14:45:47 <shapr> lessee, do I write unit tests? or do I write more plugins?
14:46:32 <Riastradh> Plugins.
14:46:38 <shapr> ok :-)
14:49:11 <Riastradh> Update lambdabot -- the karma module is better now.
14:49:24 <shapr> ok
14:49:40 <Riastradh> lambdabot: @quit updating!
14:49:40 <lambdabot> not enough privileges
14:49:41 <Riastradh> Damn.
14:49:47 <Vincenz> lambdabot: @karma- Vincenz
14:49:47 <lambdabot> Vincenz's karma has been decremented.
14:49:52 <Vincenz> lambdabot: @karma+ Vincenz
14:49:52 <lambdabot> Vincenz's karma has been incremented.
14:49:54 <Vincenz> lambdabot: @karma+ Vincenz
14:49:54 <Vincenz> lambdabot: @karma+ Vincenz
14:49:54 <lambdabot> Vincenz's karma has been incremented.
14:49:54 <lambdabot> Vincenz's karma has been incremented.
14:49:55 <shapr> lambdabot: @quit
14:49:56 <Vincenz> lambdabot: @karma Vincenz
14:49:59 <Vincenz> darnit
14:50:39 <Riastradh> How about you make a 'Modules' directory, and each module gets its own subdirectory, so each module can have external files out there?
14:51:00 <shapr> we've just been discussing that on #joy :-)
14:51:07 <Riastradh> So, for example, the karma module would have a list of (nick, karma)s.
15:06:27 <vardamir> is there any standard lib function or action to generate a range of random values, or a list of randomized values from a Range?
15:06:49 <shapr> you could use the System.Random stuff
15:07:37 <shapr> vardamir: import System.Random; mygen =  mkStdGen 0
15:08:04 <shapr> then you can call "next mygen" and it returns a pair of (Int, StdGen)
15:08:19 <Vincenz> ah damn, just tried writing a simple echo-client to try sending irc commands by hand, it kept complaining about timeout, plus I didn't know which commands to type, and my server code sucked
15:08:24 <shapr> which is, the integer produced and that int fed back into the pseudorandom number generator
15:10:48 <vardamir> yeah, that may be helpful
15:14:09 <vardamir> ok, i'll know what I want to do as soon as I learn how to use arrays (since i need indexing lists won't work so well) :)  
15:22:59 <shapr> um hi.
15:23:12 <shapr> hello AdaByron 
15:23:38 <AdaByron> hello
15:23:46 <shapr> AdaByron: are you learning Haskell?
15:23:50 <AdaByron> yes
15:23:59 <shapr> have any question you need help with?
15:24:20 <AdaByron> well  I don't know what to ask yet
15:24:42 <shapr> have you done any functional programming before?
15:24:49 <AdaByron> ML and Lisp
15:25:13 <OuterMind> psss, pseudo-functional languages
15:25:15 <OuterMind> LOL
15:25:23 <shapr> ML background is good
15:25:59 <OuterMind> my e-donkey client is written in ML
15:26:13 <shapr> AdaByron: there's a learninghaskell webpage in the channel topic.
15:26:23 <AdaByron> yeah I have been there
15:26:39 <shapr> have you tried the tutorials?
15:27:02 <AdaByron> I read the gentle introduction
15:27:12 <AdaByron> and lots of sample code
15:27:22 <shapr> have you tried to write any code?
15:27:37 <AdaByron> yes, it doesn't work
15:27:49 <shapr> what did you try to write?
15:28:02 <AdaByron> it's a project for my class
15:28:22 <AdaByron> an attribute grammer for computing the floating point value of a binary floating point number
15:28:36 <AdaByron> computing the decimal fp value, should say
15:28:52 <shapr> welll
15:29:10 <shapr> if it's homework, I can give you hints and pointers, but anything more would be unethical.
15:29:20 <AdaByron> yeah I know
15:31:01 <shapr> how did you approach the problem?
15:32:30 <shapr> haskell-libs has 71% activity for sf.net, yay!
15:32:41 <Vincenz> AdaByron: you any good in ada?
15:32:46 <AdaByron> I made an AST data type
15:32:52 <AdaByron> Vincenz: I don't know any Ada
15:33:02 <Vincenz> but your name is...
15:33:17 <Vincenz> the miss Ada was called after
15:33:20 <Vincenz> finder of the first bug
15:33:33 <shapr> AdaByron found the first bug?
15:33:34 <AdaByron> Grace Hopper was finder of the first bug
15:33:38 <Vincenz> oh, doh
15:33:41 <Vincenz> sorry, mess up
15:33:41 <AdaByron> Ada Byron was the first programmer
15:33:43 <shapr> yah, I thought so :-)
15:33:49 <Vincenz> well, night!
15:33:54 <shapr> g'nighte
15:33:59 <Vincenz> lambdabot: @karma- Vincenz
15:34:00 <lambdabot> You can't change your own karma, silly.
15:34:06 <shapr> I'd argue what's his name.. the guy who came up with the difference engine..
15:34:12 <shapr> he's the first programmer
15:34:14 <Vincenz> Babble
15:34:17 <shapr> babbage
15:34:20 <Vincenz> right
15:34:20 <opet> charles
15:34:23 <AdaByron> Ada Byron worked for Babbage
15:34:27 <shapr> lambdabot: @karma+ Vincenz
15:34:27 <lambdabot> Vincenz's karma has been incremented.
15:34:32 <shapr> lambdabot: @karma Vincenz 
15:34:32 <lambdabot> Vincenz has a karma of 1
15:34:37 <Vincenz> lambdabot: @karma Vincenz
15:34:37 <lambdabot> You have a karma of 1
15:34:38 <shapr> Vincenz: hah!
15:34:40 <Vincenz> :)
15:34:52 <Vincenz> well, time to sleep, later :)
15:34:55 <shapr> g'nite!
15:35:00 <shapr> opet: yes, exactly
15:35:22 <AdaByron> so I made an AST data type
15:35:23 <shapr> AdaByron: oh, so you're telling me Charles Babbage was the first pointy-haired boss?
15:35:29 <AdaByron> haha
15:35:33 * shapr grins
15:35:48 <AdaByron> I haven't read Babbage's biography, but perhaps he was
15:36:10 <shapr> I haven't either
15:36:22 <shapr> ok, so you made an AST data type...
15:36:26 <AdaByron> I just got tired of people thinking I was a man so I tried to think of an obviously female name that wasn't something like sweetheart4u2003
15:36:57 <shapr> there is at least one female who shows up here.
15:36:59 <AdaByron> then, as instructed in the assignment, I made a function called "ag_form"
15:37:19 * Riastradh doesn't find 'AdaByron' to be a particularly feminine name.
15:37:26 <opet> I think they've got a working babbage difference engine in the science museum in london
15:37:29 <opet> .. which is nice
15:37:31 <shapr> opet: nifty
15:37:36 <AdaByron> similar to the one in "the RepMin example" which he never gave in class, but I found on google
15:37:46 <AdaByron> I don't know any men named Ada
15:37:58 <shapr> I don't know anyone named Ada
15:37:58 <opet> I don't know anybody named Ada
15:38:00 <shapr> not in person at least.
15:38:02 <opet> ooh
15:38:08 <shapr> opet: in stereo =)
15:38:21 <AdaByron> I used to know a girl named Ada
15:38:24 <opet> shapr: echo.. echo.. echo.. 
15:38:35 <Riastradh> Nor do I know anyone named Ada.
15:38:44 <shapr> AdaByron: so, did it work?
15:38:58 <AdaIsFemale> no
15:39:04 <shapr> aww, why not?
15:39:14 <AdaIsFemale> that's the problem, I don't know
15:39:22 <shapr> did you get an error message?
15:39:33 <AdaIsFemale> nope, I just get the wrong answer
15:39:35 <shapr> did your computer burst into flames?
15:39:37 <shapr> oh
15:39:47 <AdaIsFemale> I should get 9.25 and I get something like 32.00
15:40:02 <shapr> do you have the code on a webserver where we can look at it?
15:40:06 <AdaIsFemale> I forgot what I got, because I've since butchered the program into something completely different
15:40:16 <AdaIsFemale> not yet, but give me a sec
15:40:24 <shapr> are you using CVS?
15:40:53 <AdaIsFemale> no but I have the first try in a separate file
15:43:21 <AdaIsFemale> http://alteredsky.net/fpb.hs
15:46:12 <shapr> well
15:47:12 <shapr> what input did you give it?
15:48:09 <AdaIsFemale> example_tree2 except the (Digit undefined)'s were after the (Digit True/False) within a (Digits ...)
15:50:54 <AdaIsFemale> I send it again with the right tree
15:51:01 <AdaIsFemale> s/send/sent/
15:51:33 <shapr> it doesn't typecheck
15:51:50 <AdaIsFemale> bah
15:52:30 <AdaIsFemale> sorry, wrong one
15:52:45 <AdaIsFemale> that one does
15:56:18 * Pseudonym yawns
15:56:25 <shapr> hi Pseudonym!!
15:56:27 * shapr bounces
15:56:28 <Pseudonym> G'day.
15:56:42 <Pseudonym> Anyone know what could cause a PC to fail to recognise that one of the physical drives is there?
15:56:43 <shapr> Pseudonym: the lambdabot 1.0 "Candy Shop" release is getting very close.
15:56:52 <shapr> Pseudonym: IDE jumpers?
15:57:00 <Pseudonym> It worked fine when it was shut down.
15:57:08 <Pseudonym> It booted up, the drive ain't there.
15:57:10 <shapr> drive didn't spin up?
15:57:15 <Pseudonym> Don't know yet.
15:57:16 <shapr> can you hear both drives?
15:57:19 * Pseudonym thought of that
15:57:25 <Pseudonym> I'm not physically there.
15:57:29 <shapr> oh
15:57:33 <Pseudonym> I'm just collecting possibilities.
15:57:52 <shapr> if you warm boot the PC, the drive might spin up
15:58:12 <AdaIsFemale> possibly drive failure
15:58:14 <shapr> sometimes drives won't spin up from cold start, but will spin up from warm start.
15:58:23 <Pseudonym> Interesting.
15:58:29 * Pseudonym will try that
15:58:39 <vardamir> when i try to load a module in GHCI and it says that the module is a package module, does that mean it is not available in the interpreter?
15:58:53 <shapr> vardamir: means you need -package foo
15:59:12 <shapr> vardamir: ":set -package data" in ghci, then you can import Data.FiniteMap in your Haskell source file.
16:00:36 <shapr> vardamir: ghc-pkg -l will show you all the packages installed
16:00:48 <vardamir> oh, ok, thanks
16:01:26 <Darius> Can't you just import Data.FiniteMap directly? (or :mod +Dat...)  I've never loaded package data
16:01:54 <shapr> I'm not sure
16:01:55 * shapr tries
16:03:19 <shapr> Darius: yes, you are correct.
16:03:30 <shapr> "import Data.FiniteMap" works
16:03:40 <shapr> or "import FiniteMap" with -package data
16:04:36 <Darius> Yah, before I just thought the only packages were the ones listed in the user guide; I guess -package will load any directory as a top-level import
16:04:46 <Darius> or each is a package
16:07:51 <shapr> AdaIsFemale: so, is your question "why doesn't this work?"
16:08:17 <AdaIsFemale> well I can ask a more specific question
16:08:32 <AdaIsFemale>       x_fp_val = x x_place
16:08:43 <AdaIsFemale> I have no idea what that is supposed to do
16:09:30 <AdaIsFemale> can you tell me what that statement does
16:09:57 <mgoetze> AdaIsFemale: that doesn't make any sense to me
16:10:39 <AdaIsFemale> it's part of the code which I showed to shapr
16:11:12 <Igloo> It binds x_fp_val to the result of applying x to x_place
16:11:20 <Igloo> More than that I'm not sure what you're asking
16:11:57 <Igloo> If it's confusing then it might be that x is an accessor for some record
16:13:52 <AdaIsFemale> x is part of an abstract syntax tree
16:25:12 <debug> hm
16:26:33 <shapr> yes, I was thinking something like that myself.
16:28:05 <AdaIsFemale> the assignment says everything is just like RepMin so I copied that from there, but I have no idea what it's supposed to be doing and it obviously doesn't work
16:28:24 <shapr> welll
16:28:48 <shapr> I would suggest breaking down the RepMin example into small pieces and understanding those pieces.
16:28:59 <shapr> then sewing all those bits of understanding back together :-)
16:29:17 <AdaIsFemale> I understand the rest of it
16:30:47 <mgoetze> hm
16:30:58 <mgoetze> i think i'll try to implement the lucas-lehmer test in haskell
16:31:18 <shapr> it looks like x_fp_val returns the value of the digit at this place
16:31:43 <shapr> like ones, tens, hundreds in decimal
16:31:55 <AdaIsFemale> that's what it should do
16:34:22 <shapr> soo
16:34:22 <shapr> ?
16:35:25 <shapr> does it do that?
16:35:30 <AdaIsFemale> no
16:35:51 <shapr> what does it do?
16:36:13 * andersca boings
16:36:19 * Riastradh bounces
16:36:26 * shapr ricochets
16:36:30 <debug> hm
16:40:30 <mgoetze> how do i cast 2**p to an Integer? better yet, is there a kind of binary shift left operator?
16:40:40 <shapr> import Bits
16:40:46 <shapr> gives you left shift
16:41:20 <Pseudonym> mgoetze: Also note that shift left may be inefficient on a very large integer.
16:41:34 <Pseudonym> You might be better off just computing the power.
16:41:40 <Igloo> You want (^) not (**) if you are working with Integers
16:41:45 <Pseudonym> Yes.
16:41:49 <mgoetze> ah, ok
16:42:13 <debug> I missed a power operator i hugs tonight
16:42:31 <debug> I wanted to do  x^y, where y wasn't an integer... I ended up writing a C program :-/
16:42:44 <debug> s/i /in /
16:46:35 <mgoetze> Prime> primefactors (2^31-1)
16:46:35 <mgoetze> [2147483647]
16:46:35 <mgoetze> (2.12 secs, 31983896 bytes)
16:46:35 <mgoetze> Prime> lucaslehmer 31
16:46:35 <mgoetze> True
16:46:37 <mgoetze> (0.01 secs, 0 bytes)
16:46:48 <mgoetze> it gets a lot more extreme for the 9th mersenne number :)
16:47:18 <shapr> Pseudonym: there have been requests to hook the doSOMETHING functions in Main.hs, and to have a generic message hook
16:47:33 <shapr> Pseudonym: do you have any suggestions for structuring that?
16:47:38 <debug> is there even a power operator for non-integers?
16:47:54 <mgoetze> debug: **
16:49:02 <mgoetze> hm, i wonder how long mprime takes for this stuff
16:49:41 <debug> thanks
16:49:59 <Pseudonym> Yes, I don't have any general ideas at the moment.
16:50:20 <Pseudonym> I guess the thing to do is to have some kind of map from response type to a list of functions.
16:52:16 <shapr> before hook, after hook?
16:56:36 <mgoetze> huh? why does this refuse to compile?
16:56:40 <mgoetze> /usr/lib/ghc-5.02.2/libHSstd.a(PrelMain__1.o)(.text+0x16): In function `__stginit_PrelMain':
16:56:44 <mgoetze> : undefined reference to `__stginit_Main'
16:56:46 <mgoetze> /usr/lib/ghc-5.02.2/libHSstd.a(.o::PrelMain(void))(.text+0x4): undefined reference to `Main_main_closure'
16:56:50 <mgoetze> /usr/lib/ghc-5.02.2/libHSstd.a(.o::PrelMain(void))(.text+0x2f): In function `PrelMain_mainIO_fast1':
16:56:53 <mgoetze> : undefined reference to `Main_main_closure'
16:56:55 <mgoetze> collect2: ld returned 1 exit status
16:57:17 <shapr> does your module have a main function?
16:57:23 <mgoetze> yes
16:57:34 <mgoetze> oh wait, it's a module
16:57:36 <mgoetze> d'oh
16:58:39 <mgoetze> what's the simplest main function to display a boolean?
17:01:44 <Darius> main = print someboolean
17:02:05 <mgoetze> ah, i was trying show... blah
17:02:37 <Darius> I think print is pretty much just putStr(Ln) . show
17:03:43 <mgoetze> so, my totally unoptimised haskell code does in 17.09s what woltman's extremely optimised ia32-assembly does in 3.15s. hm.
17:03:56 <mgoetze> guess i need to do some optimizing :)
17:08:55 <debug> hm
17:10:54 * mgoetze is trying to figure out what's supposed to make modulo 2^p-1 so simple in binary
17:11:10 <Darius> it's a bitwise and
17:11:37 <debug> the same reason why modulo 10 is so easy in decimal  :)
17:12:09 <mgoetze> wouldn't that apply to mod 2^p, not mod (2^p)-1?
17:12:50 <Darius> Er I think you're right
17:13:54 <mgoetze> "this test is ideal for binary computers because the division by (2^p)-1 (in binary) can be done using rotation and addition only." ... how?
17:14:46 <Smerdyakov> Maybe you've misread the grouping in the expression?
17:15:08 <mgoetze> nope, i'm quite sure of it
17:15:55 <Darius> well if you want to divide 17 by 3, using rotates and adds what do you do?
17:16:35 <mgoetze> 10001 -> 10
17:16:36 <mgoetze> hm
17:19:02 <Pseudonym> shapr: What would be the use of a distinction between before/after hooks?>
17:19:09 <Pseudonym> Unless you want to do some kind of filtering, I guess.
17:19:21 <shapr> yah, for example, a h4x0r output plugin
17:19:36 <shapr> would be a before hook for sending messages
17:19:45 <shapr> but a @seen plugin would be an after hook
17:21:08 <Pseudonym> Hmm.
17:21:19 <shapr> or would it?
17:21:25 <shapr> hm
17:21:31 <Pseudonym> A general hook, I think, looks like this:
17:21:40 <Pseudonym> hookFunction :: IRCMessage -> IRC IRCMessage
17:21:45 <Pseudonym> Or perhaps:
17:21:50 <Pseudonym> hookFunction :: IRCMessage -> IRC (Maybe IRCMessage)
17:21:54 <Pseudonym> No, that's a _filter_.
17:22:09 <Pseudonym> A hook is:
17:22:13 <Pseudonym> hookFunction :: IRCMessage -> IRC ()
17:22:25 <shapr> a censored word filter :-)
17:22:27 <Pseudonym> I think these are separate concepts.
17:22:28 <shapr> would be fun
17:22:58 <Igloo> IRCMessage -> IRC [IRCMessage] might be better for the former
17:23:16 <Pseudonym> Perhaps, yes.
17:23:46 <shapr> that would allow for flow limiting, max line splitting, etc
17:25:56 <Pseudonym> I envisage the bot as a kind of pipeline, or DAG, where IRCMessages flow through.
17:25:58 <Pseudonym> In this model.
17:27:52 <Riastradh> Tell me when you've got an idea for how the hooks should work.
17:35:53 <Riastradh> ...
17:36:01 <shapr> I'm hacking on it :-)
17:36:51 <shapr> Riastradh: tell me more about adding methods to the module class?
17:37:47 <shapr> I like Pseudonym's last suggestion, hookFunction :: IRCMessage -> IRC ()
17:38:21 <shapr> my current thoughts are that each doFOO has a list of hook functions, and calls them with the msg
17:38:34 <Igloo> Presumably IRC contains IO?
17:38:57 <shapr> yes, it does
17:39:12 * Igloo decides sleep is needed
17:39:14 <Igloo> Night all
17:39:16 <shapr> yah, I'm getting tired also
17:39:19 <shapr> g'nite Igloo!
17:40:45 <shapr> Riastradh: what do you think?
17:43:38 <Riastradh> Wait, how does each module define a hook function?
17:43:50 <shapr> register for it?
17:44:12 <Riastradh> 'Register' for it?
17:44:56 <shapr> yah, doNOTICEhook :: [IRCMessage -> IRC ()]
17:45:52 <Riastradh> Give me an example of using it -- that'll help more.
17:46:23 <shapr> hm, I think it's nearly the same as what you suggested, with the difference that it isn't in the Module typeclass
17:47:13 <Riastradh> But I don't quite get how you use it.
17:47:48 <shapr> doTOPIChook = doTOPIChook ++ [topicModuleUpdateTopicState]
17:47:57 <shapr> hrm
17:48:26 <Riastradh> Er, not:  doTOPICHOOK = topicModuleUpdateTopicState :: doTOPIChook  ?
17:48:43 <Riastradh> s/::/:/1
17:49:34 <shapr> yah, that :-)
17:50:56 <Riastradh> But you're mutating doTOPIChook there...how is that supposed to work?
17:52:02 <shapr> hrm
17:52:22 <shapr> that could suck
17:53:20 <shapr> how would the class methods work?
17:53:40 <shapr> wouldn't you end up with a method for every IRC event?
17:54:20 <Pseudonym> The IRC events are enumerable.  They each have a (usually numeric) tag.
17:54:28 <Riastradh> Yes, but only modules that needed to do stuff with the event would define their own methods.
17:54:33 <shapr> that's true
17:55:49 <shapr> this sounds sort of like a single 'instance' of the IRC class, and plugins stick new functionality into the blank methods
17:58:15 <shapr> Riastradh: I like your solution.
17:58:35 <Riastradh> The default method would always just be to return ().
17:58:38 <shapr> right
17:59:14 <shapr> plugins add to a single central dispatch table
17:59:22 <shapr> sort of
17:59:29 <shapr> well, not central
18:11:24 <mgoetze> ah! i've got it!
18:12:27 <Darius> 10001 -> 10 ?
18:12:28 <shapr> Riastradh: I like it, you want to do it? or shall I?
18:13:14 <mgoetze> m mod (2^n)-1 == (m + m>>n) && (2^n)-1
18:13:53 <Riastradh> If you like, I'll do it.
18:14:10 <mgoetze> where can i get documentation on that bits module?
18:15:06 <mgoetze> shapr: ?
18:15:36 <shapr> Riastradh: sure :-)
18:16:24 <mgoetze> shapr: documentation! Bits!
18:16:31 <shapr> mgoetze: http://www.haskell.org/ghc/docs/latest/html/base/Data.Bits.html
18:16:32 <shapr> tada!
18:16:43 <shapr> I had to find the url
18:17:21 <mgoetze> lambdabot: @karma+ shapr
18:17:21 <lambdabot> shapr's karma has been incremented.
18:17:36 <shapr> w00
18:22:53 <mgoetze> can't find module `Data.Bits'
18:25:55 <mgoetze> is this very new?
18:26:13 <shapr> no
18:26:19 <shapr> try -package data
18:26:29 <shapr> or ":set -package data" in ghci
18:27:15 <mgoetze> ah
18:28:28 <mgoetze> uhm, how do i explicitly type a constant?
18:28:37 * mgoetze used to know that one :(
18:28:39 <Darius> 5 :: Int
18:29:01 <Darius> putting it in ()'s is usually safest :: has fairly low priority
18:29:23 <mgoetze> oh, so my memory was correct but i forgot the ()s
18:31:43 <mgoetze> hm, (0::Integer) `setBit` 100000 is not significantly faster than 2^100000
18:38:10 <mgoetze> blah... cast Integer to Int with fromIntegral?
18:38:38 <mgoetze> yeah, seems so
18:40:35 <mgoetze> eh? what's it giving wrong answers for, now?
18:42:01 <mgoetze> this wasn't part of the deal!
18:47:31 * mgoetze hms.
18:48:26 <Riastradh> shapr, are you still here?
18:49:51 <shapr> sort of :-)
18:49:59 <shapr> how may I assist you?
18:50:12 <Riastradh> Is there any way to tell if a message's prefix is null, a server, or a nick?
18:55:39 <Riastradh> ...
18:55:42 <shapr> I don't know
18:57:14 <Riastradh> Hrm.  Well, I must depart now...oh well.
18:59:00 <shapr> yes, me too
19:25:33 * kawfee bounces
19:36:01 <vardamir> are there different kinds of Integers, because I don't think ::Int is the arbitrary precision variety ;)  (sorry, second day )
19:36:42 <vardamir> i have to admit though, this lazy language business is very nifty
19:36:53 <vardamir> or whatever it is called
19:36:58 <vardamir> lazy evaluation
19:37:25 <Pseudonym> Int is limited precision.
19:37:30 <Pseudonym> Integer is arbitrary precision.
19:37:41 <vardamir> ok, thanks much
19:40:36 <mgoetze> how do i coerce ghc to tell me the biggest number storable in a type?
19:46:30 <Pseudonym> minBound and maxBound
19:46:45 <Pseudonym> Prelude> maxBound :: Int
19:46:45 <Pseudonym> 2147483647
21:30:15 <vardamir> sieve (1:s) = 1 : sieve [s]  -- will pattern matching not work like this?
21:31:57 <vardamir> ok, don't answer that ;)
21:52:45 <Darius> how is it not working?
21:53:08 <Darius> except s is a list
21:53:19 <Darius> do you want sieve (1:ss) = 1 : sieve ss
22:57:41 <vardamir> Darius, yeah, sorry about that, that is why i said don't answer it ;)
