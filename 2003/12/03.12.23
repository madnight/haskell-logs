03:53:01 <musasabi> How well suited would haskell + haxml be for creating a database driven template based webaplication?
03:54:00 <musasabi> how would one elegantly transfer state from one request to the next?
03:54:07 <andersca> using a monad? :)
03:55:21 <musasabi> andersca: any tips how to do it in practise?
03:55:28 <andersca> musasabi: sorry, no
03:55:40 <andersca> musasabi: I know a couple of friends who are working on such a thing though
03:57:09 <musasabi> andersca: if you have any pointers...
03:57:25 <andersca> musasabi: it's a school project so it won't be public until sometime next year :/
04:16:54 <Darius> musasabi: Have you seen WASH?
04:47:52 <musasabi> Darius: that doesn't seem to provide what I need.
04:48:25 <musasabi> I need to have html templates for the web monkeys to edit and then transform them into the result.
07:07:34 <SyntaxNinja> sshhhhh
07:10:24 <Igloo> Are we hunting wabbits?
07:21:50 <SyntaxNinja> Igloo: yes!
07:22:47 <SyntaxNinja> the only ppl IMming me today are apparently very horny.  enough to offer to let me see their webcams, which must be quite an honor.
07:22:52 <SyntaxNinja> the internet is mostly quiet today
07:24:42 * Igloo is mainly appearing periodically to delete some spam from my mailbox
07:25:08 <SyntaxNinja> heh
07:25:23 <SyntaxNinja> spamassassin should give a higher score to anything delivered around the holidays ;)
07:26:11 <Igloo> I don't /think/ I get more this time of year but I don't keep stats
07:27:17 <SyntaxNinja> not more, just a higher percentage.
07:27:19 * Igloo hacked on kb a bit too. Over a modem without being able to est it. But it still compiles  :-)
07:27:32 <Igloo> Ah, quite possibly true
07:29:12 <Igloo> How's your NM application going OOI?
07:30:53 <SyntaxNinja> haven't heard anything for weeks, maybe a month or more since I least heard.  I assume it was somewhat delayed by the break-in. I think I pinged my advocate (or whatever) a couple of weeks ago.
07:32:07 <Igloo> Ah, right
07:32:20 <SyntaxNinja> it's pretty lame if you ask me.
07:32:32 <SyntaxNinja> but I'm not goign to complain too loudly, at least not until I get accepted :P
07:33:18 <Igloo> Yeah  :-/
07:33:40 <Igloo> I think I might be motivated enough to vote for overfiend next time round for DPL  :-)
07:39:41 <SyntaxNinja> why's that?
07:39:47 * SyntaxNinja doesn't know much about Debian personalities
07:40:36 <Igloo> I think he is most likely to give things that need it a shakeup. Admittedly this is based almost entirely on reading debian-devel
07:41:46 * Igloo doesn't really know anything about the others who stood last time
07:42:13 <Igloo> Oh, also he's been good about giving reports on what he does as treasurer.
07:43:15 <SyntaxNinja> that's cool.
07:43:22 <SyntaxNinja> I like the idea of shaking things up, personally.
07:43:30 <SyntaxNinja> but who am I to say...
07:44:35 <SyntaxNinja> I have this idea about tradition and religion and the momentum that they create: they save you from temporary insanity, from digging yourself so deep you can't get out, but they are bad for innovation and excitement.
07:44:53 <SyntaxNinja> and the momentum of the Debian project is somewhat similar.
11:22:33 <cm> hiho
11:28:50 <SyntaxNinja> hi cm
11:29:58 <cm> hello SyntaxNinja 
11:32:30 <SyntaxNinja> how's it going?
11:32:44 <cm> pretty good :)
11:32:53 * cm learns combining monads
11:38:00 <SyntaxNinja> cm: any questions?
11:42:03 <cm> SyntaxNinja: not yet, still reading in "all about monads" :)
11:42:49 <SyntaxNinja> cool
11:42:57 <cm> SyntaxNinja: basically what i'm having is a program in the IO monad, whose parts currently pass Options data around. wondering whether a nested State monad would simplify the program
11:43:29 <cm> SyntaxNinja: like currently all parts have a signatur like Options -> .... -> IO Options, and i always have to pass that param around.
11:43:32 <cm> signature*
11:45:00 <harsha123>  /part
11:46:47 <SyntaxNinja> cm: ahh, could be.  Depends on how much they get passed around.  Unless the code is ugly, I usually prefer to explicitly pass things, as it allows for currying, etc.
11:47:03 <SyntaxNinja> have you seen Control.Monad.State? There's something in there for nested states
11:48:30 <Igloo> The problem is you'd have to lift the functions for one monad or the other
11:48:43 <cm> SyntaxNinja: the thing is that only about 2 or 3 parts of the Main module need to access the state (and only one needs to modify it), but i still have to pass them on through the functions in the call chain between main and those 3.
11:49:43 <Igloo> What HOpenGL does might be interesting. I'd guess its settables wrap IORefs nicely, but I haven't looked athow it works exactly
11:50:44 <cm> (like main -> repl -> doEval -> doScan needs to access options's showTokens "member")
11:50:47 <cm> will look at C.M.State
11:50:58 <SyntaxNinja> cm: yeah, I take it that these are command-line options?  That is a common problem; having to thread them to a bunch of places, and typically most of the functions will only touch one or two options.
11:51:20 <cm> almost, they are like the options of the ghci repl
11:51:25 <cm> with :set, :unset etc ;)
11:51:34 <SyntaxNinja> I try to make functions as precise as possible, and not pass unneeded things to them, and not put them in unneeded monads.
11:51:45 <cm> it's a little evaluator, and you can set options like :set showParseTree etc
11:51:50 <SyntaxNinja> right.
11:52:24 <cm> hrm yeah. i also suppose instead of having doScan call doParse call doEval, that should rather be a sequence in some monad.
11:53:08 <SyntaxNinja> do they perform IO?  I would rather have:
11:53:13 <SyntaxNinja> do input <- getInput
11:53:31 <SyntaxNinja>   output (doEval (doParse (doScan input)))
11:53:49 <SyntaxNinja> than something like doEval >>= doParse >>= or whatever
11:54:09 <cm> i have "pure" functions eval, parse, etc which could be used like that
11:54:36 <cm> but the do*() versions do some output, like printing the parse tree etc.
11:54:53 <SyntaxNinja> ahh
11:58:20 <cm> it's still not too bad, as the IO/option passing stuff only happens in the Main monad
12:00:07 <cm> oh btw, was trying to hack some quicktest'ish stuff in php: http://nopaste.php.cd/6027
12:00:10 <cm> :p
12:02:09 <SyntaxNinja> don't know quicktest. btw, there's a paste page on the haskell wiki: http://www.haskell.org/hawiki/HaskellIrcPastePage
12:02:32 <Igloo> I think cm means QuickCheck?
12:02:38 <cm> oh yeah
12:02:56 <cm> that one cool testing library :)
12:03:27 <cm> the idea of (auto-)generating test data sort of appealed to me, and as i have to use php at work, i was trying to port the idea over ;)
12:08:39 * SyntaxNinja curses arrowp
12:08:49 <SyntaxNinja> I'll have to try out ghc's new built-in arrowp
12:09:02 <Igloo> What's the p mean?
12:09:18 <cm> predicate? isArrow?
12:10:17 <SyntaxNinja> pre-processor I guess
12:10:27 <Igloo> Ah
12:10:40 <SyntaxNinja> cm: no. this isn't lisp ;)
12:10:49 <Igloo> GHC doesn't preprocess it so much as parse it AIUI
12:11:03 <SyntaxNinja> cool!
12:11:12 <cm> SyntaxNinja: :P
12:11:13 <SyntaxNinja> I hope it gives better error messages
12:11:37 <SyntaxNinja> and if I say "type arrowp" it says /usr/local/bin/arrowp, which isn't a legal type in haskell!
12:11:46 <Igloo> The solution to poor error messages is to write error-free programs
12:12:08 <Igloo> :-)
12:12:14 <SyntaxNinja> Igloo: I try, I try.
12:14:30 <SyntaxNinja> I liked someone's comment at HIM or ICFP that error messages in Haskell are not very useful for beginners, and experienced programmers don't even look at them, since it's faster to just look at the code and see the problem.
12:14:52 <SyntaxNinja> but they're presumably good for the intermediate programmers ;)
12:15:53 <Igloo> :-)
12:16:47 <Igloo> I generally find looking at the code easier than trying to get it straight in my head which type the code I've written has and which type it should have given where it is given the error messages
12:18:18 <cm> i wonder when SPJ is gonna developing a great haskell ide :p
12:27:30 <SyntaxNinja> cm: I'm not sure if he's interested in IDEs. others are, though.  there's an IDE for Helium, I think.  There may be others.
12:27:36 <SyntaxNinja> I feel like there are others
12:36:44 <Igloo> What's the nicest way to find how many Trues there are in a list?
12:40:33 <SyntaxNinja> my first inclination would be "length [x | x <- l, x]
12:41:32 <Igloo> Bah, hugs no longer tells me where the source is
12:43:08 <Igloo> Hmm, it fells like it's something that should be simpler
12:47:34 <Riastradh> every identity l
12:47:48 <Riastradh> Er, all identity l, rather...bloody Haskell conventions.
12:47:54 <Riastradh> Oh, wait.
12:48:30 <Riastradh> How _many_, not a list of.
12:49:12 <Igloo> length (filter id xs) is what I came up with, incidentally, which is essentially the same as Syn's in a different style
12:50:09 <Riastradh> sum (map toEnum xs) is shorter!  (I think)
12:50:50 <Igloo> Hmm, is that bahaviour of toEnum guaranteed?  :-)
12:51:02 <Riastradh> Yes.  Look at the Prelude.
12:51:25 <Igloo> The Prelude won't tell me if it is. The report might.
12:51:27 <Riastradh> Er, oh.  fromEnum, not toEnum.
12:51:42 <ayrnieu> count x = map (=x)
12:52:16 <Igloo> Huh?
12:52:34 <Riastradh> count f = foldl (\x c -> if f x then c + 1 else c) 0
12:52:41 <Riastradh> count id xs
12:53:05 <Riastradh> Er, 'c x', not 'x c'.
12:53:11 <ayrnieu> Sorry, I seem to have not woken up yet.
12:54:55 * Igloo dials down
13:09:28 <Darius> musasabi: Fell asleep.  Anyways, I didn't expect it to exactly solve your problem, but the ideas behind the implementation may be helpful and it may be easier to use/modify with a template layer over it than writing something from scratch.
13:17:57 <cm> trying to get Htk compile with ghc-6.2..
13:23:26 <musasabi> Darius: thanks for the tip
15:45:27 <camio> Hello.
15:46:00 <ayrnieu> Hello camio.
15:46:27 <camio> Do you know of an easy notation for nested if then's?
15:47:05 <Riastradh> Due to laziness, you might be able to get away with something like:
15:47:18 <Riastradh> cond [] = undefined
15:47:41 <Riastradh> cond ((condition, value) : xs) = if condition then value else cond xs
15:48:36 <camio> hrm
15:49:11 <camio> I did see some weird notation using a case statement before, but I can't recall what it was exactly.  Something like case () of _ |
15:49:52 <Riastradh> Yes, you could use guards, too.
15:50:26 <Pseudonym> There's guards.
15:50:33 <Pseudonym> Also case expressions may work.
15:50:44 <Pseudonym> let foo | guard1 = expr1
15:50:51 <Pseudonym>         | guard2 = expr2
15:50:53 <Pseudonym> in foo
15:51:00 <Pseudonym> Or:
15:51:05 <Pseudonym> case () of
15:51:10 <Pseudonym>     _ | guard1 -> expr1
15:51:18 <Pseudonym>       | guard2 -> expr2
15:51:47 <Pseudonym> But then, you may be able to do it all with case expressions.
15:51:59 <Pseudonym> Here's a bad example, but it illustrates the point:
15:52:04 <Pseudonym> case (guard1,guard2) of
15:52:10 <Pseudonym>     (True,_) -> expr1
15:52:15 <Pseudonym>     (_,True) -> expr2
15:53:47 <camio> ahh, cool
15:53:59 <camio> This will greatly improve what I had:
15:54:17 <Pseudonym> It will certainly improve a flood, yes.
15:54:21 * ayrnieu laughs.
15:54:37 * camio hits himself in the head
15:54:46 * Pseudonym hits camio in the head due to peer pressure
15:54:46 <ayrnieu> Why do people use IRC clients that let them do that?
15:55:27 <camio> I don't know about people, but I use mirc because I don't know of a better one.
15:55:51 <Pseudonym> Most people don't live in their IRC clients.
15:56:28 <Pseudonym> It seems to me that a "Good Haskell style" section of the wiki might be useful.
15:56:48 <camio> I concur.
15:57:33 <ddarius> http://haskell.org/hawiki/HaskellStyle
15:57:59 <Pseudonym> Ah, there you go.
15:58:17 <ddarius> Well, it could use a lot of additions.
15:58:36 <Pseudonym> Look, there's even stuff written by me there.
16:00:08 * Pseudonym is so l33+
16:04:34 <camio> I'll add the nested if then thing.
16:05:20 <Pseudonym> Hang on, I'm adding a note about type names.
16:06:21 <camio> ok
16:07:50 * ddarius has already updated it to refer to the Haskell Retrospective.
16:08:09 <Pseudonym> OK, done.
16:09:48 <Pseudonym> OK, question.  We all use camelCase for multi-word function names, right?
16:10:00 <Pseudonym> Except for the Schemers, who use hyphens, obviously. :-)
16:10:28 <Darius> I do.  Though sometimes I'll use foo_bar if code (usually C++ code) is already using it.
16:10:40 <Pseudonym> Right.
16:10:46 <Darius> And dammit, isn't it supposed to conflict if two people edit the same page?
16:10:51 <Pseudonym> How do you treat acronyms?
16:11:00 <camio> I'm editing now.
16:11:03 <Pseudonym> Darius: No idea.  Did I just clobber your changes?
16:11:04 <Smerdyakov> Darius, it warns the second person, but doesn't prevent it.
16:11:09 <Pseudonym> Ah.
16:11:14 * Pseudonym missed the warning, obviously
16:11:26 <Darius> Or maybe I did.
16:11:36 <Pseudonym> Would you use: editSGMLDocument, or editSgmlDocument?
16:11:43 <Darius> The former.
16:11:51 <Darius> Though sometimes it's pretty ugly looking.
16:12:01 <Pseudonym> I suppose you'd make it consistent with a type name if there is one.
16:12:27 <Pseudonym> editSGMLDocument :: SgmlDocument -> SgmlDocument -- Just plain wrong.
16:13:04 <Pseudonym> And of course it's painful if the identifier _starts_ with an acronym.
16:13:05 <camio> done
16:13:17 <Pseudonym> Thanks.
16:13:26 <Darius> Well, yes, consistency matters.  Anyways, I have a module named GenCOld right now, though as the name suggests, it is likely to be deleted.
16:13:56 <Smerdyakov> Darius, oh, I thought it was a machine that lowers the temperature!
16:14:39 <Pseudonym> Or makes you ill.
16:15:26 <camio> ddarius: what additions to the style page where you referring too?
16:15:56 <Darius> I've re-added them.  Clicking on the 3D glasses should show the differences.
16:16:56 <Pseudonym> And it should show the changes in cinemascope, with THX surround sound.
16:18:18 <camio> Does anyone know the status of TRex-like records with ghc?
16:19:52 <camio> That'll be an exiting development.
16:20:12 <Darius> As far as I know, they aren't supported at all and there are no plans to start.  On the other hand, there are ideas for better record systems.
16:22:04 <camio> http://research.microsoft.com/~simonpj/Haskell/records.html <- That's the one I was referring too.
17:18:03 <danb> anyone ever heard of libao haskell hooks?
17:18:11 <danb> figured i would ask before i go try to write some myself
17:20:42 <danb> or suggestions on good FFI packages (greencard, et al)
17:23:07 <danb> or should i just use ghc extensions and Foreign? (skimming the readline bindings)
17:33:03 <ski> no idea what libao is
17:34:08 <danb> ski: portable audio output library, by the vorbis people (who created ogg and flac)
17:43:33 <ski> ok
17:45:21 <danb> i'll just read up on FFI and see if i can do it myself
17:45:32 <danb> shouldn't be too hard
18:15:57 <`John> hello has anyone here configured HOpenGL?
18:17:01 <Cale> I think a number of people have. If you're running debian though, you might consider the ghc6-hopengl package
18:17:45 <`John> sorry no debian
18:18:21 <`John> is it legal to package cygwin/hopen/greendcard for restribution?
18:18:54 <`John> also is hopengl as fast as nvidia gl? can it use the same drivers?
18:19:24 <Cale> You'd have to check the license on cygwin, as I'm not familiar with it. The other two have been packaged before though, I think.
18:19:27 <`John> also can hugs work with it? i do not have glibc <= 2.3.
18:20:06 <Pseudonym> OMG
18:20:18 <Pseudonym> Anyone read the troll on the haskell mailing list?
18:20:24 <Cale> no - what is it?
18:20:25 <ayrnieu> Pseudo - no.  URL?
18:20:40 <Cale> I think that HOpenGL just uses the available GL.
18:21:01 <Pseudonym> Hang on.
18:21:38 <Pseudonym> http://haskell.org/pipermail/haskell/2003-December/013271.html
18:23:23 <Pseudonym> Must. Resist. Urge. To. Post.
18:23:47 <cm> Sean L. Palmer
18:23:49 <cm> that kid sounds familiar
18:24:25 <Cale> is that a troll? I don't know, the post seems pretty reasonable, if misguided.
18:25:00 <Pseudonym> It's probably just someone who's misguided.
18:25:10 <Pseudonym> But boy there's a lot of troll material in there.
18:25:15 <cm> http://infomesh.net/sbp/
18:25:22 <cm> is that the same guy?
18:25:34 <Darius> "What do you mean 'class' doesn't mean OO class in the functional language Haskell?"
18:25:55 <Cale> yeah, that's a bit odd.
18:25:58 <Pseudonym> Yeah, and why do you use "data" to define a type when "type" makes more sense?
18:26:23 <Pseudonym> Well, why do you use "class" to define a type when "typedef" makes more sense?
18:26:24 <Cale> Tell him it's because type is already taken :)
18:26:50 <Darius> But Cale, C/C++ is the arbiter of correct terminology.  type should be typedef.
18:26:55 <Cale> heh
18:27:04 <Cale> heheheh
18:27:14 <Darius> Of course, struct Pair { int fst; int snd; }, Pair is the name of a type, but that doesn't matter.
18:27:17 <Smerdyakov> Cale, but 'type' is used for _everything_ in OCaml. :D
18:28:13 <Pseudonym> "I wonder if there are any tutorials out there that provide a 1:1 mapping of concepts and idioms from other common languages into Haskell"
18:28:18 * Pseudonym chokes on coffee
18:28:45 <ski> Darius : (isn't 'Pair' a tag name, there ?   'struct Pair' is the type IIRC)
18:28:51 <ayrnieu> hee hee.
18:29:02 * Darius is more of a C++ programmer.
18:29:02 <Pseudonym> In C++, the type is "Pair".
18:29:06 <Pseudonym> Or, I suppose, "class Pair".
18:29:07 <ayrnieu> Does ML qualify as a common language?
18:29:12 <Cale> hehe
18:29:13 <Pseudonym> struct == class
18:29:29 <Riastradh> 'Yes, Haskell will be 100% accepted if we make it C++!'
18:29:39 <Pseudonym> Look, I'm a C++ programmer too, but I understand what a "class" is.
18:30:19 <stepcut> i think haskell would be more widely accepted if it was more like perl
18:30:30 <stepcut> that's the ticket
18:30:33 <Pseudonym> C++ amalgamates classes and types into one concept, "class".  THis isn't "wrong", but it's not appropriate for Haskell.
18:30:47 <Smerdyakov> Haskell would be more accepted if it were more like Pokemon.
18:30:56 <Darius> Pseudonym: Yes, I was going to mention the conflation of classes and types.
18:31:05 <Cale> Haskerl
18:31:14 <Cale> http://www.dcs.gla.ac.uk/~partain/haskerl/partain-1.html
18:31:20 <`John> i think haskell would be more widely accepted if there where easier , simple examples to be found, not theoritical 'foofage'.
18:31:31 <Pseudonym> John: I do agree with you there.
18:31:32 <cm> Pseudonym: don't forget unions :)
18:31:39 <Pseudonym> unions and C++ don't mix.
18:31:42 <ayrnieu> John - what of 'The Gentle Introduction to Haskell' don't you like?
18:31:52 <cm> Pseudonym: unions are some kind of class type, too :)
18:31:59 <ayrnieu> I think that Haskell would find more acceptance if GHC's library documentation didn't suck evilly.
18:32:02 <cm> with certain obvious restrictions/differences to struct/class
18:32:14 <Darius> ayrnieu: Write it, submit a documentation patch.
18:32:32 <Pseudonym> cm: Unions aren't class types.
18:32:38 <`John> ayrnieu, all of it really.
18:32:46 <Pseudonym> They're another kind of type, that's true.
18:32:52 <ayrnieu> Darius - I've tended to more strongly desire to rewrite it in texinfo.
18:33:07 <cm> Pseudonym: yes they are classes.
18:33:08 <Cale> I think that having a wiki segment in the documentation for each item would be decent.
18:33:27 <Darius> Well, Control.Monad.* has that for the most part.
18:33:43 <Darius> Of course, it isn't linked to from the GHC documentation.
18:34:05 <cm> Pseudonym: in case you don't believe me, just check out the standard (chapter 9)
18:34:24 <cm> Pseudonym: "A class is a type." [...] "class-key: class struct union"
18:34:34 <cm> (just fyi anyway, not really relevant to the discussion)
18:34:35 <Pseudonym> So they are.  Heavens.
18:34:44 <Pseudonym> I just tried it.
18:34:49 <Pseudonym> Eeek.
18:34:51 <Pseudonym> Unions are pure evil.
18:35:02 <Darius> Wait, what is the effect of subclassing a union?
18:35:06 <Pseudonym> Actually, they're impure evil.
18:35:47 <Smerdyakov> Darius, that sounds like something you do to break a strike.
18:36:30 <cm> Darius: can't.
18:36:45 <cm> Darius: "A union shall not have base classes. A union shall not be used as a base class."
18:37:02 <cm> they are quite a lot of restrictions on them, obviously ;)
18:37:21 <Pseudonym> There is no strength in the union, no matter what Billy Bragg says.
18:38:52 <ayrnieu> "I've learned all kinds of other programming languages, from asm to forth to basic, pascal, C, C++, java, and C#..."
18:38:57 * ayrnieu falls over.
18:39:06 <Pseudonym> There are a lot of kinds there.
18:39:18 <Pseudonym> There's * and * -> *
18:39:27 <darius-> i'd give him credit for forth there :)
18:39:42 * Darius wonnders what he did when Java varied from the ubiquotous 'virtual' keyword.
18:39:49 <Pseudonym> Yes.  And Pascal and C++ are quite different.
18:39:50 <ayrnieu> indeed, lots to learn from Forth.
18:41:18 <ayrnieu> The differences in "Pascal, C, C++, Java, and C#" don't impress me when you consider Lisp, Prolog, Smalltalk, Icon, Self, Sisal.
18:41:30 * Darius adds Haskell to the list.
18:41:40 <Pseudonym> Add Prolog.
18:41:42 <Smerdyakov> Today's episode: ayrnieu preaches to the choir.
18:41:52 <Pseudonym> Are you listening, choir?
18:42:08 <Smerdyakov> The choir has no ears. It has evolved beyond that.
18:42:12 <ayrnieu> sigh, I just picked those as interesting differentiable languages.
18:42:40 <ayrnieu> He says that like he has mad language-learning sk1llz, and I respond with something like "Oh, Forth?  Nifty."
18:42:49 <Smerdyakov> ayrnieu, how about twice differentiable languages?
18:43:12 <darius-> hm, well, regular expressions are differentiable
18:43:14 <Pseudonym> At last count, I had about 45 languages on my CV.
18:43:31 <Pseudonym> Varying degrees of familiarity.
18:43:50 * Pseudonym tends to go for breadth rather than depth
18:44:14 <Smerdyakov> Pseudonym, do you think it's a strike against someone to list that many languages? Is there a point beyond which it becomes negative?
18:44:15 <ayrnieu> I do about the same.
18:44:28 <Pseudonym> Smerdyakov: I don't know.  Possibly.
18:44:40 <Pseudonym> When I tell people I used to research compilers, they tend to understand then.
18:44:42 <ayrnieu> Lately, I've reduced the set of languages that I find very interesting to: (Lisp, Scheme, Erlang) (Haskell O'Caml)
18:44:52 <Darius> Well, as long as you can claim depth in some of the languages...
18:45:05 <Pseudonym> Personbally, I consider it a bonus because I can adapt to a new DSL very quickly.
18:46:14 <Smerdyakov> Pseudonym, 45 languages? You ought to be able to list 6 or so that show to the informed reader that you can learn anything else quickly.
18:46:38 <Pseudonym> I actually list some of them as "family".
18:46:53 <Pseudonym> So, for example, I don't list Pascal, Modula-2 and Delphi separately.
18:47:16 <Pseudonym> Nor do I list ML, SML, O'Caml etc separately.
18:47:47 <cm> could you put that list online?
18:48:03 <ayrnieu> Indeed, I'd put those first under "Wirthian Sludge"
18:48:15 <Pseudonym> http://andrew.bromage.org/resume/
18:48:20 <cm> what is oberon like, btw?
18:48:22 <Pseudonym> There's a summary section there.
18:48:40 <cm> i read about that a couple of years ago in the local library.. didn't have internet by then :)
18:48:42 <Pseudonym> I know a little Oberon.
18:48:46 <ayrnieu> cm - IIRC, Oberon adds extensible structs to the previous Wirthian language.
18:48:52 <cm> is it any different to modula-2/3?
18:48:53 <Pseudonym> Yes.
18:48:59 <Pseudonym> Oberon was designed to write an OS in.
18:49:29 <Smerdyakov> Pseudonym, I've never seen someone list a bachelor's degree after his name like that before.
18:49:35 <Pseudonym> I used it a little, and dumped in favour of the Modulas.
18:49:42 <Pseudonym> Smerdyakov: Haven't you?
18:49:57 <Pseudonym> Odd.  Everyone here does it on their business cards.
18:50:27 <ayrnieu> Pseudo - do you have any spare opinions on Mercury that you'd like to share?
18:50:30 <Smerdyakov> Maybe. People in academia would be a little embarrassed to emphasize a bachelor's degree as their highest, I think.
18:50:43 * darius- wonders what to put after your name if you've graduated from junior high
18:50:46 <Pseudonym> ayrnieu: I have a LOT of opinions on Mercury.
18:50:46 <Smerdyakov> Man. Pseudonym presents papers at Perl conferences.
18:50:55 <Smerdyakov> It's his secret shameful identity.
18:51:01 <Pseudonym> Indeed. :-)
18:51:22 <cm> you didn't happen to be at PHPcon? ;)
18:51:25 <Smerdyakov> Pseudonym, are you Christian, too?
18:51:27 <Pseudonym> I won US$1000 from it, though, so it's not that shameful.
18:51:32 <ayrnieu> Pseudo - have you written any of them down? =)
18:51:35 <Pseudonym> Smerdyakov: Yup.
18:51:50 <Smerdyakov> Pseudonym, wouldn't have guessed in a quintillion years.
18:52:07 <Pseudonym> I'm pretty postmodern about it.
18:52:43 <Smerdyakov> Why Christianity and not some other religion?
18:52:51 <Pseudonym> My beliefs are somewhere between Larry Wall and Joseph Campbell.
18:53:09 <Smerdyakov> I don't know much about those people's beliefs.
18:54:10 <Pseudonym> Well, Joseph Campbell would point out that we have religion for a psychological reason.  It obviously helps, otherwise we wouldn't have it.
18:54:28 <ayrnieu> Indeed, I have found Discordianism a source of some comfort.
18:54:36 <Pseudonym> Absolutely.
18:54:44 * Pseudonym is also Discordian and sees no contradiction
18:54:47 * Smerdyakov writes ayrnieu off as an attention seeker. ;)
18:54:57 <Pseudonym> Larry Wall would tell you that religion is about stories and participation.
18:55:16 <Smerdyakov> Pseudonym, so you choose Christianity because of the local opportunities for participation?
18:55:35 <Pseudonym> No, actually.
18:55:50 <Pseudonym> That's the odd thing.
18:56:06 <Pseudonym> :-)
18:56:18 <Pseudonym> I like the intellectual exercise.
18:56:28 <Pseudonym> And I do like the religion.
18:56:48 <Smerdyakov> More than all the other major ones, giving them all fair evaluations?
18:57:07 <Pseudonym> I wouldn't say "more than", necessarily.
18:57:20 <Smerdyakov> Well, then why not profess these others equally?
18:57:29 <Pseudonym> There is somethin in that.
18:57:51 <Pseudonym> Though if you do profess all major religions equally, that makes you more of a Hindu than any of the others.
18:58:08 <Pseudonym> I suppose that Christianity fits more with me as a person.
18:58:37 <Pseudonym> Christianity is very much about the "inner being".
18:58:52 <Pseudonym> Islam, on the other hand, is about service and freedom.
18:59:11 <Smerdyakov> I don't like the lot of them. Too much cultural baggage.
18:59:20 <Pseudonym> That's why you need to be postmodern.
18:59:47 <Pseudonym> It also helps if you try to read the original holy texts deliberately trying to ignore cultural baggage.
19:00:10 <Pseudonym> You have to be smart to start a major religion.  Reading what the founders had to say, you often find a lot of resonance.
19:00:21 <Pseudonym> Because they were smart and so are you.
19:00:54 <Pseudonym> ayrnieu: BTW, on Mercury, I don't really have time go to into it now.
19:01:13 * Pseudonym will be leaving soon, for the Mithraist solstice tree festival
19:01:23 <Pseudonym> Though here it's the Summer solstice.
19:01:39 <Smerdyakov> Well, ne-EE-ato.
19:01:54 <Pseudonym> http://www.google.com.au/search?q=cache:n1eV9anDmzcJ:tunes.org/~nef/logs/haskell/02.09.26+Pseudonym+mercury+site:tunes.org+declarations+inst&hl=en&ie=UTF-8
19:02:10 <Pseudonym> There are some remarks I've made about Mercury in the past.
19:02:17 <ayrnieu> ah, thanks.
19:02:32 <Pseudonym> http://www.google.com.au/search?q=cache:n1eV9anDmzcJ:tunes.org/~nef/logs/haskell/02.09.26
19:02:34 <Smerdyakov> OMG. You named your child "Miranda Joy"? :D
19:02:37 <Pseudonym> That's a smaller URL. :_)
19:02:44 <Pseudonym> Yes I did.  Two programming languages.
19:03:16 <Pseudonym> Actually, "Joy" is my mother's middle name and I got "Miranda" because it's Shakespearean, but don't tell anyone in the programming language community that.
19:03:25 <ayrnieu> Miranda has the benefit of already existing as a beautiful name.
19:04:18 <Pseudonym> The joke was that if she was a boy, we would have to call her "Haskell Forth".
19:04:21 <Pseudonym> Sorry, him.
19:04:29 <stepcut> ghc-6.0.1: panic! (the `impossible' happened, GHC version 6.0.1):
19:04:34 <stepcut> i get that a lot :p
19:04:34 <ayrnieu> hee.
19:04:49 <Pseudonym> stepcut: WOw, you've caused a logical contradiction.
19:04:59 <ski> isn't Joy used as a woman name in the US, at least ?
19:05:10 <Pseudonym> And in the UK.
19:05:16 <Pseudonym> It's actually a Puritain name.
19:05:23 <Pseudonym> Faith, Hope, Charity, Joy, Prudence...
19:05:46 <Pseudonym> Now, here's a good intellectual exercise.
19:06:01 <Pseudonym> What if they named children after _modern_ virtues, rather than Puritain ones?
19:06:02 <Smerdyakov> And Perspicacity
19:06:10 <ayrnieu> Tenacity!
19:06:11 <Pseudonym> We'd have kids named Tolerance.
19:06:16 <ski> Freedom ?
19:06:17 <ayrnieu> All virtues fall to the glory of Tenacity.
19:06:27 <Pseudonym> Globalised.
19:06:38 <ski> ayrnieu : what's tenacity ?
19:06:39 <Smerdyakov> Submission
19:06:40 <Riastradh> Patriotism.
19:06:44 <Smerdyakov> Vacuousness
19:06:49 <ski> heh
19:06:50 * darius- imagines a poor kid named Freedom Fry
19:06:51 <Pseudonym> Let's see... Multicultural.
19:06:53 <ayrnieu> ski - one of the three primary virtues of IF.
19:07:10 <Pseudonym> Or if you're a Perl programmer: Laziness, Impatience, Hubris.
19:07:21 <ayrnieu> Indeed.
19:07:43 <Riastradh> Or if you're a HM fan: Polymorphism.
19:07:54 <Pseudonym> Purity
19:08:04 <ski> Inference
19:08:05 <Smerdyakov> I think "Invincible" could raise some eyebrows.
19:08:08 <Riastradh> That sounds Puritan, Pseudonym.
19:08:09 <Pseudonym> Scalability
19:08:18 <Pseudonym> It does, actually.
19:08:24 <Riastradh> Monadic
19:08:35 <ayrnieu> ski - www.chiropractic-software.com/tenacity_is_a_virtue.htm talks about it a bit, but I didn't read to find their conclusions disagreeable.
19:08:38 <Pseudonym> There was a real Puritain named If-Christ-Had-Not-Died-Thou-Wouldst-Be-Damned.
19:08:39 <ski> Pseudonym : (IF ? Intellectual Freedom ?  Information Freedom ?  ???)
19:08:40 <Smerdyakov> Pseudonym, "Fault-Tolerance," in the grand tradition of two-part female English names.
19:08:45 * Pseudonym isn't kidding
19:09:02 <ayrnieu> Pseudo - did they shorten it do Christ?  Damned?
19:09:10 <ayrnieu> or "iffy" =)
19:09:19 <Riastradh> Hey If-Christ-Had-Not-Died-Thou-Wouldst-Be-Damned, see the game last night?
19:09:22 <Pseudonym> If you're an Ayn Rand worshipper, I suppose Selfishness would be appropriate.
19:09:39 <ayrnieu> Pseudo - we don't worship her, we just buy all her books.
19:09:42 <Smerdyakov> If you're an Ayn Rand worshipper, Rape would probably also be a favorite.
19:09:54 <ayrnieu> Smerdy - ITYM a "Piers Anthony" worshipper.
19:10:05 <Smerdyakov> ayrnieu, ITYM?
19:10:12 <ayrnieu> I Think You Mean.
19:10:29 <Smerdyakov> No. Ayn Rand always has her heroines be raped.
19:10:41 <ayrnieu> No, only one of her heroines got raped.
19:10:45 <Pseudonym> The trouble with modern virtues is that, as Neal Stephenson pointed out, there's actually only one sin today.
19:10:51 <ayrnieu> The heroines of We The Living just died.
19:10:51 <Pseudonym> That's hypocrasy.
19:10:57 <Smerdyakov> Nuh uh. The heroines of her two long novels get raped.
19:11:21 <ayrnieu> Smerdy - what two long novels do you mean?
19:11:29 <Smerdyakov> Atlas Shrugged, The Fountainhead
19:11:30 <Pseudonym> There are no absolute morals, hence the only way you can feel superior to someone else is to catch them not living up to their own professed standards.
19:11:32 <ayrnieu> I only know of one case of rape, in Atlas Shrugged.
19:11:44 <ayrnieu> oh, indeed.
19:12:03 <Smerdyakov> Pseudonym, I must be on to something big, then, because I feel superior to people for other reasons.
19:12:12 <ayrnieu> Somehow I forgot The Fountainhead -- for a moment I though you meant Anthem.
19:12:16 <ski> Pseudonym : (s/hypocrasy/hypocrisy/ i think)
19:12:17 <Pseudonym> Which is, of course, ridiculous.  If we could live up to our own ideals, they wouldn't be ideal.
19:12:21 <Pseudonym> ski: Yes.
19:12:34 <ayrnieu> Anyway, Piers Anthony has lots and lots of near-rape in his books, and I've heard one actual rape.
19:13:18 <Smerdyakov> I feel superior to people who act to bring about the downfall of the human race.
19:13:23 <Smerdyakov> I feel justified in that attitude.
19:14:03 <Pseudonym> Smerdyakov: So you'd call yourself secular humanist, then?
19:14:17 <Pseudonym> If you had to be pigeonholed into something, that assumes.
19:14:22 <ayrnieu> Smerdy - yes, I hate Luddites too.  If they won we'd all find ourselves sitting around not doing much tens of thousands of years hence when Sol goes 'red giant'.
19:14:30 <Smerdyakov> Maybe. I have some sympathy for animism, in a vague way.
19:14:45 <Pseudonym> Oh, you might like Taoism, then.
19:14:51 <Smerdyakov> Yes, I do.
19:14:58 <Pseudonym> There you go.
19:14:59 <Smerdyakov> And Zen.
19:15:19 <Pseudonym> I like Taoism, too, but it's slightly at odds with Discordianism.
19:15:37 <Pseudonym> Taoism teaches that the natural state of the universe is a good thing.
19:15:38 <ayrnieu> Smerdy - some Zen-practising people grow annoyed if you say 'Zen' instead of 'Zen Buddhism'.
19:15:51 <Pseudonym> Discordiamism teaches that the natural state of the universe is a bad thing, and that's a good thing.
19:16:02 <Pseudonym> For some definition of "bad".
19:16:15 <Smerdyakov> The one thing I feel strongly is that the answers to "religious" questions have to come from within a person's experiences and not some transcendent source.
19:16:37 <Pseudonym> That's a fair attitude.
19:17:20 <Smerdyakov> And people who talk about "god" are loonies because they can't define what "god" is.
19:17:22 <ayrnieu> Smerdy - what 'religious' questions do you mean?
19:17:34 <Smerdyakov> ayrnieu, anything. :)
19:17:36 <Pseudonym> If you look through the heroes of religious and mythological works, they kind of do both.
19:17:59 <Pseudonym> The journey into the other world is what makes them realise that they actually have the power within themselves.
19:18:17 <ayrnieu> Smerdy - well, some of the class of 'anything' questions I'd find more usefully categorized as mathematical or philosophical or technical, but OK =)
19:18:19 <Pseudonym> BTW, I can define what "god" is for me.
19:18:27 <Smerdyakov> Pseudonym, OK!
19:18:36 <Pseudonym> "God" is the deity that comes along with the religion that I have chosen to follow.
19:18:38 <`John> many people have been killed for an idea ala religion, far more worse than politic leanings alone. 
19:18:44 <Smerdyakov> Pseudonym, what's a deity?
19:18:51 <Pseudonym> John: Ah, that's another topic.
19:19:03 <Pseudonym> It's ALWAYS politics.
19:19:11 <ayrnieu> John - politics and trade.
19:19:16 <Pseudonym> Don't believe anyone when they tell you that anyone has ever been killed over religion.
19:19:25 <Pseudonym> The problem is separation of church and state.
19:19:27 <`John> 'in the name of' is a politic or an idea?
19:19:29 <ski> Perhaps God is an ADT
19:19:41 <Pseudonym> When they're not separated, church gets blamed for the action of state.
19:19:58 <`John> well I didn't expect a sort of..spanish inquisition!
19:20:01 <`John> lemon curry!
19:20:04 <Smerdyakov> Pseudonym, what's a deity?
19:20:16 <`John> tehe (for you monty python fans. :P)
19:20:16 <Pseudonym> Smerdyakov: Deity in this sense is what my religion defines it to be.  It's a question that doesn't have a short answer.
19:20:31 <ayrnieu> Smerdy - Terry Pratchet describes them fairly well, I think.
19:20:38 <Smerdyakov> Pseudonym, do you "believe in God"?
19:21:00 <Pseudonym> Smerdyakov: Yes, I do.  I do it because it's a prerequisite to following my chosen religion.
19:21:18 <Smerdyakov> Pseudonym, so what does it mean logically to "believe in God" in the way you do?
19:21:43 <Pseudonym> Well, it means that I choose to adopt all of the tenets of the religion, including belief.
19:21:59 <Pseudonym> For me, it's like an ADT, as ski said.
19:22:09 <Pseudonym> What's an interface?
19:22:26 <Pseudonym> Well, it's the set of assumptions that I need to make about YOUR module/type/whatever, in order for MY code to work.
19:22:58 <Pseudonym> So to "believe in God", for me, is to make a set of assumptions which make the rest of the religion work.
19:23:01 <Smerdyakov> I think this is not what most people mean when they say they "believe in god."
19:23:09 <Pseudonym> No, probably not.
19:23:17 <Pseudonym> As previously mentioned, though, I'm a postmodernist.
19:23:22 <Smerdyakov> It smacks of twisting the usage of terms to get out of explaining yourself. :P
19:23:25 <`John> the greater the interface the least the resistance.
19:23:27 <Pseudonym> I think that "absolute truth" is a perfectly valid way of looking at the world.
19:23:39 <Pseudonym> But it's only one way.
19:23:42 <ski> (So the "believe in God" and similar are perhaps defined by how they are used ?)
19:23:54 <Pseudonym> ski: Probably, yes.
19:24:04 <Pseudonym> You'll find, for example, that most Discordians don't believe in a literal Eris.
19:24:23 <Smerdyakov> The problem for me is that you seem to be describing this in a way that is meaningless to people not raised Christian.
19:24:29 <ski> (which of course can be different for different religions)
19:24:31 <Pseudonym> Probably, yes.
19:24:34 <Smerdyakov> I want to know what "God" is, and you just tell me "whatever makes this stuff work." :D
19:25:23 <Pseudonym> OK, let me put it this way.
19:25:31 <Pseudonym> Do you believe in the laws of physics?
19:25:37 <Pseudonym> Do you believe in science?
19:25:48 <Pseudonym> I do.
19:25:51 <`John> oh not not the water cannot rise above it's source bit.
19:26:06 <Pseudonym> Science is a process by which we gain knowledge about the physical world.
19:26:07 <Smerdyakov> I believe that the processes you have described can be used to predict things.
19:26:23 <Pseudonym> I trust the process because it has achieved empirically good results.
19:26:24 <`John> two words: Old Faithfull.
19:26:54 <Pseudonym> In other words, science is not about the factoids and formulas, it's about the process.
19:27:01 <Smerdyakov> Sure enough.
19:27:19 <Pseudonym> Similarly, I don't see religion as a set of propositions which you must believe or not believe as the case may be.
19:27:31 <Pseudonym> Do you see what I'm getting at?
19:27:41 <Smerdyakov> So you repudiate "belief in God" as a valid part of Christianity?
19:27:56 <Pseudonym> Well, it depends what you mean by "belief".
19:28:03 <Smerdyakov> Well, I don't mean anything by it.
19:28:06 <Smerdyakov> I don't understand it.
19:28:07 <Pseudonym> Personally, I can't think of a better word for it that "belief".
19:28:10 <Smerdyakov> But Christians say it ALL the time.
19:28:15 <Pseudonym> Except, perhaps, "faith".
19:28:21 <Pseudonym> "Faith" is a good word.
19:28:35 <Pseudonym> Faith isn't "belief", it's "trust" or "loyalty".
19:28:47 <Pseudonym> In the way that we refer to a relationship as "faithful".
19:29:09 <Pseudonym> It's much closer to what I'm getting at.
19:29:29 <Smerdyakov> Have you ever heard of anyone analyzing Christianity in terms of some psychological symbolism, in a way that makes it justifiable objectively as symbolizing natural mental processes?
19:29:42 <Pseudonym> Yes, I have.
19:29:55 <Pseudonym> I have a book about it in my briefcase at the moment, as a matter of fact.
19:30:01 <Smerdyakov> I guess I read your mind.
19:30:07 <Smerdyakov> What's it called?
19:30:10 <Pseudonym> Not just cChristianity, too.
19:30:19 <Pseudonym> "The Hero with a Thousand Faces", by... Joseph Campbell.
19:30:30 * Pseudonym mentioned him previously
19:30:38 <ayrnieu> And suddenly the conversation achieves circularity.
19:30:43 <Pseudonym> Now Campbell is a diehard Freudian, so take him with a grain of salt.
19:31:19 <Pseudonym> He would have said that psychoanalysis is the absolute truth, and religions are approximations and symbols of it.
19:31:30 <Pseudonym> But really, psychoanalysis was just another religion.
19:31:52 <Pseudonym> I'll warn you, though, the book is a hard slog to get through.  He's not a very good writer.
19:31:57 <Pseudonym> The book is fascinating, though.
19:32:32 <Smerdyakov> I liked the concept of Blake's work about the oneness of all religion and poetry.
19:33:19 <cm> nn
19:33:29 <Pseudonym> Interesting.  I've heard a lot of fascinating stuff about Blake.
19:34:03 <Pseudonym> Got any good references?
19:34:06 * Pseudonym must go in a minute
19:36:20 <Smerdyakov> "All Religions are One" is an illuminated book about it.
19:36:26 <Pseudonym> OK
19:39:26 <Pseudonym> Anyway, I mst head off.
19:39:32 <Pseudonym> Happy solstice festival, everyone!
19:39:42 <ayrnieu> Happy solstice festival!
19:39:53 <ski> Happy Yuletide !
19:40:03 <Smerdyakov> Happy Explosive Decompression !
19:44:01 <`John> through christianity and catholism I have found that no religion is the best religion. and instead if anything to see the jesus christ in each of us.
19:44:58 <`John> catholicism rather
19:47:36 * ski is wondering if one could separate different aspects/issues of ideologies into different "modules", for easier orthogonal combination (and possibly test of alternative "implementations")
19:48:27 <ski> (or is there too much interaction/dependencies ?)
20:00:37 * stepcut upgrades to ghc 6.2 in hopes that template haskell will work better
20:03:35 <`John> stepcut, did you have to upgrade to glibc2.3.X?
20:36:04 <stepcut> I already have 2.3.2
20:36:30 <stepcut> 2.3.2.ds1-10
20:39:19 <`John> oh.
20:39:28 <`John> which distribution do you have?
20:39:35 <`John> <stuck with suse at 2.2.5
20:40:02 <`John> ghc pucks up at me.
20:40:15 <`John> pukes rather. 
20:40:47 <stepcut> debian
20:40:53 <stepcut> mmmm debian
20:41:23 * stepcut so love debian
20:42:44 <`John> cool
20:43:19 <`John> what's upgrading the kernel like? is it all about packages or compile away?
20:44:06 <ayrnieu> Compiling the kernel generally does not differ among distributions, except that some offer patchsets.
20:44:25 <Cale> I use debian, but I just deal with my kernel myself. There is a debian way to handle the kernel though.
20:44:55 <`John> suse forces you to buy a new version.
20:44:59 <ayrnieu> oh, "upgrading".  I always compiled kernels myself -- no point in getting it precompiled or in using silly autoconfiguration tools.
20:45:10 <ayrnieu> John - nonsense.  See www.kernel.org
20:46:14 <`John> no there are hidden library dependencies. especially at the libray level. I tried upgrading to glibc2.3 (the latest 9.0 release has it only) and nearly lost everything.
20:46:44 <stepcut> `John: you can either install the stock debian kernels and drivers, or you can build your own from source
20:47:06 <stepcut> I just build from source because that is what I know best, but that is about the only thing I build from source
20:51:24 <stepcut> whee! The template haskell syntax changed between 6.0 and 6.2 :)
20:51:31 <stepcut> it no compile no more
20:52:47 <`John> ok
20:54:40 * stepcut goes to a place with no internet access
21:00:19 * Darius has a module SimulatedMemory, and also a module UnsafeMemory.
21:00:28 * Darius is now thinking of making a module EvilMemory
21:01:00 <ayrnieu> Darius - will it summon nasal demons?
21:01:06 <Darius> Very likely
21:01:12 <ayrnieu> Yay!
22:05:43 <phubuh> hello
22:06:08 <ayrnieu> Hello phubuh.
22:06:41 <phubuh> what's up?
22:07:07 <ayrnieu> Trying to polish off my OpenBSD system so that I can focus on programming.  You?
22:09:10 <phubuh> it's 7 am on christmas eve here, and I'm sitting in front of my computer in a sofa, drinking some tropical juice thing and trying to think of some way to cure my boredom...  I need a hobby or something.
22:09:53 <ayrnieu> Programming?  Writing documentation?  Also, congratulations on the juice.
22:10:09 <ayrnieu> You could learn Lojban, or even Chinese.
22:10:18 <phubuh> it's not very good, I'm just too lazy to put it back in the fridge
22:11:48 <phubuh> programming for the sake of programming is pleasant when you have some idea of what to do -- sadly, I don't
22:12:10 <phubuh> I don't have any problems to solve, so I'm just slacking around, and it's kinda depressing
22:13:14 <phubuh> hmm, but I do have a problem to solve
22:13:18 <phubuh> I just whined about it
22:13:24 <ayrnieu> Write a program in Haskell that serves as a programmable multi-windowed interface.  Develop a protocol that allows another program to communicate to it that it should print text T on window W, that it should make a given window visible, create a given window, etc.  Develop terminal and graphical implementations with identical interfaces.  Then write a simple client program to use them.
22:13:50 <ayrnieu> scriptable multi-windowed interface, rather -- you want all the logic on the controller's side.
22:14:53 <ayrnieu> Make this good enough and other people won't have to waste so time poking at ncurses and various graphical toolkits just get multiple windows of interaction.
22:15:12 <ayrnieu> also, so much time.
22:15:13 <phubuh> interesting, but I'm not sure what you mean.  what kinds of programs would communicate it and want to print text on its windows?
22:15:29 <phubuh> communicate with it, rather
22:15:32 <ayrnieu> phubuh - IRC clients, MUD clients, FTP clients with multiple logical windows
22:15:55 <ayrnieu> phubuh - basically every interesting IRC clients invents its own not-very-different multi-windowed interface.
22:16:02 <ayrnieu> also, IRC client.
22:16:18 <phubuh> ERC properly reuses existing technology :-)
22:16:27 <ayrnieu> phubuh - but people that want to experiment with their own such clients have to deal with subpar interfaces -- some people use sirc's ssfe as a hack.
22:17:19 <ayrnieu> indeed, Emacs serves as a portable and powerful interface to programs.  Yours could serve as well with a little less weight and more amenability to per-client modification.
22:17:45 <ayrnieu> meaning that someone could start writing an IRC client and just include your interface, possibly modifying it slightly to add new commands to the protocol, etc.
22:19:28 <`John> fix HOpenGL so that is doesn't need glibc 2.3.
22:19:32 <ayrnieu> Also, once you have the protocol down you can write an Emacs Lisp interface for it if you like =)
22:21:15 <phubuh> would this include a graphical widget set comparable to wxwindows or gtk, or are the applications using it supposed to be textual (like IRC and MUD clients)?
22:22:13 <ayrnieu> the applications only care about text and logical windows of interaction.
22:22:29 <phubuh> ok, neat
22:22:54 <ayrnieu> The application decides to emit text on a given window, and then forgets about it.  The client tells the application that the user entered some text to some window, and then forgets about it.
22:22:59 <ayrnieu> err, the interface tells the application.
22:23:42 <ayrnieu> well, the interface could implement a history mechanism.  The interface probably also wants to send key-events -- but if the application ignores that part of the protocol, no worries.
22:25:22 <Darius> Very likely
22:25:26 <Darius> er
22:26:00 <Darius> :q <Up> <Enter>, not <ALT-Tab> <Up> <Enter>
22:26:33 <phubuh> I'm more of a C-x C-c <Up> <Enter> man
22:31:57 <`John> though it is possible to create an interface windows desktop with alpha coding , if HOpenGL works correctly.
22:52:45 <ski> Hmm, transformational patterns could also be called inversion patterns (or something like that), right ?
23:10:59 <ddarius> well, not unsurprisingly my initial version using EvilMemory crashed (though that's not why I got disconnected)
23:11:16 <ayrnieu> (cue evil laughter)
23:13:39 <Darius> Anyways, I think I'll mess with that variation filing it in the ugly directory of the good, the bak, and the ugly directories.
23:13:52 <Darius> s/variation/variation later/
23:15:19 <ski> hmm
23:17:08 <Cale> The bak is just copies of what's in the good, but kept on another device for safekeeping. :)
23:17:45 <ski> Cale : U talking to me ?
23:18:10 <Cale> no, I was just commenting on that probable typo.
23:18:18 <Darius> No, no typo.  
23:18:25 <ski> what typo
23:18:55 <Cale> the good, the ba*k* and the ugly directories
23:19:44 <ski> (hmm, movie reference I suppose)
23:20:29 <Cale> I thought "It's either a pretty clever pun, or a very well placed typo."
23:20:44 <ski> mm
23:22:02 <ski> What do you think about transformational patterns .. isn't it some kind of inverse ?
23:51:04 <Darius> well that explains my poor connectivity of late
