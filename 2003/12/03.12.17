00:20:04 <andersca> dennisb: and now it's done
01:27:22 <juhp> hmm, still no ghc-6.2 in the topic... ;)
01:43:16 <Lunar^> Igloo: here?
01:47:09 <Lunar^> Now that we have the syntax in the compiler, I really need to understand how to use Arrows
01:47:16 <juhp> ghc-6.2 rpms are now available :)
01:47:39 <andersca> wooo
01:47:47 <juhp> http://haskell.org/~petersen/rpms/ghc/?C=M&O=D
01:47:48 <andersca> juhp: I have a repo for other haskell things
01:47:53 <andersca> juhp: http://carbon.csbnet.se/haskell/
01:47:56 <juhp> cool
01:48:27 <andersca> oh, you're jpetersen!
01:48:55 <andersca> juhp: norpan had a suggestion about rpm versioning
01:49:06 <andersca> juhp: for example, HSX11-ghc6.0-1.00-0.1.i386.rpm
01:49:16 <andersca> wouldn't it be better to have ghc6.0 in the version instead?
01:49:19 <andersca> instead of in the package name
01:49:20 <juhp> a yum repos nice :-)
01:49:43 <juhp> in the version?
01:49:58 <juhp> then i'd prefer in the release i think
01:50:00 <andersca> something like HSX11-1.00-ghc6.0-0.1
01:50:57 <juhp> how about HSX11-1.00-0.1.ghc6.0
01:51:11 <andersca> fine by me, what do you think norpan?
01:51:12 <juhp> (you can't have a "-" in a version number btw)
01:51:20 <andersca> ok
01:51:30 <norpan> i think it's a problem
01:51:33 <andersca> juhp: would be nice to have some sort of official yum/apt repo with lots of stuff
01:51:43 <norpan> because you want to be able to auto-upgrade those packages
01:51:53 <norpan> but you don't want to auto-upgrade ghc
01:52:00 <norpan> maybe
01:52:02 <juhp> well hopefully ghc should soon be in fedora.us :)
01:52:08 <andersca> juhp: nice
01:52:13 <norpan> at least not between major releases
01:52:34 <norpan> so the names of the extra packages should auto-upgrade exactly when the ghc package will
01:52:40 <juhp> norpan: so that do you suggest?
01:53:21 <norpan> if the ghc is ghc6 then the package's names should contain ghc6 (or similar), but if the name of ghc is just ghc, then the names should not contain the ghc version
01:53:27 <juhp> norpan: ah, so we don't need the ghc<ghcversion> suffix you mean?
01:53:37 <norpan> exactly
01:53:42 <juhp> hmmm
01:53:56 <juhp> well that's a valid point
01:54:06 <norpan> at least if we provide both ghc and the extra packages
01:54:16 <norpan> in yum or apt or whatever
01:54:27 <juhp> the main reason for adding the suffix, was more for humans :)
01:54:36 <norpan> then add it to the release
01:54:53 <norpan> as you suggested
01:54:54 <juhp> right, that was my suggestion above
01:55:00 <juhp> yeah
01:55:16 <juhp> i take your point
01:55:26 <juhp> the package name suffix is ugly ;)
01:55:57 <juhp> ok, will start doing it that way with future packages
01:56:11 <juhp> thanks for the suggestion :-)
01:56:25 <norpan> and if you know which previous versions exist, you can "obsolete" them in the new package
01:56:36 <norpan> then auto-upgrade will probably work
01:56:54 <juhp> ah
01:56:58 <juhp> wait
01:57:25 <norpan> so if you make a HSX11 package, it can "obsolete" HSX11-ghc6.0.1
01:57:47 <norpan> and whatever other package names there are
01:57:48 <juhp> one nice thing about the ugly package-ghc<ghcversion> though is that it allows multiple versions of package installed for parallel installs of ghc
01:58:03 <norpan> that's allowed by rpm anyway
01:58:30 <juhp> but maybe that's a feature people don't need/want very much?
01:59:17 <juhp> i dunno, rpm handles multiple installs of the same package somewhat clumsily in my experience
01:59:46 <juhp> upgrades tend to be akward at best 
02:00:27 <norpan> yes
02:00:35 <norpan> but normally, you'd only want one version
02:00:43 <earthy> `normally'
02:00:49 * earthy has never seen a normal system
02:01:13 <norpan> it makes sense to have ghc5 and ghc6
02:01:24 <norpan> but not ghc6.0.1 ghc6.0.2 and so on
02:01:36 <juhp> i anticipate that in fedora extras say, there would also be one major version of ghc available
02:02:12 <norpan> there is a bit of a bootstrapping problem with ghc though :)
02:02:16 <juhp> btw i put ghc6.0.1 packages up too
02:02:24 <norpan> if you want a source dist that is :)
02:02:55 <juhp> yeah for ghci, you mean?
02:03:35 <juhp> well i think experience will tell us what users want eventually
02:04:32 <juhp> i discussed this a bit with simonm a bit a while back, and he also preferred the more course grained ghc4, ghc5, ghc6 kind of labelling
02:05:21 <juhp> it is a pain though that libraries need to be rebuilt for _every_ subminor release even though...
02:06:05 <norpan> juhp: not only for ghci, you need a haskell compiler to compile
02:06:14 <norpan> so you can't just put the ghc source rpm in
02:06:37 <earthy> juhp: that's what you get for unstable compilers
02:06:47 <juhp> but encouraging people to move onto the latest release is good in general
02:06:50 <earthy> (see also the GCC C++ ABI stuff a while ago)
02:06:55 <norpan> yeah
02:07:01 <norpan> you'd really want a stable abi
02:07:03 <juhp> norpan: yep
02:07:28 <norpan> at least backwards compatible
02:07:31 <earthy> trouble is that GHC is too much in flux to allow for a stable ABI, currently
02:08:44 <norpan> yeah
02:08:48 <juhp> going back to the package naming issue...
02:09:07 <norpan> i think we should go for ghc5 and ghc6 (ghc62 perhaps)
02:09:15 <norpan> maybe not
02:10:22 <juhp> if you have say ghc5 installed and ghc-6.0.1 for example
02:10:22 <juhp> and also to take the earlier example
02:10:22 <juhp> HSX11 say installed for ghc5 and ghc-6.0.1
02:11:34 <juhp> HSX11-<version>-<release>.ghc5 and HSX11-<version>-<release>.ghc601 packages say
02:13:01 <juhp> then when you upgrade to ghc-6.2 and HSX11-<version>-<release>.ghc601^h^h2, you'll have to juggle the HSX11 packages by hand
02:13:02 <norpan> if ghc 5 is named ghc5 then HSX11 should be named HSX115 or HSX11-ghc5 or something
02:13:32 <juhp> for that my current naming scheme is more robust, but ugly i admit
02:13:40 <earthy> the . is illegal in RPM names.
02:14:22 <juhp> earthy: this is not true in fact
02:14:30 <earthy> and for python they do it like  pythonshit-python22-<version>-<release>.rpm
02:14:41 <juhp> you can have ghc6.0.1 if you want
02:14:50 <earthy> juhp: and suffer from it. :)
02:14:55 * earthy knows
02:15:15 <juhp> what harm does the dot do?
02:15:30 <earthy> juhp: all kinds of tools that facilitate dealing with RPM's break
02:15:45 <juhp> hmm, i see
02:15:50 <norpan> they shouldn't fail
02:15:54 <norpan> - is special
02:16:01 <earthy> norpan: but they do. :)
02:16:05 <juhp> that explains the lack of dots in names then
02:16:08 <norpan> then they should be fixed
02:16:24 <earthy> yes, but it is a lot easier to just not use the dot. ;)
02:16:39 <juhp> ok, so no dots ;-)
02:16:53 <norpan> but it's quite easy
02:16:54 <earthy> (and istr there is something of a platform-dependence that is coded in the dots)
02:17:06 <norpan> the name of the packages should follow the same convention as the name of ghc
02:17:14 <earthy> i.e.  foobaar-version-release.i386.rpm
02:17:24 <norpan> earthy: that's only the name of the file
02:17:27 <earthy> (that's why things break when you use dots)
02:17:31 <earthy> norpan: no, it isn't. :)
02:17:31 <norpan> that has nothing to do with the name of the rpm
02:17:42 <earthy> it has to do with the installers.
02:18:02 <norpan> the rpm has a name of the form name-version-release
02:18:10 <norpan> the only thing special is -
02:18:16 <earthy> norpan: no. the rpm has a name of the form name
02:18:29 <earthy> the *file* has a name of the form  name-version-release.arch.rpm
02:18:52 <earthy> and only the last two dashes are special
02:19:00 <norpan>  rpm -q ghc
02:19:02 <norpan> ghc-5.04.3-1
02:19:10 <norpan> this is not the file name
02:19:23 <norpan> maybe this is just a convention though
02:19:24 <earthy> true. it is the package, it's version and it's release.
02:19:28 <norpan> anyway, this is not an issue
02:19:34 <juhp> i had in fact suggested using the hi version number (6.0.1 -> 6001, etc) for libs, but it seemed a bit verbose
02:20:05 <earthy> yah, that seems silly
02:21:03 <earthy> anyway, a sane set of names would be (say)  ghc-6.0.1-3.i686.rpm   wash-ghc6001-4.3.3-3.i386.rpm
02:21:05 <earthy> e.g.
02:21:22 <earthy> that would be in tune with the way RedHat has handled the python transition
02:22:40 <earthy> (ugly, true, but one can deal with it, and it is reasonably obvious)
02:23:50 <earthy> and now I'll go and forget that I've raked up that bit of memory, I was trying hard to forget that mess
02:25:16 <juhp> and it will allow installing multiple versions and avoid needing to rebuild when say ghc-6.2 might become ghc62
02:26:00 <earthy> exactly. have you ever looked at what RH 7 and RH 8 did with python 1 and python 2 and the different versions of python 2?
02:26:26 * earthy had the pleasure of backporting the RH8 python 2.2 stuff to RH7.
02:26:45 <juhp> fun
02:27:16 <earthy> there's a reason I'm trying to forget. :)
02:28:22 <earthy> back to hoare logics over Java
02:28:50 <juhp> earthy: so you prefer wash-ghc6001 over wash-ghc601 say?
02:31:09 <juhp> btw there is at least one package with a dot in it in recent release of RHL
02:31:22 <juhp> openoffice.org :)
02:31:32 <juhp> releases even
02:32:07 <juhp> ok, i going to wonder off home now
02:33:11 <earthy> juhp: hm. :)
02:33:23 <earthy> but, no, I prefer wash-ghc601, really
02:34:25 <juhp> well it is shorter than wash-ghc6.0.1 at least :)
02:34:45 * earthy nods
02:35:01 <earthy> and there's less chance of mistaking version numbers
02:35:11 <juhp> right
02:35:50 <juhp> this should really be summarised up on the wiki somewhere
02:35:55 <earthy> go ahead. :)
02:36:03 <juhp> perhaps the deb guys have been through this too?
02:36:13 * earthy doubts it
02:36:27 <earthy> the deb guys have a *MUCH* better dependency system to work with
02:38:52 <earthy> (interestingly enough, debian takes the open world assumption whereas RedHat takes the closed world assumption, for a distribution...)
03:07:43 <norpan> how does the debian package system know that wash-ghc601 should be upgraded to wash-ghc620?
03:08:04 <norpan> if that's the situation
03:10:01 <juhp> hmm, wash-ghc620 vs wash-ghc62?
03:11:56 <norpan> i mean, how does it know that wash-ghc601 and wash-ghc620 is "the same" package and should be upgraded as such
03:12:24 <norpan> i don't know how the system works
03:16:00 <earthy> norpan: it doesn't.
03:16:02 <ibid> replaces/conflicts/provides
03:16:10 <ibid> is the closest
03:16:12 <earthy> unless you tell it.
03:16:28 <earthy> ibid: replaces is what you need in this case
03:17:20 <norpan> so you'd need a replaces for every earlier version?
03:17:29 <earthy> juhp: wash-ghc62, as the full version number is 6.2
03:17:34 <ibid> earthy: are you sure?  replaces alone, not CPR?
03:17:51 <norpan> something like replaces wash-ghc5042 wash-ghc5043 wash-ghc601 and so on
03:17:55 <earthy> ibid: it doesn't conflict, does it? it doesn't provide the older version, does it?
03:17:58 <earthy> norpan: exactly.
03:18:27 <norpan> the same can be done with rpm then, by using "obsoletes"
03:18:34 <earthy> norpan: exactly.
03:18:57 <norpan> i don't understand how that is not a "closed-world assumption" though
03:19:03 <ibid> earthy: replaces alone is to be used only when two packages contain partially the same files, but one is not a complete replacement for the other
03:19:19 <ibid> earthy: CPR is for the situation where one is a complete replacement
03:19:43 <earthy> ibid: yeah, but then both the old and the new package have to provide the exact same pseudopackage
03:19:52 <ibid> earthy: uh?
03:19:54 <earthy> IIRC
03:20:13 <earthy> ghc-6.2: conflicts ghc, provides ghc
03:20:13 <ibid> earthy: no, i mean, the new package conflicts/provides/replaces the new package
03:20:52 <ibid> if you have two or more equivalent packages, cpr or replaces alone is not the right answer
03:20:55 <earthy> c/p/r the old package, I presume you mean
03:21:02 <ibid> yes
03:21:05 <norpan> ok, so maybe the best thing to do for rpm is to do the same thing, call them ghc62, using "provides ghc" and "obsoletes ghc5042 ghc5043 ghc600 ghc 601"
03:21:07 * earthy nods
03:21:23 <earthy> norpan: something like that.
03:21:30 <earthy> but I'd leave off the provides ghc
03:21:47 <norpan> why, you'd want to be able to do "apt-get install ghc"
03:21:53 <norpan> and get the latest version
03:21:53 <earthy> (as it provides the binary anyway)
03:22:14 <earthy> does that work with current apt-rpm offerings?
03:22:19 <norpan> yes
03:22:23 <norpan> i think so
03:22:31 <earthy> that'd surprise me
03:22:57 <earthy> (unless the apt-rpm databases are pretty *huge*)
03:23:15 <norpan> it works
03:23:28 <earthy> wow. :)
03:23:37 <norpan> apt-get install smtpdaemon
03:23:40 <norpan> Package smtpdaemon is a virtual package provided by:
03:23:40 <norpan>   sendmail 8.12.8-9.90
03:23:40 <norpan>   postfix 2:1.1.12-1
03:23:42 <earthy> I've never much dealt with that part of RPM
03:23:44 <norpan> You should explicitly select one to install.
03:24:03 <earthy> does apt-get install /usr/bin/mail   work then?
03:24:27 <norpan> no
03:24:30 <juhp> aha, that could be nice ghc62 provided ghc = 6.2
03:24:31 <norpan> just virtual packages
03:24:34 <norpan> not files
03:24:42 <earthy> norpan: ah. 'kay. makes a bit of sense.
03:24:47 <juhp> so no more need to rebuild compat packages
03:24:59 <norpan> yeah
03:25:12 <earthy> as I said, I've only dealt with pure RH and RPM
03:25:17 <juhp> s/provided/provides/
03:25:23 <norpan> but obsoletes probably means you cannot have two of them installed at the same time
03:25:50 <norpan> how does that work in debian
03:25:58 * juhp didn't know that apt-get works with aliases like that
03:26:16 <juhp> i guess yum can't though
03:26:21 <norpan> not aliases, virtual packages
03:26:31 <juhp> right
03:27:09 <det> Can someone recomend a cheap domain registrar ?
03:27:13 <norpan> joker.com
03:27:28 <norpan> cheack and easy
03:27:35 <norpan> 12 usd for com/net/org
03:27:39 <norpan> cheap
03:27:49 <ibid> joker is spammer-friendly, i hear
03:27:53 <ibid> i use gandi.net
03:27:57 <det> Anyone have recomendations for/against godaddy.com ?
03:28:11 <det> I have used gandi.net in the past, liked it
03:28:13 <ibid> and i can recommend gandi.net :)
03:28:21 <norpan> ibid: how is a name registrar spammer friendly?
03:28:30 <ibid> norpan: don't know the details
03:28:53 <ibid> (there are several registrars who are spammers themselves, though)
03:28:56 <norpan> joker.com is cheaper than gandi.net instead :)
03:29:22 <earthy> ah, but gandi.net is nicely european and not governed by US law
03:29:54 <norpan> joker.com is also european
03:30:09 <ibid> not significantly cheaper, mainly due to currency
03:30:23 <norpan> 12 usd vs 12 euro
03:30:35 <earthy> norpan: yeah, I see.
03:30:38 <norpan> 12 use = 9.87 euro
03:30:49 <norpan> not much either way
03:31:19 <det> gandi.net is 12 ueros
03:31:26 <det> does that mean like $14 ?
03:31:50 <norpan> 14-15
03:32:04 <norpan> it's not a big difference
03:32:48 <earthy> okay, I have good experiences with gandi.net, but joker.com seems good as well
03:33:08 <phubuh> I use godaddy, they're great
03:33:15 <norpan> i've had my domain at joker.com for three years without problems
03:33:55 <det> I guess I can always transfer ..
03:34:07 * earthy nods
03:34:09 <det> godaddy is half the price of gandi
03:34:14 <det> godaddy it is :/
03:34:35 <det> eww, they try to sell me stuff for 3 pages
03:34:35 <earthy> how the hell do they manage that?
03:34:39 <det> while registering
03:34:44 <det> $8
03:34:49 <det> vs 14-15 for gandi
03:34:53 <det> almsot half
03:35:06 <det> well, 8 for .com and
03:35:06 <earthy> yeah, but they have to pay something like $10 to $12 *themselves*!
03:35:10 <earthy> IIRC
03:35:29 <phubuh> maybe that's why they have to sell you stuff for three pages :-)
03:35:42 <det> yeah, was typing something to that effect :)
03:35:55 <det> how muhc is joker.com
03:36:01 <earthy> det: $12
03:36:32 <det> gandi.net used to be 11 Euros when Euro was the same as a dollar
03:36:47 <earthy> anyway, also look at www.regselect.com and http://cyber.law.harvard.edu/people/edelman/registrar-choice/registrars-chart-relative.html
03:39:51 <earthy> (there is a very good reason for me to use gandi by the way: should a dispute go to court it'd be in Paris... for all registrars that is the court closest to me, physically)
03:41:29 <det> oh
03:42:05 <earthy> given that I own reddwarf.org, that *is* a consideration. :)
03:42:41 <det> :)
03:45:09 <det> where do you live?
03:46:24 <earthy> .nl
03:46:47 <det> so that's why you arent using ocaml ;)
03:47:19 <earthy> ;)
03:47:31 * earthy actually somewhat dislikes ml
03:47:57 <det> why ?
03:48:17 <det> I am really starting to like SML
03:48:18 <earthy> no overloading, ugly syntax for modal typing
03:48:48 <earthy> not a bad language otherwise
03:49:01 <earthy> but I prefer haskell. feels cleaner.
03:49:22 <det> modal typing ?
03:49:33 <earthy> det: parametric polymorphism. :)
03:49:43 <earthy> sorry, been reading too much algol 68 stuff lately. ;)
03:50:10 <det> ahh, that is a weak issue :)
03:50:45 <det> datatype 'a list = Nil | Cons of 'a * 'a list
03:51:11 <det> isnt much worse than data list(a) = Nil | Cons a (list a)
03:51:11 <earthy> data List a = Nil | Cons a (List a)
03:51:27 <earthy> it's just a bit cleaner.
03:51:31 <det> agreed
03:51:36 <det> but a very minor issue :)
03:51:44 <earthy> yeah. it's all minor
03:51:54 <earthy> I prefer haskell, 's all
03:52:25 <earthy> you know when you have clothes that just about fit, but not quite? such as when you've lost weight, e.g.?
03:52:41 <earthy> ml feels like that. ;)
03:52:50 <det> well, ml has some nice implementations
03:52:50 <phubuh> Are you implying ML is for fat people?"
03:52:57 <earthy> phubuh: no. ;)
03:53:01 <det> ghc is teh suck ;)
03:53:20 <phubuh> Hey, GHC is great!
03:53:28 <earthy> (I could've said `such as when you've gained weight' but I recently noticed my clothes have been getting looser. ;))
03:54:34 <det> phubuh: wasnt very practical last I looked at it
03:54:49 <det> whereas Mlton is getting nicer every day ..
03:58:38 <earthy> as is ghc
03:58:49 <earthy> no sense in language holy wars
03:59:27 <lambdabot> lambda-calculus > *
04:00:28 <det> ugh, I just spent 2 minutes trying to C-x C-c before realizing I was in vim
04:03:25 <earthy> lambdabot: I know my share of lambda calculus. I still prefer less ascetic languages. :)
04:03:25 <lambdabot> Sorry, I'm not a very smart bot yet, try "lambdabot: @listcommands"
04:03:39 <earthy> owh, cool. :)
04:13:16 <TripleDES> hi
05:15:15 <shapr> hello
05:29:09 <shapr> hello forrester
05:31:24 <forrester> hey ho
06:07:18 <SyntaxNinja> 'mornin
06:19:06 <Igloo> Hiyas
06:19:25 <SyntaxNinja> how's it going, Igloo
06:19:31 <Igloo> I'll tell you in a minute
06:19:35 <SyntaxNinja> OK
06:21:45 <Igloo> Good on balance. But 6.2 broke my HOpenGL examples
06:21:51 <shapr> oops
06:24:46 <SyntaxNinja> stinks :(
06:24:50 <SyntaxNinja> hej sha
06:24:53 <SyntaxNinja> shapr
06:24:54 <forrester> do the haskell compilers create code that is as fast as a c-implementation of the same function ?
06:24:57 <shapr> hi Nin
06:25:03 <shapr> forrester: nope
06:25:22 <shapr> you can get GHC to output C source from Haskell source
06:25:24 <Igloo> They do sor some things
06:25:30 <shapr> but it won't be as fast as if you hand-tuned it.
06:25:36 <forrester> so there would be work to do in this field 
06:26:06 <forrester> but does it run at the same speed as if natively impemented ?
06:26:23 <forrester> ok
06:26:51 <shapr> on the other hand, the speed at which you can develop Haskell is much higher than that for C
06:27:06 <SyntaxNinja> forrester: looking for a thesis topic or something? :)
06:27:19 * earthy prays to the lord for a big red marker that will automatically highlight all the occurences of the word `namely' to people trying to write english
06:27:22 <shapr> Igloo: which things are just as fast?
06:27:33 * shapr namelys earthy 
06:28:12 <Igloo> Things like arithmetic on Ints will be
06:28:32 <forrester> even in a very complex function ?
06:28:49 <forrester> are lists optimized away ?
06:29:50 <SyntaxNinja> earthy: are you saying that people trying to write English over-use the word 'namely'?
06:30:31 <shapr> oh well
06:30:33 <SyntaxNinja> heh
06:31:00 <earthy> syntaxninja: here, at least, they're using it in an eccessively dutch way
06:31:33 <earthy> (err... excessively? :))
06:31:40 <highlyInterested> hi! I'm highly interested, but have no attention span!!!
06:31:44 <highlyInterested> Can anyone help me?!?!?
06:31:46 * highlyInterested runs around!!
06:31:48 * shapr laughs
06:32:02 * shapr laughs more
06:32:05 * earthy hits syntaxninja ;)
06:32:22 <SyntaxNinja> :P
06:32:25 <shapr> that deserves a spot on the QuotesPage
06:32:52 <SyntaxNinja> hehe OK but leave out the context :)
06:33:22 <shapr> yes, just the highlyInterested stuff
06:33:33 <shapr> should I remove your hostname also?
06:34:00 <SyntaxNinja> shar: yeah, but you can leave the username in :)
06:34:13 <shapr> ok
06:36:03 <shapr> brb, switching servers
06:37:15 <shapr> seems the ipv6 server was going down
06:42:38 <SyntaxNinja> shapr: is sweden dark now?
06:42:55 <shapr> very
06:43:08 <SyntaxNinja> how much sunlight do you get?  is it very snowy?
06:43:12 <shapr> SyntaxNinja: install sunclock
06:43:34 <shapr> I warn you, it's depressing.
06:44:10 <shapr> today I slept a bit late, so I got about an hour of twilight after waking up.
06:44:29 <SyntaxNinja> yuck
06:45:34 <shapr> summers are great, sun shines in your eyes at 3am, in the middle of a coding binge
06:48:07 <SyntaxNinja> I'm looking at sunclock
06:48:23 <SyntaxNinja> relatedly, I noticed that Mark has a binary clock on his desk (a real one!) the other day.
06:55:34 <shapr> cool!
07:05:12 * earthy sees the afternoon twilight play on the red bricks of the building
07:05:16 <earthy> nice, really
07:06:31 <SyntaxNinja> :)\
07:56:44 * shapr wields his +2 Throwing Lambda of Doom
07:58:17 * shapr checks prices on Clay Skolems
07:59:40 <Smerdyakov> Are you familiar with Skolem or Skolemization at all, or do you just like the sound of it? :)
07:59:49 <shapr> both
08:01:36 <Lunar^> shapr: for c in zip([address, address2, address3], addresses)]: setattr(contact, c[0], c[1])
08:01:40 <Lunar^> shapr: python ;(
08:01:53 <earthy> skolemization... skolemization... I've heard that before I think...
08:02:02 <shapr> http://mathworld.wolfram.com/SkolemizedForm.html
08:02:19 <earthy> isn't that like inventing fresh variables for existential quantifiers?
08:02:44 <shapr> Lunar^: you may find iterators a bit more natural, rather than 'for c in cs'
08:02:47 <earthy> and then replacing the existentially quantified bound variable with the fresh variable? :)
08:02:56 <Smerdyakov> No.
08:03:06 <Smerdyakov> You have to use new function symbols.
08:03:30 <Smerdyakov> To express dependencies on previous quantifiers.
08:03:37 <earthy> ah, right. true.
08:04:03 <Lunar^> shapr: I quite like for c in cs... remember me mapM
08:04:09 <earthy> what I said only works if the quantifiers are independent (such as, e.g., when you have just 1 quantifier)
08:05:18 <Smerdyakov> Well, and introducing new variables isn't meaningful in the usual formulations.
08:06:06 * earthy nods
08:06:18 <earthy> they have to be (possibly nullary) function symbols
08:06:22 <earthy> it's coming back to me now
08:16:01 <ejt> how do I go about profiling a haskell prog ?
08:34:12 <shapr> ejt: GHC has built-in profiling options
08:34:31 <shapr> ejt: for space usage, there are some other profiling programs
08:39:32 <ejt> shapr: thanks
08:39:49 <ejt> just seeing if I can improve the chess program in haskell-libs
08:45:51 <shapr> spiffy!
08:46:15 <shapr> the formatting of the chess source code is rather hard to understand, imho
08:46:32 <shapr> but I guess that's not surprising since the guy who wrote it is blind.
08:53:09 <ejt> I've just been 'cleaning' the code so far, not improving it much as yet
08:53:34 <shapr> iirc, you already have write priveleges on haskell-libs.sf.net, yes?
08:53:46 <ejt> I think I declined
08:54:06 <ejt> I'd rather generate patch sets for now
08:55:00 <shapr> it would be easier for me if you committed the patches yourself
08:55:09 <shapr> I'm a great fan of the cvs-wiki idea
08:55:34 <ejt> lets have this argument when I think I have something then ;)
08:55:43 <shapr> fair enough :-)
08:55:46 * shapr laughs
08:56:19 * shapr surreptitiously adds ejt to the project
08:56:27 <shapr> ok, just kidding ;-)
08:58:55 <ejt> hmm ... I get Can't find module System', but only when I build with -prof -auto-all ?
09:16:54 <Igloo> SyntaxNinja?
09:18:05 <Igloo> Oh well, ghc 6.2 is in HE incoming and doesn't look like it's moving
09:19:17 * Igloo goes out
10:09:39 <kosmikus> committed ghc-6.2 ebuilds to portage tree, Gentoo users please test
12:23:12 <SyntaxNinja> Igloo: yuck
12:23:14 <SyntaxNinja> ...
12:23:20 <SyntaxNinja> damn that HE!
12:24:50 <SyntaxNinja> btw, this BS seems to be a mini-dinstall bug that the author hasn't had time to track down.
12:26:19 <SyntaxNinja> looks good. ghc6.2 for all!
15:11:48 <Igloo> Hurrah!
15:12:07 <Igloo> So, any problems (or successes!) with the 6.2 debs?
15:13:55 <SyntaxNinja> Igloo: installed fine on my i386 laptop. I'll try it on my sparc when I get home.
15:13:57 <Pseudonym> Yay, 6.2.
15:14:45 <Igloo> Cool, ta
15:14:57 * Pseudonym apt-gets
15:15:10 * Igloo mutters about broken buildds and unrecovered machines
15:15:21 * SamB wonders why hugs doesn't like infinite types
15:15:42 <Pseudonym> Neither Hindley nor Milner like infinitie types.
15:16:08 <Smerdyakov> SamB, what infinite type do you want?
15:16:27 <SamB> Pseudonym: I guess they don't like Y either then?
15:18:28 <SamB> I thought Haskell was based partly on Lambda Calculus?
15:19:26 <SamB> it supports infinite data structures, why not infinite types?
15:21:22 <Darius> Because people typically don't complain about undecidable programs, they do about undecidable type checking.
15:22:34 <Darius> And at any rate, experience with some forms of infinite types in other languages suggests that they cause more problems then they solve.
15:35:18 <Smerdyakov> SamB, what infinite type do you want?
15:35:39 <Pseudonym> Types based on regular trees are perfectly decidable, in O(n^2) time.
15:35:54 <Pseudonym> The problem is that they cause more problems than they solve.
15:36:29 <Pseudonym> Many common kinds of programmer mistake would be typable if types could be infinite.
15:36:45 <Smerdyakov> And the dead would return to haunt us anew.
15:36:53 <Pseudonym> Precisely.
15:37:06 <Pseudonym> Though Robin Milner isn't quite dead yet.
15:37:35 <Pseudonym> SamB: If you want "infinite types", you probably want to use newtype.
15:37:46 <Pseudonym> That's what it's there for.
16:00:59 <Pseudonym> http://haskell.org/hawiki/WayOfTheFuture#preview
16:01:02 <Pseudonym> Sorry.
16:01:08 <Pseudonym> http://haskell.org/hawiki/WayOfTheFuture
16:01:16 <Pseudonym> This kind of question annoys me somewhat.
16:02:24 <Pseudonym> The only sensible answer to the question "Why hasn't someone done X?" is "Yes, why haven't you?"
16:08:37 * Darius uses unsafeCoerce# seriously.
16:19:01 <Smerdyakov> Pseudonym, why?
16:19:21 <Pseudonym> Well who is "someone" in this case?
16:19:35 <Pseudonym> In the open source world, the only person who will do X is someone who needs it done.
16:20:05 <Pseudonym> If you're asking, you probably want it.  If it hasn't been done before, you're probably the first.
16:23:53 <Smerdyakov> I don't agree with that. It's valid to wonder why someone hasn't yet done something that seems like it would be wanted by many people.
16:24:25 <Pseudonym> It's valid to wonder, I'll agree with that.
16:24:46 <Smerdyakov> And valid to ask why....
16:25:29 <Pseudonym> I also, I suppose, object to the implication that if there isn't a wiki written in it, it's not a Language of the Future(tm).
16:26:11 <Smerdyakov> But this is a separate concern. This person (fictional or not, I don't know) didn't even imply that it should be created.
16:27:10 <Pseudonym> Another thing, I suppose, is that it exhibits the classic advocacy strawman.  If a language is good, you should use it exclusively.
16:27:26 <Pseudonym> Haskell is good, therefore Python is...?
16:28:03 <Smerdyakov> Classical Straw Man Theory
16:28:27 <Pseudonym> Haskell advocacy is highly relativistic.
16:33:56 <ayrnieu> Pseudonym - I don't follow you.
16:34:19 <Pseudonym> Good.  You shouldn't.  Think for yourself, I say.
16:34:22 <Pseudonym> Choose your own path.
16:35:01 * ayrnieu reads that as 'nevermind; carry on', and does so.
16:35:50 <Pseudonym> Good choice.
16:35:59 * Pseudonym hasn't had any caffeine today
16:36:05 <Pseudonym> Apologies if I ranble incoherently.
16:36:16 <Pseudonym> Pr if I ramble, but mostly if I ranble.
16:36:36 * Pseudonym karnt eevn typ
18:46:11 <SamB> I didn't say anything about doing X. I was talking about doing Y.
18:46:26 <Pseudonym> Huh?
18:46:54 <Pseudonym> No, I was referring to the wiki link.
18:47:16 <Smerdyakov> We were actually talking about how bad you smell, SamB.
18:47:42 <SamB> Smerdyakov: I don't have an olfactory sensor hooked up to my computer...
18:48:06 <SamB> ... and I don't think IRC supports that, either
18:48:16 <Pseudonym> You need the right drivers.
18:52:11 * SamB noticed that http://en2.wikipedia.org/wiki/Lambda_calculus has real lambdas in it
18:52:27 <Pseudonym> Well, aren't they special.
18:52:57 <Smerdyakov> I bet they think that means they're cool now.
18:52:57 <SamB> The FOLDOC entry just has \s
18:53:26 <Pseudonym> I feel so inadequate.
18:54:27 <SamB> Pseudonym: inadequate?
18:54:49 <Pseudonym> Yes.  We don't have real lambdas.
18:54:57 <Pseudonym> We have no real lambdas today.
18:55:27 <SamB> well, you don't have Y combinators either, so its okay
18:55:31 <Smerdyakov> I remember a time when lambdas were lambdas.
18:55:47 <Smerdyakov> SamB, are you some kind of Lispschemer?
18:56:11 <SamB> Smerdyakov: no, I just have odd reading habbits
18:56:35 <mgoetze> what's so special about $\lambda$? :)
18:57:32 * Pseudonym will BBIAB.  Need to visit a government office.
18:57:55 <Pseudonym> Just have to sort out a misunderstanding.  She was dead when I got there, honestly.
18:58:12 <mgoetze> hm :)
19:03:48 <SamB> mgoetze: you mean besides being imperative?
19:04:45 <mgoetze> that's special?
19:04:55 <SamB> well, not exactly.
19:07:34 <SamB> I guess functional isn't exactly the right paradigm for documentation ;-)
19:22:06 <ayrnieu> Sam - no, just that the GHC libraries suck.
19:22:13 <ayrnieu> GHC library documentation, I mean.
19:28:43 <SamB> I would like to see a tutorial done in the functional paradigm ;-)
21:02:33 <Darius> Igloo: I was wondering why you coded the pretty-printer that way when I first saw it.
21:18:52 <harsha123> hello #haskell
22:15:23 <shapr> good morning #haskell!
22:50:39 <harsha123> hello shapr 
22:52:19 <shapr> hi harsha123, what's up?
22:57:36 <harsha123> shapr: nothing much.. setting up a CVS server.. 
23:01:53 * shapr reads about 2.6.0 changes
23:02:15 <shapr> chattr +S is interesting, make writes to that dir synchronous instead of buffered
