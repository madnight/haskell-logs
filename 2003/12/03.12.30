04:39:49 <ejt> anyone here who could give me some help with State monads please ?
04:42:29 <ibid> perhaps
04:44:08 <ejt> hang on, my laptops dying ...
04:46:30 <ejt> ok, there's a short explanitory program at people.sistina.com/~thornber/haskell/state-monad.hs
04:49:49 <BoB4> hey all
04:49:54 <BoB4> i love haskell btw
04:50:21 <ejt> you're in the right place then
04:50:42 <BoB4> yeah i made my own irc bot in haskel its so cool
04:51:09 <BoB4> type'/insult me' and it will insult you
04:51:20 <BoB4> oops
04:51:25 <BoB4> type'-insult me' and it will insult you
04:51:44 <phubuh> -insult me
04:51:50 <BoB4> Your the one dog i know
04:52:07 <BoB4> heh
04:52:08 <ejt> hmm, in insteresting insight into your psyche
04:52:30 <BoB4> hey long nights and boredom creates time for such activites
04:52:53 <BoB4> theres a really good insult
04:52:55 <BoB4> umm where is it
04:53:04 <ejt> -insult me
04:53:13 <BoB4> undeclared type definition
04:53:15 <saba> !prelude rev
04:53:21 <BoB4> shit
04:53:24 <BoB4> hang on
04:53:25 <ejt> lol
04:53:32 <saba> Which one is the haskell bot again?
04:54:08 <andersca> hej shapr
04:54:12 <shapr> hej andersca 
04:54:15 <shapr> wassup?
04:54:36 <BoB4> errr dam it got a ghey type error to debug god dam haskel
04:55:05 <shapr> BoB4: that's not a nice way to express yourself
04:56:00 <BoB4> what does it mean when it says 'explicit class call'
04:56:27 <shapr> do you know about typeclasses?
04:56:34 <BoB4> yeah
04:57:04 <BoB4> grrr my haskel box just frooze
04:57:10 <saba> http://www.tfh-berlin.de/~panitz/hopengl/skript.pdf <- Y'know, Opengl in haskell doesn't look that bad
04:57:57 <BoB4> hmm now the stupid thing keeps crashing without giving errors
04:58:11 <BoB4> is there a haskel error log file for hugs?
04:59:15 <shapr> BoB4: it's often more productive to break the problem down into pieces and then get each piece working separately.
04:59:28 <shapr> then you can stick the pieces back together once they all work by themselves.
04:59:36 <BoB4> it was working before ok i split it up
04:59:54 <BoB4> -insult me
05:00:04 <shapr> huh?
05:00:14 <BoB4> ok thats working
05:00:21 <saba> Hehe
05:00:36 <BoB4> -insult me
05:00:42 <BoB4> undeclared type definition
05:00:51 <BoB4> hmm
05:00:57 <BoB4> oh great it just frooze
05:02:02 <BoB4> -insult me
05:02:05 <BoB4> You smell like cheese
05:02:08 <BoB4> oh woot
05:02:19 <BoB4> now just have to change it back
05:04:21 <BoB4> how is haskell at managing sockets?
05:04:48 <shapr> just fine
05:05:12 <BoB4> is it hard to program?
05:05:17 <saba> shapr, have you played with ocaml?
05:05:24 <BoB4> compared to other languages
05:05:27 <BoB4> like c#
05:05:59 <shapr> saba: no, I haven't. I know phubuh uses both Haskell and OCaml, you may want to ask him.
05:06:22 <saba> shapr, ta. I've been playing around with ocaml, and although it lakes haskells elegance, it seems OK
05:07:13 <phubuh> the only obvious problem with ocaml is the lack of type classes
05:07:34 <phubuh> other than that, it's a great language
05:07:50 <shapr> BoB4: in most cases, Haskell is about the same for managing sockets. Personally, I find sockets easier in Haskell.
05:07:58 <shapr> I am biased though.
05:08:06 <BoB4> heh
05:08:12 <saba> It seemed a little fiddly, and I dont really like how it spits out stuff after you feed it something, but it seems OK. Damn fast it is
05:11:48 <phubuh> what do you mean spits out stuff after you feed it something?
05:13:12 <saba> # 2+2;;
05:13:13 <saba> - : int = 4
05:13:19 <saba> I dont like the leading junk, :P
05:13:23 <phubuh> oh, heh
05:13:56 <saba> Do you get the annoying ^[[A^[[D's and stuff when you try to move the cursor around in ocaml's interpreter?
05:14:07 <phubuh> yeah, it doesn't use readline
05:14:20 <phubuh> I think you're supposed to use ledit
05:15:14 <saba> I dont follow
05:15:34 <phubuh> ledit is another application that brings readline-style editing to programs that don't have it themselves
05:15:41 <phubuh> it's in apt if you use debian :-)
05:16:06 <saba> Is it a transparent library or something? Just apt-get (or in my case, emerge it :)) and stuff works? :)
05:16:23 <phubuh> no, invoke ocaml like "ledit ocaml"
05:16:35 <saba> Hurm, fussy.
05:16:46 <phubuh> or just use it from emacs :-)
05:17:05 <saba> Heh, I should get around to installing that, atm just (ab)use vim
05:34:49 <ejt> which module is 'strict' in ?
05:42:09 <ejt> oh, maybe I mean $! :)
07:07:39 <ibid> bahbahbah
07:08:17 <ibid> why is ghc not honouring -keep-hc-files (and yes, it does create hc files, at least based on an unrelated error message...)
07:08:21 <ibid> 6.2, that is
07:08:49 <ibid> could it be that 
07:08:53 <ibid> äsh
07:09:00 <ibid> at least with --make i have that problem
14:35:30 <maihem> I've had a thought about the implementing of MonadST via pure functional code in haskell. It involves  A proposal for records in Haskell and another feature not present. Thing is I don't know if it is a reasonable feature.
14:35:53 <maihem> http://research.microsoft.com/~simonpj/Haskell/records.html - A proposal for records in Haskell
14:47:41 <maihem> I thought I'd think some more before embarrasing myself by finishing the description. And I was right. I'm an idiot.
14:50:51 * det points and laughs
15:11:51 <delYsid> hi
15:11:57 <delYsid> Can anyone help me with parsec and ghc6?
15:12:40 <`John> installing ghc6?
15:13:19 <ayrnieu> delYsid - I probably can't, but problem do you have?
15:13:19 <delYsid> I am trying to compile an old project of mine with ghc6
15:13:20 <delYsid> and I get
15:13:23 <delYsid> undefined reference to `TextziParserCombinatorsziParsecziPrim_zdWOk_entry'
15:13:27 <delYsid> any ideas?
15:16:34 <delYsid> do I need some args to ghc to make it link with parsec code?
15:16:51 <Smerdyakov> I know the problem. That name isn't English, but Haskell is.
15:17:33 <delYsid> huh?
15:17:49 <Smerdyakov> Combinatorszi
15:17:54 <Smerdyakov> You thought you could hide your Italian heritage!
15:18:10 <delYsid> you are not being helpful, you know...
15:18:31 <delYsid> And I dont have anything to do with Italy...
15:19:23 <Smerdyakov> ;P
15:20:26 <delYsid> ejt: Erm, maybe you know!
15:20:43 <delYsid> ejt: I am trying to compile your checkin, but it fails with a gazillion of Parsec related linkage problems.
15:21:40 <Igloo> Have you tried "-package data" or "-package text" or whichever package it's in?
15:21:52 <Darius> Well, shapr got a similar problem with lambdabot, but compiling two programs (one written against 5.04.2 and one against 6.0 I think) using Parsec, both compiled and linked fine.
15:24:18 <Darius> The only other thing I could think of is possible differences between the Parsec distributed by Daan and the one in the heirarchical libs.
15:26:46 <delYsid> I just installed ghc6.
15:27:16 <delYsid> aha, -package text helped
15:27:17 <delYsid> thanks
15:27:38 <delYsid> strange
15:27:44 <delYsid> it compiled the .o fine
15:27:52 <delYsid> it complained only during the linker stage.
15:28:00 <delYsid> shouldnt it somehow autodetect that a certain package is used?
15:38:18 <Darius> Did you compile with --make?
15:40:14 <delYsid> no, we have a self-made makefile.
15:40:30 <delYsid> well, its probably that, I was just wondering.
16:27:55 <swarnar> test
16:28:31 <swarnar> bye
