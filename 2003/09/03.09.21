01:45:06 <shapr> @arr
01:45:06 <lambdabot> Drink up, me hearties
01:51:07 <shapr> @arr
01:51:08 <lambdabot> Smartly me lass
01:52:15 * vegai chuckles.
02:01:55 <shapr> hi inhahe
03:16:26 <phubuh> g'morning, hackers
03:48:57 <shapr> @arr
03:48:58 <lambdabot> Get out of me way, yeh landlubber
03:49:20 <shapr> @arr
03:49:21 <lambdabot> Is that a hornpipe in yer pocket, or arr ya just happy ta see me?
03:55:29 <phubuh> hej shapr :-)
03:56:30 <phubuh> the other night, i actually bothered to read about monads -- the FUD kept me from doing it earlier -- and now i think i understand them!
03:56:55 <shapr> hej phubuh 
03:56:58 <shapr> yay!
03:57:04 <shapr> see, that wasn't so hard was it?
03:57:12 <phubuh> surprisingly easy :)
03:59:07 <shapr> does this mean you're up for writing a lambdabot plugin now? :-)
03:59:29 <phubuh> i thought about that, actually, but i couldn't come up with any ideas
04:01:13 <c4t> hi
04:01:15 <c4t> :)
04:01:26 <phubuh> hi, c4t!
04:02:03 <c4t> hi phubuh :)
04:02:26 <shapr> hello c4t
04:02:43 <c4t> hi there shapr
04:03:33 <c4t> whats new arround here 
04:04:06 <shapr> @arr
04:04:06 <lambdabot> Ahoy mateys
04:04:10 <shapr> lambdabot is a pirate now.
04:04:22 <shapr> nothing else that I know of
04:04:44 <c4t> i remember that 
04:04:47 <c4t> :)
04:05:00 <shapr> that's all that comes to mind
04:05:09 <shapr> oh, I got hold of some DNS client code
04:05:26 <shapr> from Tomas Zielonka
04:05:31 <shapr> er Tomasz
04:05:52 <phubuh> @dns google.com
04:05:52 <lambdabot> Sorry, I don't know the command "dns", try "lambdabot: @listcommands"
04:05:54 <phubuh> might be useful :)
04:06:03 <shapr> oh, I hadn't thought of that
04:06:43 <c4t> i see that something is starting to born, maybe its an idea :)
04:08:25 <shapr> oh, this is cool code, it seems to read/write IPv4 packets directly
04:08:38 <c4t> nice
04:08:51 <c4t> where do you got it 
04:08:53 <c4t> ???
04:08:53 <phubuh> dns is crazy like that; i don't think you can do it without dabbling with raw sockets
04:09:03 <shapr> I sent email to Tomasz Zielonka and asked him for it.
04:09:11 <shapr> but it has a BSD license, so I can send it to you too
04:09:16 <phubuh> ... as a result, dns clients need raw socket priviledges, which on unix systems means root :/
04:09:18 <shapr> and I can put it into hlibs
04:09:29 <phubuh> (i think)
04:09:33 <shapr> he also said he had some udp over tcp code
04:09:33 <phubuh> brb
04:10:22 <shapr> c4t: do you want a copy of the code?
04:10:26 <c4t> yup
04:10:27 <c4t> pls
04:10:31 <shapr> what's your email?
04:10:39 <c4t> semaj@vianw.pt
04:11:18 <c4t> and thanks for the time of sending the email
04:11:19 <c4t> :)
04:11:28 <shapr> sure
04:11:47 <c4t> well lunch time 
04:11:53 <c4t> be back in 30 min
04:11:59 * c4t is away: lunch
04:13:09 * shapr is away: house cleaning!
04:17:49 <phubuh> back
04:19:05 <atom-z> i have an IO [(string,string)]... how do i manipulate it? (head and tail produce errors)
04:20:09 <phubuh> do (first, second) <- thing, i think
04:21:48 <phubuh> gnome 2.4 is quite nice
04:22:16 <atom-z> ok
04:38:49 <ludde> how can I calculate (1 / a) mod b in haskell ?
04:44:40 <Rafterman> do you mean (a^-1) mod b?
04:47:14 <Igloo> What's the difference?
04:47:38 <Igloo> ludde: What types are a, b and the result?
04:52:08 <Rafterman> (1/a) mod b implies you're doing integer division (normal division and then drop the decimal part) whereas a^-1 mod b implies you want the inverse of a mod b
05:02:49 <Xcal> hi all
05:20:03 <phubuh> $ ghc hmm.hs
05:20:03 <phubuh> /usr/lib/ghc-6.0.1/libHSrts.a(Main.o)(.text+0xd): In function `main':
05:20:03 <phubuh> : undefined reference to `__stginit_Main'
05:20:03 <phubuh> /usr/lib/ghc-6.0.1/libHSrts.a(Main.o)(.text+0x2e): In function `main':
05:20:03 <phubuh> : undefined reference to `Main_zdmain_closure'
05:20:05 <phubuh> collect2: ld returned 1 exit status
05:20:08 <phubuh> huh?
05:20:50 <phubuh> using ghci works
05:24:10 * shapr boings
05:26:18 <norpan> phubuh: you must have a module called Main with a function called main to be able to compile a program
05:26:33 <phubuh> aah! mine was called "Foo" :-)
05:27:17 * c4t is back (gone 01:15:19)
05:27:19 <c4t> back
06:09:13 * c4t is away: working
06:09:20 * c4t is away: woirking
07:09:41 <shapr> @arr
07:09:41 <lambdabot> Ahoy mateys
07:09:58 <shapr> @yow
07:09:59 <lambdabot> Impudent..  Yet possessing a certain ALUMINUM SILICATE
07:09:59 <lambdabot>  overbite....Needs REDDY-WHIP!!
07:12:17 <shapr> yay, darcs updates
07:43:52 * shapr bounces
07:45:37 <phubuh_> hi!
07:46:16 <phubuh_> how do i use a State monad and the IO monad in the same block?
07:48:47 <Igloo> Use StateT to transofmr the IO Monad
07:49:08 <Igloo> You'll need to apply liftIO to any calls to teh IO Monad you make
08:12:26 * c4t is away: working
08:13:28 <shapr> wheee
08:13:46 * Arnia watches shapr bounce
08:13:58 * shapr bounces with great fervor
08:14:14 * Arnia has fun currying javascript
08:14:28 <shapr> I've gotten a large number of microsoft mail virus spams lately
08:28:09 <shapr> hey Arnia, seen lambda.weblogs.co?
08:28:11 <shapr> er .com
08:28:24 <Arnia> No. What is it?
08:29:39 <shapr> it's a programming weblog, but the top post today is about the functional language facets of JavaScript
08:29:45 <Arnia> Hehehe :)
08:29:55 <Arnia> I was having fun the past few days with closures and currying
08:29:58 <Arnia> Want to see my code?
08:35:16 <shapr> sure
08:36:46 <shapr> neat
08:37:01 <shapr> I wonder if there's an FP javascript project online...
08:38:05 <Arnia> I was thinking about trying to implement Haskell as a scripting language using Javascript
08:40:23 <phubuh_> javascript is a very neat language, actually.
08:40:46 <phubuh_> people tend to dismiss it as another vbscript, though
08:41:08 <Arnia> Well, its a bit of a weird language. It uses closures to simulate objects for example
08:41:34 <phubuh_> so does SICP :)
08:41:39 <Arnia> Is that what O'Haskell does btw?
08:43:15 * shapr doesn't know
08:43:24 * phubuh_ either
08:43:46 <Arnia> It seems like a nice way to extend the Haskell semantics to allow some object features
08:47:45 <shapr> you get some of that with partial evaluation
08:47:54 <shapr> at least, I do :-)
08:48:25 <Arnia> Hehe. Just thoughts for playing with ;)
09:53:03 <shapr> wheee
09:53:07 * shapr bounces cheerfully
10:19:29 <Xcal> rehi all :-)
10:45:41 <shapr> @arr
10:45:41 <lambdabot> Arrr!
10:45:43 <shapr> @arr
10:45:43 <lambdabot> Arrr!
10:45:47 <shapr> @yow
10:45:48 <lambdabot> Yow!!  It's LIBERACE and TUESDAY WELD!!  High on a HILL... driving a
10:45:48 <lambdabot>  LITTLE CAR...  I wanna be in that LITTLE CAR, too!!  I wanna drive off
10:45:48 <lambdabot>  with LIBBY and TUESDAY!
10:46:14 * Arnia hands shapr a seagull
10:46:27 * shapr hangs it around his neck
10:46:37 <shapr> @arr
10:46:38 <lambdabot> Get out of me way, yeh landlubber
10:46:40 <shapr> @arr
10:46:40 <lambdabot> Aye
10:47:11 <shapr> wasn't there a book called the old man and the seagull?
10:47:36 <shapr> didn't he have a seagull hung around his neck?
10:47:42 <Arnia> Dunno... its just one of my animals
10:47:47 <Arnia> Penguins and badgers are the other two
10:47:58 <Arnia> Oh, and hippos
10:50:10 * shapr writes unit tests
10:59:56 <shapr> hi Xcalibor 
11:01:55 <Xcalibor> hiyas :)
11:02:20 <Xcalibor> my isp is playing with my IP :-/
11:02:25 <shapr> fun
11:02:36 <Xcalibor> well, more or less :-P
11:10:38 <phubuh> yay, finally home
11:10:59 <phubuh> yay, epiphany finished emerging
11:11:19 <stepcut> parsec rocks
11:11:24 <shapr> yes it does
11:11:33 * shapr writes parsec code
11:11:53 * stepcut kicks yacc in the nads
11:12:05 <andersca> yacc attacc
11:12:09 <shapr> @arr
11:12:09 <lambdabot> Is that a hornpipe in yer pocket, or arr ya just happy ta see me?
11:13:37 <shapr> @arr
11:13:38 <lambdabot> Get out of me way, yeh landlubber
11:13:52 <ibid> does it repeat itself often?
11:14:02 <shapr> the list of entries isn't very long
11:14:09 <shapr> feel to make suggestions :-)
11:14:57 <ibid> it's just that they get very old very fast
11:15:18 <shapr> ok ok :-P
11:15:36 <Xcalibor> i got this one, very funny: 'you arr surely joking, Mr. Feynman'
11:15:42 <Xcalibor> xD
11:15:43 <shapr> heh
11:15:45 <shapr> that's cute
11:16:10 <Xcalibor> and real :)
11:16:15 <Xcalibor> it happened that way
11:23:45 <ibid> why is it funny?
11:23:59 <ibid> (i assume there is some context there)
11:27:45 <Xcalibor> yes, there is, but I'm on the phone right now, will tell later
12:23:40 <shapr> whee
12:25:21 * shapr reads Parsec docs
12:35:05 <reffie> fun
12:40:26 <shapr> hi Binkley 
12:40:27 <shapr> wassup?
12:40:29 <Binkley> heya
12:40:36 <Binkley> *yawn*
12:55:28 <shapr> hi kunal
12:55:36 <shapr> hello syntax-laptop 
12:58:51 <syntax-laptop> hi shapr
12:58:54 * syntax-laptop is at a coffee shop
12:59:42 <shapr> how's the vanilla chai there?
13:00:39 <syntax-laptop> not sure. I'm drinking the opposite: mocha :)
13:00:45 <cm> ree
13:00:52 <shapr> hi cm
13:01:33 <kunal> hello sharp
13:01:50 <shapr> kunal: learning Haskell?
13:02:26 <cm> hi shapr :)
13:12:36 <syntax-laptop> shapr: have you read my document?
13:12:44 <phubuh> YAY! \o/
13:12:58 <phubuh> i just made my first not-so-very-trivial monad application
13:13:37 <stepcut> YAY for monads
13:13:42 <phubuh> i agree :-)
13:16:43 * stepcut is off to a cafe to teach his girl about monads
13:16:51 <shapr> syntax-laptop: which document?
13:17:27 * c4t is back (gone 05:05:01)
13:17:37 <phubuh> 0[0,1]
13:17:37 <phubuh> +[1,1]
13:17:37 <phubuh> -[0,1]
13:17:37 <phubuh> /[1,0]
13:17:43 <phubuh> (the first character is my input)
13:18:11 <phubuh> it's an interactive parser for a very very simple stack-based language :)
13:18:27 <phubuh> i don't know if it could be called a language, since it isn't even turing complete, but oh well
13:19:04 <phubuh> 0 pushes a 0, + increments, - decrements, and / switches the first two element
13:20:46 <syntax-laptop> shapr: I emailed you about the LIP document, I think.
13:23:04 <syntax-laptop> http://www.syntaxpolice.org/tmp/libraryInfrastructure.{ps,pdf}
13:24:13 <syntax-laptop> its almost done
13:25:57 <Xcalibor> syntax-laptop: "as Haskell grows in acceptance" ? 
13:26:02 <Xcalibor> :)
13:26:16 <phubuh> wow, ghc takes a long time to compile
13:26:52 <syntax-laptop> Xcalibor: hm. something wrong?
13:27:14 <Xcalibor> syntax-laptop: no, not really... but is this backed up by numbers?
13:27:23 <syntax-laptop> no, but simon said so ;)
13:27:44 <Xcalibor> while I'd love to see Haskell among the industry languages, I can only find Java morons and some C/C++ techies...
13:27:52 <Xcalibor> hehe, I see :-)
13:28:00 <syntax-laptop> are you objecting to the existence of a problem, or are you saying that haskell is not growing its user base?
13:28:27 <Xcalibor> I was wondering if Haskell acceptance was indeed growing
13:28:53 <syntax-laptop> I have'nt been on the scene long enough tob e able to tell, but every year the Haskell Implemnetor's meeting and Haskell Workshop get bigger
13:29:21 <syntax-laptop> Simon PJ said that we are becomming victems of our own success when it comes to language extention, because there is a growing number of people who want to actually _use_ haskell for practical things
13:29:31 <syntax-laptop> victims
13:29:41 <Xcalibor> aha... which is actually good, right?
13:29:54 <Xcalibor> not being a meta-language, or a self-language
13:29:55 <Xcalibor> :)
13:30:15 <yazirian> judging from the published works, Haskell is doing decently.
13:33:00 <yazirian> Probably, it's just that the "real world" is only interested in talking to databases and writing (x)html. ;)
13:33:16 <syntax-laptop> well, they should be able to do that from Haskell too :)
13:33:48 <Xcalibor> yup
13:33:53 <yazirian> Sure, but Haskell doesn't aim to make that easy, as a design goal.
13:34:41 <yazirian> Then again, what the hell am I saying, neither does Java. :)
13:34:44 <syntax-laptop> yazirian: are you saying that it is a design goal of haskell to make that difficult?!
13:34:52 <syntax-laptop> :_
13:34:55 <syntax-laptop> oops
13:34:56 <syntax-laptop> :)
13:35:40 <Xcalibor> yazirian: actually java is doing efforts to make making web apps easier
13:37:10 <yazirian> Sure, but you'd never know it to actually try and use the stuff. ;)
13:37:22 <Cale> Wash looks cool
13:37:41 <Cale> I don't know how it actually is, but it looks nice.
13:37:52 <Xcalibor> wash?
13:37:58 <Cale> yeah
13:38:07 <Cale> http://www.informatik.uni-freiburg.de/~thiemann/haskell/WASH/
13:39:59 <Xcalibor> ah, interesting, thanks for the URI
13:40:45 <Cale> np
13:41:19 <syntax-laptop> how do you capitalize "elisp"?
13:41:52 <Xcalibor> "Elisp"
13:41:54 <Xcalibor> :-)
13:42:02 <Riastradh> I've always written it 'elisp,' even at the start of sentences.
13:42:38 <yazirian> this looks pretty cool
13:42:52 <phubuh> i write Elisp, and i hardly ever use capitalized letters :-)
13:43:12 <Xcalibor> i've even seen it written eLisp somewhere...
13:43:56 <phubuh> ugh. marketing capitalization makes me puke.
13:44:14 <Xcalibor> yup
13:44:16 <tomasso> hahahahaa
13:44:31 <tomasso> i discovered something better
13:44:45 <tomasso> than comunism, capitalism, and all that shit
13:45:15 <Riastradh> tomasso, abusing the return key?
13:45:30 <phubuh> returnism
13:45:35 <tomasso> HEHEHEHEHEHHEHE :D
13:49:59 <syntax-laptop> is anyone reading over my document? :)
13:50:12 <syntax-laptop> I'd definitely appreciate any advice, like "You fool, can't you spell?!"
13:50:19 <Xcalibor> syntax-laptop: i am , slowly
13:50:30 <Xcalibor> syntax-laptop: okay, you'll get it, eventually ;-)
13:50:34 <phubuh> i'll read it
13:51:23 <phubuh> last row, second paragraph, "system" should be "systems" :-)
13:52:52 <syntax-laptop> ta
13:53:01 <phubuh> the part after the colon in the first item of the list in chapter 2 is very strange
13:54:43 <syntax-laptop> can you quote me some text?
13:54:58 <phubuh> "all of the of the libraries a user's system need to be built with the same compiler."
13:56:02 <syntax-laptop> OK, fixed :)
13:56:06 <phubuh> :)
13:59:15 <phubuh> i think Setup.lhs --info should be just Setup.lhs info... shouldn't it?
14:00:16 <syntax-laptop> yeah, to be consistent.
14:00:31 <syntax-laptop> problem is, I keep going back & forth about what should be a "command" and what should be a "flag" :)
14:00:40 <syntax-laptop> like --verbose should definitely be a flag :)
14:00:45 <phubuh> ah, yeah
14:05:02 <Xcalibor> there's the possibility of making everything a flag, like rpm does
14:05:56 <phubuh> in last line of 4.2, "force" should be "forces" :)
14:05:59 <syntax-laptop> Xcalibor: hm. dpkg does too, but apt doesn't.
14:06:20 <syntax-laptop> ta
14:06:27 <Xcalibor> and tar moved from flags to commands... i guess it's the new trend
14:07:37 <Xcalibor> i don't particularly mind... except -r and -R for recursive application, I hate the inconsistenciy of those in Unix
14:07:56 <syntax-laptop> yeah definitely
14:08:03 * syntax-laptop is starting to learn that one, though
14:08:09 <phubuh> heh
14:12:52 <syntax-laptop> I can never decide between "another useful function _which_ foo could fulfill" or "function _that_ foo could fulfill" or even "function foo could fulfill"
14:13:03 <Xcalibor> syntax-laptop: remember to fix the 'FIX: Footnote, arrows, greencard' thingies... :-)
14:13:10 <syntax-laptop> Xcalibor: already did :)
14:13:27 <syntax-laptop> I should have some kind of thingy which makes sure I never commit / upload something with "FIX:" in it ;)
14:13:27 <Xcalibor> ah, okay :)
14:13:58 <Xcalibor> make script that checks that before uploading
14:14:28 <syntax-laptop> make sucks ;)
14:15:06 <Xcalibor> make _a_ script (in sh or perl or...) ;-)
14:15:28 <syntax-laptop> or what?
14:15:32 <syntax-laptop> Haskell!
14:16:09 <syntax-laptop> sorry, I"ll stop being difficult.
14:16:13 <Xcalibor> sh is usually easier for that, but as you wish... :-)
14:16:28 <Riastradh> No...scsh!
14:16:52 <Riastradh> syntax-laptop, 'which' indicates a non-essential element of a sentence; 'that' indicates an essential element of a sentence.
14:17:10 <Xcalibor> scsh? mmm...
14:17:16 <Riastradh> http://www.scsh.net/
14:17:29 <syntax-laptop> what do you mean by essential? do you mean that it is essential to the sentence or to the idea?
14:17:29 <Xcalibor> i know it, but last time i tried it is was pretty inmature
14:18:14 <Riastradh> syntax-laptop, for example, 'this is the house which I shot' is generally considered wrong, because 'this is the house' doesn't make much sense; the fact that the house was shot is an essential element.
14:18:32 <Riastradh> The sentence probably should have been 'this is the house _that_ I shot.'
14:18:43 <syntax-laptop> I see
14:18:53 <syntax-laptop> so in my example, I should use 'that'
14:19:04 <Riastradh> Yes.
14:19:43 <syntax-laptop> so "this is my apple which I got from my sister" and "this is the apple with which I broke the window" and "this is the core of the apple that I ate"
14:19:46 <Riastradh> 'He picked up the dog, which was dead, and carried it into the coffin that Ralph was carrying.'  That is an example of proper usages of 'which' and 'that.'
14:20:07 <syntax-laptop> ah cool.
14:20:28 <Riastradh> The second one would have to be able to be rewritten as 'this is the apple,' which isn't a very interesting sentence.
14:20:38 <Riastradh> It probably should have been 'this is the apple _that_ I broke the window with.'
14:21:32 <Riastradh> Now, uninformed quibblers would quibble that there is a rule in English stating that sentences may not end with prepositions; this is not the case, and the usage of 'that' is one of the most common reasons _to_ end a sentence with a preposition.
14:21:58 <syntax-laptop> I was just going to ask about that :)
14:22:03 <phubuh> prepositions are just fine to end sentences with.
14:22:23 <phubuh> my english teacher told me they weren't :(
14:22:30 <syntax-laptop> prepositions are that with which one should not end a sentence.
14:22:37 <syntax-laptop> ;)
14:22:57 <yazirian> oooh, that AND which
14:23:03 <yazirian> good kung-fu
14:23:35 <Riastradh> In most cases where an ignorant writer might write 'this is the foo with which bar did quux,' that ignorant writer is making _two_ stupid blunders: thinking ignorantly that sentences cannot end with a preposition and not knowing the difference between 'which' and 'that.'
14:23:52 <syntax-laptop> Riastradh: hm. don't look at my document
14:24:08 * Riastradh cackles.
14:24:12 * syntax-laptop greps for 'with which'
14:24:39 <vegai> good thing we have Riastradh to guide us in the dark shallows of English
14:24:42 * Riastradh scrolls up and looks for a URI.
14:24:47 * vegai runs away.
14:25:15 <syntax-laptop> Riastradh: should be the syntaxpolice ;)
14:25:22 <syntax-laptop> he's much better at it than me
14:25:27 <Riastradh> Than _I_.
14:25:37 * syntax-laptop was setting you up for that
14:25:47 <vegai> he never believes that =)
14:26:01 <Riastradh> syntax-laptop, humph, if you were going to set me up, you could have at least said 'See?' instead of the fact that you were setting me up!
14:26:17 <syntax-laptop> Riastradh: http://www.syntaxpolice.org/tmp/libraryInfrastructure.p{s,df}
14:26:27 <Riastradh> I know, I got it.
14:27:16 <Riastradh> The first sentence has too many clauses.  Eschew obfuscation!
14:28:07 <syntax-laptop> are you serious or just taking the piss?
14:28:12 <Riastradh> The third sentence suddenly switches from the present to the past tense.
14:28:12 * syntax-laptop starts to wish that he was british
14:28:19 * Riastradh isn't British.
14:29:03 * Marvin-- prepares to package darcs
14:29:05 <Riastradh> And _operating_systems_?!
14:29:12 <syntax-laptop> I wishI was british because they have words like "ta" and "cheeky" and phrases like "taking the piss"
14:29:18 <syntax-laptop> Marvin--: you rule
14:29:34 <Marvin--> syntax-laptop: no, David Roundy rules :)
14:29:35 <syntax-laptop> I'm still trying to figure out how the 3rd sentence is in the past tense
14:29:44 <syntax-laptop> Marvin--: is it mature enough to use yet?
14:29:45 <Riastradh> '..._has_ become a major issue.'
14:30:05 <syntax-laptop> oh has become
14:30:18 <syntax-laptop> ok
14:30:39 <Marvin--> syntax-laptop: I'd say so, I was planning on using darcs for maintaining the debian package
14:30:54 <Marvin--> makes it easy for me to send patches "upstream"
14:30:54 <syntax-laptop> Riastradh: yeah, operating systems! (target platforms?)
14:31:03 <Riastradh> Oh, I see what that sentence is saying now.
14:31:34 <Riastradh> But it's saying it very confusingly.  It should probably be 'there is a wide variety of Haskell implementations each for a wide variety of architectures and operating systems.'
14:31:45 * Riastradh strategically inserts 'something like' into his last sentence.
14:31:53 <syntax-laptop> There are a wide variety of &impls;, hardware
14:31:53 <syntax-laptop>       architectures, and operating systems to target. 
14:31:59 <syntax-laptop> hehe
14:32:21 <syntax-laptop> There are a wide variety of &impls;, each of which
14:32:21 <syntax-laptop>       target a variety of hardware architectures, and operating
14:32:21 <syntax-laptop>       systems.  
14:32:34 <syntax-laptop> (minus that last comma)
14:34:01 <Riastradh> 2.1, first paragraph, second sentence: s/which/that/1
14:34:36 <syntax-laptop> look at my use of commas too if you think about it. I think I use too many.
14:36:05 <Riastradh> You missed a period at the end of the first sentence in section 3.
14:36:17 <Riastradh> And a comma after 'Setup.lhs'.
14:36:47 <vegai> Dogfooding?
14:37:39 <vegai> ok, I guess
14:38:11 <syntax-laptop> vegai: you haven't heard it before?
14:38:36 <vegai> I'm not happy with verbed(!) nouns
14:38:45 <syntax-laptop> my use cases are a mess
14:38:52 <syntax-laptop> vegai: don't blame me, blame microsoft
14:38:58 <vegai> well, not so unhappy either. Don't care much actually =)
14:39:28 <vegai> especially at 00:38 AM after doing 40 hours of various exercise-thingies
14:39:42 <vegai> with sleep in between, thank Kali
14:40:22 <syntax-laptop> heh
14:40:31 <syntax-laptop> vegai: if it'll help you sleep, I'll change it ;)
14:40:55 <vegai> if Riastradh complains, then change
14:45:44 * Riastradh hasn't gotten to that bit yet.
14:45:53 <Riastradh> Or maybe I passed it without noticing.
14:46:25 <syntax-laptop> Riastradh: I doubt it
14:46:26 <syntax-laptop> :)
14:46:34 <syntax-laptop> if you get there stop and I'll upload a new version of the doc
14:46:46 <Riastradh> What section is it in?
14:47:21 <syntax-laptop> section 5
14:47:32 <syntax-laptop> the english is so bad that yoiu couldn't possibly have missed it
14:48:17 <Riastradh> 4.3.1, the PackageConfig record: you use 'license' as a noun.
14:49:46 <syntax-laptop> Riastradh: what's wrong with that?
14:49:53 <Riastradh> 'License' is a verb.
14:49:56 <phubuh> license is a verb, licence is a noun.
14:50:02 <Riastradh> Zigackly.
14:50:31 <syntax-laptop> whoa
14:50:33 <Riastradh> Just like 'advise' is a verb whereas 'advice' is a noun; 'devise' is a verb whereas 'device' is a noun; 'practise' is a verb whereas 'practice' is a noun.
14:51:01 <phubuh> i practised the guitar?
14:51:16 <Riastradh> Yes, and you got practice therefrom.
14:51:20 <phubuh> interesting.
14:51:32 <syntax-laptop> hm. http://www.m-w.com/cgi-bin/dictionary?va=licence
14:51:38 <syntax-laptop> seems to indicate that they're inter-changable
14:51:41 <phubuh> (i didn't, though, and i practised for like a month)
14:52:28 <Riastradh> Webster was a complete dolt who shouldn't be given any authority on English.
14:53:27 <vegai> too late for that now
14:54:13 <Riastradh> No, not too late: just don't use his dictionary!
14:54:30 <Riastradh> (or what dictionaries are descendants of his)
14:54:43 <syntax-laptop> but the Galeon toolbar w/ the dictionary thing is so convenient
14:55:04 <Riastradh> It is quite a bother than the OED costs quite a lot of money.
14:55:26 <phubuh> syntax-laptop: the GNOME dictionary applet looks up from many other dictionaries :)
14:55:53 <phubuh> ... except when you search for 'licence', the only entry is Webster's.
14:57:07 <syntax-laptop> I'll try that, thanks
14:58:44 <Riastradh> Section 5: you begin with using 'they' as a generic, singular, gender-neutral pronoun, which is bad enough, but then you suddenly change to 'she/her.'
14:59:01 <Riastradh> And also you have ', she,' in the second element of the list under 'End User.'
14:59:33 <Riastradh> And then you switch back to 'they' in '3rd party author.'
14:59:37 <syntax-laptop> yeah, I'm working on making that consistent
15:00:42 <Riastradh> '...from the Distribution module which do all the work' -- s/which/that/1
15:01:31 <Riastradh> And in the next sentence, s/that/which/1.
15:01:45 <Riastradh> And right after that s/which/that/1.
15:02:14 <Riastradh> Also, contractions should generally be avoided in formal writings.
15:02:44 <phubuh> formal writings should generally be avoided :-)
15:03:36 <Riastradh> And in the last sentence of that same list item, s/, and which/ that/1
15:03:39 <syntax-laptop> Riastradh: before you go too far in the use cases, get the new version
15:03:44 <syntax-laptop> (wait 20 seconds)
15:03:50 <syntax-laptop> I take it the use of "she" is going to bother you :)
15:03:54 <syntax-laptop> I use "he" as well.
15:03:57 <Riastradh> No, not at all.
15:04:27 <Riastradh> It's that you alternate _and_ use 'they' occasionally.
15:04:30 <syntax-laptop> the use cases are cleaned up a lot, but probably still need work. I haven't gotten all the way through them without rewriting
15:04:33 <syntax-laptop> yeah, I think I fixed that
15:06:56 * Igloo reads scrollback and woohoos (assuming Marvin means darcs for Debian)
15:06:58 <phubuh> NO
15:06:59 <phubuh> NO
15:07:38 <phubuh> after emerging ghc for about three hours, i realized i typed "emerge ghc" instead of "emerge ghc6"
15:07:43 <phubuh> ghc, of course, defaults to ghc5
15:07:48 <phubuh> argh!
15:07:55 <Igloo> Also, dictionaries describe common usage of English rather than correct formal English, no?
15:08:05 <Igloo> Ooops  :-(
15:08:24 <phubuh> i'm going to tell myself ghc5 is better
15:08:31 <phubuh> ghc6 is so new and untested, you know
15:10:01 <phubuh> do you see anything in http://teepee.ath.cx/~phubuh/prasse.hs that could be done better?
15:10:43 <Riastradh> syntax-laptop, though you fixed the gender-neutral pronoun stuff, you made a silly mistake of not realizing that you should have been using the subjunctive all along, and thus you changed 'they have' to 'he has,' et cetera.
15:11:06 <Riastradh> Instead there are several cases where you should have used 'he have.'
15:11:30 <Igloo> You could have an export list, and are you deliberately putting a main functino in a non-Main module?
15:12:04 <phubuh> no, i realized that the module had a silly name about fifteen seconds ago, when i tried to compile and link it :)
15:12:29 <Riastradh> In that sentence whose 'that' and 'which' should have been swapped, you naively parenthesized a clause that was _very_ essential to the sentence, in that the pure Haskell 98 modules _must_not_ interface with any external systems.
15:12:40 <Igloo> The "do " in eval is unnecessary
15:13:04 <Igloo> And I can't see where you catch EOF
15:14:12 <phubuh> ah, yeah, i should make it catch errors :)
15:14:41 <Igloo> (+ (-1)) might be nicer for decrement
15:14:48 <syntax-laptop> Riastradh: yeah, that sentense is akward
15:14:53 <Riastradh> Sentence.
15:15:03 <Riastradh> It wouldn't be awkward if it were merely:
15:15:21 <Igloo> And I think you have some spaces for aligning things that are no longer aligned anyway
15:15:39 <phubuh> in push, you mean?
15:15:47 <Riastradh> A very common case, which should be our first priority, is a pure Haskell 98 module that needn't interface with any external systems.
15:15:48 <Igloo> Also discard
15:16:07 <Igloo> You're also not catching errors in discard and switch
15:16:10 <phubuh> ah
15:16:27 <Igloo> For the former drop 1 may be what you want, otherwise you really do want to catch it
15:17:01 <phubuh> hmm, is switch somewhere in the prelude?
15:17:07 <phubuh> or something more generic
15:17:13 <Riastradh> The second and third list items for third party authors should begin with 'If he have' and 'If he do,' respectively, and not 'If he has' or 'If he does.'
15:17:23 <Igloo> Do you mean is there a function that does what your switch does? Don't think so
15:17:28 <Riastradh> (that was the subjunctive bit I mentioned a couple minutes ago)
15:17:39 <phubuh> without the liftOp stuff, that is
15:18:02 <Igloo> Ria: What comes after "If he have"?
15:18:29 <Igloo> That's what I meant, sorry
15:18:43 <Riastradh> The third list should have 'he could write a Setup.lhs' and 'so that it conform,' not 'he can write a Setup.lhs' or 'so that it conforms.'
15:18:54 <Riastradh> Igloo, the same as was previously there.
15:19:23 * Igloo doesn't have a copy, nor the URL
15:20:01 <syntax-laptop> I have to run. Riastradh thanks for all of your useful comments. if you have more, please do email me :)
15:20:22 <Riastradh> http://www.syntaxpolice.org/tmp/libraryInfrastructure.p{s,df}
15:20:30 <Igloo> phubuh: You also don't use Code at least. ghc -Wall ought to tell you that (well, once you have an export list at least)
15:20:46 <phubuh> oops!
15:21:41 <phubuh> i wonder if switch on [x] should bail out or just leave the list as it is
15:22:06 <Igloo> "If he have a more complex program"? That sounds wrong to me - possibly the sort of thing you might find in ancient texts
15:22:15 <Igloo> Could well be my lack of education, though
15:22:34 <Riastradh> It sounds wrong because you aren't used to the subjunctive being used.
15:22:58 <Riastradh> Would you have any qualms about 'if it were dead, blah?'
15:22:59 <tomasso> can i do (Int div):: Int -> Bool   ????
15:23:06 <tomasso> haskell doesnt take it
15:23:13 <tomasso> it says sintax error
15:23:19 <Riastradh> Yes, because that is a syntax error.
15:23:21 <Igloo> Possibly. Given the purpose of the document I'm not sure "If he has" isn't better, though
15:23:22 <phubuh> i would have qualms about that. i'd prefer 'if it was dead, blah?'
15:23:32 <tomasso> Riastradh: how would you right it?
15:23:38 <Riastradh> What's 'div?'
15:23:49 <tomasso> if x divides y
15:23:49 <Riastradh> phubuh, ok, what about 'I wish it were true?'
15:23:57 <phubuh> same thing.
15:23:59 <Riastradh> tomasso, then just 'div :: Int -> Bool'.
15:24:13 <Riastradh> phubuh, ok, you need to go learn about the subjunctive.
15:24:22 <tomasso> and where does it take the other int?
15:24:24 <Igloo> I would say "If it was {dead,true}", I think, but "were" wouldn't sound wrong
15:24:33 <Riastradh> Er, oh, I mean 'div :: Int -> Int -> Bool.'
15:24:45 <Igloo> But does sound more quaint/oldfashioned
15:24:47 <phubuh> sounds like i do :)
15:24:49 <Riastradh> Igloo, 'was' is wrong there; it is a statement of plain past.
15:24:54 <Riastradh> Not a statement of conditional past.
15:25:00 <tomasso> but there is a way for passing one parameter before the name of the function
15:25:14 <Riastradh> Yes -- foo `div` bar
15:25:16 <phubuh> 'i wish i were dead' sounds better than 'i wish i was dead', though
15:25:18 <Riastradh> The type declaration is the same.
15:25:31 <phubuh> thanks for your comments, Igloo
15:25:44 <Riastradh> phubuh, ok, so you've been educated about _very_ limited cases of proper usages of the subjunctive, but you still need to read about it.
15:26:04 <tomasso> hhmhm
15:26:25 <tomasso> why ``??
15:26:33 <Riastradh> That's just the syntax for it, tomasso.
15:26:40 <Igloo> I *think* it is more common to use it incorrectly, but it's hard to think about
15:26:52 <phubuh> i've gotten hardly any formal training in english; pretty much all of my knowledge about it is intuition picked up from TV, books, the Internet, etc
15:26:52 <Riastradh> Functions may be called infixly by surrounding their names with backticks.
15:26:58 <Riastradh> phubuh, ah, that explains it.
15:27:12 <Riastradh> phubuh, hanging about me on IRC will undoubtedly help it!
15:27:12 <tomasso> mhm bur hugs does take it...
15:27:18 <phubuh> haha :)
15:27:52 <Xcalibor> time for bed
15:27:56 <phubuh> Igloo: in my opinion as a language liberal, that's an oxymoron :)
15:27:56 <Xcalibor> laters!
15:27:58 <phubuh> Xcalibor: good call
15:28:07 <Xcalibor> :)
15:28:11 <phubuh> night!
15:28:17 <Igloo> :-)
15:28:25 <Riastradh> phubuh, it may also make people look at you oddly when you speak, but you'll always be able to feel proud because you said the thing correctly!
15:28:43 <phubuh> that's a huge plus
15:28:46 <tomasso> this is what i did
15:28:49 <tomasso> (Int div):: Int -> Bool
15:28:50 <tomasso> x div y = (y mod x) == 0
15:28:54 <phubuh> especially if they try to correct me!
15:29:21 <Riastradh> tomasso, and I just told you that that hugs is right in saying that that type declaration is a syntax error.
15:29:35 <Riastradh> ...and that the correct type declaration would be 'div :: Int -> Int -> Bool'.
15:30:02 <Igloo> Also, "x div y = " is defining x
15:30:13 <Igloo> If you want to define an operator div you need "x `div` y = "
15:30:37 <tomasso> ok, but isnt there a way to accept a parameter before the function's name?
15:30:46 <Riastradh> Yes, by using backticks.
15:30:56 <tomasso> hmhm let me check
15:31:41 <tomasso> (Int `div`): Int -> Bool
15:31:41 <tomasso> x `div` y = (y mod x) == 0
15:31:59 <Riastradh> No...
15:32:12 <Igloo> "y mod x" is applying y to mod, and the result to x
15:32:18 <Riastradh> What is the correct type declaration, which I have told you _twice_?
15:32:46 <tomasso> blah:: type->type
15:32:59 <Riastradh> No, I mean the exact type declaration that I have told you twice.
15:34:09 <tomasso> div:: Int -> Int -> Bool
15:34:15 <Riastradh> Yes.
15:34:17 <Riastradh> Why didn't you use it?
15:34:46 <tomasso> but if i do that i cant do (x div y)
15:34:56 <tomasso> or i can?
15:35:02 <Riastradh> Sure you can, but it won't do what you want.
15:35:21 <Riastradh> To infixly apply a function, surround its name with backticks -- 10 `div` 4   for example --.
15:35:22 <tomasso> how do i do that??
15:35:42 <tomasso> let me check
15:36:50 <tomasso> ok it works...
17:02:42 <Darius> Riastradh: Can you point me to an authoritative site on American English (or any English) where "If he have ..." is considered correct?
17:04:01 <Riastradh> Darius, 'have' is the subjunctive mood of the verb 'to have.'  What more verification do you want?
17:05:06 <Darius> A site.
17:06:28 <Riastradh> The fact that the subjunctive is being used is not enough?
17:09:41 <Darius> Apparently not.
17:11:14 <Pseudonym> Interestingly, the subjunctive mood is usually the last part of English to be acquired when a child acquires English.
17:11:21 <Pseudonym> It usually happens around age 14.
17:12:02 <Riastradh> I don't know of many sites on the subject...but I'm sure you could just Google to find some information about the subjunctive.
17:12:17 <Pseudonym> This suggests that one of the reasons why use of the subjunctive is declining is because people stop learning around age 14.
17:13:37 <Pseudonym> Hang on, what was the original sentence?
17:14:10 <Riastradh> 'If he has a more complex program...'
17:14:44 <syntax-laptop> hm. I get the feeling that we're still talking about my document :)
17:14:46 <syntax-laptop> any suggestions?
17:14:47 * Pseudonym isn't certain that "If he have" is correct
17:14:53 <Pseudonym> "If he had have"?
17:15:01 <Riastradh> That's horrid!
17:15:15 <Pseudonym> It looks better in contraction form.
17:15:17 <Pseudonym> "If he'd have".
17:16:05 <Pseudonym> I have a suspicion that many English contractions arose because the "correct" form looks and sounds horrid.
17:16:14 <Nate1975> wouldn't it just be "if he had..."
17:16:15 <Nate1975> ?
17:16:17 <Riastradh> It's talking about the _possible_ situation whereby he has a more complex program.
17:16:42 <Pseudonym> Right.
17:16:48 * Pseudonym got that much
17:16:56 <syntax-laptop> So whats wrong with "If he has a more complex program"?
17:17:08 <Pseudonym> I actually would phrase it "Had he have a more complex program".
17:17:22 <Nate1975> no, i'm saying "have" necessarily has no place in the sentence
17:17:26 <Riastradh> Pseudonym, and then you're using the subjunctive, but in the _past_ tense, which is even weirder.
17:17:30 <Riastradh> Or worse.
17:17:31 <Darius> One site, I have found, has e.g. "Whether he be opposed ...", but it goes on to say that "The subjunctive is not required in such sentences, however, and you can use the indicative forms if you prefer ('whether he is opposed')"
17:17:31 * Pseudonym nods
17:17:40 <Pseudonym> Which almost always requires an auxillary.
17:17:51 <steveh> good evening
17:18:12 <Pseudonym> Oh, duh.
17:18:15 <Pseudonym> Of course.
17:18:27 <Pseudonym> "Have" is present subjunctive, "had" is past subjunctive, I'm pretty sure.
17:18:34 <Pseudonym> So "If he had" is correct.
17:18:38 <Riastradh> Or simply past tense.
17:18:50 <Riastradh> But no, that is not correct, because syntax-laptop is not talking about the past!
17:19:03 * syntax-laptop lives for the moment
17:19:16 <Pseudonym> Oh, sorry.  You were talking about me when you said "even weirder".
17:19:17 <Riastradh> He's talking in the present tense about a _possibility_.
17:19:43 <syntax-laptop> its probable even!
17:19:58 <Pseudonym> Another possibility is "Were he to have".
17:20:14 <Pseudonym> That scans.
17:20:39 <Riastradh> And that's using the past tense of the subjunctive mood also, but with a different verb.
17:20:50 <syntax-laptop> I hope you guys are this careful when you look at the actual content of the document too ;)
17:20:58 <Riastradh> Content?  Where?
17:21:05 <Pseudonym> syntax-laptop: There's a document?
17:21:30 <Pseudonym> Riastradh: "Were he to have" isn't past tense.
17:21:43 <Riastradh> Yes it is.  'Were' is the past tense subjunctive mood of the verb 'to be.'
17:22:00 <Pseudonym> What's present subjunctive of "to be", then?
17:22:03 <syntax-laptop> Pseudonym: http://www.syntaxpolice.org/tmp/libraryInfrastructure.{ps,pdf}
17:22:04 <Riastradh> 'Be.'
17:22:33 * syntax-laptop gave away 3 or 4 knoppix CDs at the coffee shop
17:22:37 <Pseudonym> Consider this: Suppose I were to shut up, then we'd all be happy.
17:22:43 <Pseudonym> That's not past tense.
17:22:57 <Riastradh> Yes it is.  The fact that you use the subjunctive confuses you.
17:23:04 <Pseudonym> It could be future.
17:23:12 <Riastradh> 'Suppose I shut up; then we'd all be happy' would be better.
17:23:51 <Pseudonym> OK, here's a better example.
17:24:00 <Pseudonym> Suppose I were quiet, then we'd all be happy.
17:24:19 <Pseudonym> I'm 90% sure that's correct.
17:24:22 <Pseudonym> And not past tense.
17:24:27 <Riastradh> In that case, you're talking from the past tense about a situation that happens to be present because you're using the subjunctive.
17:24:51 <Riastradh> Of course, that's still a run-on sentence and thus incorrect.
17:25:06 <Pseudonym> Thank you Bishop Usher.
17:25:18 <Riastradh> ?
17:25:38 <Pseudonym> Oh, hang on, wrong bishop.
17:25:45 <Riastradh> ??
17:26:36 <Pseudonym> There was some bishop who came up with all these rules, like no spliiting infinitives, no run-on sentences etc.
17:26:54 <Pseudonym> The thing is, they were all pretty arbitrary.
17:27:35 <Riastradh> It's not very arbitrary to say that a sentence is incorrect if it contains two independant clauses not properly joined.
17:28:50 <Pseudonym> Not necessarily.  It's actually the way we often speak.
17:29:01 <Pseudonym> The problem is one of punctuation, not of form.
17:29:09 <Pseudonym> You'd prefer a semicolon, I take it.
17:29:12 <Riastradh> No, we say semicolons implicitly.
17:30:57 <Riastradh> I've got you there.
17:31:20 <Pseudonym> Yes, that is a fair point.
17:32:16 <Pseudonym> Hmmm.
17:32:33 <Pseudonym> OK, now that I look at it, past subjunctive is actually correct in the original sentence.
17:32:38 <Pseudonym> Counterfactual conditional.
17:33:11 <Riastradh> No, because he's not talking about the present tense through the past tense subjunctive; he's talking about the possible _future_ _in_the_present_tense_.
17:34:06 <Pseudonym> Oh, I see.  Serves me right for not reading the document.
17:34:19 <syntax-laptop> so whats the answer? :)
17:34:32 <syntax-laptop> but I warn you that if it doesn't sound good, I'm not going to change it.
17:34:58 <Pseudonym> Subjunctive mood be damned!
17:35:18 <Riastradh> Pseudonym, you just used the subjunctive mood.
17:35:25 <Darius> See if-clauses - the traditional rules, on http://www.bartleby.com/64/C001/061.html
17:35:37 <Pseudonym> Yeah, I know.  I was being very postmodern.
17:36:24 <Darius> If the situation isn't presupposed to be false, then it must contain an indicative.
17:36:37 <Pseudonym> Attempting to be funny, but you're probably the only other person who'd get it and you didn't laugh.  I'll go sulk now.
17:36:57 <Riastradh> OK, OK, if you'd prefer something that sounds more modern and is still correct, syntax-laptop, you could use 'If he should have a more complex program...'
17:37:02 <Pseudonym> Yes, that was a run-on sentence.
17:37:23 <Riastradh> No, that was a sentence fragment.
17:37:25 <syntax-laptop> Riastradh: what is my other option?
17:37:27 <Darius> Two points on that page suggest that it isn't incorrect (or even that it should be) "If he has ..."
17:37:59 <Pseudonym> Actually, true.  I did connect the clauses.
17:38:37 <Pseudonym> Another is "Should he have..."
17:38:48 <Pseudonym> That sounds better than "If he have..."
17:39:32 <Darius> One way or another, "If he have ..." is strained at best, incorrect at worst.
17:39:54 * Arnia resists joining in :)
17:40:33 <Riastradh> Darius, but that gives only _past_ tense subjunctive examples.
17:40:47 <Pseudonym> http://alt-usage-english.org/excerpts/fxsubjun.html
17:40:50 <Pseudonym> That might be better.
17:41:18 <Riastradh> And anyways, I'm not sure how much to trust it; the author clearly didn't even know the difference between 'will' and 'shall'/'would' and 'should.'
17:41:40 <Pseudonym> Riastradh: Can you see anything wrong with "Should he have..."
17:42:00 <Riastradh> Pseudonym, no; it's equivalent to 'If he should have...'
17:42:02 <Pseudonym> Apart from the masculine-default pronoun.  But let's not get into that argument.
17:42:43 <Arnia> What is this about?
17:43:01 <syntax-laptop> Pseudonym: don't worry about that, I use feminine pronouns too :)
17:43:07 <Pseudonym> :-)
17:43:08 <Riastradh> Pseudonym, er, the page on that text looks very familiar...
17:43:12 <syntax-laptop> arina http://www.syntaxpolice.org/tmp/libraryInfrastructure.{ps,pdf}
17:43:13 * Riastradh digs out Fowler.
17:43:23 <syntax-laptop> and the document is open for comment on spelling, english, and technical content
17:43:36 <Pseudonym> I think it's based on Fowler.
17:43:38 <Riastradh> What, you wanted technical content criticisms _too_?
17:43:47 <Pseudonym> But it also has some comments about Fowler there.
17:43:58 <Riastradh> Ah, that might explain it.
17:45:26 <Arnia> Ok... and the comments on language?
17:45:35 <syntax-laptop> Riastradh: well ya know :) I prefer to think that though my spelling and english are bad, my technical content is beyond reproach
17:46:22 <Pseudonym> Clearly, since nobody has found a technical fault yet.
17:46:29 <Riastradh> syntax-laptop, but anyhow, if you don't use 'if he have,' you should at least use 'if he should have' or 'should he have'; these both probably sound much more natural to you.
17:46:57 <syntax-laptop> yeah, I'll probably use 'should he have'
17:47:02 <syntax-laptop> but I can't claim to understand why
17:47:21 <Riastradh> And 'should he not want to migrate' in the next item.
17:47:27 <Pseudonym> Subjunctive mood is actually slowly being excised from English.
17:47:29 <syntax-laptop> yeah, I was just about to ask about that
17:47:38 <Pseudonym> It'll be gone in another generation or two.
17:47:39 <syntax-laptop> damn, my document is going to be obsolete in 20 years
17:47:47 <Pseudonym> It's actualy been on the way out for 200 years or so.
17:48:09 <Riastradh> Pseudonym, well, it would be nice if English die, too...(hah!)
17:48:12 <syntax-laptop> what do you guys think of this:
17:48:14 <syntax-laptop> Your humble author has in-depth knowledge
17:48:15 <syntax-laptop>   of Debian GNU/Linux, but could probably learn a thing or two about
17:48:15 <syntax-laptop>   other operating systems like Windows and MacOS.  If you notice
17:48:15 <syntax-laptop>   anything here which is offends your sense of operating system,
17:48:15 <syntax-laptop>   please let me know.
17:48:16 <Riastradh> And Esperanto still has the subjunctive, so HAH!
17:48:25 <Pseudonym> True!
17:48:53 <mattam> is offends ?
17:49:14 <syntax-laptop> s/is offends/offends
17:49:15 <Riastradh> Wow, I didn't even catch that one.
17:49:17 <mattam> hi all, BTW :)
17:49:25 <syntax-laptop> of course it was goign to be "is offensive" or something
17:49:27 <syntax-laptop> hi mattam
17:50:33 <Arnia> How the hell do you talk about hypotheticals without the subjunctive?
17:51:12 <Pseudonym> Arnia: It's mildly acceptible to use the indicative with a suitable auxiliary.
17:51:27 <Riastradh> Pseudonym, but those auxiliaries are subjunctive moods of verbs themselves!
17:51:28 <Arnia> Give me an example
17:51:32 <Pseudonym> True.
17:51:51 <Pseudonym> Arnia: OK.  "If I were you..." can be "If I was you..."
17:52:12 <Pseudonym> Modern style manuals allow for the latter.
17:52:21 <Arnia> That's ungrammatical to me
17:52:21 <steveh> syntax-laptop: hmm, why use six words when one or three will do? "If you notice anything here which is inaccurate [or incomplete], please let me know...
17:52:40 <Riastradh> steveh, s/which/that/1
17:52:41 <Pseudonym> Or even "Should you notive..."
17:52:45 <Arnia> I speak nearly standard British English (with some regionalisms)
17:52:46 <steveh> Riastradh: good call
17:52:49 <Pseudonym> s/notive/notice/
17:52:49 <steveh> steveh :)
17:53:08 <Riastradh> Pseudonym, you're still using the subjunctive there -- 'should' is the subjunctive mood of the verb 'shall' --.
17:53:14 <Pseudonym> Arnia: There's a standard British English?
17:53:17 <syntax-laptop> steveh: because "sense of operating system" is funnier
17:53:21 <Pseudonym> Riastradh: Yes, understood.
17:53:39 <steveh> Oh! Sorry.
17:53:49 * steveh has been working with very dry material the last couple weeks.
17:53:51 <Arnia> Pseudonym: Notionally :p Just a label used by linguists as with any other language label
17:54:00 <syntax-laptop> actually, this document is way more dry than I want it to be :(
17:54:02 * steveh forgot that you can inject humor into technical documents.
17:54:05 <steveh> ;)
17:54:11 <Pseudonym> Modern linguists tend to shy away from that kind of label.
17:54:25 <Riastradh> Arnia, had you removed the 'British' then you could have been referring to English as defined by the OED.
17:54:36 <Arnia> Pseudonym: I know. I do to generally
17:54:39 <Pseudonym> OED doesn't define grammar.
17:54:59 <Pseudonym> Actually, the OED doesn't define anything.  It records usage.
17:55:04 <Arnia> OED is a stamp collection of vocabulary at one moment as defined by a subset of the population
17:55:15 <Arnia> Or more simply, like Pseudonym ;)
17:55:29 <Pseudonym> Actually, the subset is bigger than it used to be.
17:55:38 <Pseudonym> But it's still a subset, yes.
17:55:45 <Riastradh> Anyhow, I _was_ planning to hack tonight.
17:56:00 * Arnia imagines the lexicographers questioning everyone in the UK as to what a word means to them
17:56:01 <syntax-laptop> heh
17:56:21 * Pseudonym laughs
17:56:34 <Pseudonym> Generally, they just grep a fixed but growing corpus.
17:56:42 <mattam> Riastradh: what you're hacking these days ?
17:56:48 <Riastradh> (in fact, I was planning to hack something for a Scheme version of what your paper is on, syntax-laptop -- though it wasn't inspired by 'library infrastructure,' which I'd hever heard of before today --)
17:56:50 <Arnia> Pseudonym: I know.
17:57:07 <Riastradh> mattam, was that a quick enough response for you?
17:57:10 <syntax-laptop> Riastradh: well, maybe I gave you some good ideas? :)
17:57:11 <Arnia> Pseudonym: I mistrust people who call 'article' a part of speech though ;)
17:57:13 <mattam> yep
17:57:18 <Arnia> Determiners forever!
17:57:22 <Smerdyakov> --)
17:57:31 * Riastradh slaps Smerdyakov about with a large emdash.
17:57:35 * Pseudonym laughs
17:57:40 <mattam> nice use of emdashes :)
17:57:42 <Pseudonym> I think of "article" as a subset of "particle".
17:58:21 <syntax-laptop> Riastradh: I was thinking that there really needs to be a generic installation system. apt could work if it could be ported to windows, its been ported to everything else, I think.
17:58:34 <syntax-laptop> it sucks that each language and each OS has to reinvent the wheel
17:58:45 <Riastradh> syntax-laptop, in fact, I was going to start writing a server and repository format for a 'CSAN'...
17:58:47 <Arnia> Pseudonym: Eh? But they're determiners?
17:58:56 <mattam> different languages <-> different needs too
18:00:02 <Pseudonym> The thing, though, is that articles are special kinds of determiners.
18:00:10 <syntax-laptop> CSAN is CPAN for scheme I guess?
18:00:14 <Riastradh> Yes.
18:00:25 <mattam> funny thing is that there's also an O'Caml hacker working on packaging/installation systems for his language
18:00:29 <Pseudonym> Esperanto, since it was brought up, creates most determiners systematically.
18:00:29 <Riastradh> The name SCAN would be so much cooler, though...
18:00:33 <Pseudonym> they call them "correlatives".
18:00:38 <syntax-laptop> sounds cool! let me know if you learn anything that gives you insites into my stuff :)
18:00:40 <Arnia> Pseudonym: How are articles special?
18:00:54 <mattam> is syntax-laptop's paper about that ?
18:01:06 <Pseudonym> Arnia: OK, here's an example.  Take "time".
18:01:26 <Pseudonym> Time determiners inclue: when, then, some time, never etc.
18:01:42 <Arnia> yes
18:01:59 <Pseudonym> Now "place": where, there, somewhere, nowhere etc.
18:02:13 <Riastradh> Esperanto claims to fix this.  I think its fix is quite stupid.
18:02:25 <Pseudonym> My point is that you can't do this with the definite article.
18:02:27 <Arnia> Why does it need a fix :p
18:02:27 <Riastradh> Oh wait, I guess I ought to wait until Pseudonym states the problem.
18:02:31 * syntax-laptop goes to eat ice cream
18:02:36 <syntax-laptop> email me w/ suggestions for my document :) :)
18:02:39 <syntax-laptop> ijones@syntaxpolice.org
18:02:45 * syntax-laptop &
18:02:46 <Pseudonym> It's not a problem.  My point is that the definite article is special in this respect.
18:02:49 <steveh> oooh, your own domain
18:02:51 <steveh> rock
18:02:51 <Riastradh> Oh.
18:02:52 <steveh> :)
18:03:00 <Riastradh> Well, the problem is that there's no consistency here.
18:03:01 <syntax-laptop> http://www.syntaxpolice.org/tmp/libraryInfrastructure.{ps,pdf}
18:03:24 <Pseudonym> Consistency was never a mandatory requirement for a natural language.
18:03:42 <Pseudonym> I don't think there's a problem.  My point is that the definite article is different.
18:04:28 <Arnia> Pseudonym: the definite article is only special because (to adopt something like montegue semantics, although I'm a jackendovian, for a minute) it filters the set described by the noun and adjuncts into one item previously bound by context
18:04:52 <Arnia> Pseudonym: I view that as a filter by token identity... but its a filter like all the other determiners
18:04:59 <mattam> hmmm, what's syntaxpolice.org IP adress ?
18:05:13 <Arnia> Even in Jackendovian semantics its the same idea.
18:05:15 <Smerdyakov> Ha ha! You shouldn't call yourself a Jackendovian in front of groups of young American males! :D
18:05:25 <Arnia> I get that a lot :p
18:05:37 <Pseudonym> Arnia: True, but then almost any adjective or qualifier could play that role.
18:06:05 <Arnia> Pseudonym: Adjectives don't bind, determiners do. Think of them as reifiers
18:06:06 <Pseudonym> Not filtering to a previous context, of course.
18:06:27 <Arnia> Determiners have access to the binding context of the conversation
18:06:49 <Arnia> At least in my experience
18:07:08 <Pseudonym> Do all of them?
18:07:26 <Arnia> Shall we see?
18:07:45 <Arnia> 'A' - picks and binds an arbitrary one of the nouns
18:07:58 <Pseudonym> Right.
18:08:14 <Pseudonym> Though "A" doesn't require access to context.
18:08:29 <Arnia> No. But you need an identity determiner
18:08:58 <Arnia> Notice that many languages pick the indefinite as their null sound determiner
18:09:13 <Pseudonym> Anyway, go on.
18:09:24 <Pseudonym> Try, for example, "your choice".
18:09:31 <Pseudonym> "Your" is a determiner, right?
18:10:19 <Arnia> Yes... sort of (its a weird one)
18:10:51 <Pseudonym> OK, how about "whatever choice".
18:11:16 <Pseudonym> And quantifiers are determiners, aren't they?
18:11:24 <Pseudonym> You could think of "a" as a quantifier.
18:11:51 <Arnia> Yes. Its the best evidence that first order logic can't be used for semantics (the quantifiers in NL syntax are embedded inside out to FOPL)
18:12:11 <Pseudonym> Lost me on the acronyms there.
18:12:40 <mattam> First Order Programming Logic ?
18:12:47 <Arnia> First Order Predicate Logic and Natural Language. I think the best way to determine (hah) what are determiners is by seeing which candidates can't be in the same sentance on syntactic grounds
18:12:49 <Pseudonym> Ah, OK.
18:13:34 <Pseudonym> See, I think that "the" deserve special attention.
18:13:39 <Pseudonym> Kind of like "it".
18:14:02 <Pseudonym> I agree with you on "a", as that's a quantifier.
18:15:08 <Arnia> I don't agree... 'the' is filtering the description of the token (the noun plus its adjuncts) against previously bound items
18:15:40 <Pseudonym> Let me put it this way...
18:15:43 <Arnia> "I saw a red box sitting on the ground. The(*) item was just there"
18:16:25 <Pseudonym> "Part of speech" are invariably single words.
18:16:35 <Arnia> Pseudonym: No.
18:16:40 <Pseudonym> "Determiners" are syntactic groups.
18:16:49 <Pseudonym> You disagree?
18:16:56 <Arnia> Yes... "I kicked the bucket"
18:17:07 <Arnia> "kicked the bucket" is acting as a single verb
18:17:12 <Arnia> Intransiative
18:17:16 <Pseudonym> Yes, but that's a compound verb.
18:17:25 <Pseudonym> Verb phrase.
18:17:28 <Arnia> No... its an idiom
18:17:46 <Pseudonym> Ah... no, I disagree.
18:17:48 <Riastradh> When you get to idioms, things get weird.
18:17:51 <Arnia> You can't get its meaning from its components
18:17:51 <Pseudonym> As an utterance, it's an idiom.
18:17:57 <Pseudonym> As a sentence, it's a sequence of words.
18:18:21 <Arnia> Wait a moment... I'm just hunting for a counterexample to your statement :)
18:18:26 <Pseudonym> OK.
18:18:45 <Pseudonym> I'm prepared to be disproven.
18:18:47 <Arnia> "believe it or not"
18:18:59 <Arnia> "sitting pretty"
18:19:12 <Arnia> "yummy yummy yummy"
18:19:13 <Pseudonym> They're still sequences of words.
18:19:16 <Arnia> "in the know"
18:19:23 <Arnia> Yes, but they're unsyntactic
18:19:34 <Arnia> That means that they're acting as one whole block of several words
18:19:47 <Arnia> And that block is a single part of speech (it can't be decomposed)
18:20:04 <Pseudonym> Well, yes it can.  They can all be decomposed into words.
18:20:21 <Pseudonym> "in the know" is preposition, (part of speech under dispute) and noun
18:20:30 <Arnia> So? The words themselves contribute nothing to the meaning of the idiom
18:20:46 <Arnia> So they may as well be random phonetics (only then it would be a word :p)
18:20:48 <Pseudonym> Not without context.
18:21:22 <Pseudonym> Most idioms can be analysed historically.
18:21:32 <Pseudonym> They originally meant something.
18:21:36 <Arnia> Yes. But that's not how they're stored in the brain
18:22:02 <Pseudonym> Oh, well, if you're talking psycholinguistics, that's different.
18:22:15 <Pseudonym> English is _never_ stored in the brain in parse trees.
18:22:31 <Pseudonym> Language is processed by stereotyping.
18:22:36 <Pseudonym> Hence, garden path sentences.
18:23:04 <Arnia> Stereotyping
18:23:49 <Arnia> Ok. Can I explain idiomatics from my view fully?
18:23:54 <Pseudonym> Sure.
18:25:09 * Pseudonym won't interrupt :-)
18:25:28 <Arnia> First off, semantics can be bound to units bigger and smaller than words. If its bigger, its called an idiom or cliche or long distance dependency. If its smaller its things like -'s, -s, -ed, -ing etc
18:25:44 <Pseudonym> Yes.
18:26:24 <Arnia> Sometimes, due to corruption, the semantic binding to a group becomes so strong, that the group becomes embedded in memory in that form and treated as an undivisible unit
18:27:28 <rpr> Egnlsih selplnig and gmarmer are orevrtaed.  Smnaeitcs nedes no sinktnig sntayx.
18:27:32 <Arnia> As long as the syntax of the language remains close to the syntax of the group, its able to be analysed as a proper 'tree' (although the idiomatic semantics will probably come to mind first)
18:27:59 <Arnia> As soon as syntax drifts, the idiom becomes 'unsyntactic' like those I listed above
18:29:44 <Pseudonym> Hmmm.
18:29:49 <Pseudonym> I'm not so sure about that.
18:30:06 <Pseudonym> If it's part of the language, it's not unsyntactic.
18:30:06 <Arnia> Once it becomes unsyntactic, its no longer 'parsable' into a tree and so get bound as one lump to a part of speech. The internal components parts of speech are now just ghosts, introspectable individually if you try but difficult to group into a whole parse
18:30:20 <Arnia> That's why I used '' around it
18:30:24 <Pseudonym> Yes.
18:30:44 <Pseudonym> Maybe the problem here is that parse trees are a poor model.
18:31:20 <Arnia> I don't agree... transformational trees are, but unification 'trees' aren't
18:31:36 <Arnia> Afterall, tree just refers to the shape of the information, not to a specific implementation
18:31:52 <Arnia> May I continue?
18:32:03 <Pseudonym> Sure.
18:32:27 <Pseudonym> IRC is nonlinear.  It doesn't obey the normal turn-taking rules of conversation.
18:34:26 <Arnia> Ok. From a phrasal syntactic point of view (morphosyntax is a bit different, but I'm too tired to discuss how this applies there too ;), there are no words... there are just parts of speech which subcategorise and modify other parts of speech
18:35:50 <Arnia> Once the idiom is no longer used as a VP say, but as an intrans V, it doesn't matter syntactically that it could be introspected as a VP, because for the syntax-semantics interface all that matters is that the semantics of a V are heading a noun phrase to produce a sentance
18:36:17 <Arnia> Syntax is just a way of turning the linear order of phonology into the embedding of terms of semantics after all
18:37:17 <Arnia> So 'kick the bucket' can't be a VP when used idiomatically because it binds wrong in semantics. It binds as an intrans verb
18:38:04 <Pseudonym> OK, I see where you're coming from.
18:38:23 <Arnia> There are agreement rules that clean stuff up, but oddly we can pinpoint them as working across the syntax-phonology interface (cleaning stuff up as it goes across) because of the way regulars get blocked by irregulars there
18:38:34 <Pseudonym> The problem here really is the term "part of speech".
18:38:47 <Arnia> Yes, its inaccurate
18:38:50 <Pseudonym> From a purely etymological point of view, that term is very nebulous.
18:39:09 <Arnia> I view 'parts of speech' as labels (like languages are labels) applied to bundles of features
18:39:16 * Pseudonym nods
18:39:16 <Arnia> Very HPSG I know ;)
18:39:35 <Pseudonym> See, I think it makes sense to apply that term to every word.
18:39:54 <Pseudonym> What you're saying is that "a word" isn't a good abstraction when it comes to idioms.
18:40:18 <Arnia> I'm saying that the concept of a word is a bit vague... its fuzzy :)
18:40:34 <Pseudonym> Yes.  Well it's similar to lexemes in programming languages.
18:40:40 <Arnia> Ugh... the really weird idioms are placeholder idioms...
18:40:48 <Pseudonym> Oh, yes. :-)
18:41:31 <Pseudonym> I think that most idioms are metaphorical.  For those, at least, it makes sense to break up the idiom.
18:41:53 <Arnia> Yes, but its like irregular verbs... at some point the metaphore will no longer be learnt
18:41:59 * Pseudonym nods
18:42:04 <Arnia> At that point the idiom is memorised entirely
18:42:08 <Pseudonym> Well that's partly true now.
18:42:14 <Pseudonym> Our time metaphor isn't learned explicitly.
18:43:57 <Arnia> I still don't get why you think 'the' is different. To me, its just a determiner that does binding to a single entity rather than a set. It binds the entity by unifying the noun its being subcatted by with all the currently bound nouns.
18:44:20 <Arnia> Why is that anything different to either binding everything that unifies 'a' or binding some item that unifies 'that'
18:44:29 <Pseudonym> I think it's different in the same way that "it" is different from other pronouns.
18:44:38 <Arnia> Sorry... some item is 'a' and everything is 'all'
18:44:40 <Arnia> I'm tired :)
18:44:49 <Pseudonym> However, my main point is this:
18:45:10 <Pseudonym> "Determiner" refers to the role that a word/phrase/whatever plays in a sentence or utternace.
18:45:13 <Pseudonym> utterance
18:45:32 <Pseudonym> Despite that, it also makes sense to apply a category to every "word".
18:46:13 <Pseudonym> There is no reasonable category that a word like "the" falls into without introducing the concept of articles.
18:46:28 <Arnia> Define an article then
18:46:57 <Pseudonym> OK, an article is a single-word determiner which can't reasonably be called an adjective.
18:47:15 <Pseudonym> That may be an incomplete definition.
18:47:19 <Pseudonym> It's off the top of my head.
18:47:22 <Arnia> So its a subset of determiners?
18:47:28 <Pseudonym> Yes, that's fair.
18:47:57 <Arnia> So why not call it a determiner? I don't think any determiner can be called an adjective because adjectives don't bind
18:48:11 <tomasso> can anyone tell me how to make a function f:: Int -> Int that given a number returns the sum of all its divisors???
18:48:18 <tomasso> recursively
18:48:25 <Pseudonym> I'm sure someone can.
18:48:35 <tomasso> hehe i cant :D
18:48:39 <Pseudonym> Why don't you break it down into steps.
18:48:52 <Pseudonym> Try producing all of the number's divisors first, then sum them.
18:49:10 <tomasso> Ok, f 1 = 1
18:49:26 <tomasso> but i need an extra variable
18:49:33 <tomasso> to keep the value of x
18:49:37 <Pseudonym> Right.
18:49:42 <Pseudonym> Or you can make it implicit.
18:49:59 <tomasso> hmh Pseudonym: how would you do it?
18:49:59 <Pseudonym> http://haskell.org/hawiki/AvoidingParameterPassing
18:50:05 <tomasso> let me check
18:51:05 <tomasso> mhh
18:51:36 <Pseudonym> There's another example here: http://haskell.org/hawiki/LambdaLifting
18:52:22 <Pseudonym> Just have a look at the definition of isqrt.  Ignore the stuff on lambda lifting.
18:53:06 <tomasso> what is => (instead of ->) ??
18:53:19 <Pseudonym> Oh, ignore that.
18:53:27 <Pseudonym> If you haven't seen it, you don't need it right now.
18:53:34 <tomasso> h ok
18:54:03 <Pseudonym> The code in LambdaLifting probably makes more sense.
18:54:37 <tomasso> le me check
18:55:00 <Pseudonym> Arnia: Haven't forgotten about you.  I'm going to have a think about this.
18:55:57 <Arnia> Pseudonym: Thanks for the discussion... don't often get the chance to talk about linguistics with people :)
18:56:04 <Pseudonym> :-)
18:56:09 <Pseudonym> I did a whole semester of linguistics.
18:56:19 <tomasso> hmhm
18:56:28 <tomasso> still dificult for me...
18:56:33 <Pseudonym> Sure.
18:56:44 <Pseudonym> Here's a suggestion: Try doing it non-recursively first.
18:56:46 <Arnia> Pseudonym: I love the subject... I want to do my postgrad stuff in it if I can
18:56:52 <Pseudonym> If you'd find that easier.
18:57:05 <Pseudonym> Personally, I do find that easier.
18:57:22 <Pseudonym> Then convert it to a recursive form if that's what the question asks.
18:57:23 <tomasso> Pseudonym: i need loops...
18:57:38 <tomasso> how do i avoid using loops..
18:57:40 <Pseudonym> Nobody needs loops.
18:57:47 <Pseudonym> :-)
18:57:58 <Pseudonym> Have you learned about list comprehensions?
18:58:32 <steveh> i like list comprehensions
18:59:09 <tomasso> something, [] :: [a] , if x::a and xs:: [a] then (x:xs)::[a] 
18:59:10 <tomasso> ..
18:59:14 * Arnia worships list and monad comprehensions :)
18:59:17 <Pseudonym> Er... no.
18:59:27 <Pseudonym> Have you seen this notation?
18:59:41 <Pseudonym> [ x | x <- xs, x < 5 ]
19:00:06 <Pseudonym> Oh, to have monad comprehensions again...
19:00:06 <tomasso> mmhh no, but looks like in algebra
19:00:07 * Pseudonym sighs
19:00:11 <Pseudonym> Yeah.
19:00:23 <Pseudonym> They used to be called ZF-expressions for that precise reason.
19:00:25 <tomasso> what is <- ?
19:00:31 <Pseudonym> (ZF == Zermelo-Frankel)
19:00:38 <tomasso> hahaha
19:00:44 <Arnia> Just to be nice and obtuse :p
19:00:53 <Arnia> <- can be read as 'drawn from'
19:00:54 <Pseudonym> Well if you haven't seen it, then that probably won't help you either.
19:00:57 <tomasso> then i can define sets of things in that way?
19:01:03 <Pseudonym> Have you seen functions like "map" and "filter"?
19:01:16 <tomasso> no..
19:01:41 <Pseudonym> Ah, so you're really in at the deep end, aren't you. :-)
19:01:45 <tomasso> i have seen high order functions, redexs...
19:01:58 <tomasso> type inference
19:02:09 <tomasso> currification
19:02:27 <tomasso> hehe
19:02:31 * Pseudonym nods
19:02:33 <Pseudonym> OK.
19:02:36 <Pseudonym> Here's what I'd do.
19:02:40 <Pseudonym> Split it into two parts.
19:02:46 <Pseudonym> Generate the factors, then sum them.
19:03:09 <tomasso> how do i write it in haskell?? :D
19:03:16 <Pseudonym> Can you write a function which sums a list of numbers?  (Presumably Ints)
19:04:14 <tomasso> still not so familiar using lists
19:04:17 <Pseudonym> You do that, you've solved half the problem.
19:04:20 <Pseudonym> Ah, OK.
19:04:37 <Pseudonym> You probably want to have a look at one of the tutorials, then.
19:04:39 <Pseudonym> http://haskell.org/hawiki/LearningHaskell
19:04:45 <tomasso> but how do i put all the factors in a list
19:04:53 <tomasso> le me check
19:05:14 <Pseudonym> Should also read this, if it applies to you: http://haskell.org/hawiki/HomeworkHelp
19:05:26 <tomasso> do i need a list to do it recursively?
19:05:41 <Pseudonym> You don't need one, but it may or may not be easier to write if you do.
19:05:59 <Pseudonym> See, when you told me your problem, it implicitly had two parts.
19:06:04 <Pseudonym> Find the factors, sum them.
19:06:18 <Pseudonym> Splitting the problem up into those two parts seems like a good way to attack the problem.
19:06:35 <Arnia> Divide and conker :)
19:06:35 <Pseudonym> And the best way I can think of to hold a list of factors is in a list.
19:06:45 <Pseudonym> Arnia: Indeed!
19:06:57 * Arnia has prepared his conkers
19:07:03 * Pseudonym divides them
19:07:15 <tomasso> then i sum the factors recursively?
19:07:25 <Pseudonym> That seems like a good idea to me.
19:09:19 <tomasso> can i say something like [ x| (mod y x == 0) for all y < x, x :: Int ]
19:09:20 <tomasso> ?
19:09:39 <tomasso> y <=
19:09:46 <tomasso> y <= x :D
19:10:16 <Pseudonym> Something like that.
19:10:25 <tomasso> and y > 0
19:10:35 <Pseudonym> You'll need to work out the details.
19:10:40 <tomasso> but how do you say it in haskell??
19:10:47 <tomasso> hmm
19:10:52 <Pseudonym> You could also do it recursively, too.
19:11:06 <Pseudonym> I suggest having a look at one of the fine tutorials.
19:11:06 <tomasso> recursively?
19:11:14 <tomasso> Ok
19:13:53 <Pseudonym> Incidentally, any loop in a procedural language can be turned into recursion.
19:14:04 <tomasso> yes
19:14:14 <Pseudonym> List comprehensions are implemented using recursion, too.
19:14:38 <tomasso> List comprehensions are the thing i tried to define before>
19:14:39 <tomasso> ?
19:14:44 <Pseudonym> Yes, kind of.
19:14:45 <tomasso> [ x| (mod y x == 0) for all y < x, x :: Int ]
19:14:49 <tomasso> or smth like that?
19:14:59 <Pseudonym> Yeah, something like that.
19:15:01 <tomasso> mhmh
19:15:24 <Pseudonym> In ZF notation you'd express it something like this:
19:15:58 <Pseudonym> { x | y \in N, y < x, mod y x == 0 }
19:16:10 <Pseudonym> Where \in means "is an element of".
19:16:21 <Pseudonym> In Haskell, that's what <- means.  It means "is an element of".
19:16:29 <Pseudonym> Kind of.
19:16:36 <Pseudonym> Operationally, it means "is drawn from".
19:17:01 <Pseudonym> You should play with a few list comprehensions first, I think.
19:18:22 <Pseudonym> I'm of the firm opinion that you should learn a language by playing with it.
19:22:10 <Arnia> Factor sums make a nice looking pattern
19:22:32 <Arnia> Anything factor like is pretty :)
19:29:03 <Pseudonym> Lunch.  BBL
19:59:41 <tomasso> hmmh
20:21:58 <tomasso> how do i say natural number in haskell?
20:22:50 <steveh> naturalNumbers = [0..]
20:22:50 <steveh> ?
20:22:53 <Smerdyakov> I don't know that there is a built-in nat type.
20:24:14 <tomasso> okkk
20:29:41 <Flarelocke> x :: Int; x >= 0
20:42:55 <Pseudonym> tomasso, think of what that would do operationally.
20:43:08 <Pseudonym> If you have an infinite list and filter out the ones which are too big, that will take forever.
20:46:13 <Pseudonym> When you do: [ x | x <- xs ], xs is actually the domain that x is drawn from.
20:46:31 <Pseudonym> Rather than pick the natural numbers as the domain and them limit it, you might want to represent the domain explicitly.
20:46:51 <Pseudonym> Perhaps recursively, or perhaps using some other Haskell construct, if you know one that's suitable.
20:48:24 <tomasso> mhmh i see
20:48:47 <tomasso> you say many times operationally,
20:49:06 <Pseudonym> Yes.
20:49:19 <tomasso> in our course in the beggining we studied smth operational and denotational viewpoints
20:49:31 * Pseudonym nods
20:49:47 <Pseudonym> In natural languages they call that "semantics" vs "pragmatics".
20:50:00 <tomasso> operations is how it does, and denotational what it does?
20:50:09 <tomasso> operational, not operations
20:50:13 <Pseudonym> No, denotational is what it _means_.
20:50:18 <Pseudonym> Operational is what it does.
20:50:31 <tomasso> OK
20:51:01 <tomasso> well, gotta sleeeeep
20:51:10 <tomasso> good nite everybody :D
20:51:11 <Pseudonym> Night.
20:51:21 <tomasso> goot nite
22:08:23 <JohnHHH> Hello
22:08:42 <JohnHHH> Haskell newbie needing quick help on a syntax error
22:08:51 <Pseudonym> OK
22:09:31 <JohnHHH> sec while I copy paste
22:10:21 <JohnHHH> Here is the error:  Syntax error in expression (unexpected `=')
22:10:25 <JohnHHH> Sec for the code
22:11:02 <JohnHHH>  otherwise = not(any (\d -> n `mod` d = 0) [2..n-1]) --inefficient
22:11:21 <Pseudonym> Do you know which '=' it's referring to?
22:11:34 <JohnHHH> I believe the one "d = 0"
22:11:38 <Pseudonym> Right.
22:12:13 <Pseudonym> In Haskell, weak equality is spelled "=="./
22:12:18 <Pseudonym> ==
22:12:33 <JohnHHH> Hmm, will it still work with that in place of "="?
22:12:46 <Pseudonym> Well it won't work with it.
22:12:55 <JohnHHH> LOL, true
22:13:49 <JohnHHH> well it loaded, now testing, thanks
22:13:55 <Pseudonym> No problem.
22:14:14 <JohnHHH> Everyone in here hates haskell right?
22:14:17 <JohnHHH> You're all being forced to do it?
22:14:24 <Pseudonym> Not as a rule.
22:14:28 <Pseudonym> Most people here love it.
22:14:41 <JohnHHH> Hmm, thats odd.
22:14:48 <Pseudonym> The ones who hate it don't stay.
22:14:58 <JohnHHH> hehe, true
22:15:21 <JohnHHH> I barely know anything about Haskell. Just taking it as a part of a general programming languages course for my major. 
22:15:29 * Pseudonym nods
22:15:39 <JohnHHH> So far I've learned I hate functional programming
22:15:40 <Pseudonym> Well you definitely want to know Haskell if you're interested in programming languages.
22:15:52 <JohnHHH> Maybe thats just because the first language, and only one I truely know so far, is java. I loves java.
22:16:10 <Pseudonym> Ah, well.  Clearly your problem is you don't know enough languages.
22:16:13 <JohnHHH> Yeah, I can see there are alot of haskell-like languages. 
22:16:25 <JohnHHH> I just started CS :) But I like programming thus far. 
22:16:33 * Pseudonym nods
22:16:49 <Pseudonym> One nice thing about Haskell as a first language is that you get to learn computer science, rather than programming in language X.
22:16:53 * jdrake is learning ocaml
22:16:58 <Pseudonym> Where X changes from decade to decade.
22:17:13 <JohnHHH> Yeah, they used to teach Pascal as the first language at my Uni, now its java.
22:17:20 <Pseudonym> First it was assembly language, then Fortran, then Algol, then Pascal, then C...
22:17:26 <Pseudonym> Or whatever.
22:17:30 <JohnHHH> Yeah, some learn C as well.
22:17:32 <JohnHHH> C++ too
22:17:38 <JohnHHH> welcome jdrake
22:17:41 <dennisb> I think most of us here knows plenty of languages using all kinds of paradigms, after a while you realise that haskell is really cool compared to the rest of the languages
22:18:16 <JohnHHH> Okay, in my little program I just copy pasted, how would I ask it for the first prime above a certain number?
22:18:35 <jdrake> even though the channel name, do any of you know much about ocaml? I have a slight problem with an exception I can't figure out :-)
22:18:36 <Pseudonym> Do you understand the snippet you posted?
22:18:53 <JohnHHH> some of it, its recursive.
22:19:04 <JohnHHH> But the haskell syntax makes it hard to read
22:19:13 <JohnHHH> I will try some stuff
22:19:37 <Pseudonym> Well even that's controversial.
22:19:46 <Pseudonym> Haskell syntax is very like standard mathematical syntax.
22:19:58 <dennisb> jdrake: I don't know much ocaml, but I've programmed some standard ml a number of years ago. So as always, ask the question instead of asking about asking the question and maybe you get an answer
22:20:08 <Pseudonym> People who teach Haskell to first years find that people who have never programmed before find it quite natural.
22:20:27 <Pseudonym> It may follow (not sure) that the reason why some people hate Haskell is the amount they have to unlearn.
22:21:01 <JohnHHH> Yeah, they should have taught us that first if its more intuitive
22:21:10 <JohnHHH> Now I'm set in a java rut.
22:21:15 <Pseudonym> Personally I find knowing a wide variety of languages makes my imperative/procedural/OO code is all the better for it.
22:21:32 <JohnHHH> Hmm, okay now I got it to tell me whether a number is prime or not. 
22:22:06 <jdrake> on this ocaml code: http://darwinports.gene-hacker.net:8080/97   I get a syntax error at the last line. I am not sure exactly why. It looks like proper syntax from the pdf i have.
22:23:08 <JohnHHH> Hmm, whats the syntax for "between" a range of numbers in haskell? I want to ask it for the first prime greater then 44758
22:23:22 <jdrake> nevermind, i was missing a with keyword :p
22:23:26 <Pseudonym> What do you mean?
22:23:31 <jdrake> i love how these problems come up
22:24:17 <JohnHHH> Well the program tells me whether or not a number is prime. I want to find the first prime number greater then a certain number.
22:24:27 <JohnHHH> That number I picked is 44758
22:24:34 <dennisb> JohnHHH: throw away all numbers smaller then or equal to 44758
22:24:37 <JohnHHH> I'm trying the "greaterthan" symbol right now
22:24:41 <JohnHHH> syntax errors though
22:25:03 <jdrake> how do you get over the tendancy to think of a problem imperatively?
22:25:31 <dennisb> by writing and seeing many example
22:25:51 <Pseudonym> Yup, practice and playing.
22:25:54 <jdrake> my first ocaml app, is a conversion from an earlier program in python.
22:26:27 <jdrake> the first major difference is that i have to use recursion to get through the file
22:26:43 <jdrake> then using things like List.map
22:27:14 <jdrake> my next fun part after a working thing is presenting it to the gods and telling me what I could have done better
22:27:33 <dennisb> exactly, in most cases you don't need to write recursive function but can use some higher order function like map instead
22:27:57 <jdrake> over an input channel, i have to wait for an exception of End_of_file
22:28:11 <jdrake> and I don't think I can do an infinite loops very well
22:28:11 <dennisb> but that is fun isn't it. To get someone to give comments on your code and suggesting other cool ways of writing it
22:28:49 <jdrake> a haskell implemenation of this same thing would probably be fun in its own way too
22:29:01 <jdrake> because this isn't anything majorly math or anything.
22:29:08 <jdrake> just counting chars in sets 
22:29:44 <jdrake> its a keyboard layout counter, if you had typed a document in dvorak or qwerty layouts what the statistics on that are
22:30:18 <dennisb> I don't get it. Wouldn't both keyboards produce the same document?
22:31:08 <JohnHHH> grr, how do I ask it for primes > then a certain number?
22:31:08 <dennisb> Or you mean the number of key presses, or say distance between the pressed keys, or something
22:31:15 <jdrake> yes
22:31:31 <dennisb> JohnHHH: you take your list of all primes and remove all that are smaller then some other number
22:32:00 <dennisb> JohnHHH: then you want the very first number in the list
22:32:02 <JohnHHH> Huh? How would that work? And how long would such a request be?
22:32:07 <jdrake> because the idea of layouts is to keep your hand as close to the home row as often as possible
22:32:35 <JohnHHH> No, I want to ask the program for the first prime greater then a certain number
22:32:36 <dennisb> JohnHHH: because haskell is a lazy language, it only calculates as much as it need
22:32:45 <JohnHHH> Like isPrime > 44758
22:32:49 <JohnHHH> but that doesnt' work
22:32:59 <JohnHHH> niether does isPrime [44758..50000]
22:32:59 <dennisb> of course not, isPrime is a function
22:33:23 <JohnHHH> Yeah, it only gives me true false on inputted numbers
22:33:28 <dennisb> and that is also wrong since isPrime takes an Int as the argument, not a list
22:33:31 <JohnHHH> like isPrime 3
22:33:54 <JohnHHH> Won't work then I guess
22:33:59 <JohnHHH> Cuz it only gives true false
22:34:14 <dennisb> have you seen list comprehensions (however that is spelled)?
22:34:24 <JohnHHH> Nope, I've just begun haskell
22:34:33 <Pseudonym> It's spelled like that.
22:34:40 <dennisb> what about higher order functions like map or filter?
22:35:30 <dennisb> and if you say no to that, what about recursion. You can write a recursive function that finds the answer
22:36:03 <JohnHHH> Yes, but supposed to use the given code I think. And I couldn't begin to write my own haskell code at this point.
22:36:08 <JohnHHH> Heres the given code: isPrime 0 = False --Note: isPrime :: Integer -> Bool
22:36:08 <JohnHHH> isPrime 1 = False
22:36:08 <JohnHHH> isPrime n
22:36:08 <JohnHHH>  | n < 0 = isPrime(- n)
22:36:08 <JohnHHH>  | otherwise = not(any (\d -> n `mod` d == 0) [2..n-1]) --inefficient
22:36:29 <JohnHHH> I've quit on that part and moved on to the next.
22:37:01 * shapr yawns sleepily
22:38:58 <Pseudonym> G'day.
22:39:23 <shapr> g'day Pseudonym 
22:39:39 <Pseudonym> You're up early.
22:40:09 <shapr> I think found a neat connection between Martin Fowler's "Analysis Patterns" and the physics code you put into hlibs
22:40:31 <Pseudonym> Oh?
22:41:28 <shapr> Fowler says that a 'Quantity' object should include its units
22:41:37 <shapr> allowing you to autoconvert if need be
22:42:16 <shapr> though the way I remember your physics code, it did a bit more than that
22:42:54 <Pseudonym> It didn't autoconvert anything.
22:44:19 <shapr> well, I'm rereading it now, do you remember any useful keywords from the email thread it came from?
22:45:09 <Pseudonym> Not really.
22:46:45 <shapr> hmm
22:47:09 * shapr yawns more
22:47:29 <JohnHHH> is there a way to add a list of numbers on the haskell "command line" without having to make a function?
22:49:37 <Darius> sum them you mean?
22:49:40 <dennisb> sum [2,5,6,7,2]
22:50:37 <shapr> aha, http://www.haskell.org/pipermail/haskell-cafe/2003-May/004308.html
22:51:01 <Darius> what happened to @searchml?
22:51:14 <Pseudonym> Ah, OK.
22:51:25 <JohnHHH> tryign that now
22:52:22 <JohnHHH> It worked thanks, and thats a huge number.
22:52:30 <shapr> Darius: I never got around to fixing the memory usage problems
22:53:20 <shapr> it would be useful though
22:55:35 <JohnHHH> Oh crap, my retarded brother just farted and ran
22:55:38 <JohnHHH> I'm dying 
22:56:00 * Darius wonders what this antivirus message expects me to do.
22:56:49 <Pseudonym> Hmmm.
23:03:28 <JohnHHH> what is the command to do fibonacci in hugs?
23:04:33 <Pseudonym> There isn't one built in.
23:04:39 <Pseudonym> Gonna have to write one.
23:05:34 <JohnHHH> Damn, I could swear I remember seeing my teacher use one when he was showing us examples
23:05:37 <JohnHHH> Oh well
23:10:08 <shapr> hey, recent music recommendation: http://www.timbarsky.com/freedownloads.html <-- very spiffy stuff
23:10:38 <shapr> oh, I'm getting Benjamin Pierce's 'Types and Programming Languages' for my birthday
23:10:41 * shapr bounces excitedly
23:10:45 <Pseudonym> Oh, woohoo.
23:10:52 <Pseudonym> BTW, happy belated birthday.
23:11:54 <shapr> thanks :-)
23:42:04 * shapr boings
23:43:33 <dennisb> Darius: you should read them, realise that it must be a very good anti-virus program and buy the products.
23:44:14 <norpan> dennisb: hello
23:44:24 <norpan> dennisb: 11 oct is curling day
23:44:25 <dennisb> The last 3 days I've got about 2500 Microsoft security updates and virus warnings
23:44:33 <dennisb> norpan: ooh
23:44:44 <shapr> I've gotten a few hundred, but by no means a thousand
23:45:35 <dennisb> shapr: spamassassin have filtered out about 2100 but gave failed on about 400 that I had to filter out myslef. Really fun
23:45:47 <shapr> oh, I have spamassassin running too
23:45:51 <shapr> I haven't looked at that folder lately
23:46:18 <Darius> I just don't get any email >30k or so.  I have Haskell filtering my mail.
23:46:30 <dennisb> well, mine does not use razor and didn't filter out anything in the start until I told him about lots of them and the bayesian rules started to work
23:47:44 <dennisb> it's really irritating to get this much, almost makes email unusable. I'm really glad I have a spam filter
23:48:06 <Darius> Unfortunately, Sylpheed-claws has filtering rules but seems to want to download the email first, and Thunderbird doesn't filter on size but has an option not to download files > some size.
23:48:43 <Darius> I can't figure how to get either to delete emails greater than some size without downloading them, hence Haskell handling it.
23:49:43 <shapr> have you written an IMAP library in Haskell?
23:49:57 <Darius> My mail service uses POP
23:53:23 <shapr> ok, have you written a POP library in Haskell? :-)
23:53:42 <Darius> Not really, not that that would be hard.
