00:19:32 <julien> hi
00:34:32 <shapr> g'mornin
00:39:35 <julien> new haskell scripts ?
00:40:21 <shapr> not me
00:40:34 <shapr> though I did some reading yesterday
00:40:40 <shapr> and the Haskell Tutorial is picking up steam
00:40:47 <shapr> I should probably start a mailing list somewhere
00:41:06 <shapr> julien: did you write anything new recently?
00:41:13 <julien> nope
00:41:20 <julien> A lot of reading
00:41:42 <julien> I found a good document in a french university about compilation
00:42:19 <julien> The teacher uses Haskell to explain his course
00:42:46 <shapr> sounds good
00:42:52 <shapr> tried to do any code?
00:44:27 <julien> nothing greater than some "Hello world"'s :-)
00:44:43 <shapr> that's a good way to start
00:45:53 <julien> I was reading about network libraries of ghc, and bindings with other libraies
00:46:23 <julien> I will try to program a little server this WE
00:46:38 <julien> if i have time enough ...
00:48:47 <shapr> I'd like to change my Mandelbrot to save the fractal I've graphed, and then later increase the resolution of the array, or whatever I've saved it as
00:48:54 <shapr> that would be spiffy
01:32:41 * juhp releases hsclock-0.01.0
01:33:03 <juhp> see the announcement on haskell@haskell or
01:33:17 <juhp> http://www.01.246.ne.jp/~juhp/haskell/hsclock/
02:42:12 <shapr> cool, I'll check it out!
02:43:13 <shapr> whoa spiffy, it's gtk
06:37:02 * sjanes71 wakes up with a bad cold.
06:37:24 * shapr has a bad cold and wants to go to sleep
06:37:46 <sjanes71> slashdot is catching up with my ideas for the operating system
06:38:07 <sjanes71> article about David Gelerenter and killing the files/directories stuff
07:40:12 <dennisb> I for one don't understand what else you would like to use
07:40:55 <dennisb> one could use something like a database maybe, but it wont really make a difference
08:13:20 <sjanes71> people give me a weird look when I try to describe it, I haven't figured out how to describe it fully yet. :)  
08:15:17 <shapr> try it on us
08:15:24 <shapr> maybe we can help you refine the words
08:15:27 <sjanes71> ok
08:15:49 <sjanes71> across all the major operating systems today
08:16:14 <sjanes71> there's a filesystem where there are places for the system and for the user
08:16:51 <sjanes71> in most cases, the user accumulates their files on the "desktop" or whereever the "default" location for files go for each application
08:17:51 <sjanes71> so eventually what happens is during the course of using the computer the filesystem starts to rot
08:18:09 <sjanes71> and the user may uninstall applications or remove directories
08:18:20 <sjanes71> maybe not realizing that they had something important...
08:18:39 <sjanes71> or more often, just not knowing where the files are without a search
08:19:16 <sjanes71> the metadata on files has shrunk and shrunk to the point where it's not really useful for the user anymore
08:19:43 <sjanes71> it's just there to tell the operating system which application to use to "open" the file
08:19:55 <sjanes71> or who's allowed to open the file, etc.
08:20:15 <sjanes71> this metadata isn't extensible at all by the user, or if it is, it's really not easy to do
08:21:16 <sjanes71> if you right-click on a file in W2K Pro, there's a tab called "Summary"
08:21:38 <sjanes71> which has some fields like "Title", "Subject", "Keywords"
08:22:13 <sjanes71> there's no way to add new kinds of metadata
08:22:38 <sjanes71> things like... a "Role"-- aka "Why" you're interested in the dat.
08:22:40 <sjanes71> data.
08:23:32 <sjanes71> so I imagine a computer should have some kind standard way of associatig metadata with data... that combines all the needs
08:23:33 <shapr> what would you like to add other than Role?
08:24:30 <sjanes71> Role, Task, Goal, When, Where, How, Disclosure, Permanance
08:25:25 <sjanes71> ... but more importantly, the user has to be able to create new kinds of metadata as they need it... and the operating system should just be able to index it as if it were "core metadata"
08:25:28 <shapr> have you tried to  put together a mockup with a separate file holding metadata?
08:26:09 <sjanes71> I have tried to do it with some shell scripts, but I haven't gotten it to a point where I really like it
08:26:27 <sjanes71> it could be simulated with files and directories
08:26:57 <sjanes71> it just gets messy because filesystems really want to be hierarchical
08:27:04 <sjanes71> boxes within boxes
08:27:55 <shapr> the extra bits could be done with the recursive boxes just fine
08:28:00 <shapr> for example, streams in ntfs
08:28:09 <shapr> they're parts of the file that most programs can't see
08:28:13 <sjanes71> hmm
08:28:37 <shapr> the extra bits you've suggested still sound like they're attached to files
08:29:01 <sjanes71> they're really attached to streams in the end
08:29:12 <sjanes71> streams of data that have a type
08:30:12 <sjanes71> in my mind this o/s should also make versioning of data a core service... ala cvs.. you can eventually tell the o/s to "purge" the data...
08:30:36 <sjanes71> but otherwise, all applications then inherit the ability to rollback bad changes
08:31:10 <sjanes71> instead of having to do it by themselves
08:32:02 <sjanes71> By hand I'm simulating it with a directory called "My Roles"
08:32:25 <sjanes71> where I've made subdirectories of various roles... "Webmaster", "SysAdmin", "Home Owner".. etc.
08:32:40 <sjanes71> so I collect bookmarks and files and documents in those directories
08:33:05 <sjanes71> When I want to put on the "Webmaster" hat, I just find that Webmaster directory
08:33:50 <sjanes71> but because of the directories, there's no easy way of showing myself a timeline across everything I've bee doing
08:33:52 <sjanes71> been
08:34:05 <sjanes71> without having to use the search system
08:34:06 <shapr> you should check out GZigZag
08:34:19 <shapr> I think that's part of what you're looking for
08:34:27 <shapr> I think it's at sf.net/projects/gzigzag
08:35:15 <sjanes71> killing my modem connection now.. :)
08:35:50 <sjanes71> it's close.
08:36:10 <shapr> play with it some, read the tutorial
08:36:21 <shapr> I think it'll help refine your idea
08:36:23 <sjanes71> all...Ted Nelson
08:36:29 <sjanes71> ahh I meant to write
08:38:23 <sjanes71> www.scopeware.com is close to what I want, but I think it's really hard to retrofit an existing op. sys to do it
08:39:15 <sjanes71> the other thing I'm really down on is overlapping window interfaces
08:39:17 <sjanes71> :)
08:39:40 <sjanes71> considering how many times I've lost data because some application pops a dialog on me while I'm typing
08:45:58 <sjanes71> biggest problem with scopeware is the buzzworditis and marketing
08:48:05 <shapr> I use emacs
08:48:15 <shapr> I've never lost data from a dialog
08:48:27 <sjanes71> hehe
08:49:26 <sjanes71> I've lost something more important than data because of badly timed dialogs: concentration and temper. :)
08:50:29 <shapr> yah, that's where emacs comes in handy
15:25:11 * dblack is a haskell pre-newbie
15:25:17 <dblack> just bought the thompson book
17:56:01 <bashu> hello
17:56:08 <bashu> is someone here and wants to talk?
17:56:45 <juhp> go ahead!
17:57:38 <bashu> i would like to know if there already exists a compiler for haskell which creates dynamically linked executables
17:57:55 <juhp> which platform?
17:58:01 <bashu> any
17:58:26 <juhp> ghc creates dl execs
17:58:54 <juhp> but under unix it can't make dl libs currently
17:59:04 <xbill> they'll get to it eventually
17:59:09 <juhp> it can under windoz
17:59:43 <juhp> yes, hopefully sooner rather later ;)
17:59:49 <bashu> since when does ghc create dl execs? that must be a new feature, no?
18:00:18 <bashu> i mean, a relatively recent one
18:11:16 <juhp> no so recent i think, but i don't remember exactly
